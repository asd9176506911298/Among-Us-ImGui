/*
 * Generated code file by Il2CppInspector - http://www.djkaty.com - https://github.com/djkaty
 */

using System;
using System.Collections;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Net;
using System.Net.NetworkInformation;
using System.Net.Sockets;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Versioning;
using System.Security;
using System.Text;
using System.Threading;
using System.Xml;
using System.Xml.XPath;
using System.Xml.Xsl;
using AOT;
using Discord;
using GoogleMobileAds.Api;
using GoogleMobileAds.Api.Mediation;
using GoogleMobileAds.Common;
using Hazel;
using Hazel.Udp;
using InnerNet;
using Microsoft.Win32.SafeHandles;
using PowerTools;
using QRCoder;
using Steamworks;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.Events;
using UnityEngine.Purchasing;
using UnityEngine.Purchasing.Extension;
using UnityEngine.SceneManagement;
using UnityEngine.Tilemaps;
using UnityEngine.UI;

// Image 0: mscorlib.dll - Assembly: mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 - Types 0-1653
[assembly: AssemblyCompany] // 0x10029450-0x10029710
[assembly: AssemblyCopyright] // 0x10029450-0x10029710
[assembly: AssemblyDefaultAlias] // 0x10029450-0x10029710
[assembly: AssemblyDelaySign] // 0x10029450-0x10029710
[assembly: AssemblyDescription] // 0x10029450-0x10029710
[assembly: AssemblyFileVersion] // 0x10029450-0x10029710
[assembly: AssemblyInformationalVersion] // 0x10029450-0x10029710
[assembly: AssemblyKeyFile] // 0x10029450-0x10029710
[assembly: AssemblyProduct] // 0x10029450-0x10029710
[assembly: AssemblyTitle] // 0x10029450-0x10029710
[assembly: CLSCompliant] // 0x10029450-0x10029710
[assembly: ComCompatibleVersion] // 0x10029450-0x10029710
[assembly: CompilationRelaxations] // 0x10029450-0x10029710
[assembly: ComVisible] // 0x10029450-0x10029710
[assembly: Debuggable] // 0x10029450-0x10029710
[assembly: DefaultDependency] // 0x10029450-0x10029710
[assembly: Guid] // 0x10029450-0x10029710
[assembly: InternalsVisibleTo] // 0x10029450-0x10029710
[assembly: InternalsVisibleTo] // 0x10029450-0x10029710
[assembly: InternalsVisibleTo] // 0x10029450-0x10029710
[assembly: InternalsVisibleTo] // 0x10029450-0x10029710
[assembly: InternalsVisibleTo] // 0x10029450-0x10029710
[assembly: NeutralResourcesLanguage] // 0x10029450-0x10029710
[assembly: RuntimeCompatibility] // 0x10029450-0x10029710
[assembly: SatelliteContractVersion] // 0x10029450-0x10029710
[assembly: StringFreezing] // 0x10029450-0x10029710

// Image 21: UnityEngine.AndroidJNIModule.dll - Assembly: UnityEngine.AndroidJNIModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3458-3471
[assembly: CompilationRelaxations] // 0x1003CE30-0x1003DF50
[assembly: Debuggable] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: InternalsVisibleTo] // 0x1003CE30-0x1003DF50
[assembly: RuntimeCompatibility] // 0x1003CE30-0x1003DF50
[assembly: UnityEngineModuleAssembly] // 0x1003CE30-0x1003DF50

// Image 48: QRCoder.dll - Assembly: QRCoder, Version=1.3.7.0, Culture=neutral, PublicKeyToken=null - Types 4198-4235
[assembly: AssemblyCompany] // 0x1001F2C0-0x1001F450
[assembly: AssemblyConfiguration] // 0x1001F2C0-0x1001F450
[assembly: AssemblyCopyright] // 0x1001F2C0-0x1001F450
[assembly: AssemblyDescription] // 0x1001F2C0-0x1001F450
[assembly: AssemblyFileVersion] // 0x1001F2C0-0x1001F450
[assembly: AssemblyProduct] // 0x1001F2C0-0x1001F450
[assembly: AssemblyTitle] // 0x1001F2C0-0x1001F450
[assembly: AssemblyTrademark] // 0x1001F2C0-0x1001F450
[assembly: CompilationRelaxations] // 0x1001F2C0-0x1001F450
[assembly: ComVisible] // 0x1001F2C0-0x1001F450
[assembly: Debuggable] // 0x1001F2C0-0x1001F450
[assembly: Guid] // 0x1001F2C0-0x1001F450
[assembly: RuntimeCompatibility] // 0x1001F2C0-0x1001F450
[assembly: TargetFramework] // 0x1001F2C0-0x1001F450

// Image 2: Mono.Security.dll - Assembly: Mono.Security, Version=4.0.0.0, Culture=neutral, PublicKeyToken=0738eb9f132ed756 - Types 1664-1737
[assembly: AssemblyCompany] // 0x100325C0-0x10032710
[assembly: AssemblyCopyright] // 0x100325C0-0x10032710
[assembly: AssemblyDelaySign] // 0x100325C0-0x10032710
[assembly: AssemblyDescription] // 0x100325C0-0x10032710
[assembly: AssemblyProduct] // 0x100325C0-0x10032710
[assembly: AssemblyTitle] // 0x100325C0-0x10032710
[assembly: CLSCompliant] // 0x100325C0-0x10032710
[assembly: CompilationRelaxations] // 0x100325C0-0x10032710
[assembly: ComVisible] // 0x100325C0-0x10032710
[assembly: Debuggable] // 0x100325C0-0x10032710
[assembly: InternalsVisibleTo] // 0x100325C0-0x10032710
[assembly: NeutralResourcesLanguage] // 0x100325C0-0x10032710
[assembly: RuntimeCompatibility] // 0x100325C0-0x10032710

// Image 3: System.Xml.dll - Assembly: System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e - Types 1738-2169
[assembly: AssemblyCompany] // 0x100350C0-0x10035330
[assembly: AssemblyCopyright] // 0x100350C0-0x10035330
[assembly: AssemblyDefaultAlias] // 0x100350C0-0x10035330
[assembly: AssemblyDelaySign] // 0x100350C0-0x10035330
[assembly: AssemblyDescription] // 0x100350C0-0x10035330
[assembly: AssemblyFileVersion] // 0x100350C0-0x10035330
[assembly: AssemblyInformationalVersion] // 0x100350C0-0x10035330
[assembly: AssemblyKeyFile] // 0x100350C0-0x10035330
[assembly: AssemblyProduct] // 0x100350C0-0x10035330
[assembly: AssemblyTitle] // 0x100350C0-0x10035330
[assembly: CLSCompliant] // 0x100350C0-0x10035330
[assembly: CompilationRelaxations] // 0x100350C0-0x10035330
[assembly: ComVisible] // 0x100350C0-0x10035330
[assembly: Debuggable] // 0x100350C0-0x10035330
[assembly: InternalsVisibleTo] // 0x100350C0-0x10035330
[assembly: InternalsVisibleTo] // 0x100350C0-0x10035330
[assembly: InternalsVisibleTo] // 0x100350C0-0x10035330
[assembly: InternalsVisibleTo] // 0x100350C0-0x10035330
[assembly: InternalsVisibleTo] // 0x100350C0-0x10035330
[assembly: NeutralResourcesLanguage] // 0x100350C0-0x10035330
[assembly: RuntimeCompatibility] // 0x100350C0-0x10035330
[assembly: SatelliteContractVersion] // 0x100350C0-0x10035330

// Image 4: System.dll - Assembly: System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e - Types 2170-2705
[assembly: AssemblyCompany] // 0x1003BF20-0x1003C170
[assembly: AssemblyCopyright] // 0x1003BF20-0x1003C170
[assembly: AssemblyDefaultAlias] // 0x1003BF20-0x1003C170
[assembly: AssemblyDelaySign] // 0x1003BF20-0x1003C170
[assembly: AssemblyDescription] // 0x1003BF20-0x1003C170
[assembly: AssemblyFileVersion] // 0x1003BF20-0x1003C170
[assembly: AssemblyInformationalVersion] // 0x1003BF20-0x1003C170
[assembly: AssemblyKeyFile] // 0x1003BF20-0x1003C170
[assembly: AssemblyProduct] // 0x1003BF20-0x1003C170
[assembly: AssemblyTitle] // 0x1003BF20-0x1003C170
[assembly: CLSCompliant] // 0x1003BF20-0x1003C170
[assembly: CompilationRelaxations] // 0x1003BF20-0x1003C170
[assembly: ComVisible] // 0x1003BF20-0x1003C170
[assembly: Debuggable] // 0x1003BF20-0x1003C170
[assembly: InternalsVisibleTo] // 0x1003BF20-0x1003C170
[assembly: InternalsVisibleTo] // 0x1003BF20-0x1003C170
[assembly: InternalsVisibleTo] // 0x1003BF20-0x1003C170
[assembly: InternalsVisibleTo] // 0x1003BF20-0x1003C170
[assembly: NeutralResourcesLanguage] // 0x1003BF20-0x1003C170
[assembly: RuntimeCompatibility] // 0x1003BF20-0x1003C170
[assembly: SatelliteContractVersion] // 0x1003BF20-0x1003C170

// Image 5: System.Core.dll - Assembly: System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e - Types 2706-2754
[assembly: AssemblyCompany] // 0x10044800-0x100449D0
[assembly: AssemblyCopyright] // 0x10044800-0x100449D0
[assembly: AssemblyDefaultAlias] // 0x10044800-0x100449D0
[assembly: AssemblyDelaySign] // 0x10044800-0x100449D0
[assembly: AssemblyDescription] // 0x10044800-0x100449D0
[assembly: AssemblyFileVersion] // 0x10044800-0x100449D0
[assembly: AssemblyInformationalVersion] // 0x10044800-0x100449D0
[assembly: AssemblyKeyFile] // 0x10044800-0x100449D0
[assembly: AssemblyProduct] // 0x10044800-0x100449D0
[assembly: AssemblyTitle] // 0x10044800-0x100449D0
[assembly: CLSCompliant] // 0x10044800-0x100449D0
[assembly: CompilationRelaxations] // 0x10044800-0x100449D0
[assembly: ComVisible] // 0x10044800-0x100449D0
[assembly: Debuggable] // 0x10044800-0x100449D0
[assembly: NeutralResourcesLanguage] // 0x10044800-0x100449D0
[assembly: RuntimeCompatibility] // 0x10044800-0x100449D0
[assembly: SatelliteContractVersion] // 0x10044800-0x100449D0

// Image 42: Security.dll - Assembly: Security, Version=1.0.7543.19798, Culture=neutral, PublicKeyToken=null - Types 3778-3800
[assembly: AssemblyCompany] // 0x1003EDC0-0x1003EF00
[assembly: AssemblyConfiguration] // 0x1003EDC0-0x1003EF00
[assembly: AssemblyCopyright] // 0x1003EDC0-0x1003EF00
[assembly: AssemblyDescription] // 0x1003EDC0-0x1003EF00
[assembly: AssemblyProduct] // 0x1003EDC0-0x1003EF00
[assembly: AssemblyTitle] // 0x1003EDC0-0x1003EF00
[assembly: AssemblyTrademark] // 0x1003EDC0-0x1003EF00
[assembly: CompilationRelaxations] // 0x1003EDC0-0x1003EF00
[assembly: Debuggable] // 0x1003EDC0-0x1003EF00
[assembly: InternalsVisibleTo] // 0x1003EDC0-0x1003EF00
[assembly: RuntimeCompatibility] // 0x1003EDC0-0x1003EF00

// Image 44: UnityEngine.UI.dll - Assembly: UnityEngine.UI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3842-4037
[assembly: AssemblyCompany] // 0x10046E70-0x10047000
[assembly: AssemblyConfiguration] // 0x10046E70-0x10047000
[assembly: AssemblyCopyright] // 0x10046E70-0x10047000
[assembly: AssemblyDescription] // 0x10046E70-0x10047000
[assembly: AssemblyFileVersion] // 0x10046E70-0x10047000
[assembly: AssemblyProduct] // 0x10046E70-0x10047000
[assembly: AssemblyTitle] // 0x10046E70-0x10047000
[assembly: AssemblyTrademark] // 0x10046E70-0x10047000
[assembly: CompilationRelaxations] // 0x10046E70-0x10047000
[assembly: ComVisible] // 0x10046E70-0x10047000
[assembly: Debuggable] // 0x10046E70-0x10047000
[assembly: Guid] // 0x10046E70-0x10047000
[assembly: InternalsVisibleTo] // 0x10046E70-0x10047000
[assembly: RuntimeCompatibility] // 0x10046E70-0x10047000

// Image 46: Stores.dll - Assembly: Stores, Version=1.0.7543.19800, Culture=neutral, PublicKeyToken=null - Types 4043-4160
[assembly: AssemblyCompany] // 0x10018C60-0x10018E50
[assembly: AssemblyConfiguration] // 0x10018C60-0x10018E50
[assembly: AssemblyCopyright] // 0x10018C60-0x10018E50
[assembly: AssemblyDescription] // 0x10018C60-0x10018E50
[assembly: AssemblyProduct] // 0x10018C60-0x10018E50
[assembly: AssemblyTitle] // 0x10018C60-0x10018E50
[assembly: AssemblyTrademark] // 0x10018C60-0x10018E50
[assembly: CompilationRelaxations] // 0x10018C60-0x10018E50
[assembly: Debuggable] // 0x10018C60-0x10018E50
[assembly: InternalsVisibleTo] // 0x10018C60-0x10018E50
[assembly: InternalsVisibleTo] // 0x10018C60-0x10018E50
[assembly: InternalsVisibleTo] // 0x10018C60-0x10018E50
[assembly: RuntimeCompatibility] // 0x10018C60-0x10018E50
[assembly: UnityAPICompatibilityVersion] // 0x10018C60-0x10018E50

// Image 50: Assembly-CSharp.dll - Assembly: Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 5164-5991
[assembly: CompilationRelaxations] // 0x1001BCA0-0x1001BCF0
[assembly: Debuggable] // 0x1001BCA0-0x1001BCF0
[assembly: RuntimeCompatibility] // 0x1001BCA0-0x1001BCF0

// Image 43: UnityEngine.Purchasing.dll - Assembly: UnityEngine.Purchasing, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3801-3841
[assembly: Debuggable] // 0x100426C0-0x10042830
[assembly: InternalsVisibleTo] // 0x100426C0-0x10042830
[assembly: InternalsVisibleTo] // 0x100426C0-0x10042830
[assembly: InternalsVisibleTo] // 0x100426C0-0x10042830
[assembly: InternalsVisibleTo] // 0x100426C0-0x10042830
[assembly: InternalsVisibleTo] // 0x100426C0-0x10042830
[assembly: InternalsVisibleTo] // 0x100426C0-0x10042830
[assembly: InternalsVisibleTo] // 0x100426C0-0x10042830
[assembly: InternalsVisibleTo] // 0x100426C0-0x10042830
[assembly: InternalsVisibleTo] // 0x100426C0-0x10042830
[assembly: InternalsVisibleTo] // 0x100426C0-0x10042830
[assembly: RuntimeCompatibility] // 0x100426C0-0x10042830

// Image 49: Assembly-CSharp-firstpass.dll - Assembly: Assembly-CSharp-firstpass, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 4236-5163
[assembly: CompilationRelaxations] // 0x10022D70-0x10022DB0
[assembly: Debuggable] // 0x10022D70-0x10022DB0
[assembly: RuntimeCompatibility] // 0x10022D70-0x10022DB0

// Image 7: UnityEngine.CoreModule.dll - Assembly: UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 2783-3291
[assembly: CompilationRelaxations] // 0x1000C730-0x1000D880
[assembly: Debuggable] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: InternalsVisibleTo] // 0x1000C730-0x1000D880
[assembly: RuntimeCompatibility] // 0x1000C730-0x1000D880
[assembly: UnityEngineModuleAssembly] // 0x1000C730-0x1000D880

// Image 33: UnityEngine.UnityAnalyticsModule.dll - Assembly: UnityEngine.UnityAnalyticsModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3714-3727
[assembly: CompilationRelaxations] // 0x10029A70-0x1002AB90
[assembly: Debuggable] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: InternalsVisibleTo] // 0x10029A70-0x1002AB90
[assembly: RuntimeCompatibility] // 0x10029A70-0x1002AB90
[assembly: UnityEngineModuleAssembly] // 0x10029A70-0x1002AB90

// Image 22: UnityEngine.AnimationModule.dll - Assembly: UnityEngine.AnimationModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3472-3503
[assembly: CompilationRelaxations] // 0x10040E20-0x10041F50
[assembly: Debuggable] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: InternalsVisibleTo] // 0x10040E20-0x10041F50
[assembly: RuntimeCompatibility] // 0x10040E20-0x10041F50
[assembly: UnityEngineModuleAssembly] // 0x10040E20-0x10041F50

// Image 17: UnityEngine.Physics2DModule.dll - Assembly: UnityEngine.Physics2DModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3399-3414
[assembly: CompilationRelaxations] // 0x10024600-0x10025730
[assembly: Debuggable] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: InternalsVisibleTo] // 0x10024600-0x10025730
[assembly: RuntimeCompatibility] // 0x10024600-0x10025730
[assembly: UnityEngineModuleAssembly] // 0x10024600-0x10025730

// Image 11: UnityEngine.AssetBundleModule.dll - Assembly: UnityEngine.AssetBundleModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3332-3335
[assembly: CompilationRelaxations] // 0x1000AE20-0x1000BF60
[assembly: Debuggable] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: InternalsVisibleTo] // 0x1000AE20-0x1000BF60
[assembly: RuntimeCompatibility] // 0x1000AE20-0x1000BF60
[assembly: UnityEngineModuleAssembly] // 0x1000AE20-0x1000BF60

// Image 6: UnityEngine.SharedInternalsModule.dll - Assembly: UnityEngine.SharedInternalsModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 2755-2782
[assembly: CompilationRelaxations] // 0x10002670-0x10003790
[assembly: Debuggable] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: InternalsVisibleTo] // 0x10002670-0x10003790
[assembly: RuntimeCompatibility] // 0x10002670-0x10003790
[assembly: UnityEngineModuleAssembly] // 0x10002670-0x10003790

// Image 12: UnityEngine.AudioModule.dll - Assembly: UnityEngine.AudioModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3336-3352
[assembly: CompilationRelaxations] // 0x1000F340-0x100104D0
[assembly: Debuggable] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: InternalsVisibleTo] // 0x1000F340-0x100104D0
[assembly: RuntimeCompatibility] // 0x1000F340-0x100104D0
[assembly: UnityEngineModuleAssembly] // 0x1000F340-0x100104D0

// Image 19: UnityEngine.XRModule.dll - Assembly: UnityEngine.XRModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3428-3454
[assembly: CompilationRelaxations] // 0x100332A0-0x100343C0
[assembly: Debuggable] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: InternalsVisibleTo] // 0x100332A0-0x100343C0
[assembly: RuntimeCompatibility] // 0x100332A0-0x100343C0
[assembly: UnityEngineModuleAssembly] // 0x100332A0-0x100343C0

// Image 31: UnityEngine.UIElementsModule.dll - Assembly: UnityEngine.UIElementsModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3549-3703
[assembly: CompilationRelaxations] // 0x1001A030-0x1001B160
[assembly: Debuggable] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: InternalsVisibleTo] // 0x1001A030-0x1001B160
[assembly: RuntimeCompatibility] // 0x1001A030-0x1001B160
[assembly: UnityEngineModuleAssembly] // 0x1001A030-0x1001B160

// Image 8: UnityEngine.PhysicsModule.dll - Assembly: UnityEngine.PhysicsModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3292-3306
[assembly: CompilationRelaxations] // 0x10044F00-0x10046030
[assembly: Debuggable] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: InternalsVisibleTo] // 0x10044F00-0x10046030
[assembly: RuntimeCompatibility] // 0x10044F00-0x10046030
[assembly: UnityEngineModuleAssembly] // 0x10044F00-0x10046030

// Image 47: Hazel.dll - Assembly: Hazel, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null - Types 4161-4197
[assembly: AssemblyCompany] // 0x1001DB80-0x1001DD50
[assembly: AssemblyConfiguration] // 0x1001DB80-0x1001DD50
[assembly: AssemblyCopyright] // 0x1001DB80-0x1001DD50
[assembly: AssemblyDescription] // 0x1001DB80-0x1001DD50
[assembly: AssemblyFileVersion] // 0x1001DB80-0x1001DD50
[assembly: AssemblyInformationalVersion] // 0x1001DB80-0x1001DD50
[assembly: AssemblyProduct] // 0x1001DB80-0x1001DD50
[assembly: AssemblyTitle] // 0x1001DB80-0x1001DD50
[assembly: AssemblyTrademark] // 0x1001DB80-0x1001DD50
[assembly: CompilationRelaxations] // 0x1001DB80-0x1001DD50
[assembly: ComVisible] // 0x1001DB80-0x1001DD50
[assembly: Debuggable] // 0x1001DB80-0x1001DD50
[assembly: Guid] // 0x1001DB80-0x1001DD50
[assembly: InternalsVisibleTo] // 0x1001DB80-0x1001DD50
[assembly: RuntimeCompatibility] // 0x1001DB80-0x1001DD50
[assembly: TargetFramework] // 0x1001DB80-0x1001DD50

// Image 16: UnityEngine.InputLegacyModule.dll - Assembly: UnityEngine.InputLegacyModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3390-3398
[assembly: CompilationRelaxations] // 0x10021AA0-0x10022BC0
[assembly: Debuggable] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: InternalsVisibleTo] // 0x10021AA0-0x10022BC0
[assembly: RuntimeCompatibility] // 0x10021AA0-0x10022BC0
[assembly: UnityEngineModuleAssembly] // 0x10021AA0-0x10022BC0

// Image 32: UnityEngine.UIModule.dll - Assembly: UnityEngine.UIModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3704-3713
[assembly: CompilationRelaxations] // 0x10025930-0x10026A50
[assembly: Debuggable] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: InternalsVisibleTo] // 0x10025930-0x10026A50
[assembly: RuntimeCompatibility] // 0x10025930-0x10026A50
[assembly: UnityEngineModuleAssembly] // 0x10025930-0x10026A50

// Image 18: UnityEngine.UnityWebRequestModule.dll - Assembly: UnityEngine.UnityWebRequestModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3415-3427
[assembly: CompilationRelaxations] // 0x1002D350-0x1002E470
[assembly: Debuggable] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: InternalsVisibleTo] // 0x1002D350-0x1002E470
[assembly: RuntimeCompatibility] // 0x1002D350-0x1002E470
[assembly: UnityEngineModuleAssembly] // 0x1002D350-0x1002E470

// Image 1: System.Configuration.dll - Assembly: System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a - Types 1654-1663
[assembly: AssemblyCompany] // 0x10030CB0-0x10030E70
[assembly: AssemblyCopyright] // 0x10030CB0-0x10030E70
[assembly: AssemblyDefaultAlias] // 0x10030CB0-0x10030E70
[assembly: AssemblyDescription] // 0x10030CB0-0x10030E70
[assembly: AssemblyFileVersion] // 0x10030CB0-0x10030E70
[assembly: AssemblyInformationalVersion] // 0x10030CB0-0x10030E70
[assembly: AssemblyProduct] // 0x10030CB0-0x10030E70
[assembly: AssemblyTitle] // 0x10030CB0-0x10030E70
[assembly: CLSCompliant] // 0x10030CB0-0x10030E70
[assembly: ComCompatibleVersion] // 0x10030CB0-0x10030E70
[assembly: CompilationRelaxations] // 0x10030CB0-0x10030E70
[assembly: ComVisible] // 0x10030CB0-0x10030E70
[assembly: Debuggable] // 0x10030CB0-0x10030E70
[assembly: DefaultDllImportSearchPaths] // 0x10030CB0-0x10030E70
[assembly: NeutralResourcesLanguage] // 0x10030CB0-0x10030E70
[assembly: RuntimeCompatibility] // 0x10030CB0-0x10030E70
[assembly: SatelliteContractVersion] // 0x10030CB0-0x10030E70

// Image 14: UnityEngine.IMGUIModule.dll - Assembly: UnityEngine.IMGUIModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3356-3387
[assembly: CompilationRelaxations] // 0x10016620-0x10017740
[assembly: Debuggable] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: InternalsVisibleTo] // 0x10016620-0x10017740
[assembly: RuntimeCompatibility] // 0x10016620-0x10017740
[assembly: UnityEngineModuleAssembly] // 0x10016620-0x10017740

// Image 41: FacebookStore.dll - Assembly: FacebookStore, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3775-3777
[assembly: CompilationRelaxations] // 0x1003EBB0-0x1003EC30
[assembly: Debuggable] // 0x1003EBB0-0x1003EC30
[assembly: InternalsVisibleTo] // 0x1003EBB0-0x1003EC30
[assembly: InternalsVisibleTo] // 0x1003EBB0-0x1003EC30
[assembly: RuntimeCompatibility] // 0x1003EBB0-0x1003EC30

// Image 45: winrt.dll - Assembly: winrt, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null - Types 4038-4042
[assembly: AssemblyCompany] // 0x100164B0-0x10016620
[assembly: AssemblyConfiguration] // 0x100164B0-0x10016620
[assembly: AssemblyCopyright] // 0x100164B0-0x10016620
[assembly: AssemblyDescription] // 0x100164B0-0x10016620
[assembly: AssemblyFileVersion] // 0x100164B0-0x10016620
[assembly: AssemblyProduct] // 0x100164B0-0x10016620
[assembly: AssemblyTitle] // 0x100164B0-0x10016620
[assembly: AssemblyTrademark] // 0x100164B0-0x10016620
[assembly: CompilationRelaxations] // 0x100164B0-0x10016620
[assembly: ComVisible] // 0x100164B0-0x10016620
[assembly: Debuggable] // 0x100164B0-0x10016620
[assembly: Guid] // 0x100164B0-0x10016620
[assembly: RuntimeCompatibility] // 0x100164B0-0x10016620

// Image 10: UnityEngine.TextRenderingModule.dll - Assembly: UnityEngine.TextRenderingModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3319-3331
[assembly: CompilationRelaxations] // 0x10007310-0x10008430
[assembly: Debuggable] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: InternalsVisibleTo] // 0x10007310-0x10008430
[assembly: RuntimeCompatibility] // 0x10007310-0x10008430
[assembly: UnityEngineModuleAssembly] // 0x10007310-0x10008430

// Image 13: UnityEngine.GridModule.dll - Assembly: UnityEngine.GridModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3353-3355
[assembly: CompilationRelaxations] // 0x10013EC0-0x10014FE0
[assembly: Debuggable] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: InternalsVisibleTo] // 0x10013EC0-0x10014FE0
[assembly: RuntimeCompatibility] // 0x10013EC0-0x10014FE0
[assembly: UnityEngineModuleAssembly] // 0x10013EC0-0x10014FE0

// Image 15: UnityEngine.ImageConversionModule.dll - Assembly: UnityEngine.ImageConversionModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3388-3389
[assembly: CompilationRelaxations] // 0x1001FAD0-0x10020C00
[assembly: Debuggable] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: InternalsVisibleTo] // 0x1001FAD0-0x10020C00
[assembly: RuntimeCompatibility] // 0x1001FAD0-0x10020C00
[assembly: UnityEngineModuleAssembly] // 0x1001FAD0-0x10020C00

// Image 40: Apple.dll - Assembly: Apple, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3771-3774
[assembly: CompilationRelaxations] // 0x1003EBB0-0x1003EC30
[assembly: Debuggable] // 0x1003EBB0-0x1003EC30
[assembly: InternalsVisibleTo] // 0x1003EBB0-0x1003EC30
[assembly: InternalsVisibleTo] // 0x1003EBB0-0x1003EC30
[assembly: RuntimeCompatibility] // 0x1003EBB0-0x1003EC30

// Image 38: Purchasing.Common.dll - Assembly: Purchasing.Common, Version=1.0.7543.19796, Culture=neutral, PublicKeyToken=null - Types 3761-3769
[assembly: AssemblyCompany] // 0x1003E530-0x1003E730
[assembly: AssemblyConfiguration] // 0x1003E530-0x1003E730
[assembly: AssemblyCopyright] // 0x1003E530-0x1003E730
[assembly: AssemblyDescription] // 0x1003E530-0x1003E730
[assembly: AssemblyProduct] // 0x1003E530-0x1003E730
[assembly: AssemblyTitle] // 0x1003E530-0x1003E730
[assembly: AssemblyTrademark] // 0x1003E530-0x1003E730
[assembly: CompilationRelaxations] // 0x1003E530-0x1003E730
[assembly: Debuggable] // 0x1003E530-0x1003E730
[assembly: InternalsVisibleTo] // 0x1003E530-0x1003E730
[assembly: InternalsVisibleTo] // 0x1003E530-0x1003E730
[assembly: InternalsVisibleTo] // 0x1003E530-0x1003E730
[assembly: InternalsVisibleTo] // 0x1003E530-0x1003E730
[assembly: InternalsVisibleTo] // 0x1003E530-0x1003E730
[assembly: InternalsVisibleTo] // 0x1003E530-0x1003E730
[assembly: InternalsVisibleTo] // 0x1003E530-0x1003E730
[assembly: RuntimeCompatibility] // 0x1003E530-0x1003E730

// Image 9: UnityEngine.SubsystemsModule.dll - Assembly: UnityEngine.SubsystemsModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3307-3318
[assembly: CompilationRelaxations] // 0x10003980-0x10004AA0
[assembly: Debuggable] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: InternalsVisibleTo] // 0x10003980-0x10004AA0
[assembly: RuntimeCompatibility] // 0x10003980-0x10004AA0
[assembly: UnityEngineModuleAssembly] // 0x10003980-0x10004AA0

// Image 30: UnityEngine.TilemapModule.dll - Assembly: UnityEngine.TilemapModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3539-3548
[assembly: CompilationRelaxations] // 0x10017790-0x100188B0
[assembly: Debuggable] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: InternalsVisibleTo] // 0x10017790-0x100188B0
[assembly: RuntimeCompatibility] // 0x10017790-0x100188B0
[assembly: UnityEngineModuleAssembly] // 0x10017790-0x100188B0

// Image 25: UnityEngine.JSONSerializeModule.dll - Assembly: UnityEngine.JSONSerializeModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3511-3512
[assembly: CompilationRelaxations] // 0x10005540-0x10006660
[assembly: Debuggable] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: InternalsVisibleTo] // 0x10005540-0x10006660
[assembly: RuntimeCompatibility] // 0x10005540-0x10006660
[assembly: UnityEngineModuleAssembly] // 0x10005540-0x10006660

// Image 24: UnityEngine.InputModule.dll - Assembly: UnityEngine.InputModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3506-3510
[assembly: CompilationRelaxations] // 0x1004ABA0-0x1004BCE0
[assembly: Debuggable] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: InternalsVisibleTo] // 0x1004ABA0-0x1004BCE0
[assembly: RuntimeCompatibility] // 0x1004ABA0-0x1004BCE0
[assembly: UnityEngineModuleAssembly] // 0x1004ABA0-0x1004BCE0

// Image 20: UnityEngine.AIModule.dll - Assembly: UnityEngine.AIModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3455-3457
[assembly: CompilationRelaxations] // 0x1003A8D0-0x1003B9F0
[assembly: Debuggable] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: InternalsVisibleTo] // 0x1003A8D0-0x1003B9F0
[assembly: RuntimeCompatibility] // 0x1003A8D0-0x1003B9F0
[assembly: UnityEngineModuleAssembly] // 0x1003A8D0-0x1003B9F0

// Image 26: UnityEngine.ParticleSystemModule.dll - Assembly: UnityEngine.ParticleSystemModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3513-3517
[assembly: CompilationRelaxations] // 0x10008A90-0x10009BC0
[assembly: Debuggable] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: InternalsVisibleTo] // 0x10008A90-0x10009BC0
[assembly: RuntimeCompatibility] // 0x10008A90-0x10009BC0
[assembly: UnityEngineModuleAssembly] // 0x10008A90-0x10009BC0

// Image 23: UnityEngine.DirectorModule.dll - Assembly: UnityEngine.DirectorModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3504-3505
[assembly: CompilationRelaxations] // 0x10047D80-0x10048EA0
[assembly: Debuggable] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: InternalsVisibleTo] // 0x10047D80-0x10048EA0
[assembly: RuntimeCompatibility] // 0x10047D80-0x10048EA0
[assembly: UnityEngineModuleAssembly] // 0x10047D80-0x10048EA0

// Image 27: UnityEngine.ScreenCaptureModule.dll - Assembly: UnityEngine.ScreenCaptureModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3518-3520
[assembly: CompilationRelaxations] // 0x1000DAE0-0x1000EC00
[assembly: Debuggable] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: InternalsVisibleTo] // 0x1000DAE0-0x1000EC00
[assembly: RuntimeCompatibility] // 0x1000DAE0-0x1000EC00
[assembly: UnityEngineModuleAssembly] // 0x1000DAE0-0x1000EC00

// Image 28: UnityEngine.SpriteMaskModule.dll - Assembly: UnityEngine.SpriteMaskModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3521-3522
[assembly: CompilationRelaxations] // 0x10010AE0-0x10011C00
[assembly: Debuggable] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: InternalsVisibleTo] // 0x10010AE0-0x10011C00
[assembly: RuntimeCompatibility] // 0x10010AE0-0x10011C00
[assembly: UnityEngineModuleAssembly] // 0x10010AE0-0x10011C00

// Image 29: UnityEngine.TerrainModule.dll - Assembly: UnityEngine.TerrainModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3523-3538
[assembly: CompilationRelaxations] // 0x100129F0-0x10013B20
[assembly: Debuggable] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: InternalsVisibleTo] // 0x100129F0-0x10013B20
[assembly: RuntimeCompatibility] // 0x100129F0-0x10013B20
[assembly: UnityEngineModuleAssembly] // 0x100129F0-0x10013B20

// Image 35: UnityEngine.VFXModule.dll - Assembly: UnityEngine.VFXModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3730-3740
[assembly: CompilationRelaxations] // 0x10031320-0x100324D0
[assembly: Debuggable] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: InternalsVisibleTo] // 0x10031320-0x100324D0
[assembly: RuntimeCompatibility] // 0x10031320-0x100324D0
[assembly: UnityEngineModuleAssembly] // 0x10031320-0x100324D0

// Image 37: UnityEngine.VideoModule.dll - Assembly: UnityEngine.VideoModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3746-3760
[assembly: CompilationRelaxations] // 0x10038F50-0x1003A0E0
[assembly: Debuggable] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: InternalsVisibleTo] // 0x10038F50-0x1003A0E0
[assembly: RuntimeCompatibility] // 0x10038F50-0x1003A0E0
[assembly: UnityEngineModuleAssembly] // 0x10038F50-0x1003A0E0

// Image 36: UnityEngine.VRModule.dll - Assembly: UnityEngine.VRModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3741-3745
[assembly: CompilationRelaxations] // 0x10035800-0x10036920
[assembly: Debuggable] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: InternalsVisibleTo] // 0x10035800-0x10036920
[assembly: RuntimeCompatibility] // 0x10035800-0x10036920
[assembly: UnityEngineModuleAssembly] // 0x10035800-0x10036920

// Image 34: UnityEngine.UnityWebRequestWWWModule.dll - Assembly: UnityEngine.UnityWebRequestWWWModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null - Types 3728-3729
[assembly: CompilationRelaxations] // 0x1002E950-0x1002FA80
[assembly: Debuggable] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: InternalsVisibleTo] // 0x1002E950-0x1002FA80
[assembly: RuntimeCompatibility] // 0x1002E950-0x1002FA80
[assembly: UnityEngineModuleAssembly] // 0x1002E950-0x1002FA80

[CompilerGenerated] // 0x10002030-0x10002050
internal sealed class __f__AnonymousType0<_message_j__TPar> // TypeDefIndex: 1
{
	// Fields
	[DebuggerBrowsable] // 0x10015320-0x10015340
	private readonly _message_j__TPar _message_i__Field;

	// Constructors
	[DebuggerHidden] // 0x10002030-0x10002050
	public __f__AnonymousType0(_message_j__TPar message);

	// Methods
	[DebuggerHidden] // 0x10002030-0x10002050
	public override bool Equals(object value);
	[DebuggerHidden] // 0x10002030-0x10002050
	public override int GetHashCode();
	[DebuggerHidden] // 0x10002030-0x10002050
	public override string ToString();
}

[CompilerGenerated] // 0x10002030-0x10002050
internal sealed class __f__AnonymousType0<_version_j__TPar, _capacity_j__TPar> // TypeDefIndex: 4199
{
	// Fields
	[DebuggerBrowsable] // 0x10015320-0x10015340
	private readonly _version_j__TPar _version_i__Field;
	[DebuggerBrowsable] // 0x10015320-0x10015340
	private readonly _capacity_j__TPar _capacity_i__Field;

	// Properties
	public _version_j__TPar version { get; }

	// Constructors
	[DebuggerHidden] // 0x10002030-0x10002050
	public __f__AnonymousType0(_version_j__TPar version, _capacity_j__TPar capacity);

	// Methods
	[DebuggerHidden] // 0x10002030-0x10002050
	public override bool Equals(object value);
	[DebuggerHidden] // 0x10002030-0x10002050
	public override int GetHashCode();
	[DebuggerHidden] // 0x10002030-0x10002050
	public override string ToString();
}

[CompilerGenerated] // 0x10002030-0x10002050
internal sealed class __f__AnonymousType1<_Index_j__TPar, _Value_j__TPar> // TypeDefIndex: 4200
{
	// Fields
	[DebuggerBrowsable] // 0x10015320-0x10015340
	private readonly _Index_j__TPar _Index_i__Field;
	[DebuggerBrowsable] // 0x10015320-0x10015340
	private readonly _Value_j__TPar _Value_i__Field;

	// Properties
	public _Index_j__TPar Index { get; }
	public _Value_j__TPar Value { get; }

	// Constructors
	[DebuggerHidden] // 0x10002030-0x10002050
	public __f__AnonymousType1(_Index_j__TPar Index, _Value_j__TPar Value);

	// Methods
	[DebuggerHidden] // 0x10002030-0x10002050
	public override bool Equals(object value);
	[DebuggerHidden] // 0x10002030-0x10002050
	public override int GetHashCode();
	[DebuggerHidden] // 0x10002030-0x10002050
	public override string ToString();
}

[CompilerGenerated] // 0x10002030-0x10002050
internal sealed class _PrivateImplementationDetails_ // TypeDefIndex: 1598
{
	// Fields
	internal static readonly __StaticArrayInitTypeSize_256 _0392525BCB01691D1F319D89F2C12BF93A478467; // 0x00 // Starts with: d9 78 f9 c4 19 dd b5 ed - Metadata: 0x002253B7
	internal static readonly __StaticArrayInitTypeSize_72 _0588059ACBD52F7EA2835882F977A9CF72EB9775; // 0x100 // Starts with: 20 00 00 00 1e 00 00 00 - Metadata: 0x002254B7
	internal static readonly __StaticArrayInitTypeSize_84 _0A1ADB22C1D3E1F4B2448EE3F27DF9DE63329C4C; // 0x148 // Starts with: 05 00 00 00 0b 00 00 00 - Metadata: 0x002254FF
	internal static readonly __StaticArrayInitTypeSize_240 _121EC59E23F7559B28D338D562528F6299C2DE22; // 0x19C // Starts with: 37 00 00 00 39 00 00 00 - Metadata: 0x00225553
	internal static readonly __StaticArrayInitTypeSize_3 _12D04472A8285260EA12FD3813CDFA9F2D2B548C; // 0x28C // Starts with: 55 04 07 55 04 0c 00 12 - Metadata: 0x00225643
	internal static readonly __StaticArrayInitTypeSize_3 _13A35EF1A549297C70E2AD46045BBD2ECA17852D; // 0x28F // Starts with: 55 04 0c 00 12 00 00 00 - Metadata: 0x00225646
	internal static readonly __StaticArrayInitTypeSize_24 _1730F09044E91DB8371B849EFF5E6D17BDE4AED0; // 0x292 // Starts with: 00 12 00 00 00 28 00 00 - Metadata: 0x00225649
	internal static readonly __StaticArrayInitTypeSize_3 _1A84029C80CB5518379F199F53FF08A7B764F8FD; // 0x2AA // Starts with: 55 04 03 c6 63 63 a5 f8 - Metadata: 0x00225661
	internal static readonly __StaticArrayInitTypeSize_4096 _1AEF3D8DF416A46288C91C724CBF7B154D9E5BF3; // 0x2AD // Starts with: c6 63 63 a5 f8 7c 7c 84 - Metadata: 0x00225664
	internal static readonly __StaticArrayInitTypeSize_2048 _1E41C4CD0767AEA21C00DEABA2EA9407F1E6CEA5; // 0x12AD // Starts with: 00 00 00 00 00 00 00 00 - Metadata: 0x00226664
	internal static readonly __StaticArrayInitTypeSize_16 _1FE6CE411858B3D864679DE2139FB081F08BFACD; // 0x1AAD // Starts with: 00 12 00 00 00 28 00 00 - Metadata: 0x00226E64
	internal static readonly __StaticArrayInitTypeSize_3 _235D99572263B22ADFEE10FDA0C25E12F4D94FFC; // 0x1ABD // Starts with: 55 04 09 ff ff ff ff ff - Metadata: 0x00226E74
	internal static readonly __StaticArrayInitTypeSize_40 _25420D0055076FA8D3E4DD96BC53AE24DE6E619F; // 0x1AC0 // Starts with: ff ff ff ff ff ff ff ff - Metadata: 0x00226E77
	internal static readonly __StaticArrayInitTypeSize_1208 _25CF935D2AE9EDF05DD75BCD47FF84D9255D6F6E; // 0x1AE8 // Starts with: 00 01 41 00 01 01 61 00 - Metadata: 0x00226E9F
	internal static readonly __StaticArrayInitTypeSize_42 _29C1A61550F0E3260E1953D4FAD71C256218EF40; // 0x1FA0 // Starts with: 60 21 61 21 62 21 63 21 - Metadata: 0x00227357
	internal static readonly __StaticArrayInitTypeSize_12 _2B33BEC8C30DFDC49DAFE20D3BDE19487850D717; // 0x1FCA // Starts with: 00 31 00 00 00 4e 00 00 - Metadata: 0x00227381
	internal static readonly __StaticArrayInitTypeSize_36 _2BA840FF6020B8FF623DBCB7188248CF853FAF4F; // 0x1FD6 // Starts with: 90 00 00 00 20 09 00 00 - Metadata: 0x0022738D
	internal static readonly __StaticArrayInitTypeSize_72 _2C840AFA48C27B9C05593E468C1232CA1CC74AFD; // 0x1FFA // Starts with: 14 00 00 00 23 00 00 00 - Metadata: 0x002273B1
	internal static readonly __StaticArrayInitTypeSize_16 _2D1DA5BB407F0C11C3B5116196C0C6374D932B20; // 0x2042 // Starts with: 00 0f 00 00 00 28 00 00 - Metadata: 0x002273F9
	internal static readonly __StaticArrayInitTypeSize_14 _2D3CF0F15AC2DDEC2956EA1B7BBE43FB8B923130; // 0x2052 // Starts with: 2c 00 2b 00 22 00 5c 00 - Metadata: 0x00227409
	internal static readonly __StaticArrayInitTypeSize_72 _2F71D2DA12F3CD0A6A112F5A5A75B4FDC6FE8547; // 0x2060 // Starts with: 14 00 00 00 19 00 00 00 - Metadata: 0x00227417
	internal static readonly __StaticArrayInitTypeSize_64 _320B018758ECE3752FFEDBAEB1A6DB67C80B9359; // 0x20A8 // Starts with: 01 01 01 01 01 01 01 01 - Metadata: 0x0022745F
	internal static readonly __StaticArrayInitTypeSize_72 _34476C29F6F81C989CFCA42F7C06E84C66236834; // 0x20E8 // Starts with: 14 00 00 00 15 00 00 00 - Metadata: 0x0022749F
	internal static readonly __StaticArrayInitTypeSize_2382 _35EED060772F2748D13B745DAEC8CD7BD3B87604; // 0x2130 // Starts with: c0 00 c1 00 c2 00 c3 00 - Metadata: 0x002274E7
	internal static readonly __StaticArrayInitTypeSize_38 _375F9AE9769A3D1DA789E9ACFE81F3A1BB14F0D3; // 0x2A7E // Starts with: 64 00 44 00 66 00 46 00 - Metadata: 0x00227E35
	internal static readonly __StaticArrayInitTypeSize_1450 _379C06C9E702D31469C29033F0DD63931EB349F5; // 0x2AA4 // Starts with: 1a 01 28 00 17 00 10 00 - Metadata: 0x00227E5B
	internal static readonly __StaticArrayInitTypeSize_10 _399BD13E240F33F808CA7940293D6EC4E6FD5A00; // 0x304E // Starts with: 3c 00 3e 00 22 00 27 00 - Metadata: 0x00228405
	internal static readonly __StaticArrayInitTypeSize_72 _39C9CE73C7B0619D409EF28344F687C1B5C130FE; // 0x3058 // Starts with: 14 00 00 00 1e 00 00 00 - Metadata: 0x0022840F
	internal static readonly __StaticArrayInitTypeSize_320 _3C53AFB51FEC23491684C7BEDBC6D4E0F409F851; // 0x30A0 // Starts with: ff ff 00 00 01 01 02 02 - Metadata: 0x00228457
	internal static readonly __StaticArrayInitTypeSize_3 _3E3442C7396F3F2BB4C7348F4A2074C7DC677D68; // 0x31E0 // Starts with: 55 04 0b 00 00 00 00 01 - Metadata: 0x00228597
	internal static readonly __StaticArrayInitTypeSize_64 _3E4BBF9D0CDD2E34F78AA7A9A3979DCE1F7B02BD; // 0x31E3 // Starts with: 00 00 00 00 01 00 00 00 - Metadata: 0x0022859A
	internal static readonly __StaticArrayInitTypeSize_12 _3E823444D2DFECF0F90B436B88F02A533CB376F1; // 0x3223 // Starts with: 00 31 00 00 00 4e 00 00 - Metadata: 0x002285DA
	internal static readonly __StaticArrayInitTypeSize_72 _3FE6C283BCF384FD2C8789880DFF59664E2AB4A1; // 0x322F // Starts with: 18 00 00 00 19 00 00 00 - Metadata: 0x002285E6
	internal static readonly __StaticArrayInitTypeSize_1665 _40981BAA39513E58B28DCF0103CC04DE2A0A0444; // 0x3277 // Starts with: 1a 01 14 00 1d 00 10 00 - Metadata: 0x0022862E
	internal static readonly __StaticArrayInitTypeSize_40 _40E7C49413D261F3F38AD3A870C0AC69C8BDA048; // 0x38F8 // Starts with: ff ff ff ff ff ff ff ff - Metadata: 0x00228CAF
	internal static readonly __StaticArrayInitTypeSize_72 _421EC7E82F2967DF6CA8C3605514DC6F29EE5845; // 0x3920 // Starts with: 22 00 3c 00 3e 00 7c 00 - Metadata: 0x00228CD7
	internal static readonly __StaticArrayInitTypeSize_256 _433175D38B13FFE177FDD661A309F1B528B3F6E2; // 0x3968 // Starts with: 98 2f 8a 42 91 44 37 71 - Metadata: 0x00228D1F
	internal static readonly __StaticArrayInitTypeSize_120 _46232052BC757E030490D851F265FB47FA100902; // 0x3A68 // Starts with: 01 00 00 00 02 00 00 00 - Metadata: 0x00228E1F
	internal static readonly __StaticArrayInitTypeSize_72 _4858DB4AA76D3933F1CA9E6712D4FDB16903F628; // 0x3AE0 // Starts with: 25 00 00 00 25 00 00 00 - Metadata: 0x00228E97
	internal static readonly __StaticArrayInitTypeSize_48 _4E3B533C39447AAEB59A8E48FABD7E15B5B5D195; // 0x3B28 // Starts with: 38 b0 60 a7 51 ac 96 38 - Metadata: 0x00228EDF
	internal static readonly __StaticArrayInitTypeSize_40 _4F7A8890F332B22B8DE0BD29D36FA7364748D76A; // 0x3B58 // Starts with: 01 00 00 00 0a 00 00 00 - Metadata: 0x00228F0F
	internal static readonly __StaticArrayInitTypeSize_72 _536422B321459B242ADED7240B7447E904E083E3; // 0x3B80 // Starts with: 14 00 00 00 20 00 00 00 - Metadata: 0x00228F37
	internal static readonly __StaticArrayInitTypeSize_1080 _5382CEF491F422BFE0D6FC46EFAFF9EF9D4C89F3; // 0x3BC8 // Starts with: 00 00 00 00 00 00 f0 bf - Metadata: 0x00228F7F
	internal static readonly __StaticArrayInitTypeSize_10 _56DFA5053B3131883637F53219E7D88CCEF35949; // 0x4000 // Starts with: 09 92 26 89 93 f2 2c 64 - Metadata: 0x002293B7
	internal static readonly __StaticArrayInitTypeSize_3 _57218C316B6921E2CD61027A2387EDC31A2D9471; // 0x400A // Starts with: ef bb bf ff ff ff ff ff - Metadata: 0x002293C1
	internal static readonly __StaticArrayInitTypeSize_40 _57F320D62696EC99727E0FE2045A05F1289CC0C6; // 0x400D // Starts with: ff ff ff ff ff ff ff ff - Metadata: 0x002293C4
	internal static readonly __StaticArrayInitTypeSize_212 _594A33A00BC4F785DFD43E3C6C44FBA1242CCAF3; // 0x4035 // Starts with: 22 a7 24 a7 24 a7 26 a7 - Metadata: 0x002293EC
	internal static readonly __StaticArrayInitTypeSize_36 _5BBDF8058D4235C33F2E8DCF76004031B6187A2F; // 0x4109 // Starts with: e0 06 00 00 00 11 00 00 - Metadata: 0x002294C0
	internal static readonly __StaticArrayInitTypeSize_288 _5BCD21C341BE6DDF8FFFAE1A23ABA24DCBB612BF; // 0x412D // Starts with: 03 00 00 00 07 00 00 00 - Metadata: 0x002294E4
	internal static readonly __StaticArrayInitTypeSize_72 _5BFE2819B4778217C56416C7585FF0E56EBACD89; // 0x424D // Starts with: 14 00 00 00 17 00 00 00 - Metadata: 0x00229604
	internal static readonly __StaticArrayInitTypeSize_128 _609C0E8D8DA86A09D6013D301C86BA8782C16B8C; // 0x4295 // Starts with: 00 00 00 00 00 00 f0 3f - Metadata: 0x0022964C
	internal static readonly __StaticArrayInitTypeSize_48 _62BAB0F245E66C3EB982CF5A7015F0A7C3382283; // 0x4315 // Starts with: 0d 10 0a 17 00 04 02 1b - Metadata: 0x002296CC
	internal static readonly __StaticArrayInitTypeSize_2048 _646036A65DECCD6835C914A46E6E44B729433B60; // 0x4345 // Starts with: 00 00 00 00 00 00 00 00 - Metadata: 0x002296FC
	internal static readonly __StaticArrayInitTypeSize_40 _65E32B4E150FD8D24B93B0D42A17F1DAD146162B; // 0x4B45 // Starts with: 02 00 00 00 03 00 00 00 - Metadata: 0x00229EFC
	internal static readonly __StaticArrayInitTypeSize_52 _6770974FEF1E98B9C1864370E2B5B786EB0EA39E; // 0x4B6D // Starts with: d0 24 d1 24 d2 24 d3 24 - Metadata: 0x00229F24
	internal static readonly __StaticArrayInitTypeSize_72 _67EEAD805D708D9AA4E14BF747E44CED801744F3; // 0x4BA1 // Starts with: 1c 00 00 00 1d 00 00 00 - Metadata: 0x00229F58
	internal static readonly __StaticArrayInitTypeSize_120 _6C71197D228427B2864C69B357FEF73D8C9D59DF; // 0x4BE9 // Starts with: f0 02 00 00 80 04 00 00 - Metadata: 0x00229FA0
	internal static readonly __StaticArrayInitTypeSize_16 _6CEE45445AFD150B047A5866FFA76AA651CDB7B7; // 0x4C61 // Starts with: 48 2c 2d b2 c3 90 47 c8 - Metadata: 0x0022A018
	internal static readonly __StaticArrayInitTypeSize_9 _6D49C9D487D7AD3491ECE08732D68A593CC2038D; // 0x4C71 // Starts with: 2a 86 48 86 f7 0d 01 09 - Metadata: 0x0022A028
	internal static readonly __StaticArrayInitTypeSize_2048 _6D797C11E1D4FB68B6570CF2A92B792433527065; // 0x4C7A // Starts with: 00 82 80 00 00 00 00 00 - Metadata: 0x0022A031
	internal static readonly __StaticArrayInitTypeSize_3132 _6E5DC824F803F8565AF31B42199DAE39FE7F4EA9; // 0x547A // Starts with: 02 00 00 00 03 00 00 00 - Metadata: 0x0022A831
	internal static readonly __StaticArrayInitTypeSize_76 _6FC754859E4EC74E447048364B216D825C6F8FE7; // 0x60B6 // Starts with: a0 10 a1 10 a2 10 a3 10 - Metadata: 0x0022B46D
	internal static readonly __StaticArrayInitTypeSize_40 _704939CD172085D1295FCE3F1D92431D685D7AA2; // 0x6102 // Starts with: 01 00 00 00 0a 00 00 00 - Metadata: 0x0022B4B9
	internal static readonly __StaticArrayInitTypeSize_24 _7088AAE49F0627B72729078DE6E3182DDCF8ED99; // 0x612A // Starts with: 00 00 00 00 00 1e 00 00 - Metadata: 0x0022B4E1
	internal static readonly __StaticArrayInitTypeSize_72 _7341C933A70EAE383CC50C4B945ADB8E08F06737; // 0x6142 // Starts with: 21 00 00 00 1f 00 00 00 - Metadata: 0x0022B4F9
	internal static readonly __StaticArrayInitTypeSize_3 _736D39815215889F11249D9958F6ED12D37B9F57; // 0x618A // Starts with: 55 04 06 51 f4 a7 50 7e - Metadata: 0x0022B541
	internal static readonly __StaticArrayInitTypeSize_4096 _7F42F2EDC974BE29B2746957416ED1AEFA605F47; // 0x618D // Starts with: 51 f4 a7 50 7e 41 65 53 - Metadata: 0x0022B544
	internal static readonly __StaticArrayInitTypeSize_40 _7FE820C9CF0F0B90445A71F1D262D22E4F0C4C68; // 0x718D // Starts with: ff ff ff ff ff ff ff ff - Metadata: 0x0022C544
	internal static readonly __StaticArrayInitTypeSize_21252 _811A927B7DADD378BE60BBDE794B9277AA9B50EC; // 0x71B5 // Starts with: 00 11 10 11 20 11 30 11 - Metadata: 0x0022C56C
	internal static readonly __StaticArrayInitTypeSize_36 _81917F1E21F3C22B9F916994547A614FB03E968E; // 0xC4B9 // Starts with: 00 00 00 00 00 09 00 00 - Metadata: 0x00231870
	internal static readonly __StaticArrayInitTypeSize_40 _823566DA642D6EA356E15585921F2A4CA23D6760; // 0xC4DD // Starts with: ff ff ff ff ff ff ff ff - Metadata: 0x00231894
	internal static readonly __StaticArrayInitTypeSize_12 _82C2A59850B2E85BCE1A45A479537A384DF6098D; // 0xC505 // Starts with: 80 04 00 00 10 14 00 00 - Metadata: 0x002318BC
	internal static readonly __StaticArrayInitTypeSize_44 _82C383F8E6E4D3D87AEBB986A5D0077E8AD157C4; // 0xC511 // Starts with: e0 06 00 00 00 12 00 00 - Metadata: 0x002318C8
	internal static readonly __StaticArrayInitTypeSize_3 _86F4F563FA2C61798AE6238D789139739428463A; // 0xC53D // Starts with: 55 04 2e ff ff ff ff ff - Metadata: 0x002318F4
	internal static readonly __StaticArrayInitTypeSize_40 _871B9CF85DB352BAADF12BAE8F19857683E385AC; // 0xC540 // Starts with: ff ff ff ff ff ff ff ff - Metadata: 0x002318F7
	internal static readonly __StaticArrayInitTypeSize_16 _89A040451C8CC5C8FB268BE44BDD74964C104155; // 0xC568 // Starts with: 00 00 00 00 00 1e 00 00 - Metadata: 0x0023191F
	internal static readonly __StaticArrayInitTypeSize_3 _8AEFB06C426E07A0A671A1E2488B4858D694A730; // 0xC578 // Starts with: 30 30 30 ff ff ff ff ff - Metadata: 0x0023192F
	internal static readonly __StaticArrayInitTypeSize_40 _8CAA092E783257106251246FF5C97F88D28517A6; // 0xC57B // Starts with: ff ff ff ff ff ff ff ff - Metadata: 0x00231932
	internal static readonly __StaticArrayInitTypeSize_2100 _8D231DD55FE1AD7631BBD0905A17D5EB616C2154; // 0xC5A3 // Starts with: 1a 01 1c 00 1d 00 0f 00 - Metadata: 0x0023195A
	internal static readonly __StaticArrayInitTypeSize_40 _8E10AC2F34545DFBBF3FCBC06055D797A8C99991; // 0xCDD7 // Starts with: ff ff ff ff ff ff ff ff - Metadata: 0x0023218E
	internal static readonly __StaticArrayInitTypeSize_256 _8F22C9ECE1331718CBD268A9BBFD2F5E451441E3; // 0xCDFF // Starts with: 63 7c 77 7b f2 6b 6f c5 - Metadata: 0x002321B6
	internal static readonly __StaticArrayInitTypeSize_640 _90A0542282A011472F94E97CEAE59F8B3B1A3291; // 0xCEFF // Starts with: 22 ae 28 d7 98 2f 8a 42 - Metadata: 0x002322B6
	internal static readonly __StaticArrayInitTypeSize_12 _93A63E90605400F34B49F0EB3361D23C89164BDA; // 0xD17F // Starts with: 00 34 00 00 00 a0 00 00 - Metadata: 0x00232536
	internal static readonly __StaticArrayInitTypeSize_72 _94841DD2F330CCB1089BF413E4FA9B04505152E2; // 0xD18B // Starts with: 00 00 00 00 14 00 00 00 - Metadata: 0x00232542
	internal static readonly __StaticArrayInitTypeSize_12 _95264589E48F94B7857CFF398FB72A537E13EEE2; // 0xD1D3 // Starts with: 00 34 00 00 00 a0 00 00 - Metadata: 0x0023258A
	internal static readonly __StaticArrayInitTypeSize_72 _95C48758CAE1715783472FB073AB158AB8A0AB2A; // 0xD1DF // Starts with: 15 00 00 00 16 00 00 00 - Metadata: 0x00232596
	internal static readonly __StaticArrayInitTypeSize_72 _973417296623D8DC6961B09664E54039E44CA5D8; // 0xD227 // Starts with: 14 00 00 00 15 00 00 00 - Metadata: 0x002325DE
	internal static readonly __StaticArrayInitTypeSize_3 _97FB30C84FF4A41CD4625B44B2940BFC8DB43003; // 0xD26F // Starts with: 55 04 08 52 00 00 00 09 - Metadata: 0x00232626
	internal static readonly __StaticArrayInitTypeSize_4096 _99E2E88877D14C7DDC4E957A0ED7079CA0E9EB24; // 0xD272 // Starts with: 52 00 00 00 09 00 00 00 - Metadata: 0x00232629
	internal static readonly __StaticArrayInitTypeSize_64 _9A9C3962CD4753376E3507C8CB5FD8FCC4B4EDB5; // 0xE272 // Starts with: 03 03 03 03 03 03 03 03 - Metadata: 0x00233629
	internal static readonly __StaticArrayInitTypeSize_3 _9BB00D1FCCBAF03165447FC8028E7CA07CA9FE88; // 0xE2B2 // Starts with: 55 04 0a 64 00 00 00 64 - Metadata: 0x00233669
	internal static readonly __StaticArrayInitTypeSize_40 A0074C15377C0C870B055927403EA9FA7A349D12; // 0xE2B5 // Starts with: 64 00 00 00 64 00 00 00 - Metadata: 0x0023366C
	internal static readonly __StaticArrayInitTypeSize_130 A1319B706116AB2C6D44483F60A7D0ACEA543396; // 0xE2DD // Starts with: 41 00 42 00 43 00 44 00 - Metadata: 0x00233694
	internal static readonly long A13AA52274D951A18029131A8DDECF76B569A15D; // 0xE360 // Starts with: 2e 00 02 30 0e ff 61 ff - Metadata: 0x00233716
	internal static readonly __StaticArrayInitTypeSize_3 A323DB0813C4D072957BA6FDA79D9776674CD06B; // 0xE368 // Starts with: 55 04 2a 23 a7 23 a7 25 - Metadata: 0x0023371E
	internal static readonly __StaticArrayInitTypeSize_212 A5444763673307F6828C748D4B9708CFC02B0959; // 0xE36B // Starts with: 23 a7 23 a7 25 a7 25 a7 - Metadata: 0x00233721
	internal static readonly __StaticArrayInitTypeSize_72 A6732F8E7FC23766AB329B492D6BF82E3B33233F; // 0xE43F // Starts with: 14 00 00 00 1f 00 00 00 - Metadata: 0x002337F5
	internal static readonly __StaticArrayInitTypeSize_174 A705A106D95282BD15E13EEA6B0AF583FF786D83; // 0xE487 // Starts with: 40 a6 42 a6 42 a6 44 a6 - Metadata: 0x0023383D
	internal static readonly __StaticArrayInitTypeSize_1018 A8A491E4CED49AE0027560476C10D933CE70C8DF; // 0xE535 // Starts with: 01 1e 01 1e 03 1e 03 1e - Metadata: 0x002338EB
	internal static readonly __StaticArrayInitTypeSize_72 AC791C4F39504D1184B73478943D0636258DA7B1; // 0xE92F // Starts with: 17 00 00 00 19 00 00 00 - Metadata: 0x00233CE5
	internal static readonly __StaticArrayInitTypeSize_52 AFCD4E1211233E99373A3367B23105A3D624B1F2; // 0xE977 // Starts with: b6 24 b7 24 b8 24 b9 24 - Metadata: 0x00233D2D
	internal static readonly __StaticArrayInitTypeSize_40 B472ED77CB3B2A66D49D179F1EE2081B70A6AB61; // 0xE9AB // Starts with: ff ff ff ff ff ff ff ff - Metadata: 0x00233D61
	internal static readonly __StaticArrayInitTypeSize_16 B4FBD02AAB5B16E0F4BD858DA5D9E348F3CE501D; // 0xE9D3 // Starts with: 01 02 04 06 08 0a 0c 0e - Metadata: 0x00233D89
	internal static readonly __StaticArrayInitTypeSize_256 B53A2C6DF21FC88B17AEFC40EB895B8D63210CDF; // 0xE9E3 // Starts with: 0e 0e 0e 0e 0e 0e 0e 0e - Metadata: 0x00233D99
	internal static readonly __StaticArrayInitTypeSize_4096 B6002BBF29B2704922EC3BBF0F9EE40ABF185D6B; // 0xEAE3 // Starts with: 63 00 00 00 7c 00 00 00 - Metadata: 0x00233E99
	internal static readonly __StaticArrayInitTypeSize_998 B881DA88BE0B68D8A6B6B6893822586B8B2CFC45; // 0xFAE3 // Starts with: 00 1e 02 1e 02 1e 04 1e - Metadata: 0x00234E99
	internal static readonly __StaticArrayInitTypeSize_162 B8864ACB9DD69E3D42151513C840AAE270BF21C8; // 0xFEC9 // Starts with: 1d 00 0e 0e 0e 10 0e 0f - Metadata: 0x0023527F
	internal static readonly __StaticArrayInitTypeSize_360 B8F87834C3597B2EEF22BA6D3A392CC925636401; // 0xFF6B // Starts with: 00 2c 01 2c 02 2c 03 2c - Metadata: 0x00235321
	internal static readonly __StaticArrayInitTypeSize_72 B9B670F134A59FB1107AF01A9FE8F8E3980B3093; // 0x100D3 // Starts with: 14 00 00 00 24 00 00 00 - Metadata: 0x00235489
	internal static readonly __StaticArrayInitTypeSize_20 BE1BDEC0AA74B4DCB079943E70528096CCA985F8; // 0x1011B // Starts with: da 39 a3 ee 5e 6b 4b 0d - Metadata: 0x002354D1
	internal static readonly __StaticArrayInitTypeSize_72 BEBC9ECC660A13EFC359BA3383411F698CFF25DB; // 0x1012F // Starts with: 14 00 00 00 16 00 00 00 - Metadata: 0x002354E5
	internal static readonly __StaticArrayInitTypeSize_40 BEE1CFE5DFAA408E14CE4AF4DCD824FA2E42DCB7; // 0x10177 // Starts with: ff ff ff ff ff ff ff ff - Metadata: 0x0023552D
	internal static readonly __StaticArrayInitTypeSize_3 BF477463CE2F5EF38FC4C644BBBF4DF109E7670A; // 0x1019F // Starts with: 55 04 2b 22 00 3c 00 3e - Metadata: 0x00235555
	internal static readonly __StaticArrayInitTypeSize_6 BF5EB60806ECB74EE484105DD9D6F463BF994867; // 0x101A2 // Starts with: 22 00 3c 00 3e 00 44 00 - Metadata: 0x00235558
	internal static readonly long C1A1100642BA9685B30A84D97348484E14AA1865; // 0x101A8 // Starts with: 44 00 48 00 4d 00 53 00 - Metadata: 0x0023555E
	internal static readonly __StaticArrayInitTypeSize_16 C6F364A0AD934EFED8909446C215752E565D77C1; // 0x101B0 // Starts with: 09 00 0a 00 0b 00 0c 00 - Metadata: 0x00235566
	internal static readonly __StaticArrayInitTypeSize_174 CE5835130F5277F63D716FC9115526B0AC68FFAD; // 0x101C0 // Starts with: 41 a6 41 a6 43 a6 43 a6 - Metadata: 0x00235576
	internal static readonly __StaticArrayInitTypeSize_6 CE93C35B755802BC4B3D180716B048FC61701EF7; // 0x1026E // Starts with: 20 00 3c 00 3e 00 02 02 - Metadata: 0x00235624
	internal static readonly __StaticArrayInitTypeSize_64 CF0B42666EF5E37EDEA0AB8E173E42C196D03814; // 0x10274 // Starts with: 02 02 02 02 02 02 02 02 - Metadata: 0x0023562A
	internal static readonly __StaticArrayInitTypeSize_256 D002CBBE1FF33721AF7C4D1D3ECAD1B7DB5258B7; // 0x102B4 // Starts with: 78 a4 6a d7 56 b7 c7 e8 - Metadata: 0x0023566A
	internal static readonly __StaticArrayInitTypeSize_32 D117188BE8D4609C0D531C51B0BB911A4219DEBE; // 0x103B4 // Starts with: 70 21 71 21 72 21 73 21 - Metadata: 0x0023576A
	internal static readonly __StaticArrayInitTypeSize_32 D28E8ABDBD777A482CE0EE5C24814ACAE52AABFE; // 0x103D4 // Starts with: e3 b0 c4 42 98 fc 1c 14 - Metadata: 0x0023578A
	internal static readonly __StaticArrayInitTypeSize_256 D2C5BAE967587C6F3D9F2C4551911E0575A1101F; // 0x103F4 // Starts with: 29 2e 43 c9 a2 d8 7c 01 - Metadata: 0x002357AA
	internal static readonly __StaticArrayInitTypeSize_44 D78D08081C7A5AD6FBA7A8DC86BCD6D7A577C636; // 0x104F4 // Starts with: 00 00 00 00 10 09 00 00 - Metadata: 0x002358AA
	internal static readonly __StaticArrayInitTypeSize_76 DA19DB47B583EFCF7825D2E39D661D2354F28219; // 0x10520 // Starts with: 00 2d 01 2d 02 2d 03 2d - Metadata: 0x002358D6
	internal static readonly __StaticArrayInitTypeSize_56 DC2B830D8CD59AD6A4E4332D21CA0DCA2821AD82; // 0x1056C // Starts with: 38 30 28 20 18 10 08 00 - Metadata: 0x00235922
	internal static readonly __StaticArrayInitTypeSize_52 DD3AEFEADB1CD615F3017763F1568179FEE640B0; // 0x105A4 // Starts with: 00 00 00 00 1f 00 00 00 - Metadata: 0x0023595A
	internal static readonly __StaticArrayInitTypeSize_36 E1827270A5FE1C85F5352A66FD87BA747213D006; // 0x105D8 // Starts with: 00 07 00 00 00 12 00 00 - Metadata: 0x0023598E
	internal static readonly __StaticArrayInitTypeSize_40 E45BAB43F7D5D038672B3E3431F92E34A7AF2571; // 0x105FC // Starts with: ff ff ff ff ff ff ff ff - Metadata: 0x002359B2
	internal static readonly __StaticArrayInitTypeSize_64 E75835D001C843F156FBA01B001DFE1B8029AC17; // 0x10624 // Starts with: cf 83 e1 35 7e ef b8 bd - Metadata: 0x002359DA
	internal static readonly __StaticArrayInitTypeSize_52 E92B39D8233061927D9ACDE54665E68E7535635A; // 0x10664 // Starts with: 00 00 00 00 1f 00 00 00 - Metadata: 0x00235A1A
	internal static readonly __StaticArrayInitTypeSize_12 EA9506959484C55CFE0C139C624DF6060E285866; // 0x10698 // Starts with: 80 10 00 00 80 15 00 00 - Metadata: 0x00235A4E
	internal static readonly __StaticArrayInitTypeSize_262 EB5E9A80A40096AB74D2E226650C7258D7BC5E9D; // 0x106A4 // Starts with: 61 2c 61 2c 6b 02 7d 1d - Metadata: 0x00235A5A
	internal static readonly __StaticArrayInitTypeSize_64 EBF68F411848D603D059DFDEA2321C5A5EA78044; // 0x107AA // Starts with: 00 00 00 00 04 00 00 00 - Metadata: 0x00235B60
	internal static readonly __StaticArrayInitTypeSize_10 EC5BB4F59D4B9B2E9ECD3904D44A8275F23AFB11; // 0x107EA // Starts with: 09 92 26 89 93 f2 2c 64 - Metadata: 0x00235BA0
	internal static readonly __StaticArrayInitTypeSize_3 EC83FB16C20052BEE2B4025159BC2ED45C9C70C3; // 0x107F4 // Starts with: 55 04 04 1a 00 00 00 1b - Metadata: 0x00235BAA
	internal static readonly __StaticArrayInitTypeSize_72 EC89C317EA2BF49A70EFF5E89C691E34733D7C37; // 0x107F7 // Starts with: 1a 00 00 00 1b 00 00 00 - Metadata: 0x00235BAD
	internal static readonly __StaticArrayInitTypeSize_40 F06E829E62F3AFBC045D064E10A4F5DF7C969612; // 0x1083F // Starts with: ff ff ff ff ff ff ff ff - Metadata: 0x00235BF5
	internal static readonly __StaticArrayInitTypeSize_11614 F073AA332018FDA0D572E99448FFF1D6422BD520; // 0x10867 // Starts with: 00 11 10 11 10 11 10 11 - Metadata: 0x00235C1D
	internal static readonly __StaticArrayInitTypeSize_120 F34B0E10653402E8F788F8BC3F7CD7090928A429; // 0x135C5 // Starts with: 60 03 00 00 90 04 00 00 - Metadata: 0x0023897B
	internal static readonly __StaticArrayInitTypeSize_72 F37E34BEADB04F34FCC31078A59F49856CA83D5B; // 0x1363D // Starts with: 15 00 00 00 16 00 00 00 - Metadata: 0x002389F3
	internal static readonly __StaticArrayInitTypeSize_94 F512A9ABF88066AAEB92684F95CC05D8101B462B; // 0x13685 // Starts with: 30 2c 31 2c 32 2c 33 2c - Metadata: 0x00238A3B
	internal static readonly __StaticArrayInitTypeSize_12 F8FAABB821300AA500C2CEC6091B3782A7FB44A4; // 0x136E3 // Starts with: 00 34 00 00 00 a5 00 00 - Metadata: 0x00238A99
	internal static readonly __StaticArrayInitTypeSize_2350 FCBD2781A933F0828ED4AAF88FD8B08D76DDD49B; // 0x136EF // Starts with: e0 00 e1 00 e2 00 e3 00 - Metadata: 0x00238AA5

	// Nested types
	private struct __StaticArrayInitTypeSize_3 // TypeDefIndex: 1599
	{
	}

	private struct __StaticArrayInitTypeSize_6 // TypeDefIndex: 1600
	{
	}

	private struct __StaticArrayInitTypeSize_9 // TypeDefIndex: 1601
	{
	}

	private struct __StaticArrayInitTypeSize_10 // TypeDefIndex: 1602
	{
	}

	private struct __StaticArrayInitTypeSize_12 // TypeDefIndex: 1603
	{
	}

	private struct __StaticArrayInitTypeSize_14 // TypeDefIndex: 1604
	{
	}

	private struct __StaticArrayInitTypeSize_16 // TypeDefIndex: 1605
	{
	}

	private struct __StaticArrayInitTypeSize_20 // TypeDefIndex: 1606
	{
	}

	private struct __StaticArrayInitTypeSize_24 // TypeDefIndex: 1607
	{
	}

	private struct __StaticArrayInitTypeSize_32 // TypeDefIndex: 1608
	{
	}

	private struct __StaticArrayInitTypeSize_36 // TypeDefIndex: 1609
	{
	}

	private struct __StaticArrayInitTypeSize_38 // TypeDefIndex: 1610
	{
	}

	private struct __StaticArrayInitTypeSize_40 // TypeDefIndex: 1611
	{
	}

	private struct __StaticArrayInitTypeSize_42 // TypeDefIndex: 1612
	{
	}

	private struct __StaticArrayInitTypeSize_44 // TypeDefIndex: 1613
	{
	}

	private struct __StaticArrayInitTypeSize_48 // TypeDefIndex: 1614
	{
	}

	private struct __StaticArrayInitTypeSize_52 // TypeDefIndex: 1615
	{
	}

	private struct __StaticArrayInitTypeSize_56 // TypeDefIndex: 1616
	{
	}

	private struct __StaticArrayInitTypeSize_64 // TypeDefIndex: 1617
	{
	}

	private struct __StaticArrayInitTypeSize_72 // TypeDefIndex: 1618
	{
	}

	private struct __StaticArrayInitTypeSize_76 // TypeDefIndex: 1619
	{
	}

	private struct __StaticArrayInitTypeSize_84 // TypeDefIndex: 1620
	{
	}

	private struct __StaticArrayInitTypeSize_94 // TypeDefIndex: 1621
	{
	}

	private struct __StaticArrayInitTypeSize_120 // TypeDefIndex: 1622
	{
	}

	private struct __StaticArrayInitTypeSize_128 // TypeDefIndex: 1623
	{
	}

	private struct __StaticArrayInitTypeSize_130 // TypeDefIndex: 1624
	{
	}

	private struct __StaticArrayInitTypeSize_162 // TypeDefIndex: 1625
	{
	}

	private struct __StaticArrayInitTypeSize_174 // TypeDefIndex: 1626
	{
	}

	private struct __StaticArrayInitTypeSize_212 // TypeDefIndex: 1627
	{
	}

	private struct __StaticArrayInitTypeSize_240 // TypeDefIndex: 1628
	{
	}

	private struct __StaticArrayInitTypeSize_256 // TypeDefIndex: 1629
	{
	}

	private struct __StaticArrayInitTypeSize_262 // TypeDefIndex: 1630
	{
	}

	private struct __StaticArrayInitTypeSize_288 // TypeDefIndex: 1631
	{
	}

	private struct __StaticArrayInitTypeSize_320 // TypeDefIndex: 1632
	{
	}

	private struct __StaticArrayInitTypeSize_360 // TypeDefIndex: 1633
	{
	}

	private struct __StaticArrayInitTypeSize_640 // TypeDefIndex: 1634
	{
	}

	private struct __StaticArrayInitTypeSize_998 // TypeDefIndex: 1635
	{
	}

	private struct __StaticArrayInitTypeSize_1018 // TypeDefIndex: 1636
	{
	}

	private struct __StaticArrayInitTypeSize_1080 // TypeDefIndex: 1637
	{
	}

	private struct __StaticArrayInitTypeSize_1208 // TypeDefIndex: 1638
	{
	}

	private struct __StaticArrayInitTypeSize_1450 // TypeDefIndex: 1639
	{
	}

	private struct __StaticArrayInitTypeSize_1665 // TypeDefIndex: 1640
	{
	}

	private struct __StaticArrayInitTypeSize_2048 // TypeDefIndex: 1641
	{
	}

	private struct __StaticArrayInitTypeSize_2100 // TypeDefIndex: 1642
	{
	}

	private struct __StaticArrayInitTypeSize_2350 // TypeDefIndex: 1643
	{
	}

	private struct __StaticArrayInitTypeSize_2382 // TypeDefIndex: 1644
	{
	}

	private struct __StaticArrayInitTypeSize_3132 // TypeDefIndex: 1645
	{
	}

	private struct __StaticArrayInitTypeSize_4096 // TypeDefIndex: 1646
	{
	}

	private struct __StaticArrayInitTypeSize_11614 // TypeDefIndex: 1647
	{
	}

	private struct __StaticArrayInitTypeSize_21252 // TypeDefIndex: 1648
	{
	}

	// Methods
	internal static uint ComputeStringHash(string s); // 0x1034C0D0-0x1034D6B0
}

[CompilerGenerated] // 0x10002030-0x10002050
internal sealed class _PrivateImplementationDetails_ // TypeDefIndex: 1727
{
	// Fields
	internal static readonly __StaticArrayInitTypeSize_3 _12D04472A8285260EA12FD3813CDFA9F2D2B548C; // 0x00 // Starts with: 55 04 07 55 04 0c aa d3 - Metadata: 0x002396AA
	internal static readonly __StaticArrayInitTypeSize_3 _13A35EF1A549297C70E2AD46045BBD2ECA17852D; // 0x03 // Starts with: 55 04 0c aa d3 b4 35 b5 - Metadata: 0x002396AD
	internal static readonly long _16968835DEF6DD3BB86EABA9DEC53BF41851CD6D; // 0x08 // Starts with: aa d3 b4 35 b5 14 04 ee - Metadata: 0x002396B0
	internal static readonly __StaticArrayInitTypeSize_3 _1A84029C80CB5518379F199F53FF08A7B764F8FD; // 0x10 // Starts with: 55 04 03 55 04 09 2c 00 - Metadata: 0x002396B8
	internal static readonly __StaticArrayInitTypeSize_3 _235D99572263B22ADFEE10FDA0C25E12F4D94FFC; // 0x13 // Starts with: 55 04 09 2c 00 2b 00 22 - Metadata: 0x002396BB
	internal static readonly __StaticArrayInitTypeSize_14 _2D3CF0F15AC2DDEC2956EA1B7BBE43FB8B923130; // 0x16 // Starts with: 2c 00 2b 00 22 00 5c 00 - Metadata: 0x002396BE
	internal static readonly __StaticArrayInitTypeSize_64 _320B018758ECE3752FFEDBAEB1A6DB67C80B9359; // 0x24 // Starts with: 01 01 01 01 01 01 01 01 - Metadata: 0x002396CC
	internal static readonly __StaticArrayInitTypeSize_3 _3E3442C7396F3F2BB4C7348F4A2074C7DC677D68; // 0x64 // Starts with: 55 04 0b 38 b0 60 a7 51 - Metadata: 0x0023970C
	internal static readonly __StaticArrayInitTypeSize_48 _4E3B533C39447AAEB59A8E48FABD7E15B5B5D195; // 0x67 // Starts with: 38 b0 60 a7 51 ac 96 38 - Metadata: 0x0023970F
	internal static readonly __StaticArrayInitTypeSize_10 _56DFA5053B3131883637F53219E7D88CCEF35949; // 0x97 // Starts with: 09 92 26 89 93 f2 2c 64 - Metadata: 0x0023973F
	internal static readonly __StaticArrayInitTypeSize_9 _6D49C9D487D7AD3491ECE08732D68A593CC2038D; // 0xA1 // Starts with: 2a 86 48 86 f7 0d 01 09 - Metadata: 0x00239749
	internal static readonly __StaticArrayInitTypeSize_3132 _6E5DC824F803F8565AF31B42199DAE39FE7F4EA9; // 0xAA // Starts with: 02 00 00 00 03 00 00 00 - Metadata: 0x00239752
	internal static readonly long _6FA00AC9FFFD87F82A38A7F9ECC8134F4A7052AF; // 0xCE8 // Starts with: 4e 54 4c 4d 53 53 50 00 - Metadata: 0x0023A38E
	internal static readonly __StaticArrayInitTypeSize_3 _736D39815215889F11249D9958F6ED12D37B9F57; // 0xCF0 // Starts with: 55 04 06 55 04 2e 55 04 - Metadata: 0x0023A396
	internal static readonly __StaticArrayInitTypeSize_3 _86F4F563FA2C61798AE6238D789139739428463A; // 0xCF3 // Starts with: 55 04 2e 55 04 08 03 03 - Metadata: 0x0023A399
	internal static readonly __StaticArrayInitTypeSize_3 _97FB30C84FF4A41CD4625B44B2940BFC8DB43003; // 0xCF6 // Starts with: 55 04 08 03 03 03 03 03 - Metadata: 0x0023A39C
	internal static readonly __StaticArrayInitTypeSize_64 _9A9C3962CD4753376E3507C8CB5FD8FCC4B4EDB5; // 0xCF9 // Starts with: 03 03 03 03 03 03 03 03 - Metadata: 0x0023A39F
	internal static readonly __StaticArrayInitTypeSize_3 _9BB00D1FCCBAF03165447FC8028E7CA07CA9FE88; // 0xD39 // Starts with: 55 04 0a 55 04 2a 4b 47 - Metadata: 0x0023A3DF
	internal static readonly __StaticArrayInitTypeSize_3 A323DB0813C4D072957BA6FDA79D9776674CD06B; // 0xD3C // Starts with: 55 04 2a 4b 47 53 21 40 - Metadata: 0x0023A3E2
	internal static readonly long AEA5F1CC5CFE1660539EDD691FE017F775F63A0D; // 0xD40 // Starts with: 4b 47 53 21 40 23 24 25 - Metadata: 0x0023A3E5
	internal static readonly __StaticArrayInitTypeSize_20 BE1BDEC0AA74B4DCB079943E70528096CCA985F8; // 0xD48 // Starts with: da 39 a3 ee 5e 6b 4b 0d - Metadata: 0x0023A3ED
	internal static readonly __StaticArrayInitTypeSize_3 BF477463CE2F5EF38FC4C644BBBF4DF109E7670A; // 0xD5C // Starts with: 55 04 2b 02 02 02 02 02 - Metadata: 0x0023A401
	internal static readonly __StaticArrayInitTypeSize_64 CF0B42666EF5E37EDEA0AB8E173E42C196D03814; // 0xD5F // Starts with: 02 02 02 02 02 02 02 02 - Metadata: 0x0023A404
	internal static readonly __StaticArrayInitTypeSize_32 D28E8ABDBD777A482CE0EE5C24814ACAE52AABFE; // 0xD9F // Starts with: e3 b0 c4 42 98 fc 1c 14 - Metadata: 0x0023A444
	internal static readonly __StaticArrayInitTypeSize_256 D2C5BAE967587C6F3D9F2C4551911E0575A1101F; // 0xDBF // Starts with: 29 2e 43 c9 a2 d8 7c 01 - Metadata: 0x0023A464
	internal static readonly __StaticArrayInitTypeSize_64 E75835D001C843F156FBA01B001DFE1B8029AC17; // 0xEBF // Starts with: cf 83 e1 35 7e ef b8 bd - Metadata: 0x0023A564
	internal static readonly __StaticArrayInitTypeSize_10 EC5BB4F59D4B9B2E9ECD3904D44A8275F23AFB11; // 0xEFF // Starts with: 09 92 26 89 93 f2 2c 64 - Metadata: 0x0023A5A4
	internal static readonly __StaticArrayInitTypeSize_3 EC83FB16C20052BEE2B4025159BC2ED45C9C70C3; // 0xF09 // Starts with: 55 04 04 00 00 00 00 01 - Metadata: 0x0023A5AE

	// Nested types
	private struct __StaticArrayInitTypeSize_3 // TypeDefIndex: 1728
	{
	}

	private struct __StaticArrayInitTypeSize_9 // TypeDefIndex: 1729
	{
	}

	private struct __StaticArrayInitTypeSize_10 // TypeDefIndex: 1730
	{
	}

	private struct __StaticArrayInitTypeSize_14 // TypeDefIndex: 1731
	{
	}

	private struct __StaticArrayInitTypeSize_20 // TypeDefIndex: 1732
	{
	}

	private struct __StaticArrayInitTypeSize_32 // TypeDefIndex: 1733
	{
	}

	private struct __StaticArrayInitTypeSize_48 // TypeDefIndex: 1734
	{
	}

	private struct __StaticArrayInitTypeSize_64 // TypeDefIndex: 1735
	{
	}

	private struct __StaticArrayInitTypeSize_256 // TypeDefIndex: 1736
	{
	}

	private struct __StaticArrayInitTypeSize_3132 // TypeDefIndex: 1737
	{
	}

	// Methods
	internal static uint ComputeStringHash(string s); // 0x1034C0D0-0x1034D6B0
}

[CompilerGenerated] // 0x10002030-0x10002050
internal sealed class _PrivateImplementationDetails_ // TypeDefIndex: 2160
{
	// Fields
	internal static readonly __StaticArrayInitTypeSize_112 _49C5BA13401986EC93E4677F52CBE2248184DFBD; // 0x00 // Starts with: 00 00 00 00 00 00 00 00 - Metadata: 0x0023AD65
	internal static readonly __StaticArrayInitTypeSize_12 _5BE9DB9EEB9CBB4D22472CA9734B1FA1D36126BD; // 0x70 // Starts with: 01 00 00 00 01 00 00 00 - Metadata: 0x0023ADD5
	internal static readonly __StaticArrayInitTypeSize_6 _5D100A87B697F3AE2015A5D3B2A7B5419E1BCA98; // 0x7C // Starts with: 0a 00 0d 00 09 00 12 00 - Metadata: 0x0023ADE1
	internal static readonly __StaticArrayInitTypeSize_32 _7A32E1A19C182315E4263A65A72066492550D8CD; // 0x82 // Starts with: 12 00 00 00 13 00 00 00 - Metadata: 0x0023ADE7
	internal static readonly __StaticArrayInitTypeSize_28 _9E31F24F64765FCAA589F589324D17C9FCF6A06D; // 0xA2 // Starts with: ff ff ff ff 0a 00 00 00 - Metadata: 0x0023AE07
	internal static readonly __StaticArrayInitTypeSize_40 B9F0004E3873FDDCABFDA6174EA18F0859B637B4; // 0xBE // Starts with: 01 00 00 00 02 00 00 00 - Metadata: 0x0023AE23
	internal static readonly __StaticArrayInitTypeSize_20 BAD037B714E1CD1052149B51238A3D4351DD10B5; // 0xE6 // Starts with: 52 00 45 00 41 00 4e 00 - Metadata: 0x0023AE4B
	internal static readonly long EBC658B067B5C785A3F0BB67D73755F6FEE7F70C; // 0x100 // Starts with: 20 00 09 00 0a 00 0d 00 - Metadata: 0x0023AE5F
	internal static readonly __StaticArrayInitTypeSize_36 ED18A4A1FF7C89B400D7CA156BA8D11BB09E1DE4; // 0x108 // Starts with: 00 00 00 00 00 00 00 00 - Metadata: 0x0023AE67
	internal static readonly __StaticArrayInitTypeSize_64 EE3413A2C088FF9432054D6E60A7CB6A498D25F0; // 0x12C // Starts with: 41 00 42 00 43 00 44 00 - Metadata: 0x0023AE8B

	// Nested types
	private struct __StaticArrayInitTypeSize_6 // TypeDefIndex: 2161
	{
	}

	private struct __StaticArrayInitTypeSize_12 // TypeDefIndex: 2162
	{
	}

	private struct __StaticArrayInitTypeSize_20 // TypeDefIndex: 2163
	{
	}

	private struct __StaticArrayInitTypeSize_28 // TypeDefIndex: 2164
	{
	}

	private struct __StaticArrayInitTypeSize_32 // TypeDefIndex: 2165
	{
	}

	private struct __StaticArrayInitTypeSize_36 // TypeDefIndex: 2166
	{
	}

	private struct __StaticArrayInitTypeSize_40 // TypeDefIndex: 2167
	{
	}

	private struct __StaticArrayInitTypeSize_64 // TypeDefIndex: 2168
	{
	}

	private struct __StaticArrayInitTypeSize_112 // TypeDefIndex: 2169
	{
	}
}

[CompilerGenerated] // 0x10002030-0x10002050
internal sealed class _PrivateImplementationDetails_ // TypeDefIndex: 2675
{
	// Fields
	internal static readonly __StaticArrayInitTypeSize_14 _0283A6AF88802AB45989B29549915BEA0F6CD515; // 0x00 // Starts with: 20 00 09 00 0d 00 0a 00 - Metadata: 0x0023BEF9
	internal static readonly long _03F4297FCC30D0FD5E420E5D26E7FA711167C7EF; // 0x10 // Starts with: 20 00 0d 00 0a 00 09 00 - Metadata: 0x0023BF07
	internal static readonly __StaticArrayInitTypeSize_9 _1A39764B112685485A5BA7B2880D878B858C1A7A; // 0x18 // Starts with: 2a 86 48 86 f7 0d 01 07 - Metadata: 0x0023BF0F
	internal static readonly __StaticArrayInitTypeSize_3 _1A84029C80CB5518379F199F53FF08A7B764F8FD; // 0x21 // Starts with: 55 04 03 09 00 0a 00 0b - Metadata: 0x0023BF18
	internal static readonly __StaticArrayInitTypeSize_12 _3BE77BF818331C2D8400FFFFF9FADD3F16AD89AC; // 0x24 // Starts with: 09 00 0a 00 0b 00 0c 00 - Metadata: 0x0023BF1B
	internal static readonly __StaticArrayInitTypeSize_32 _59F5BD34B6C013DEACC784F69C67E95150033A84; // 0x30 // Starts with: 30 00 31 00 32 00 33 00 - Metadata: 0x0023BF27
	internal static readonly __StaticArrayInitTypeSize_6 _5BC3486B05BA8CF4689C7BDB198B3F477BB4E20C; // 0x50 // Starts with: 20 00 2c 00 22 00 2a 86 - Metadata: 0x0023BF47
	internal static readonly __StaticArrayInitTypeSize_9 _6D49C9D487D7AD3491ECE08732D68A593CC2038D; // 0x56 // Starts with: 2a 86 48 86 f7 0d 01 09 - Metadata: 0x0023BF4D
	internal static readonly __StaticArrayInitTypeSize_128 _6F3AD3DC3AF8047587C4C9D696EB68A01FEF796E; // 0x5F // Starts with: 02 02 02 02 02 02 02 02 - Metadata: 0x0023BF56
	internal static readonly __StaticArrayInitTypeSize_44 _8E0EF3D67A3EB1863224EE3CACB424BC2F8CFBA3; // 0xDF // Starts with: 28 00 29 00 3c 00 3e 00 - Metadata: 0x0023BFD6
	internal static readonly long _98A44A6F8606AE6F23FE230286C1D6FBCC407226; // 0x110 // Starts with: 20 00 28 00 2c 00 29 00 - Metadata: 0x0023C002
	internal static readonly __StaticArrayInitTypeSize_32 C02C28AFEBE998F767E4AF43E3BE8F5E9FA11536; // 0x118 // Starts with: 30 00 31 00 32 00 33 00 - Metadata: 0x0023C00A
	internal static readonly __StaticArrayInitTypeSize_128 CCEEADA43268372341F81AE0C9208C6856441C04; // 0x138 // Starts with: 00 00 00 00 00 00 00 00 - Metadata: 0x0023C02A
	internal static readonly long E5BC1BAFADE1862DD6E0B9FB632BFAA6C3873A78; // 0x1B8 // Starts with: 20 00 0a 00 0d 00 09 00 - Metadata: 0x0023C0AA
	internal static readonly __StaticArrayInitTypeSize_32 EC5842B3154E1AF94500B57220EB9F684BCCC42A; // 0x1C0 // Starts with: ff 00 ff 01 04 05 ff ff - Metadata: 0x0023C0B2
	internal static readonly __StaticArrayInitTypeSize_256 EEAFE8C6E1AB017237567305EE925C976CDB6458; // 0x1E0 // Starts with: 00 01 02 03 04 05 06 07 - Metadata: 0x0023C0D2

	// Nested types
	private struct __StaticArrayInitTypeSize_3 // TypeDefIndex: 2676
	{
	}

	private struct __StaticArrayInitTypeSize_6 // TypeDefIndex: 2677
	{
	}

	private struct __StaticArrayInitTypeSize_9 // TypeDefIndex: 2678
	{
	}

	private struct __StaticArrayInitTypeSize_12 // TypeDefIndex: 2679
	{
	}

	private struct __StaticArrayInitTypeSize_14 // TypeDefIndex: 2680
	{
	}

	private struct __StaticArrayInitTypeSize_32 // TypeDefIndex: 2681
	{
	}

	private struct __StaticArrayInitTypeSize_44 // TypeDefIndex: 2682
	{
	}

	private struct __StaticArrayInitTypeSize_128 // TypeDefIndex: 2683
	{
	}

	private struct __StaticArrayInitTypeSize_256 // TypeDefIndex: 2684
	{
	}

	// Methods
	internal static uint ComputeStringHash(string s); // 0x1034C0D0-0x1034D6B0
}

[CompilerGenerated] // 0x10002030-0x10002050
internal sealed class _PrivateImplementationDetails_ // TypeDefIndex: 2751
{
	// Fields
	internal static readonly __StaticArrayInitTypeSize_120 _0AA802CD6847EB893FE786B5EA5168B2FDCD7B93; // 0x00 // Starts with: 00 00 00 00 00 00 00 01 - Metadata: 0x0023C20D
	internal static readonly __StaticArrayInitTypeSize_256 _0C4110BC17D746F018F47B49E0EB0D6590F69939; // 0x78 // Starts with: 52 09 6a d5 30 36 a5 38 - Metadata: 0x0023C285
	internal static readonly __StaticArrayInitTypeSize_1024 _20733E1283D873EBE47133A95C233E11B76F5F11; // 0x178 // Starts with: f4 51 50 a7 41 7e 53 65 - Metadata: 0x0023C385
	internal static readonly __StaticArrayInitTypeSize_1024 _21F4CBF8283FF1CAEB4A39316A97FC1D6DF1D35E; // 0x578 // Starts with: 51 50 a7 f4 7e 53 65 41 - Metadata: 0x0023C785
	internal static readonly __StaticArrayInitTypeSize_1024 _23DFDCA6F045D4257BF5AC8CB1CF2EFADAFE9B94; // 0x978 // Starts with: 63 c6 a5 63 7c f8 84 7c - Metadata: 0x0023CB85
	internal static readonly __StaticArrayInitTypeSize_1024 _30A0358B25B1372DD598BB4B1AC56AD6B8F08A47; // 0xD78 // Starts with: a5 63 63 c6 84 7c 7c f8 - Metadata: 0x0023CF85
	internal static readonly __StaticArrayInitTypeSize_1024 _5B5DF5A459E902D96F7DB0FB235A25346CA85C5D; // 0x1178 // Starts with: c6 a5 63 63 f8 84 7c 7c - Metadata: 0x0023D385
	internal static readonly __StaticArrayInitTypeSize_1024 _5BE411F1438EAEF33726D855E99011D5FECDDD4E; // 0x1578 // Starts with: a7 f4 51 50 65 41 7e 53 - Metadata: 0x0023D785
	internal static readonly __StaticArrayInitTypeSize_256 _8F22C9ECE1331718CBD268A9BBFD2F5E451441E3; // 0x1978 // Starts with: 63 7c 77 7b f2 6b 6f c5 - Metadata: 0x0023DB85
	internal static readonly __StaticArrayInitTypeSize_1024 A02DD1D8604EA8EC2D2BDA717A93A4EE85F13E53; // 0x1A78 // Starts with: 50 a7 f4 51 53 65 41 7e - Metadata: 0x0023DC85
	internal static readonly __StaticArrayInitTypeSize_1024 AE2F76ECEF8B08F0BC7EA95DCFE945E1727927C9; // 0x1E78 // Starts with: 63 63 c6 a5 7c 7c f8 84 - Metadata: 0x0023E085

	// Nested types
	private struct __StaticArrayInitTypeSize_120 // TypeDefIndex: 2752
	{
	}

	private struct __StaticArrayInitTypeSize_256 // TypeDefIndex: 2753
	{
	}

	private struct __StaticArrayInitTypeSize_1024 // TypeDefIndex: 2754
	{
	}
}

[CompilerGenerated] // 0x10002030-0x10002050
internal sealed class _PrivateImplementationDetails_ // TypeDefIndex: 3799
{
	// Fields
	internal static readonly __StaticArrayInitTypeSize_32 _59F5BD34B6C013DEACC784F69C67E95150033A84; // 0x00 // Starts with: 30 00 31 00 32 00 33 00 - Metadata: 0x0023FBBD

	// Nested types
	private struct __StaticArrayInitTypeSize_32 // TypeDefIndex: 3800
	{
	}

	// Methods
	internal static uint ComputeStringHash(string s); // 0x1034C0D0-0x1034D6B0
}

[CompilerGenerated] // 0x10002030-0x10002050
internal sealed class _PrivateImplementationDetails_ // TypeDefIndex: 4036
{
	// Fields
	internal static readonly __StaticArrayInitTypeSize_12 _7BBE37982E6C057ED87163CAFC7FD6E5E42EEA46; // 0x00 // Starts with: 20 00 2e 00 2c 00 09 00 - Metadata: 0x0023FF4B

	// Nested types
	private struct __StaticArrayInitTypeSize_12 // TypeDefIndex: 4037
	{
	}
}

[CompilerGenerated] // 0x10002030-0x10002050
internal sealed class _PrivateImplementationDetails_ // TypeDefIndex: 4160
{
	// Methods
	internal static uint ComputeStringHash(string s); // 0x1034C0D0-0x1034D6B0
}

[CompilerGenerated] // 0x10002030-0x10002050
internal sealed class _PrivateImplementationDetails_ // TypeDefIndex: 4228
{
	// Fields
	internal static readonly __StaticArrayInitTypeSize_90 _1BAE60DC28D365B5EF5493498787078BF53D20EF; // 0x00 // Starts with: 30 00 31 00 32 00 33 00 - Metadata: 0x002401CF
	internal static readonly __StaticArrayInitTypeSize_240 _47E3B8265F3A9BD162A6677F3CD46F65C75C6AAF; // 0x5A // Starts with: 08 00 00 00 00 00 00 00 - Metadata: 0x00240229
	internal static readonly __StaticArrayInitTypeSize_3840 _62B792D603A9032470F66068EBDD4C2C27BC3584; // 0x14A // Starts with: 13 00 00 00 07 00 00 00 - Metadata: 0x00240319
	internal static readonly __StaticArrayInitTypeSize_1120 _9AE2A86B62BFF132AFB9751C7A86FEA25C488207; // 0x104A // Starts with: 00 00 00 00 00 00 00 00 - Metadata: 0x00241219
	internal static readonly __StaticArrayInitTypeSize_20 CAD8623838274740D6497489F547CE972C42A942; // 0x14AA // Starts with: 30 00 31 00 32 00 33 00 - Metadata: 0x00241679
	internal static readonly __StaticArrayInitTypeSize_160 E84CF750337BB70114A76A64A62D163B2A79CE3C; // 0x14BE // Starts with: 00 00 00 00 07 00 00 00 - Metadata: 0x0024168D
	internal static readonly __StaticArrayInitTypeSize_2560 EF2F325AA96D022E1C3C16A071416F33B884A0E6; // 0x155E // Starts with: 29 00 00 00 19 00 00 00 - Metadata: 0x0024172D

	// Nested types
	private struct __StaticArrayInitTypeSize_20 // TypeDefIndex: 4229
	{
	}

	private struct __StaticArrayInitTypeSize_90 // TypeDefIndex: 4230
	{
	}

	private struct __StaticArrayInitTypeSize_160 // TypeDefIndex: 4231
	{
	}

	private struct __StaticArrayInitTypeSize_240 // TypeDefIndex: 4232
	{
	}

	private struct __StaticArrayInitTypeSize_1120 // TypeDefIndex: 4233
	{
	}

	private struct __StaticArrayInitTypeSize_2560 // TypeDefIndex: 4234
	{
	}

	private struct __StaticArrayInitTypeSize_3840 // TypeDefIndex: 4235
	{
	}
}

[CompilerGenerated] // 0x10002030-0x10002050
internal sealed class _PrivateImplementationDetails_ // TypeDefIndex: 5987
{
	// Fields
	internal static readonly __StaticArrayInitTypeSize_12 _05180A65B1F6B40FE9A241F6E97AD6C6C88A3D11; // 0x00 // Starts with: 00 00 80 3f 66 66 e6 3f - Metadata: 0x00244488
	internal static readonly __StaticArrayInitTypeSize_44 _0D533F8A4CCC8EFCC7B55660DBAE0536FB60FB59; // 0x0C // Starts with: 00 00 00 00 00 00 00 00 - Metadata: 0x00244494
	internal static readonly __StaticArrayInitTypeSize_44 _176B79C11225BEC227F5626F4F8208140B2BFE3B; // 0x38 // Starts with: 00 00 00 00 00 00 00 00 - Metadata: 0x002444C0
	internal static readonly __StaticArrayInitTypeSize_40 _27EA69A0EC38B65E9F299C072E36130DBFD74D7F; // 0x64 // Starts with: f6 ff ff ff f8 ff ff ff - Metadata: 0x002444EC
	internal static readonly __StaticArrayInitTypeSize_44 _3D58836E37031FB69196923881D445C298634B9E; // 0x8C // Starts with: 00 00 00 00 00 00 00 00 - Metadata: 0x00244514
	internal static readonly __StaticArrayInitTypeSize_40 _58BBE62016B4F5B7494B1D092A77EE17A4C9E3E5; // 0xB8 // Starts with: 11 00 00 00 01 00 00 00 - Metadata: 0x00244540
	internal static readonly long _68CA5D4B22DEAE2CDE69D6AA838D04375E46EB4C; // 0xE0 // Starts with: 0d 04 0c 09 05 0e 08 0b - Metadata: 0x00244568
	internal static readonly __StaticArrayInitTypeSize_16 C16501E13B1096B5C0BC796D66582F5A59A6BCF7; // 0xE8 // Starts with: 04 00 00 00 04 00 00 00 - Metadata: 0x00244570

	// Nested types
	private struct __StaticArrayInitTypeSize_12 // TypeDefIndex: 5988
	{
	}

	private struct __StaticArrayInitTypeSize_16 // TypeDefIndex: 5989
	{
	}

	private struct __StaticArrayInitTypeSize_40 // TypeDefIndex: 5990
	{
	}

	private struct __StaticArrayInitTypeSize_44 // TypeDefIndex: 5991
	{
	}
}

namespace MS.Internal.Xml.XPath
{
	internal sealed class AbsoluteQuery : ContextQuery // TypeDefIndex: 1740
	{
		// Constructors
		public AbsoluteQuery(); // 0x106B9200-0x106B9220
		private AbsoluteQuery(AbsoluteQuery other); // 0x106B9220-0x106B9250
	
		// Methods
		public override object Evaluate(XPathNodeIterator context); // 0x106B9190-0x106B9200
		public override XPathNodeIterator Clone(); // 0x106B9130-0x106B9190
	}
}

namespace QRCoder
{
	public abstract class AbstractQRCode // TypeDefIndex: 4201
	{
		// Fields
		[CompilerGenerated] // 0x10002030-0x10002050
		private QRCodeData _QrCodeData_k__BackingField; // 0x08
	
		// Properties
		protected QRCodeData QrCodeData { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101B4FF0-0x101B5000 0x101D22D0-0x101D22E0
	
		// Constructors
		protected AbstractQRCode(QRCodeData data); // 0x101B54B0-0x101B54D0
	
		// Methods
		public void Dispose(); // 0x109BE6F0-0x109BE720
	}
}

public class AcceptDivertPowerGame : Minigame // TypeDefIndex: 5303
{
	// Fields
	private LineRenderer[] LeftWires; // 0x28
	private LineRenderer[] RightWires; // 0x2C
	public GameObject RightWireParent; // 0x30
	public GameObject LeftWireParent; // 0x34
	public SpriteRenderer Switch; // 0x38
	public AudioClip SwitchSound; // 0x3C
	private bool done; // 0x40

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoDoSwitch_d__9 : IEnumerator<object> // TypeDefIndex: 5304
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public AcceptDivertPowerGame __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoDoSwitch_d__9(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102B4FF0-0x102B52D0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102B52D0-0x102B5320
	}

	// Constructors
	public AcceptDivertPowerGame(); // 0x101ACA10-0x101ACA20

	// Methods
	public void Start(); // 0x1029CA00-0x1029CAF0
	public void DoSwitch(); // 0x1029C900-0x1029CA00
	[IteratorStateMachine] // 0x10030520-0x10030570
	private IEnumerator CoDoSwitch(); // 0x1029C8B0-0x1029C900
	public void Update(); // 0x1029CBE0-0x1029CDF0
	[CompilerGenerated] // 0x10002030-0x10002050
	private void _CoDoSwitch_b__9_0(float t); // 0x1029CAF0-0x1029CBE0
}

namespace Steamworks
{
	[Serializable]
	public struct AccountID_t : IEquatable<AccountID_t>, IComparable<AccountID_t> // TypeDefIndex: 4819
	{
		// Fields
		public uint m_AccountID; // 0x00
	
		// Constructors
		public AccountID_t(uint value); // 0x100900E0-0x100900F0
	
		// Methods
		public override string ToString(); // 0x100900C0-0x100900E0
		public override bool Equals(object other); // 0x100C8670-0x100C86E0
		public override int GetHashCode(); // 0x100900A0-0x100900C0
		public static bool operator ==(AccountID_t x, AccountID_t y); // 0x1018AFC0-0x1018AFD0
		public static bool operator !=(AccountID_t x, AccountID_t y); // 0x1018AFE0-0x1018AFF0
		public static explicit operator AccountID_t(uint value); // 0x1018AFD0-0x1018AFE0
		public static explicit operator uint(AccountID_t that); // 0x1018AFD0-0x1018AFE0
		public bool Equals(AccountID_t other); // 0x10090080-0x100900A0
		public int CompareTo(AccountID_t other); // 0x1008FFF0-0x10090010
	}
}

namespace Discord
{
	public class AchievementManager // TypeDefIndex: 5150
	{
		// Fields
		private IntPtr MethodsPtr; // 0x08
		private object MethodsStructure; // 0x0C
		[CompilerGenerated] // 0x10002030-0x10002050
		private UserAchievementUpdateHandler OnUserAchievementUpdate; // 0x10
	
		// Properties
		private FFIMethods Methods { get; } // 0x1076BF70-0x1076C040 
	
		// Events
		public event UserAchievementUpdateHandler OnUserAchievementUpdate {
			add; // 0x1076BEF0-0x1076BF70
			remove; // 0x1076C040-0x1076C0C0
		}
	
		// Nested types
		internal struct FFIEvents // TypeDefIndex: 5151
		{
			// Fields
			internal UserAchievementUpdateHandler OnUserAchievementUpdate; // 0x00
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void UserAchievementUpdateHandler(IntPtr ptr, ref UserAchievement userAchievement); // TypeDefIndex: 5152; 0x1018BF80-0x1018C200
		}
	
		internal struct FFIMethods // TypeDefIndex: 5153
		{
			// Fields
			internal SetUserAchievementMethod SetUserAchievement; // 0x00
			internal FetchUserAchievementsMethod FetchUserAchievements; // 0x04
			internal CountUserAchievementsMethod CountUserAchievements; // 0x08
			internal GetUserAchievementMethod GetUserAchievement; // 0x0C
			internal GetUserAchievementAtMethod GetUserAchievementAt; // 0x10
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void SetUserAchievementCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 5154; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void SetUserAchievementMethod(IntPtr methodsPtr, long achievementId, byte percentComplete, IntPtr callbackData, SetUserAchievementCallback callback); // TypeDefIndex: 5155; 0x10775BF0-0x10775EC0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void FetchUserAchievementsCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 5156; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void FetchUserAchievementsMethod(IntPtr methodsPtr, IntPtr callbackData, FetchUserAchievementsCallback callback); // TypeDefIndex: 5157; 0x10344040-0x103442D0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void CountUserAchievementsMethod(IntPtr methodsPtr, ref int count); // TypeDefIndex: 5158; 0x1018BF80-0x1018C200
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetUserAchievementMethod(IntPtr methodsPtr, long userAchievementId, ref UserAchievement userAchievement); // TypeDefIndex: 5159; 0x10620E00-0x106210A0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetUserAchievementAtMethod(IntPtr methodsPtr, int index, ref UserAchievement userAchievement); // TypeDefIndex: 5160; 0x104A0350-0x104A05E0
		}
	
		public delegate void SetUserAchievementHandler(Discord.Result result); // TypeDefIndex: 5161; 0x1061F960-0x1061FAD0
	
		public delegate void FetchUserAchievementsHandler(Discord.Result result); // TypeDefIndex: 5162; 0x1061F960-0x1061FAD0
	
		public delegate void UserAchievementUpdateHandler(ref UserAchievement userAchievement); // TypeDefIndex: 5163; 0x10350280-0x103504C0
	
		// Constructors
		internal AchievementManager(IntPtr ptr, IntPtr eventsPtr, ref FFIEvents events); // 0x1076BDF0-0x1076BEF0
	
		// Methods
		private void InitEvents(IntPtr eventsPtr, ref FFIEvents events); // 0x1076BB70-0x1076BBF0
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void SetUserAchievementCallbackImpl(IntPtr ptr, Discord.Result result); // 0x1076BCB0-0x1076BD40
		public void SetUserAchievement(long achievementId, byte percentComplete, SetUserAchievementHandler callback); // 0x1076BD40-0x1076BDF0
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void FetchUserAchievementsCallbackImpl(IntPtr ptr, Discord.Result result); // 0x1076B8B0-0x1076B940
		public void FetchUserAchievements(FetchUserAchievementsHandler callback); // 0x1076B940-0x1076B9F0
		public int CountUserAchievements(); // 0x1076B860-0x1076B8B0
		public UserAchievement GetUserAchievement(long userAchievementId); // 0x1076BAB0-0x1076BB70
		public UserAchievement GetUserAchievementAt(int index); // 0x1076B9F0-0x1076BAB0
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OnUserAchievementUpdateImpl(IntPtr ptr, ref UserAchievement userAchievement); // 0x1076BBF0-0x1076BCB0
	}

	public struct Activity // TypeDefIndex: 4885
	{
		// Fields
		public ActivityType Type; // 0x00
		public long ApplicationId; // 0x08
		public string Name; // 0x10
		public string State; // 0x14
		public string Details; // 0x18
		public ActivityTimestamps Timestamps; // 0x20
		public ActivityAssets Assets; // 0x30
		public ActivityParty Party; // 0x40
		public ActivitySecrets Secrets; // 0x4C
		public bool Instance; // 0x58
	}

	public enum ActivityActionType // TypeDefIndex: 4865
	{
		Join = 1,
		Spectate = 2
	}

	public struct ActivityAssets // TypeDefIndex: 4881
	{
		// Fields
		public string LargeImage; // 0x00
		public string LargeText; // 0x04
		public string SmallImage; // 0x08
		public string SmallText; // 0x0C
	}

	public enum ActivityJoinRequestReply // TypeDefIndex: 4866
	{
		No = 0,
		Yes = 1,
		Ignore = 2
	}

	public class ActivityManager // TypeDefIndex: 4829
	{
		// Fields
		private IntPtr MethodsPtr; // 0x08
		private object MethodsStructure; // 0x0C
		[CompilerGenerated] // 0x10002030-0x10002050
		private ActivityJoinHandler OnActivityJoin; // 0x10
		[CompilerGenerated] // 0x10002030-0x10002050
		private ActivitySpectateHandler OnActivitySpectate; // 0x14
		[CompilerGenerated] // 0x10002030-0x10002050
		private ActivityJoinRequestHandler OnActivityJoinRequest; // 0x18
		[CompilerGenerated] // 0x10002030-0x10002050
		private ActivityInviteHandler OnActivityInvite; // 0x1C
	
		// Properties
		private FFIMethods Methods { get; } // 0x1076D2E0-0x1076D3C0 
	
		// Events
		public event ActivityJoinHandler OnActivityJoin {
			add; // 0x1076D1E0-0x1076D260
			remove; // 0x1076D4C0-0x1076D540
		}
		public event ActivitySpectateHandler OnActivitySpectate {
			add; // 0x1076D260-0x1076D2E0
			remove; // 0x1076D540-0x1076D5C0
		}
		public event ActivityJoinRequestHandler OnActivityJoinRequest {
			add; // 0x1076D160-0x1076D1E0
			remove; // 0x1076D440-0x1076D4C0
		}
		public event ActivityInviteHandler OnActivityInvite {
			add; // 0x1076D0E0-0x1076D160
			remove; // 0x1076D3C0-0x1076D440
		}
	
		// Nested types
		internal struct FFIEvents // TypeDefIndex: 4830
		{
			// Fields
			internal ActivityJoinHandler OnActivityJoin; // 0x00
			internal ActivitySpectateHandler OnActivitySpectate; // 0x04
			internal ActivityJoinRequestHandler OnActivityJoinRequest; // 0x08
			internal ActivityInviteHandler OnActivityInvite; // 0x0C
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void ActivityJoinHandler(IntPtr ptr, string secret); // TypeDefIndex: 4831; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void ActivitySpectateHandler(IntPtr ptr, string secret); // TypeDefIndex: 4832; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void ActivityJoinRequestHandler(IntPtr ptr, ref User user); // TypeDefIndex: 4833; 0x1018BF80-0x1018C200
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void ActivityInviteHandler(IntPtr ptr, ActivityActionType type, ref User user, ref Activity activity); // TypeDefIndex: 4834; 0x10624180-0x10624420
		}
	
		internal struct FFIMethods // TypeDefIndex: 4835
		{
			// Fields
			internal RegisterCommandMethod RegisterCommand; // 0x00
			internal RegisterSteamMethod RegisterSteam; // 0x04
			internal UpdateActivityMethod UpdateActivity; // 0x08
			internal ClearActivityMethod ClearActivity; // 0x0C
			internal SendRequestReplyMethod SendRequestReply; // 0x10
			internal SendInviteMethod SendInvite; // 0x14
			internal AcceptInviteMethod AcceptInvite; // 0x18
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result RegisterCommandMethod(IntPtr methodsPtr, string command); // TypeDefIndex: 4836; 0x1061FB40-0x1061FDD0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result RegisterSteamMethod(IntPtr methodsPtr, uint steamId); // TypeDefIndex: 4837; 0x1061FB40-0x1061FDD0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void UpdateActivityCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 4838; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void UpdateActivityMethod(IntPtr methodsPtr, ref Activity activity, IntPtr callbackData, UpdateActivityCallback callback); // TypeDefIndex: 4839; 0x10624180-0x10624420
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void ClearActivityCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 4840; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void ClearActivityMethod(IntPtr methodsPtr, IntPtr callbackData, ClearActivityCallback callback); // TypeDefIndex: 4841; 0x10344040-0x103442D0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void SendRequestReplyCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 4842; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void SendRequestReplyMethod(IntPtr methodsPtr, long userId, ActivityJoinRequestReply reply, IntPtr callbackData, SendRequestReplyCallback callback); // TypeDefIndex: 4843; 0x10775BF0-0x10775EC0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void SendInviteCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 4844; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void SendInviteMethod(IntPtr methodsPtr, long userId, ActivityActionType type, string content, IntPtr callbackData, SendInviteCallback callback); // TypeDefIndex: 4845; 0x10775790-0x10775A80
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void AcceptInviteCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 4846; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void AcceptInviteMethod(IntPtr methodsPtr, long userId, IntPtr callbackData, AcceptInviteCallback callback); // TypeDefIndex: 4847; 0x10621500-0x106217C0
		}
	
		public delegate void UpdateActivityHandler(Discord.Result result); // TypeDefIndex: 4848; 0x1061F960-0x1061FAD0
	
		public delegate void ClearActivityHandler(Discord.Result result); // TypeDefIndex: 4849; 0x1061F960-0x1061FAD0
	
		public delegate void SendRequestReplyHandler(Discord.Result result); // TypeDefIndex: 4850; 0x1061F960-0x1061FAD0
	
		public delegate void SendInviteHandler(Discord.Result result); // TypeDefIndex: 4851; 0x1061F960-0x1061FAD0
	
		public delegate void AcceptInviteHandler(Discord.Result result); // TypeDefIndex: 4852; 0x1061F960-0x1061FAD0
	
		public delegate void ActivityJoinHandler(string secret); // TypeDefIndex: 4853; 0x101D4590-0x101D4790
	
		public delegate void ActivitySpectateHandler(string secret); // TypeDefIndex: 4854; 0x101D4590-0x101D4790
	
		public delegate void ActivityJoinRequestHandler(ref User user); // TypeDefIndex: 4855; 0x10350280-0x103504C0
	
		public delegate void ActivityInviteHandler(ActivityActionType type, ref User user, ref Activity activity); // TypeDefIndex: 4856; 0x10344040-0x103442D0
	
		// Constructors
		internal ActivityManager(IntPtr ptr, IntPtr eventsPtr, ref FFIEvents events); // 0x1076CF60-0x1076D0E0
	
		// Methods
		public void RegisterCommand(); // 0x1076CA40-0x1076CAE0
		private void InitEvents(IntPtr eventsPtr, ref FFIEvents events); // 0x1076C5D0-0x1076C6D0
		public void RegisterCommand(string command); // 0x1076C9A0-0x1076CA40
		public void RegisterSteam(uint steamId); // 0x1076CAE0-0x1076CB80
		[AOT.MonoPInvokeCallback] // 0x1000EC40-0x1000EC90
		private static void UpdateActivityCallbackImpl(IntPtr ptr, Discord.Result result); // 0x1076CE00-0x1076CE90
		public void UpdateActivity(Activity activity, UpdateActivityHandler callback); // 0x1076CE90-0x1076CF60
		[AOT.MonoPInvokeCallback] // 0x1000ED30-0x1000ED80
		private static void ClearActivityCallbackImpl(IntPtr ptr, Discord.Result result); // 0x1076C490-0x1076C520
		public void ClearActivity(ClearActivityHandler callback); // 0x1076C520-0x1076C5D0
		[AOT.MonoPInvokeCallback] // 0x1000EE10-0x1000EE60
		private static void SendRequestReplyCallbackImpl(IntPtr ptr, Discord.Result result); // 0x1076CCC0-0x1076CD50
		public void SendRequestReply(long userId, ActivityJoinRequestReply reply, SendRequestReplyHandler callback); // 0x1076CD50-0x1076CE00
		[AOT.MonoPInvokeCallback] // 0x1000EEA0-0x1000EEF0
		private static void SendInviteCallbackImpl(IntPtr ptr, Discord.Result result); // 0x1076CB80-0x1076CC10
		public void SendInvite(long userId, ActivityActionType type, string content, SendInviteHandler callback); // 0x1076CC10-0x1076CCC0
		[AOT.MonoPInvokeCallback] // 0x1000EFB0-0x1000F000
		private static void AcceptInviteCallbackImpl(IntPtr ptr, Discord.Result result); // 0x1076C350-0x1076C3E0
		public void AcceptInvite(long userId, AcceptInviteHandler callback); // 0x1076C3E0-0x1076C490
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OnActivityJoinImpl(IntPtr ptr, string secret); // 0x1076C790-0x1076C840
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OnActivitySpectateImpl(IntPtr ptr, string secret); // 0x1076C8F0-0x1076C9A0
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OnActivityJoinRequestImpl(IntPtr ptr, ref User user); // 0x1076C840-0x1076C8F0
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OnActivityInviteImpl(IntPtr ptr, ActivityActionType type, ref User user, ref Activity activity); // 0x1076C6D0-0x1076C790
	}

	public struct ActivityParty // TypeDefIndex: 4883
	{
		// Fields
		public string Id; // 0x00
		public PartySize Size; // 0x04
	}

	public struct ActivitySecrets // TypeDefIndex: 4884
	{
		// Fields
		public string Match; // 0x00
		public string Join; // 0x04
		public string Spectate; // 0x08
	}

	public struct ActivityTimestamps // TypeDefIndex: 4880
	{
		// Fields
		public long Start; // 0x00
		public long End; // 0x08
	}

	public enum ActivityType // TypeDefIndex: 4864
	{
		Playing = 0,
		Streaming = 1,
		Listening = 2,
		Watching = 3
	}
}

namespace GoogleMobileAds.Api
{
	public enum AdapterState // TypeDefIndex: 5971
	{
		NotReady = 0,
		Ready = 1
	}

	public class AdapterStatus // TypeDefIndex: 5970
	{
		// Fields
		[CompilerGenerated] // 0x10002030-0x10002050
		private AdapterState _InitializationState_k__BackingField; // 0x08
		[CompilerGenerated] // 0x10002030-0x10002050
		private string _Description_k__BackingField; // 0x0C
		[CompilerGenerated] // 0x10002030-0x10002050
		private int _Latency_k__BackingField; // 0x10
	
		// Properties
		public AdapterState InitializationState { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101B4FF0-0x101B5000 0x101D22D0-0x101D22E0
		public string Description { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101AE200-0x101AE210 0x101AEE90-0x101AEEA0
		public int Latency { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101BCD80-0x101BCD90 0x101BCF20-0x101BCF30
	
		// Constructors
		internal AdapterStatus(AdapterState state, string description, int latency); // 0x10219D20-0x10219D50
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000A3E0-0x1000A400
	public struct AddAppDependencyResult_t // TypeDefIndex: 4629
	{
		// Fields
		public const int k_iCallback = 3414; // Metadata: 0x002423D7
		public EResult m_eResult; // 0x00
		public PublishedFileId_t m_nPublishedFileId; // 0x08
		public AppId_t m_nAppID; // 0x10
	}
}

public class AdDataCollectScreen : MonoBehaviour // TypeDefIndex: 5525
{
	// Fields
	public ToggleButtonBehaviour PersonalizedAdsButton; // 0x0C

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Show_d__2 : IEnumerator<object> // TypeDefIndex: 5526
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public AdDataCollectScreen __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Show_d__2(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102B7D80-0x102B7ED0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102B7ED0-0x102B7F20
	}

	// Constructors
	public AdDataCollectScreen(); // 0x101A68C0-0x101A68D0

	// Methods
	private void Start(); // 0x1029CEA0-0x1029CEB0
	[IteratorStateMachine] // 0x10049AE0-0x10049B30
	public IEnumerator Show(); // 0x1029CE50-0x1029CEA0
	public void Close(); // 0x1029CDF0-0x1029CE50
	public void Update(); // 0x1029D010-0x1029D090
	public void TogglePersonalizedAd(); // 0x1029CEB0-0x1029CF60
	public void UpdateButtons(); // 0x1029CF60-0x1029D010
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000A3A0-0x1000A3C0
	public struct AddUGCDependencyResult_t // TypeDefIndex: 4627
	{
		// Fields
		public const int k_iCallback = 3412; // Metadata: 0x002423CF
		public EResult m_eResult; // 0x00
		public PublishedFileId_t m_nPublishedFileId; // 0x08
		public PublishedFileId_t m_nChildPublishedFileId; // 0x10
	}
}

namespace GoogleMobileAds.Api
{
	public class AdErrorEventArgs : EventArgs // TypeDefIndex: 5959
	{
		// Fields
		[CompilerGenerated] // 0x10002030-0x10002050
		private string _Message_k__BackingField; // 0x08
	
		// Properties
		public string Message { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101B4FF0-0x101B5000 0x101D22D0-0x101D22E0
	
		// Constructors
		public AdErrorEventArgs(); // 0x10219070-0x102190C0
	}

	public class AdFailedToLoadEventArgs : EventArgs // TypeDefIndex: 5960
	{
		// Fields
		[CompilerGenerated] // 0x10002030-0x10002050
		private string _Message_k__BackingField; // 0x08
	
		// Properties
		public string Message { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101B4FF0-0x101B5000 0x101D22D0-0x101D22E0
	
		// Constructors
		public AdFailedToLoadEventArgs(); // 0x102190C0-0x10219110
	}

	public class AdLoader // TypeDefIndex: 5962
	{
		// Fields
		private IAdLoaderClient adLoaderClient; // 0x08
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<AdFailedToLoadEventArgs> OnAdFailedToLoad; // 0x0C
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<CustomNativeEventArgs> OnCustomNativeTemplateAdLoaded; // 0x10
		[CompilerGenerated] // 0x10002030-0x10002050
		private Dictionary<string, Action<CustomNativeTemplateAd, string>> _CustomNativeTemplateClickHandlers_k__BackingField; // 0x14
		[CompilerGenerated] // 0x10002030-0x10002050
		private string _AdUnitId_k__BackingField; // 0x18
		[CompilerGenerated] // 0x10002030-0x10002050
		private HashSet<NativeAdType> _AdTypes_k__BackingField; // 0x1C
		[CompilerGenerated] // 0x10002030-0x10002050
		private HashSet<string> _TemplateIds_k__BackingField; // 0x20
	
		// Properties
		public Dictionary<string, Action<CustomNativeTemplateAd, string>> CustomNativeTemplateClickHandlers { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101ADCB0-0x101ADCC0 0x101BCF30-0x101BCF40
		public string AdUnitId { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101ADCC0-0x101ADCD0 0x102026F0-0x10202700
		public HashSet<NativeAdType> AdTypes { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101F85C0-0x101F85D0 0x10219590-0x102195A0
		public HashSet<string> TemplateIds { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101BCCB0-0x101BCCC0 0x101F0630-0x101F0640
	
		// Events
		public event EventHandler<AdFailedToLoadEventArgs> OnAdFailedToLoad {
			add; // 0x10219390-0x10219410
			remove; // 0x10219490-0x10219510
		}
		public event EventHandler<CustomNativeEventArgs> OnCustomNativeTemplateAdLoaded {
			add; // 0x10219410-0x10219490
			remove; // 0x10219510-0x10219590
		}
	
		// Nested types
		public class Builder // TypeDefIndex: 5963
		{
			// Fields
			[CompilerGenerated] // 0x10002030-0x10002050
			private string _AdUnitId_k__BackingField; // 0x08
			[CompilerGenerated] // 0x10002030-0x10002050
			private HashSet<NativeAdType> _AdTypes_k__BackingField; // 0x0C
			[CompilerGenerated] // 0x10002030-0x10002050
			private HashSet<string> _TemplateIds_k__BackingField; // 0x10
			[CompilerGenerated] // 0x10002030-0x10002050
			private Dictionary<string, Action<CustomNativeTemplateAd, string>> _CustomNativeTemplateClickHandlers_k__BackingField; // 0x14
	
			// Properties
			internal string AdUnitId { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101B4FF0-0x101B5000 0x101D22D0-0x101D22E0
			internal HashSet<NativeAdType> AdTypes { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101AE200-0x101AE210 0x101AEE90-0x101AEEA0
			internal HashSet<string> TemplateIds { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101BCD80-0x101BCD90 0x101BCF20-0x101BCF30
			internal Dictionary<string, Action<CustomNativeTemplateAd, string>> CustomNativeTemplateClickHandlers { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101ADCB0-0x101ADCC0 0x101BCF30-0x101BCF40
	
			// Constructors
			public Builder(string adUnitId); // 0x1021AEF0-0x1021AF80
	
			// Methods
			public Builder ForCustomNativeAd(string templateId); // 0x1021ACF0-0x1021AD60
			public Builder ForCustomNativeAd(string templateId, Action<CustomNativeTemplateAd, string> callback); // 0x1021AD60-0x1021ADE0
			public AdLoader Build(); // 0x1021AB90-0x1021ABE0
		}
	
		// Constructors
		private AdLoader(Builder builder); // 0x102191F0-0x10219390
	
		// Methods
		public void LoadAd(AdRequest request); // 0x10219110-0x10219160
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _.ctor_b__1_0(object sender, CustomNativeEventArgs args); // 0x10219160-0x102191B0
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _.ctor_b__1_1(object sender, AdFailedToLoadEventArgs args); // 0x102191B0-0x102191F0
	}
}

public static class AdPlayer // TypeDefIndex: 5165
{
	// Fields
	private static InterstitialAd interstitial; // 0x00
	private const string appId = "unexpected_platform"; // Metadata: 0x00243A50
	private const string adUnitId = "unexpected_platform"; // Metadata: 0x00243A67

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoShowAd_d__4 : IEnumerator<object> // TypeDefIndex: 5166
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public bool playAgain; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoShowAd_d__4(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102B5F10-0x102B5FB0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102B5FB0-0x102B6000
	}

	// Methods
	public static void ShowInterstitial(MonoBehaviour parent, bool playAgain); // 0x1029D750-0x1029D7C0
	[IteratorStateMachine] // 0x1001BE00-0x1001BE50
	private static IEnumerator CoShowAd(bool playAgain); // 0x1029D090-0x1029D0E0
	public static void RequestInterstitial(); // 0x1029D3D0-0x1029D750
	private static void Interstitial_OnAdLoaded(object sender, EventArgs e); // 0x101A2F90-0x101A2FA0
	private static void Interstitial_OnAdLeavingApplication(object sender, EventArgs e); // 0x1029D2F0-0x1029D3D0
	private static void Interstitial_OnAdFailedToLoad(object sender, AdFailedToLoadEventArgs e); // 0x1029D1C0-0x1029D2F0
	private static void Interstitial_OnAdClosed(object sender, EventArgs e); // 0x1029D0E0-0x1029D1C0
}

namespace GoogleMobileAds.Api
{
	public enum AdPosition // TypeDefIndex: 5964
	{
		Top = 0,
		Bottom = 1,
		TopLeft = 2,
		TopRight = 3,
		BottomLeft = 4,
		BottomRight = 5,
		Center = 6
	}

	public class AdRequest // TypeDefIndex: 5965
	{
		// Fields
		public const string Version = "4.2.1"; // Metadata: 0x00244446
		public const string TestDeviceSimulator = "SIMULATOR"; // Metadata: 0x0024444F
		[CompilerGenerated] // 0x10002030-0x10002050
		private List<string> _TestDevices_k__BackingField; // 0x08
		[CompilerGenerated] // 0x10002030-0x10002050
		private HashSet<string> _Keywords_k__BackingField; // 0x0C
		[CompilerGenerated] // 0x10002030-0x10002050
		private DateTime? _Birthday_k__BackingField; // 0x10
		[CompilerGenerated] // 0x10002030-0x10002050
		private Gender? _Gender_k__BackingField; // 0x20
		[CompilerGenerated] // 0x10002030-0x10002050
		private bool? _TagForChildDirectedTreatment_k__BackingField; // 0x28
		[CompilerGenerated] // 0x10002030-0x10002050
		private Dictionary<string, string> _Extras_k__BackingField; // 0x2C
		[CompilerGenerated] // 0x10002030-0x10002050
		private List<MediationExtras> _MediationExtras_k__BackingField; // 0x30
	
		// Properties
		public List<string> TestDevices { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101B4FF0-0x101B5000 0x101D22D0-0x101D22E0
		public HashSet<string> Keywords { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101AE200-0x101AE210 0x101AEE90-0x101AEEA0
		public DateTime? Birthday { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x10219680-0x102196A0 0x102196C0-0x102196D0
		public Gender? Gender { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x102196A0-0x102196B0 0x102196D0-0x102196F0
		public bool? TagForChildDirectedTreatment { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x102196B0-0x102196C0 0x10219700-0x10219710
		public Dictionary<string, string> Extras { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101F0010-0x101F0020 0x101F0450-0x101F0460
		public List<MediationExtras> MediationExtras { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101F0180-0x101F0190 0x102196F0-0x10219700
	
		// Nested types
		public class Builder // TypeDefIndex: 5966
		{
			// Fields
			[CompilerGenerated] // 0x10002030-0x10002050
			private List<string> _TestDevices_k__BackingField; // 0x08
			[CompilerGenerated] // 0x10002030-0x10002050
			private HashSet<string> _Keywords_k__BackingField; // 0x0C
			[CompilerGenerated] // 0x10002030-0x10002050
			private DateTime? _Birthday_k__BackingField; // 0x10
			[CompilerGenerated] // 0x10002030-0x10002050
			private Gender? _Gender_k__BackingField; // 0x20
			[CompilerGenerated] // 0x10002030-0x10002050
			private bool? _ChildDirectedTreatmentTag_k__BackingField; // 0x28
			[CompilerGenerated] // 0x10002030-0x10002050
			private Dictionary<string, string> _Extras_k__BackingField; // 0x2C
			[CompilerGenerated] // 0x10002030-0x10002050
			private List<MediationExtras> _MediationExtras_k__BackingField; // 0x30
	
			// Properties
			internal List<string> TestDevices { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101B4FF0-0x101B5000 0x101D22D0-0x101D22E0
			internal HashSet<string> Keywords { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101AE200-0x101AE210 0x101AEE90-0x101AEEA0
			internal DateTime? Birthday { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x10219680-0x102196A0 0x102196C0-0x102196D0
			internal Gender? Gender { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x102196A0-0x102196B0 0x102196D0-0x102196F0
			internal bool? ChildDirectedTreatmentTag { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x102196B0-0x102196C0 0x10219700-0x10219710
			internal Dictionary<string, string> Extras { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101F0010-0x101F0020 0x101F0450-0x101F0460
			internal List<MediationExtras> MediationExtras { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101F0180-0x101F0190 0x102196F0-0x10219700
	
			// Constructors
			public Builder(); // 0x1021AF80-0x1021B050
	
			// Methods
			public Builder AddKeyword(string keyword); // 0x1021AAA0-0x1021AAF0
			public Builder AddTestDevice(string deviceId); // 0x1021AB40-0x1021AB90
			public AdRequest Build(); // 0x1021ABE0-0x1021ACF0
			public Builder SetBirthday(DateTime birthday); // 0x1021ADE0-0x1021AE40
			public Builder SetGender(Gender gender); // 0x1021AE40-0x1021AEA0
			public Builder AddMediationExtras(MediationExtras extras); // 0x1021AAF0-0x1021AB40
			public Builder TagForChildDirectedTreatment(bool tagForChildDirectedTreatment); // 0x1021AEA0-0x1021AEF0
			public Builder AddExtra(string key, string value); // 0x1021AA50-0x1021AAA0
		}
	
		// Constructors
		private AdRequest(Builder builder); // 0x102195A0-0x10219680
	}

	public class AdSize // TypeDefIndex: 5968
	{
		// Fields
		private Type type; // 0x08
		private Orientation orientation; // 0x0C
		private int width; // 0x10
		private int height; // 0x14
		public static readonly AdSize Banner; // 0x00
		public static readonly AdSize MediumRectangle; // 0x04
		public static readonly AdSize IABBanner; // 0x08
		public static readonly AdSize Leaderboard; // 0x0C
		public static readonly AdSize SmartBanner; // 0x10
		public static readonly int FullWidth; // 0x14
	
		// Properties
		public int Width { get; } // 0x10219C50-0x10219CC0 
		public int Height { get; } // 0x101ADCB0-0x101ADCC0 
		public Type AdType { get; } // 0x101B4FF0-0x101B5000 
		internal Orientation Orientation { get; } // 0x101AE200-0x101AE210 
	
		// Nested types
		public enum Type // TypeDefIndex: 5969
		{
			Standard = 0,
			SmartBanner = 1,
			AnchoredAdaptive = 2
		}
	
		// Constructors
		public AdSize(int width, int height); // 0x10219BF0-0x10219C20
		private AdSize(int width, int height, Type type); // 0x10219C20-0x10219C50
		static AdSize(); // 0x10219A80-0x10219BF0
	
		// Methods
		private static AdSize CreateAnchoredAdaptiveAdSize(int width, Orientation orientation); // 0x10219710-0x10219770
		public static AdSize GetLandscapeAnchoredAdaptiveBannerAdSizeWithWidth(int width); // 0x10219940-0x102199E0
		public static AdSize GetPortraitAnchoredAdaptiveBannerAdSizeWithWidth(int width); // 0x102199E0-0x10219A80
		public static AdSize GetCurrentOrientationAnchoredAdaptiveBannerAdSizeWithWidth(int width); // 0x10219840-0x102198E0
		public override bool Equals(object obj); // 0x10219770-0x10219840
		public static bool operator ==(AdSize a, AdSize b); // 0x10219CC0-0x10219CF0
		public static bool operator !=(AdSize a, AdSize b); // 0x10219CF0-0x10219D20
		public override int GetHashCode(); // 0x102198E0-0x10219940
	}
}

public class AlignGame : Minigame // TypeDefIndex: 5315
{
	// Fields
	private Controller myController; // 0x28
	public FloatRange YRange; // 0x2C
	public AnimationCurve curve; // 0x30
	public LineRenderer centerline; // 0x34
	public LineRenderer[] guidelines; // 0x38
	public SpriteRenderer engine; // 0x3C
	public Collider2D col; // 0x40
	private float pulseTimer; // 0x44

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass10_0 // TypeDefIndex: 5316
	{
		// Fields
		public AlignGame __4__this; // 0x08
		public Color green; // 0x0C

		// Constructors
		public __c__DisplayClass10_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _LockEngine_b__0(float t); // 0x102B7F50-0x102B7FD0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _LockEngine_d__10 : IEnumerator<object> // TypeDefIndex: 5317
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public AlignGame __4__this; // 0x10
		private __c__DisplayClass10_0 __8__1; // 0x14
		private int _i_5__2; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _LockEngine_d__10(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102B7320-0x102B7640
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102B7640-0x102B7690
	}

	// Constructors
	public AlignGame(); // 0x1029E480-0x1029E500

	// Methods
	public override void Begin(PlayerTask task); // 0x1029D7C0-0x1029DB70
	public void Update(); // 0x1029DC70-0x1029E480
	[IteratorStateMachine] // 0x10030B80-0x10030BD0
	private IEnumerator LockEngine(); // 0x1029DC00-0x1029DC50
	public static float FromByte(byte b); // 0x1029DB70-0x1029DB90
	public static byte ToByte(float y); // 0x1029DC50-0x1029DC70
	public static bool IsSuccess(byte b); // 0x1029DB90-0x1029DC00
}

public class AlphaBlink : MonoBehaviour // TypeDefIndex: 5200
{
	// Fields
	public float Period; // 0x0C
	public float Ratio; // 0x10
	private SpriteRenderer rend; // 0x14
	private MeshRenderer mesh; // 0x18
	public FloatRange AlphaRange; // 0x1C
	public Color baseColor; // 0x20

	// Constructors
	public AlphaBlink(); // 0x1029E810-0x1029E8A0

	// Methods
	public void SetColor(Color c); // 0x1029E500-0x1029E560
	private void Start(); // 0x1029E560-0x1029E5B0
	public void Update(); // 0x1029E5B0-0x1029E810
}

public class AlphaPulse : MonoBehaviour // TypeDefIndex: 5201
{
	// Fields
	public float Offset; // 0x0C
	public float Duration; // 0x10
	private SpriteRenderer rend; // 0x14
	private MeshRenderer mesh; // 0x18
	public FloatRange AlphaRange; // 0x1C
	public Color baseColor; // 0x20

	// Constructors
	public AlphaPulse(); // 0x1029EBD0-0x1029EC60

	// Methods
	public void SetColor(Color c); // 0x1029E8A0-0x1029E900
	private void Start(); // 0x1029E900-0x1029E950
	public void Update(); // 0x1029E950-0x1029EBD0
}

namespace InnerNet
{
	public static class AlterGameTags // TypeDefIndex: 5945
	{
		// Fields
		public const byte ChangePrivacy = 1; // Metadata: 0x00244425
	}
}

public class AmbientSoundPlayer : MonoBehaviour // TypeDefIndex: 5814
{
	// Fields
	public AudioClip AmbientSound; // 0x0C
	public Collider2D[] HitAreas; // 0x10
	public float MaxVolume; // 0x14
	public float DistanceFallOff; // 0x18

	// Constructors
	public AmbientSoundPlayer(); // 0x1029F0D0-0x1029F100

	// Methods
	public void Start(); // 0x1029F000-0x1029F0D0
	private void Dynamics(AudioSource source, float dt); // 0x1029EC60-0x1029EF60
	public void OnDestroy(); // 0x1029EF60-0x1029F000
}

public class AmongUsClient : InnerNetClient // TypeDefIndex: 5534
{
	// Fields
	public static AmongUsClient Instance; // 0x00
	public int AutoOpenStore; // 0x70
	public GameModes GameMode; // 0x74
	public string OnlineScene; // 0x78
	public string MainMenuScene; // 0x7C
	public GameData GameDataPrefab; // 0x80
	public PlayerControl PlayerPrefab; // 0x84
	public List<ShipStatus> ShipPrefabs; // 0x88
	public int TutorialMapId; // 0x8C
	public float SpawnRadius; // 0x90
	public DiscoveryState discoverState; // 0x94
	public List<IDisconnectHandler> DisconnectHandlers; // 0x98
	public List<IGameListHandler> GameListHandlers; // 0x9C

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoStartGame_d__21 : IEnumerator<object> // TypeDefIndex: 5535
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public AmongUsClient __4__this; // 0x10
		private float _timer_5__2; // 0x14
		private bool _stopWaiting_5__3; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoStartGame_d__21(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102B6000-0x102B6AB0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102B6AB0-0x102B6B00
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoEndGame_d__24 : IEnumerator<object> // TypeDefIndex: 5536
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoEndGame_d__24(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102B5320-0x102B53F0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102B53F0-0x102B5440
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoBroadcastManager_d__31 : IEnumerator<object> // TypeDefIndex: 5537
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public AmongUsClient __4__this; // 0x10
		private int _lastPlayerCount_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoBroadcastManager_d__31(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102B4DB0-0x102B4FA0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102B4FA0-0x102B4FF0
	}

	// Constructors
	public AmongUsClient(); // 0x102A0F60-0x102A1010

	// Methods
	public void Awake(); // 0x1029F100-0x1029F220
	protected override byte[] GetConnectionData(); // 0x1029F900-0x1029FB40
	public void StartGame(); // 0x102A0F40-0x102A0F60
	public void ExitGame(DisconnectReasons reason = DisconnectReasons.ExitGame /* Metadata: 0x00243C31 */); // 0x1029F820-0x1029F900
	protected override void OnGetGameList(TotalGameData totalGames, List<GameListing> availableGames); // 0x102A0350-0x102A0460
	protected override void OnGameCreated(string gameIdString); // 0x101A2F90-0x101A2FA0
	protected override void OnWaitForHost(string gameIdString); // 0x102A0EA0-0x102A0F40
	protected override void OnStartGame(); // 0x102A0DD0-0x102A0EA0
	[IteratorStateMachine] // 0x1004A730-0x1004A780
	private IEnumerator CoStartGame(); // 0x1029F2C0-0x1029F310
	protected override void OnBecomeHost(); // 0x1029FB40-0x1029FD90
	protected override void OnGameEnd(GameOverReason gameOverReason, bool showAd); // 0x1029FDB0-0x102A02D0
	[IteratorStateMachine] // 0x1004A7D0-0x1004A820
	public IEnumerator CoEndGame(); // 0x1029F270-0x1029F2C0
	protected override void OnPlayerJoined(ClientData data); // 0x102A0750-0x102A07E0
	protected override void OnGameJoined(string gameIdString, ClientData data); // 0x102A02D0-0x102A0350
	protected override void OnPlayerLeft(ClientData data, DisconnectReasons reason); // 0x102A07E0-0x102A0DD0
	protected override void OnDisconnected(); // 0x1029FD90-0x1029FDB0
	protected override void OnPlayerChangedScene(ClientData client, string currentScene); // 0x102A0460-0x102A0750
	private void CreatePlayer(ClientData clientData); // 0x1029F310-0x1029F820
	[IteratorStateMachine] // 0x1004A870-0x1004A8C0
	private IEnumerator CoBroadcastManager(); // 0x1029F220-0x1029F270
}

[Serializable]
public struct AmongUsProduct // TypeDefIndex: 5592
{
	// Fields
	public string ProductId; // 0x00
	public HatBehaviour HatData; // 0x04
}

public class AnimationOffsetter : MonoBehaviour // TypeDefIndex: 5624
{
	// Fields
	public Animator anim; // 0x0C

	// Constructors
	public AnimationOffsetter(); // 0x101A68C0-0x101A68D0

	// Methods
	private void Start(); // 0x102A1010-0x102A1060
}

public struct Announcement // TypeDefIndex: 5527
{
	// Fields
	public DateTime DateFetched; // 0x00
	public uint Id; // 0x08
	public string AnnounceText; // 0x0C
}

public class AnnouncementPopUp : MonoBehaviour // TypeDefIndex: 5528
{
	// Fields
	public const uint AnnouncementVersion = 2; // Metadata: 0x00243C1D
	private UnityUdpClientConnection connection; // 0x0C
	private AnnounceState AskedForUpdate; // 0x10
	public TextRenderer AnnounceText; // 0x14
	private Announcement announcementUpdate; // 0x18

	// Nested types
	private enum AnnounceState // TypeDefIndex: 5529
	{
		Fetching = 0,
		Failed = 1,
		Success = 2,
		Cached = 3
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Init_d__7 : IEnumerator<object> // TypeDefIndex: 5530
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public AnnouncementPopUp __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Init_d__7(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102B6B00-0x102B6E80
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102B6E80-0x102B6ED0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Show_d__11 : IEnumerator<object> // TypeDefIndex: 5531
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public AnnouncementPopUp __4__this; // 0x10
		private float _timer_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Show_d__11(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102B7A90-0x102B7D30
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102B7D30-0x102B7D80
	}

	// Constructors
	public AnnouncementPopUp(); // 0x101A68C0-0x101A68D0

	// Methods
	private static bool IsSuccess(AnnounceState state); // 0x102A1550-0x102A1570
	[IteratorStateMachine] // 0x10049DC0-0x10049E10
	public IEnumerator Init(); // 0x102A1500-0x102A1550
	private void FixedUpdate(); // 0x102A14E0-0x102A1500
	private void Connection_Disconnected(object sender, DisconnectedEventArgs e); // 0x102A1440-0x102A14E0
	private void Connection_DataReceived(DataReceivedEventArgs e); // 0x102A1060-0x102A1440
	[IteratorStateMachine] // 0x10049E60-0x10049EB0
	public IEnumerator Show(); // 0x102A15A0-0x102A15F0
	public void Close(); // 0x101C3010-0x101C3040
	private void OnDestroy(); // 0x102A1570-0x102A15A0
}

namespace Steamworks
{
	[Serializable]
	public struct AppId_t : IEquatable<AppId_t>, IComparable<AppId_t> // TypeDefIndex: 4820
	{
		// Fields
		public static readonly AppId_t Invalid; // 0x00
		public uint m_AppId; // 0x00
	
		// Constructors
		public AppId_t(uint value); // 0x100900E0-0x100900F0
		static AppId_t(); // 0x1061E340-0x1061E370
	
		// Methods
		public override string ToString(); // 0x100900C0-0x100900E0
		public override bool Equals(object other); // 0x100C86E0-0x100C8880
		public override int GetHashCode(); // 0x100900A0-0x100900C0
		public static bool operator ==(AppId_t x, AppId_t y); // 0x1018AFC0-0x1018AFD0
		public static bool operator !=(AppId_t x, AppId_t y); // 0x1061E370-0x1061E430
		public static explicit operator AppId_t(uint value); // 0x1018AFD0-0x1018AFE0
		public static explicit operator uint(AppId_t that); // 0x1018AFD0-0x1018AFE0
		public bool Equals(AppId_t other); // 0x10090080-0x100900A0
		public int CompareTo(AppId_t other); // 0x1008FFF0-0x10090010
	}
}

namespace Discord
{
	public class ApplicationManager // TypeDefIndex: 4936
	{
		// Fields
		private IntPtr MethodsPtr; // 0x08
		private object MethodsStructure; // 0x0C
	
		// Properties
		private FFIMethods Methods { get; } // 0x1076DC40-0x1076DD10 
	
		// Nested types
		internal struct FFIEvents // TypeDefIndex: 4937
		{
		}
	
		internal struct FFIMethods // TypeDefIndex: 4938
		{
			// Fields
			internal ValidateOrExitMethod ValidateOrExit; // 0x00
			internal GetCurrentLocaleMethod GetCurrentLocale; // 0x04
			internal GetCurrentBranchMethod GetCurrentBranch; // 0x08
			internal GetOAuth2TokenMethod GetOAuth2Token; // 0x0C
			internal GetTicketMethod GetTicket; // 0x10
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void ValidateOrExitCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 4939; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void ValidateOrExitMethod(IntPtr methodsPtr, IntPtr callbackData, ValidateOrExitCallback callback); // TypeDefIndex: 4940; 0x10344040-0x103442D0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void GetCurrentLocaleMethod(IntPtr methodsPtr, StringBuilder locale); // TypeDefIndex: 4941; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void GetCurrentBranchMethod(IntPtr methodsPtr, StringBuilder branch); // TypeDefIndex: 4942; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void GetOAuth2TokenCallback(IntPtr ptr, Discord.Result result, ref OAuth2Token oauth2Token); // TypeDefIndex: 4943; 0x10344040-0x103442D0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void GetOAuth2TokenMethod(IntPtr methodsPtr, IntPtr callbackData, GetOAuth2TokenCallback callback); // TypeDefIndex: 4944; 0x10344040-0x103442D0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void GetTicketCallback(IntPtr ptr, Discord.Result result, ref string data); // TypeDefIndex: 4945; 0x10344040-0x103442D0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void GetTicketMethod(IntPtr methodsPtr, IntPtr callbackData, GetTicketCallback callback); // TypeDefIndex: 4946; 0x10344040-0x103442D0
		}
	
		public delegate void ValidateOrExitHandler(Discord.Result result); // TypeDefIndex: 4947; 0x1061F960-0x1061FAD0
	
		public delegate void GetOAuth2TokenHandler(Discord.Result result, ref OAuth2Token oauth2Token); // TypeDefIndex: 4948; 0x1018BF80-0x1018C200
	
		public delegate void GetTicketHandler(Discord.Result result, ref string data); // TypeDefIndex: 4949; 0x1018BF80-0x1018C200
	
		// Constructors
		internal ApplicationManager(IntPtr ptr, IntPtr eventsPtr, ref FFIEvents events); // 0x1076DB70-0x1076DC40
	
		// Methods
		private void InitEvents(IntPtr eventsPtr, ref FFIEvents events); // 0x1076D9E0-0x1076DA40
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void ValidateOrExitCallbackImpl(IntPtr ptr, Discord.Result result); // 0x1076DA40-0x1076DAD0
		public void ValidateOrExit(ValidateOrExitHandler callback); // 0x1076DAD0-0x1076DB70
		public string GetCurrentLocale(); // 0x1076D6D0-0x1076D770
		public string GetCurrentBranch(); // 0x1076D630-0x1076D6D0
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void GetOAuth2TokenCallbackImpl(IntPtr ptr, Discord.Result result, ref OAuth2Token oauth2Token); // 0x1076D770-0x1076D800
		public void GetOAuth2Token(GetOAuth2TokenHandler callback); // 0x1076D800-0x1076D8B0
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void GetTicketCallbackImpl(IntPtr ptr, Discord.Result result, ref string data); // 0x1076D8B0-0x1076D940
		public void GetTicket(GetTicketHandler callback); // 0x1076D940-0x1076D9E0
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1004C030-0x1004C050
	public struct AppProofOfPurchaseKeyResponse_t // TypeDefIndex: 4488
	{
		// Fields
		public const int k_iCallback = 1021; // Metadata: 0x002421A3
		public EResult m_eResult; // 0x00
		public uint m_nAppID; // 0x04
		public uint m_cchKeyLength; // 0x08
		public string m_rgchKey; // 0x0C
	}
}

public class ArrowBehaviour : MonoBehaviour // TypeDefIndex: 5879
{
	// Fields
	public Vector3 target; // 0x0C
	public float perc; // 0x18
	[HideInInspector] // 0x10002030-0x10002050
	public SpriteRenderer image; // 0x1C

	// Constructors
	public ArrowBehaviour(); // 0x102A1C50-0x102A1C70

	// Methods
	public void Awake(); // 0x102A15F0-0x102A1630
	public void Update(); // 0x102A1650-0x102A1C50
	private bool Between(float value, float min, float max); // 0x102A1630-0x102A1650
}

namespace LipingShare.LCLib.Asn1Processor
{
	internal class Asn1Node // TypeDefIndex: 3794
	{
		// Fields
		private byte tag; // 0x08
		private long dataOffset; // 0x10
		private long dataLength; // 0x18
		private long lengthFieldBytes; // 0x20
		private byte[] data; // 0x28
		private ArrayList childNodeList; // 0x2C
		private byte unusedBits; // 0x30
		private long deepness; // 0x38
		private string path; // 0x40
		private Asn1Node parentNode; // 0x44
		private bool requireRecalculatePar; // 0x48
		private bool isIndefiniteLength; // 0x49
		private bool parseEncapsulatedData; // 0x4A
	
		// Properties
		public byte Tag { get; } // 0x101CA160-0x101CA170 
		public byte MaskedTag { get; } // 0x109F2C50-0x109F2C60 
		public long ChildNodeCount { get; } // 0x109F2AA0-0x109F2AD0 
		public string TagName { get; } // 0x109F2C60-0x109F2CC0 
		public Asn1Node ParentNode { get; } // 0x101F8590-0x101F85A0 
		public long DataLength { get; } // 0x1028C180-0x1028C3D0 
		public byte[] Data { get; } // 0x109F2AD0-0x109F2C50 
		public long Deepness { get; } // 0x10429260-0x10429270 
		protected bool RequireRecalculatePar { set; } // 0x1031CF20-0x1031CF30
	
		// Constructors
		private Asn1Node(Asn1Node parentNode, long dataOffset); // 0x109F29C0-0x109F2A40
		public Asn1Node(); // 0x109F2A40-0x109F2AA0
	
		// Methods
		private void Init(); // 0x109F1D30-0x109F1DE0
		private string GetHexPrintingStr(Asn1Node startNode, string baseLine, string lStr, int lineLen); // 0x109F0330-0x109F05A0
		private string FormatLineString(string lStr, int indent, int lineLen, string msg); // 0x109EFBD0-0x109EFE40
		private string FormatLineHexString(string lStr, int indent, int lineLen, string msg); // 0x109EF9C0-0x109EFBD0
		public bool LoadData(Stream xdata); // 0x109F23C0-0x109F2490
		public bool SaveData(Stream xdata); // 0x109F2870-0x109F29C0
		public void ClearAll(); // 0x109EF8C0-0x109EF9C0
		public void AddChild(Asn1Node xdata); // 0x109EF880-0x109EF8C0
		public Asn1Node GetChildNode(int index); // 0x109F0050-0x109F0110
		public string GetText(Asn1Node startNode, int lineLen); // 0x109F0750-0x109F1D30
		public string GetDataStr(bool pureHexMode); // 0x109F0110-0x109F0330
		protected void RecalculateTreePar(); // 0x109F2490-0x109F2510
		protected static long ResetBranchDataLength(Asn1Node node); // 0x109F2510-0x109F2690
		protected static void ResetDataLengthFieldWidth(Asn1Node node); // 0x109F27B0-0x109F2870
		protected void ResetChildNodePar(Asn1Node xNode, long subOffset); // 0x109F2690-0x109F27B0
		protected string GetListStr(Asn1Node startNode, int lineLen); // 0x109F0650-0x109F0750
		protected string GetIndentStr(Asn1Node startNode); // 0x109F05A0-0x109F0650
		protected bool GeneralDecode(Stream xdata); // 0x109EFE40-0x109F0050
		protected bool ListDecode(Stream xdata); // 0x109F1F20-0x109F23C0
		protected bool InternalLoadData(Stream xdata); // 0x109F1DE0-0x109F1F20
	}

	internal class Asn1Parser // TypeDefIndex: 3795
	{
		// Fields
		private byte[] rawData; // 0x08
		private Asn1Node rootNode; // 0x0C
	
		// Properties
		public Asn1Node RootNode { get; } // 0x101AE200-0x101AE210 
	
		// Constructors
		public Asn1Parser(); // 0x109F3000-0x109F30A0
	
		// Methods
		public void LoadData(Stream stream); // 0x109F2E10-0x109F2F30
		public static string GetNodeTextHeader(int lineLen); // 0x109F2CC0-0x109F2D50
		public override string ToString(); // 0x109F2F30-0x109F3000
		public static string GetNodeText(Asn1Node node, int lineLen); // 0x109F2D50-0x109F2E10
	}

	internal class Asn1Util // TypeDefIndex: 3796
	{
		// Fields
		private static char[] hexDigits; // 0x00
	
		// Constructors
		static Asn1Util(); // 0x109F3BD0-0x109F3C20
	
		// Methods
		public static string FormatString(string inStr, int lineLen, int groupLen); // 0x109F3440-0x109F35E0
		public static string GenStr(int len, char xch); // 0x109F35E0-0x109F3670
		public static long BytesToLong(byte[] bytes); // 0x109F30E0-0x109F3150
		public static string BytesToString(byte[] bytes); // 0x109F3150-0x109F3230
		public static string ToHexString(byte[] bytes); // 0x109F3AB0-0x109F3BD0
		public static int BytePrecision(ulong value); // 0x109F30A0-0x109F30E0
		public static int DERLengthEncode(Stream xdata, ulong length); // 0x109F3230-0x109F3350
		public static long DerLengthDecode(Stream bt, ref bool isIndefiniteLength); // 0x109F3350-0x109F3440
		public static string GetTagName(byte tag); // 0x109F3670-0x109F3AB0
	}
}

public class AspectPosition : MonoBehaviour // TypeDefIndex: 5384
{
	// Fields
	public Camera parentCam; // 0x0C
	private const int LeftFlag = 1; // Metadata: 0x00243B51
	private const int RightFlag = 2; // Metadata: 0x00243B55
	private const int BottomFlag = 4; // Metadata: 0x00243B59
	private const int TopFlag = 8; // Metadata: 0x00243B5D
	public Vector3 DistanceFromEdge; // 0x10
	public EdgeAlignments Alignment; // 0x1C

	// Nested types
	public enum EdgeAlignments // TypeDefIndex: 5385
	{
		Left = 1,
		Right = 2,
		Bottom = 4,
		LeftBottom = 5,
		RightBottom = 6,
		Top = 8,
		LeftTop = 9,
		RightTop = 10
	}

	// Constructors
	public AspectPosition(); // 0x101A68C0-0x101A68D0

	// Methods
	private void OnEnable(); // 0x102A2200-0x102A2260
	private void OnDisable(); // 0x102A21A0-0x102A2200
	public void AdjustPosition(); // 0x102A1C70-0x102A1E80
	public void AdjustPosition(float aspect); // 0x102A1E80-0x102A1FB0
	public static Vector3 ComputePosition(EdgeAlignments alignment, Vector3 relativePos); // 0x102A1FB0-0x102A2110
	public static Vector3 ComputePosition(EdgeAlignments alignment, Vector3 relativePos, float cHeight, float aspect); // 0x102A2110-0x102A21A0
}

public class AspectSize : MonoBehaviour // TypeDefIndex: 5386
{
	// Fields
	public Sprite Background; // 0x0C
	public SpriteRenderer Renderer; // 0x10
	public float PercentWidth; // 0x14

	// Constructors
	public AspectSize(); // 0x102A2510-0x102A2530

	// Methods
	public void OnEnable(); // 0x102A2370-0x102A2510
	public static float CalculateSize(Vector3 parentPos, Sprite sprite); // 0x102A2260-0x102A2370
}

namespace Steamworks
{
	[CallbackIdentity] // 0x10004E20-0x10004E40
	public struct AssociateWithClanResult_t // TypeDefIndex: 4518
	{
		// Fields
		public const int k_iCallback = 210; // Metadata: 0x0024221B
		public EResult m_eResult; // 0x00
	}
}

public class Asteroid : PoolableBehavior // TypeDefIndex: 5889
{
	// Fields
	public Sprite[] AsteroidImages; // 0x10
	public Sprite[] BrokenImages; // 0x14
	private int imgIdx; // 0x18
	public FloatRange MoveSpeed; // 0x1C
	public FloatRange RotateSpeed; // 0x20
	[CompilerGenerated] // 0x10002030-0x10002050
	private Vector3 _TargetPosition_k__BackingField; // 0x24
	public SpriteRenderer Explosion; // 0x30

	// Properties
	public Vector3 TargetPosition { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ internal set; } // 0x102A2BF0-0x102A2C10 0x102A2C10-0x102A2C30

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoBreakApart_d__12 : IEnumerator<object> // TypeDefIndex: 5890
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public Asteroid __4__this; // 0x10
		private SpriteRenderer _rend_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoBreakApart_d__12(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102B4AF0-0x102B4D60
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102B4D60-0x102B4DB0
	}

	// Constructors
	public Asteroid(); // 0x102A2B60-0x102A2BF0

	// Methods
	public void FixedUpdate(); // 0x102A2580-0x102A28C0
	public override void Reset(); // 0x102A28C0-0x102A2A40
	[IteratorStateMachine] // 0x1001F8F0-0x1001F940
	public IEnumerator CoBreakApart(); // 0x102A2530-0x102A2580
	[CompilerGenerated] // 0x10002030-0x10002050
	private void _CoBreakApart_b__12_0(float t); // 0x102A2A40-0x102A2AD0
	[CompilerGenerated] // 0x10002030-0x10002050
	private void _CoBreakApart_b__12_1(float t); // 0x102A2AD0-0x102A2B60
}

namespace MS.Internal.Xml.XPath
{
	internal abstract class AstNode // TypeDefIndex: 1741
	{
		// Properties
		public abstract AstType Type { get; }
		public abstract XPathResultType ReturnType { get; }
	
		// Nested types
		public enum AstType // TypeDefIndex: 1742
		{
			Axis = 0,
			Operator = 1,
			Filter = 2,
			ConstantOperand = 3,
			Function = 4,
			Group = 5,
			Root = 6,
			Variable = 7,
			Error = 8
		}
	
		// Constructors
		protected AstNode(); // 0x101A2CD0-0x101A2CE0
	}

	internal sealed class AttributeQuery : BaseAxisQuery // TypeDefIndex: 1743
	{
		// Fields
		private bool onAttribute; // 0x2C
	
		// Constructors
		public AttributeQuery(Query qyParent, string Name, string Prefix, XPathNodeType Type); // 0x1054EA60-0x1054EA70
		private AttributeQuery(AttributeQuery other); // 0x106B93C0-0x106B93F0
	
		// Methods
		public override void Reset(); // 0x106B9380-0x106B93C0
		public override XPathNavigator Advance(); // 0x106B9250-0x106B9320
		public override XPathNodeIterator Clone(); // 0x106B9320-0x106B9380
	}
}

namespace Steamworks
{
	public enum AudioPlayback_Status // TypeDefIndex: 4690
	{
		AudioPlayback_Undefined = 0,
		AudioPlayback_Playing = 1,
		AudioPlayback_Paused = 2,
		AudioPlayback_Idle = 3
	}
}

public class AuthGame : Minigame // TypeDefIndex: 5347
{
	// Fields
	public TextRenderer TargetText; // 0x28
	public TextRenderer NumberText; // 0x2C
	public TextRenderer OtherStatusText; // 0x30
	public int number; // 0x34
	public string numString; // 0x38
	private bool animating; // 0x3C
	private HqHudSystemType system; // 0x40
	public SpriteRenderer OurLight; // 0x44
	public SpriteRenderer TheirLight; // 0x48
	public SpriteRenderer TimeBar; // 0x4C
	public AudioClip ButtonSound; // 0x50
	public AudioClip AcceptSound; // 0x54
	public AudioClip RejectSound; // 0x58
	private int OtherConsoleId; // 0x5C
	private bool evenColor; // 0x60

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Animate_d__21 : IEnumerator<object> // TypeDefIndex: 5348
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public AuthGame __4__this; // 0x10
		private WaitForSeconds _wait_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Animate_d__21(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102B4550-0x102B4AA0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102B4AA0-0x102B4AF0
	}

	// Constructors
	public AuthGame(); // 0x102A3430-0x102A3480

	// Methods
	public override void Begin(PlayerTask task); // 0x102A2C80-0x102A2D70
	public override void Close(); // 0x102A2F50-0x102A2FC0
	public void Update(); // 0x102A3020-0x102A3430
	public void ClickNumber(int i); // 0x102A2E40-0x102A2F50
	public void ClearEntry(); // 0x102A2D70-0x102A2E40
	public void Enter(); // 0x102A2FC0-0x102A3020
	[IteratorStateMachine] // 0x10033200-0x10033250
	private IEnumerator Animate(); // 0x102A2C30-0x102A2C80
}

public class AutoDoorsSystemType : ISystemType, IActivatable, ISystemTimer, IDoorSystem // TypeDefIndex: 5760
{
	// Fields
	private uint dirtyBits; // 0x08

	// Properties
	public bool IsActive { get; } // 0x102A3A10-0x102A3AE0 

	// Nested types
	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5761
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<PlainDoor, bool> __9__2_0; // 0x04

		// Constructors
		static __c(); // 0x102B8000-0x102B8050
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _get_IsActive_b__2_0(PlainDoor b); // 0x102B7F30-0x102B7F50
	}

	// Constructors
	public AutoDoorsSystemType(); // 0x101A2CD0-0x101A2CE0

	// Methods
	public bool Detoriorate(float deltaTime); // 0x102A3690-0x102A3760
	public void RepairDamage(PlayerControl player, byte amount); // 0x101A2F90-0x101A2FA0
	public void Serialize(MessageWriter writer, bool initialState); // 0x102A3810-0x102A3970
	public void Deserialize(MessageReader reader, bool initialState); // 0x102A3540-0x102A3690
	public void SetDoor(AutoOpenDoor door, bool open); // 0x102A3970-0x102A3A10
	public void CloseDoorsOfType(SystemTypes room); // 0x102A3480-0x102A3540
	public float GetTimer(SystemTypes room); // 0x102A3760-0x102A3810
}

public class AutoOpenDoor : PlainDoor // TypeDefIndex: 5762
{
	// Fields
	private const float ClosedDuration = 10f; // Metadata: 0x00243D31
	public const float CooldownDuration = 30f; // Metadata: 0x00243D35
	public float ClosedTimer; // 0x34
	public float CooldownTimer; // 0x38

	// Constructors
	public AutoOpenDoor(); // 0x102A3C10-0x102A3C20

	// Methods
	public override void SetDoorway(bool open); // 0x102A3BE0-0x102A3C10
	public override bool DoUpdate(float dt); // 0x102A3AE0-0x102A3BE0
}

public class AutoParallaxController : MonoBehaviour // TypeDefIndex: 5187
{
	// Fields
	public ParallaxChild[] Children; // 0x0C
	public float XScale; // 0x10
	public float YScale; // 0x14

	// Constructors
	public AutoParallaxController(); // 0x102A3E60-0x102A3E90

	// Methods
	public void Start(); // 0x102A3C20-0x102A3C60
	public void Update(); // 0x102A3C60-0x102A3E60
}

namespace Steamworks
{
	[CallbackIdentity] // 0x100022D0-0x100022F0
	public struct AvatarImageLoaded_t // TypeDefIndex: 4494
	{
		// Fields
		public const int k_iCallback = 334; // Metadata: 0x002421BB
		public CSteamID m_steamID; // 0x00
		public int m_iImage; // 0x08
		public int m_iWide; // 0x0C
		public int m_iTall; // 0x10
	}
}

namespace MS.Internal.Xml.XPath
{
	internal class Axis : AstNode // TypeDefIndex: 1744
	{
		// Fields
		private AxisType axisType; // 0x08
		private AstNode input; // 0x0C
		private string prefix; // 0x10
		private string name; // 0x14
		private XPathNodeType nodeType; // 0x18
		protected bool abbrAxis; // 0x1C
		private string urn; // 0x20
	
		// Properties
		public override AstType Type { get; } // 0x101D1BE0-0x101D1BF0 
		public override XPathResultType ReturnType { get; } // 0x1045B170-0x1045B180 
		public AstNode Input { get; } // 0x101AE200-0x101AE210 
		public string Prefix { get; } // 0x101BCD80-0x101BCD90 
		public string Name { get; } // 0x101ADCB0-0x101ADCC0 
		public XPathNodeType NodeType { get; } // 0x101ADCC0-0x101ADCD0 
		public AxisType TypeOfAxis { get; } // 0x101B4FF0-0x101B5000 
		public bool AbbrAxis { get; } // 0x1028C0C0-0x1028C0D0 
	
		// Nested types
		public enum AxisType // TypeDefIndex: 1745
		{
			Ancestor = 0,
			AncestorOrSelf = 1,
			Attribute = 2,
			Child = 3,
			Descendant = 4,
			DescendantOrSelf = 5,
			Following = 6,
			FollowingSibling = 7,
			Namespace = 8,
			Parent = 9,
			Preceding = 10,
			PrecedingSibling = 11,
			Self = 12,
			None = 13
		}
	
		// Constructors
		public Axis(AxisType axisType, AstNode input, string prefix, string name, XPathNodeType nodetype); // 0x106B93F0-0x106B9450
		public Axis(AxisType axisType, AstNode input); // 0x106B9450-0x106B94E0
	}
}

public class BalloonBehaviour : MonoBehaviour // TypeDefIndex: 5188
{
	// Fields
	public Vector2 Origin; // 0x0C
	public float PeriodX; // 0x14
	public float PeriodY; // 0x18
	public float MagnitudeX; // 0x1C
	public float MagnitudeY; // 0x20

	// Constructors
	public BalloonBehaviour(); // 0x102A4000-0x102A4040

	// Methods
	public void Update(); // 0x102A3E90-0x102A4000
}

public class BanButton : MonoBehaviour // TypeDefIndex: 5387
{
	// Fields
	[CompilerGenerated] // 0x10002030-0x10002050
	private BanMenu _Parent_k__BackingField; // 0x0C
	public TextRenderer NameText; // 0x10
	public SpriteRenderer Background; // 0x14
	public int TargetClientId; // 0x18
	public int numVotes; // 0x1C

	// Properties
	public BanMenu Parent { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101AE200-0x101AE210 0x101AEE90-0x101AEEA0

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoSetVotes_d__12 : IEnumerator<object> // TypeDefIndex: 5388
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public int oldNum; // 0x10
		public int newNum; // 0x14
		public BanButton __4__this; // 0x18
		private float _end_5__2; // 0x1C
		private float _timer_5__3; // 0x20

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoSetVotes_d__12(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102B5D30-0x102B5EC0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102B5EC0-0x102B5F10
	}

	// Constructors
	public BanButton(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Start(); // 0x102A41B0-0x102A41D0
	public void Select(); // 0x102A40A0-0x102A4130
	public void Unselect(); // 0x102A41D0-0x102A4240
	public void SetVotes(int newVotes); // 0x102A4130-0x102A41B0
	[IteratorStateMachine] // 0x1003BED0-0x1003BF20
	private IEnumerator CoSetVotes(int oldNum, int newNum); // 0x102A4040-0x102A40A0
}

public class BanMenu : MonoBehaviour // TypeDefIndex: 5389
{
	// Fields
	public BanButton BanButtonPrefab; // 0x0C
	public SpriteRenderer Background; // 0x10
	public SpriteRenderer BanButton; // 0x14
	public SpriteRenderer KickButton; // 0x18
	public GameObject ContentParent; // 0x1C
	public int selected; // 0x20
	[HideInInspector] // 0x10002030-0x10002050
	public List<BanButton> allButtons; // 0x24

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass8_0 // TypeDefIndex: 5390
	{
		// Fields
		public ClientData client; // 0x08

		// Constructors
		public __c__DisplayClass8_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _Update_b__1(BanButton b); // 0x102B7FD0-0x102B8000
	}

	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5391
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<int, bool> __9__8_0; // 0x04

		// Constructors
		static __c(); // 0x102B8050-0x102B80A0
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _Update_b__8_0(int c); // 0x102B7F20-0x102B7F30
	}

	// Constructors
	public BanMenu(); // 0x102A5070-0x102A50D0

	// Methods
	public void SetVisible(bool show); // 0x102A4520-0x102A47B0
	private void Update(); // 0x102A4D60-0x102A5070
	public void Show(); // 0x102A47B0-0x102A4D60
	public void Hide(); // 0x102A4240-0x102A4330
	public void Select(int client); // 0x102A43F0-0x102A4520
	public void Kick(bool ban); // 0x102A4330-0x102A43F0
}

namespace GoogleMobileAds.Api
{
	public class BannerView // TypeDefIndex: 5972
	{
		// Fields
		private IBannerClient client; // 0x08
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdLoaded; // 0x0C
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<AdFailedToLoadEventArgs> OnAdFailedToLoad; // 0x10
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdOpening; // 0x14
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdClosed; // 0x18
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdLeavingApplication; // 0x1C
	
		// Events
		public event EventHandler<EventArgs> OnAdLoaded {
			add; // 0x1021A6D0-0x1021A750
			remove; // 0x1021A950-0x1021A9D0
		}
		public event EventHandler<AdFailedToLoadEventArgs> OnAdFailedToLoad {
			add; // 0x1021A5D0-0x1021A650
			remove; // 0x1021A850-0x1021A8D0
		}
		public event EventHandler<EventArgs> OnAdOpening {
			add; // 0x1021A750-0x1021A7D0
			remove; // 0x1021A9D0-0x1021AA50
		}
		public event EventHandler<EventArgs> OnAdClosed {
			add; // 0x1021A550-0x1021A5D0
			remove; // 0x1021A7D0-0x1021A850
		}
		public event EventHandler<EventArgs> OnAdLeavingApplication {
			add; // 0x1021A650-0x1021A6D0
			remove; // 0x1021A8D0-0x1021A950
		}
	
		// Constructors
		public BannerView(string adUnitId, AdSize adSize, AdPosition position); // 0x1021A3D0-0x1021A490
		public BannerView(string adUnitId, AdSize adSize, int x, int y); // 0x1021A490-0x1021A550
	
		// Methods
		public void LoadAd(AdRequest request); // 0x1021A000-0x1021A050
		public void Hide(); // 0x10219FA0-0x1021A000
		public void Show(); // 0x1021A240-0x1021A290
		public void Destroy(); // 0x10219EB0-0x10219F00
		public float GetHeightInPixels(); // 0x10219F00-0x10219F50
		public float GetWidthInPixels(); // 0x10219F50-0x10219FA0
		public void SetPosition(AdPosition adPosition); // 0x1021A190-0x1021A240
		public void SetPosition(int x, int y); // 0x1021A0F0-0x1021A190
		private void ConfigureBannerEvents(); // 0x10219D50-0x10219EB0
		public string MediationAdapterClassName(); // 0x1021A050-0x1021A0F0
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _ConfigureBannerEvents_b__26_0(object sender, EventArgs args); // 0x1021A290-0x1021A2D0
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _ConfigureBannerEvents_b__26_1(object sender, AdFailedToLoadEventArgs args); // 0x1021A2D0-0x1021A310
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _ConfigureBannerEvents_b__26_2(object sender, EventArgs args); // 0x1021A310-0x1021A350
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _ConfigureBannerEvents_b__26_3(object sender, EventArgs args); // 0x1021A350-0x1021A390
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _ConfigureBannerEvents_b__26_4(object sender, EventArgs args); // 0x1021A390-0x1021A3D0
	}
}

namespace MS.Internal.Xml.XPath
{
	internal abstract class BaseAxisQuery : Query // TypeDefIndex: 1746
	{
		// Fields
		internal Query qyInput; // 0x0C
		private bool nameTest; // 0x10
		private string name; // 0x14
		private string prefix; // 0x18
		private string nsUri; // 0x1C
		private XPathNodeType typeTest; // 0x20
		protected XPathNavigator currentNode; // 0x24
		protected int position; // 0x28
	
		// Properties
		protected string Name { get; } // 0x101ADCB0-0x101ADCC0 
		protected string Namespace { get; } // 0x101F85C0-0x101F85D0 
		protected bool NameTest { get; } // 0x10201510-0x10201520 
		protected XPathNodeType TypeTest { get; } // 0x101BCCB0-0x101BCCC0 
		public override int CurrentPosition { get; } // 0x101CB980-0x101CB990 
		public override XPathNavigator Current { get; } // 0x101BA650-0x101BA660 
		public override XPathResultType StaticType { get; } // 0x1045B170-0x1045B180 
	
		// Constructors
		protected BaseAxisQuery(Query qyInput); // 0x106B95C0-0x106B9630
		protected BaseAxisQuery(Query qyInput, string name, string prefix, XPathNodeType typeTest); // 0x106B96A0-0x106B9740
		protected BaseAxisQuery(BaseAxisQuery other); // 0x106B9630-0x106B96A0
	
		// Methods
		public override void Reset(); // 0x106B9530-0x106B9570
		public override void SetXsltContext(XsltContext context); // 0x106B9570-0x106B95C0
		public virtual bool matches(XPathNavigator e); // 0x106B9740-0x106B9830
		public override object Evaluate(XPathNodeIterator nodeIterator); // 0x106B94E0-0x106B9530
	}
}

public static class BlockedWords // TypeDefIndex: 5432
{
	// Fields
	public static readonly HashSet<char> SymbolChars; // 0x00
	private static readonly LetterTree SkipList; // 0x04
	public static readonly string[] AllWords; // 0x08

	// Nested types
	private class LengthCompare : IComparer<string> // TypeDefIndex: 5433
	{
		// Fields
		public static readonly LengthCompare Instance; // 0x00

		// Constructors
		public LengthCompare(); // 0x101A2CD0-0x101A2CE0
		static LengthCompare(); // 0x102B3790-0x102B37E0

		// Methods
		public int Compare(string x, string y); // 0x102B3750-0x102B3790
	}

	// Constructors
	static BlockedWords(); // 0x102A52F0-0x102AF010

	// Methods
	public static bool ContainsWord(string chatText); // 0x102A51C0-0x102A5250
	public static string CensorWords(string chatText); // 0x102A50D0-0x102A51C0
	private static bool IsLetter(char letter); // 0x102A5250-0x102A52F0
}

public class BoardPassGame : Minigame // TypeDefIndex: 5629
{
	// Fields
	private static Color[] BgColors; // 0x00
	public SpriteRenderer renderer; // 0x28
	public SpriteRenderer pass; // 0x2C
	public Sprite passBack; // 0x30
	public TextRenderer NameText; // 0x34
	public SpriteRenderer ImageBg; // 0x38
	public SpriteRenderer Image; // 0x3C
	public Sprite[] Photos; // 0x40
	public PassiveButton pullButton; // 0x44
	public PassiveButton flipButton; // 0x48
	public SpriteRenderer Scanner; // 0x4C
	public Sprite ScannerAccept; // 0x50
	public Sprite ScannerScanning; // 0x54
	public Sprite ScannerWaiting; // 0x58
	public Collider2D Sensor; // 0x5C
	public Collider2D BarCode; // 0x60
	public AudioClip slideinSound; // 0x64
	public AudioClip flipSound; // 0x68
	public AudioClip scanStartSound; // 0x6C
	public AudioClip scanSound; // 0x70
	private Coroutine blinky; // 0x74
	private bool grabbed; // 0x78

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoRunBlinky_d__23 : IEnumerator<object> // TypeDefIndex: 5630
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public BoardPassGame __4__this; // 0x10
		private int _i_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoRunBlinky_d__23(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102B5930-0x102B5BC0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102B5BC0-0x102B5C10
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoPullPass_d__25 : IEnumerator<object> // TypeDefIndex: 5631
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public BoardPassGame __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoPullPass_d__25(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102B5700-0x102B58E0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102B58E0-0x102B5930
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoFlipPass_d__29 : IEnumerator<object> // TypeDefIndex: 5632
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public BoardPassGame __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoFlipPass_d__29(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102B5440-0x102B56B0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102B56B0-0x102B5700
	}

	// Constructors
	public BoardPassGame(); // 0x101ACA10-0x101ACA20
	static BoardPassGame(); // 0x102AF8A0-0x102AFA80

	// Methods
	public void Start(); // 0x102AF210-0x102AF450
	public void Update(); // 0x102AF630-0x102AF8A0
	[IteratorStateMachine] // 0x1000C0D0-0x1000C120
	private IEnumerator CoRunBlinky(); // 0x102AF0B0-0x102AF100
	public void PullPass(); // 0x102AF1B0-0x102AF210
	[IteratorStateMachine] // 0x1000C1A0-0x1000C1F0
	private IEnumerator CoPullPass(); // 0x102AF060-0x102AF0B0
	public void Grab(); // 0x102AF160-0x102AF1B0
	public void FlipPass(); // 0x102AF100-0x102AF160
	[IteratorStateMachine] // 0x1000C260-0x1000C2B0
	private IEnumerator CoFlipPass(); // 0x102AF010-0x102AF060
	[CompilerGenerated] // 0x10002030-0x10002050
	private void _CoFlipPass_b__29_0(float t); // 0x102AF450-0x102AF540
	[CompilerGenerated] // 0x10002030-0x10002050
	private void _CoFlipPass_b__29_1(float t); // 0x102AF540-0x102AF630
}

namespace MS.Internal.Xml.XPath
{
	internal sealed class BooleanExpr : ValueQuery // TypeDefIndex: 1747
	{
		// Fields
		private Query opnd1; // 0x0C
		private Query opnd2; // 0x10
		private bool isOr; // 0x14
	
		// Properties
		public override XPathResultType StaticType { get; } // 0x102EC630-0x102EC640 
	
		// Constructors
		public BooleanExpr(Operator.Op op, Query opnd1, Query opnd2); // 0x106B99B0-0x106B9AA0
		private BooleanExpr(BooleanExpr other); // 0x106B9AA0-0x106B9AF0
	
		// Methods
		public override void SetXsltContext(XsltContext context); // 0x106B9960-0x106B99B0
		public override object Evaluate(XPathNodeIterator nodeIterator); // 0x106B98B0-0x106B9960
		public override XPathNodeIterator Clone(); // 0x106B9830-0x106B98B0
	}

	internal sealed class BooleanFunctions : ValueQuery // TypeDefIndex: 1748
	{
		// Fields
		private Query arg; // 0x0C
		private Function.FunctionType funcType; // 0x10
	
		// Properties
		public override XPathResultType StaticType { get; } // 0x102EC630-0x102EC640 
	
		// Constructors
		public BooleanFunctions(Function.FunctionType funcType, Query arg); // 0x106BA040-0x106BA070
		private BooleanFunctions(BooleanFunctions other); // 0x106BA000-0x106BA040
	
		// Methods
		public override void SetXsltContext(XsltContext context); // 0x106B9FD0-0x106BA000
		public override object Evaluate(XPathNodeIterator nodeIterator); // 0x106B9B60-0x106B9E80
		internal static bool toBoolean(double number); // 0x106BA1D0-0x106BA250
		internal static bool toBoolean(string str); // 0x106BA1B0-0x106BA1D0
		internal bool toBoolean(XPathNodeIterator nodeIterator); // 0x106BA070-0x106BA1B0
		private bool Not(XPathNodeIterator nodeIterator); // 0x106B9F50-0x106B9FD0
		private bool Lang(XPathNodeIterator nodeIterator); // 0x106B9E80-0x106B9F50
		public override XPathNodeIterator Clone(); // 0x106B9AF0-0x106B9B60
	}
}

public class BoolOption : OptionBehaviour // TypeDefIndex: 5732
{
	// Fields
	public TextRenderer TitleText; // 0x14
	public TextRenderer ValueText; // 0x18
	public bool Value; // 0x1C
	private bool oldValue; // 0x1D

	// Constructors
	public BoolOption(); // 0x102AFD20-0x102AFD40

	// Methods
	public void OnEnable(); // 0x102AFBB0-0x102AFD20
	private void FixedUpdate(); // 0x102AFAD0-0x102AFB60
	public void Increase(); // 0x102AFB60-0x102AFBB0
	public void Decrease(); // 0x102AFA80-0x102AFAD0
	public override bool GetBool(); // 0x1028C0C0-0x1028C0D0
}

public class BoolRange // TypeDefIndex: 5236
{
	// Constructors
	public BoolRange(); // 0x101A2CD0-0x101A2CE0

	// Methods
	public static bool Next(float p = 0.5f /* Metadata: 0x00243AFA */); // 0x102AFD40-0x102AFD70
}

public class BoughtAdsBuyable : UnityEngine.Object, IBuyable // TypeDefIndex: 5586
{
	// Properties
	public string ProdId { get; } // 0x102AFDC0-0x102AFDF0 

	// Constructors
	public BoughtAdsBuyable(); // 0x102AFD70-0x102AFDC0
}

namespace Hazel.Udp
{
	public class BroadcastPacket // TypeDefIndex: 4187
	{
		// Fields
		public string Data; // 0x08
		public DateTime ReceiveTime; // 0x10
		public IPEndPoint Sender; // 0x18
	
		// Constructors
		public BroadcastPacket(string data, IPEndPoint sender); // 0x109C8CD0-0x109C8D40
	
		// Methods
		public string GetAddress(); // 0x109C8CA0-0x109C8CD0
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000C180-0x1000C1A0
	public struct BroadcastUploadStart_t // TypeDefIndex: 4663
	{
		// Fields
		public const int k_iCallback = 4604; // Metadata: 0x0024245F
	}

	[CallbackIdentity] // 0x1000C1F0-0x1000C210
	public struct BroadcastUploadStop_t // TypeDefIndex: 4664
	{
		// Fields
		public const int k_iCallback = 4605; // Metadata: 0x00242463
		public EBroadcastUploadResult m_eResult; // 0x00
	}
}

public class ButtonBehavior : MonoBehaviour // TypeDefIndex: 5393
{
	// Fields
	public bool OnUp; // 0x0C
	public bool OnDown; // 0x0D
	public bool Repeat; // 0x0E
	public Button.ButtonClickedEvent OnClick; // 0x10
	private Controller myController; // 0x14
	private Collider2D[] colliders; // 0x18
	private float downTime; // 0x1C

	// Constructors
	public ButtonBehavior(); // 0x102AFF60-0x102AFFD0

	// Methods
	public void OnEnable(); // 0x102AFDF0-0x102AFE50
	public void Update(); // 0x102AFE50-0x102AFF60
}

public class ButtonDownHandler : MonoBehaviour // TypeDefIndex: 5453
{
	// Fields
	private Coroutine downState; // 0x0C
	public SpriteRenderer Target; // 0x10
	public Sprite UpSprite; // 0x14
	public Sprite DownSprite; // 0x18

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoRunDown_d__7 : IEnumerator<object> // TypeDefIndex: 5454
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public ButtonDownHandler __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoRunDown_d__7(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102B5C10-0x102B5CE0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102B5CE0-0x102B5D30
	}

	// Constructors
	public ButtonDownHandler(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Start(); // 0x102B00C0-0x102B0140
	public void OnDisable(); // 0x102B0020-0x102B0060
	private void StartDown(); // 0x102B0060-0x102B00C0
	[IteratorStateMachine] // 0x10040CB0-0x10040D00
	private IEnumerator CoRunDown(); // 0x102AFFD0-0x102B0020
}

public class ButtonRolloverHandler : MonoBehaviour // TypeDefIndex: 5455
{
	// Fields
	public SpriteRenderer Target; // 0x0C
	public Color OverColor; // 0x10
	public Color OutColor; // 0x20
	public AudioClip HoverSound; // 0x30

	// Constructors
	public ButtonRolloverHandler(); // 0x102B0320-0x102B0360

	// Methods
	public void Start(); // 0x102B0270-0x102B0320
	public void DoMouseOver(); // 0x102B01A0-0x102B0270
	public void DoMouseOut(); // 0x102B0170-0x102B01A0
	public void ChangeOutColor(Color color); // 0x102B0140-0x102B0170
}

namespace MS.Internal.Xml.XPath
{
	internal abstract class CacheAxisQuery : BaseAxisQuery // TypeDefIndex: 1749
	{
		// Fields
		protected List<XPathNavigator> outputBuffer; // 0x2C
	
		// Properties
		public override XPathNavigator Current { get; } // 0x106BA460-0x106BA4C0 
		public override int CurrentPosition { get; } // 0x101B4FF0-0x101B5000 
		public override int Count { get; } // 0x106BA420-0x106BA460 
		public override QueryProps Properties { get; } // 0x1038CEB0-0x1038CEC0 
	
		// Constructors
		public CacheAxisQuery(Query qyInput, string name, string prefix, XPathNodeType typeTest); // 0x106BA340-0x106BA3B0
		protected CacheAxisQuery(CacheAxisQuery other); // 0x106BA3B0-0x106BA420
	
		// Methods
		public override void Reset(); // 0x1025EF80-0x1025EF90
		public override object Evaluate(XPathNodeIterator context); // 0x106BA2C0-0x106BA340
		public override XPathNavigator Advance(); // 0x106BA250-0x106BA2C0
	}

	internal sealed class CacheChildrenQuery : ChildrenQuery // TypeDefIndex: 1750
	{
		// Fields
		private XPathNavigator nextInput; // 0x30
		private ClonableStack<XPathNavigator> elementStk; // 0x34
		private ClonableStack<int> positionStk; // 0x38
		private bool needInput; // 0x3C
	
		// Constructors
		public CacheChildrenQuery(Query qyInput, string name, string prefix, XPathNodeType type); // 0x106BA940-0x106BAA10
		private CacheChildrenQuery(CacheChildrenQuery other); // 0x106BAA10-0x106BAAB0
	
		// Methods
		public override void Reset(); // 0x106BA860-0x106BA940
		public override XPathNavigator Advance(); // 0x106BA4C0-0x106BA630
		private bool DecideNextNode(); // 0x106BA700-0x106BA800
		private XPathNavigator GetNextInput(); // 0x106BA800-0x106BA860
		public override XPathNodeIterator Clone(); // 0x106BA630-0x106BA700
	}

	internal abstract class CacheOutputQuery : Query // TypeDefIndex: 1751
	{
		// Fields
		internal Query input; // 0x0C
		protected List<XPathNavigator> outputBuffer; // 0x10
	
		// Properties
		public override XPathNavigator Current { get; } // 0x106BAD00-0x106BAD60 
		public override XPathResultType StaticType { get; } // 0x1045B170-0x1045B180 
		public override int CurrentPosition { get; } // 0x101B4FF0-0x101B5000 
		public override int Count { get; } // 0x106BACC0-0x106BAD00 
		public override QueryProps Properties { get; } // 0x1038CEB0-0x1038CEC0 
	
		// Constructors
		public CacheOutputQuery(Query input); // 0x106BAC50-0x106BACC0
		protected CacheOutputQuery(CacheOutputQuery other); // 0x106BABC0-0x106BAC50
	
		// Methods
		public override void Reset(); // 0x1025EF80-0x1025EF90
		public override void SetXsltContext(XsltContext context); // 0x106BAB90-0x106BABC0
		public override object Evaluate(XPathNodeIterator context); // 0x106BAB20-0x106BAB90
		public override XPathNavigator Advance(); // 0x106BAAB0-0x106BAB20
	}
}

namespace Steamworks
{
	public sealed class Callback<T> : IDisposable // TypeDefIndex: 4250
	{
		// Fields
		private CCallbackBaseVTable m_CallbackBaseVTable;
		private IntPtr m_pVTable;
		private CCallbackBase m_CCallbackBase;
		private GCHandle m_pCCallbackBase;
		[CompilerGenerated] // 0x10002030-0x10002050
		private DispatchDelegate m_Func;
		private bool m_bGameServer;
		private readonly int m_size;
		private bool m_bDisposed;
	
		// Events
		private event DispatchDelegate m_Func {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
	
		// Nested types
		public delegate void DispatchDelegate(T param); // TypeDefIndex: 4251; 0x00000000-0x00000000
	
		// Constructors
		public Callback(DispatchDelegate func, bool bGameServer = false /* Metadata: 0x00242135 */);
	
		// Methods
		public static Callback<T> Create(DispatchDelegate func);
		public static Callback<T> CreateGameServer(DispatchDelegate func);
		~Callback();
		public void Dispose();
		public void Register(DispatchDelegate func);
		public void Unregister();
		public void SetGameserverFlag();
		private void OnRunCallback(IntPtr pvParam);
		private void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall);
		private int OnGetCallbackSizeBytes();
		private void BuildCCallbackBase();
	}

	public static class CallbackDispatcher // TypeDefIndex: 4249
	{
		// Methods
		public static void ExceptionHandler(Exception e); // 0x101D2120-0x101D2170
	}

	internal class CallbackIdentities // TypeDefIndex: 4259
	{
		// Constructors
		public CallbackIdentities(); // 0x101A2CD0-0x101A2CE0
	
		// Methods
		public static int GetCallbackIdentity(Type callbackStruct); // 0x101D2170-0x101D22B0
	}

	[AttributeUsage] // 0x10023A10-0x10023A30
	internal class CallbackIdentityAttribute : Attribute // TypeDefIndex: 4260
	{
		// Fields
		[CompilerGenerated] // 0x10002030-0x10002050
		private int _Identity_k__BackingField; // 0x08
	
		// Properties
		public int Identity { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101B4FF0-0x101B5000 0x101D22D0-0x101D22E0
	
		// Constructors
		public CallbackIdentityAttribute(int callbackNum); // 0x101D22B0-0x101D22D0
	}

	public struct CallbackMsg_t // TypeDefIndex: 4755
	{
		// Fields
		public int m_hSteamUser; // 0x00
		public int m_iCallback; // 0x04
		public IntPtr m_pubParam; // 0x08
		public int m_cubParam; // 0x0C
	}

	public sealed class CallResult<T> : IDisposable // TypeDefIndex: 4252
	{
		// Fields
		private CCallbackBaseVTable m_CallbackBaseVTable;
		private IntPtr m_pVTable;
		private CCallbackBase m_CCallbackBase;
		private GCHandle m_pCCallbackBase;
		[CompilerGenerated] // 0x10002030-0x10002050
		private APIDispatchDelegate m_Func;
		private SteamAPICall_t m_hAPICall;
		private readonly int m_size;
		private bool m_bDisposed;
	
		// Properties
		public SteamAPICall_t Handle { get; }
	
		// Events
		private event APIDispatchDelegate m_Func {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
	
		// Nested types
		public delegate void APIDispatchDelegate(T param, bool bIOFailure); // TypeDefIndex: 4253; 0x00000000-0x00000000
	
		// Constructors
		public CallResult(APIDispatchDelegate func = null);
	
		// Methods
		public static CallResult<T> Create(APIDispatchDelegate func = null);
		~CallResult();
		public void Dispose();
		public void Set(SteamAPICall_t hAPICall, APIDispatchDelegate func = null);
		public bool IsActive();
		public void Cancel();
		public void SetGameserverFlag();
		private void OnRunCallback(IntPtr pvParam);
		private void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall_);
		private int OnGetCallbackSizeBytes();
		private void BuildCCallbackBase();
	}
}

public class CanisterBehaviour : MonoBehaviour // TypeDefIndex: 5636
{
	// Fields
	public Collider2D Hitbox; // 0x0C
	public HorizontalSpriteGauge Gauge; // 0x10

	// Constructors
	public CanisterBehaviour(); // 0x101A68C0-0x101A68D0
}

public class CardSlideGame : Minigame // TypeDefIndex: 5183
{
	// Fields
	private Color gray; // 0x28
	private Color green; // 0x38
	private TaskStages State; // 0x48
	private Controller myController; // 0x4C
	private FloatRange XRange; // 0x50
	public FloatRange AcceptedTime; // 0x54
	public Collider2D col; // 0x58
	public SpriteRenderer redLight; // 0x5C
	public SpriteRenderer greenLight; // 0x60
	public TextRenderer StatusText; // 0x64
	public AudioClip AcceptSound; // 0x68
	public AudioClip DenySound; // 0x6C
	public AudioClip[] CardMove; // 0x70
	public AudioClip WalletOut; // 0x74
	public float dragTime; // 0x78
	private bool moving; // 0x7C

	// Nested types
	private enum TaskStages // TypeDefIndex: 5184
	{
		Before = 0,
		Animating = 1,
		Inserted = 2,
		After = 3
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _PutCardBack_d__19 : IEnumerator<object> // TypeDefIndex: 5185
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public CardSlideGame __4__this; // 0x10
		private Vector3 _pos_5__2; // 0x14
		private Vector3 _targ_5__3; // 0x20
		private float _time_5__4; // 0x2C

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _PutCardBack_d__19(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102B7690-0x102B7A40
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102B7A40-0x102B7A90
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _InsertCard_d__20 : IEnumerator<object> // TypeDefIndex: 5186
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public CardSlideGame __4__this; // 0x10
		private Vector3 _pos_5__2; // 0x14
		private Vector3 _targ_5__3; // 0x20
		private float _time_5__4; // 0x2C

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _InsertCard_d__20(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102B6ED0-0x102B72D0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102B72D0-0x102B7320
	}

	// Constructors
	public CardSlideGame(); // 0x102B0CC0-0x102B0DE0

	// Methods
	public override void Begin(PlayerTask task); // 0x102B0360-0x102B03E0
	public void Update(); // 0x102B0480-0x102B0CC0
	[IteratorStateMachine] // 0x1001DA50-0x1001DAA0
	private IEnumerator PutCardBack(); // 0x102B0430-0x102B0480
	[IteratorStateMachine] // 0x1001DB00-0x1001DB50
	private IEnumerator InsertCard(); // 0x102B03E0-0x102B0430
}

namespace Steamworks
{
	internal class CCallbackBase // TypeDefIndex: 4254
	{
		// Fields
		public const byte k_ECallbackFlagsRegistered = 1; // Metadata: 0x00242136
		public const byte k_ECallbackFlagsGameServer = 2; // Metadata: 0x00242137
		public IntPtr m_vfptr; // 0x08
		public byte m_nCallbackFlags; // 0x0C
		public int m_iCallback; // 0x10
	
		// Constructors
		public CCallbackBase(); // 0x101A2CD0-0x101A2CE0
	}

	internal class CCallbackBaseVTable // TypeDefIndex: 4255
	{
		// Fields
		private const CallingConvention cc = CallingConvention.StdCall; // Metadata: 0x00242138
		[NonSerialized]
		public RunCRDel m_RunCallResult; // 0x08
		[NonSerialized]
		public RunCBDel m_RunCallback; // 0x0C
		[NonSerialized]
		public GetCallbackSizeBytesDel m_GetCallbackSizeBytes; // 0x10
	
		// Nested types
		[UnmanagedFunctionPointer] // 0x1000C5E0-0x1000C600
		public delegate void RunCBDel(IntPtr pvParam); // TypeDefIndex: 4256; 0x1061F960-0x1061FAD0
	
		[UnmanagedFunctionPointer] // 0x1000C5E0-0x1000C600
		public delegate void RunCRDel(IntPtr pvParam, bool bIOFailure, ulong hSteamAPICall); // TypeDefIndex: 4257; 0x10624E20-0x106250C0
	
		[UnmanagedFunctionPointer] // 0x1000C5E0-0x1000C600
		public delegate int GetCallbackSizeBytesDel(); // TypeDefIndex: 4258; 0x10620A60-0x10620C20
	
		// Constructors
		public CCallbackBaseVTable(); // 0x101A2CD0-0x101A2CE0
	}

	[Serializable]
	public struct CGameID : IEquatable<CGameID>, IComparable<CGameID> // TypeDefIndex: 4794
	{
		// Fields
		public ulong m_GameID; // 0x00
	
		// Nested types
		public enum EGameIDType // TypeDefIndex: 4795
		{
			k_EGameIDTypeApp = 0,
			k_EGameIDTypeGameMod = 1,
			k_EGameIDTypeShortcut = 2,
			k_EGameIDTypeP2P = 3
		}
	
		// Constructors
		public CGameID(ulong GameID); // 0x10073670-0x10073690
		public CGameID(AppId_t nAppID); // 0x100C8BE0-0x100C8C10
		public CGameID(AppId_t nAppID, uint nModID); // 0x100C8B90-0x100C8BE0
	
		// Methods
		public bool IsSteamApp(); // 0x100C8970-0x100C8990
		public bool IsMod(); // 0x100C8910-0x100C8930
		public bool IsShortcut(); // 0x100C8950-0x100C8970
		public bool IsP2PFile(); // 0x100C8930-0x100C8950
		public AppId_t AppID(); // 0x100C8880-0x100C8890
		public EGameIDType Type(); // 0x100C8B70-0x100C8B90
		public uint ModID(); // 0x100C8AD0-0x100C8AF0
		public bool IsValid(); // 0x100C8990-0x100C8AD0
		public void Reset(); // 0x100C8AF0-0x100C8B10
		public void Set(ulong GameID); // 0x10073670-0x10073690
		private void SetAppID(AppId_t other); // 0x100C8B10-0x100C8B20
		private void SetType(EGameIDType other); // 0x100C8B40-0x100C8B70
		private void SetModID(uint other); // 0x100C8B20-0x100C8B40
		public override string ToString(); // 0x10073650-0x10073670
		public override bool Equals(object other); // 0x100C8890-0x100C8910
		public override int GetHashCode(); // 0x10073630-0x10073650
		public static bool operator ==(CGameID x, CGameID y); // 0x10187800-0x10187820
		public static bool operator !=(CGameID x, CGameID y); // 0x101D22E0-0x101D2410
		public static explicit operator CGameID(ulong value); // 0x10187820-0x10187830
		public static explicit operator ulong(CGameID that); // 0x10187820-0x10187830
		public bool Equals(CGameID other); // 0x10073610-0x10073630
		public int CompareTo(CGameID other); // 0x10073550-0x10073570
	}
}

public class ChainBehaviour : MonoBehaviour // TypeDefIndex: 5757
{
	// Fields
	public FloatRange SwingRange; // 0x0C
	public float SwingPeriod; // 0x10
	public float swingTime; // 0x14
	private Vector3 vec; // 0x18

	// Constructors
	public ChainBehaviour(); // 0x102B0FC0-0x102B1030

	// Methods
	public void Awake(); // 0x102B0DE0-0x102B0EC0
	public void Update(); // 0x102B0EC0-0x102B0FC0
}

internal class ChatBubble : PoolableBehavior // TypeDefIndex: 5394
{
	// Fields
	public SpriteRenderer ChatFace; // 0x10
	public SpriteRenderer Xmark; // 0x14
	public SpriteRenderer votedMark; // 0x18
	public TextRenderer NameText; // 0x1C
	public TextRenderer TextArea; // 0x20
	public SpriteRenderer Background; // 0x24

	// Constructors
	public ChatBubble(); // 0x101ACA10-0x101ACA20

	// Methods
	public void SetLeft(); // 0x102B10A0-0x102B1410
	public void SetNotification(); // 0x102B1500-0x102B18B0
	public void SetRight(); // 0x102B18B0-0x102B1C30
	public void SetName(string playerName, bool isDead, bool voted, Color color); // 0x102B1410-0x102B1500
	public override void Reset(); // 0x102B1030-0x102B10A0
}

public class ChatController : MonoBehaviour // TypeDefIndex: 5396
{
	// Fields
	public ObjectPoolBehavior chatBubPool; // 0x0C
	public Transform TypingArea; // 0x10
	public SpriteRenderer TextBubble; // 0x14
	public TextBox TextArea; // 0x18
	public TextRenderer CharCount; // 0x1C
	public int MaxChat; // 0x20
	public Scroller scroller; // 0x24
	public GameObject Content; // 0x28
	public SpriteRenderer BackgroundImage; // 0x2C
	public SpriteRenderer ChatNotifyDot; // 0x30
	public TextRenderer SendRateMessage; // 0x34
	public Vector3 SourcePos; // 0x38
	public Vector3 TargetPos; // 0x44
	private const float MaxChatSendRate = 3f; // Metadata: 0x00243B85
	private float TimeSinceLastMessage; // 0x50
	public AudioClip MessageSound; // 0x54
	private bool animating; // 0x58
	private Coroutine notificationRoutine; // 0x5C
	public BanMenu BanButton; // 0x60

	// Properties
	public bool IsOpen { get; } // 0x102B3720-0x102B3750 

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoOpen_d__24 : IEnumerator<object> // TypeDefIndex: 5397
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public ChatController __4__this; // 0x10
		private Vector3 _scale_5__2; // 0x14
		private float _targetScale_5__3; // 0x20
		private float _timer_5__4; // 0x24

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoOpen_d__24(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10257030-0x10257430
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10257430-0x10257480
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoClose_d__25 : IEnumerator<object> // TypeDefIndex: 5398
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public ChatController __4__this; // 0x10
		private Vector3 _scale_5__2; // 0x14
		private float _targetScale_5__3; // 0x20
		private float _timer_5__4; // 0x24

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoClose_d__25(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10256670-0x10256A70
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10256A70-0x10256AC0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _BounceDot_d__33 : IEnumerator<object> // TypeDefIndex: 5399
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public ChatController __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _BounceDot_d__33(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10256230-0x10256350
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10256350-0x102563A0
	}

	// Constructors
	public ChatController(); // 0x102B3660-0x102B3720

	// Methods
	public void Toggle(); // 0x102B30F0-0x102B32C0
	public void SetVisible(bool visible); // 0x102B3040-0x102B30F0
	public void ForceClosed(); // 0x102B2D30-0x102B2D70
	[IteratorStateMachine] // 0x1003C350-0x1003C3A0
	public IEnumerator CoOpen(); // 0x102B2CD0-0x102B2D30
	[IteratorStateMachine] // 0x1003C3F0-0x1003C440
	public IEnumerator CoClose(); // 0x102B2C70-0x102B2CD0
	public void SetPosition(MeetingHud meeting); // 0x102B2EE0-0x102B3040
	public void UpdateCharCount(); // 0x102B32C0-0x102B3550
	private void Update(); // 0x102B3550-0x102B3660
	public void SendChat(); // 0x102B2DA0-0x102B2EE0
	public void AddChatNote(GameData.PlayerInfo srcPlayer, ChatNoteTypes noteType); // 0x102B1C30-0x102B21C0
	public void AddChat(PlayerControl sourcePlayer, string chatText); // 0x102B21C0-0x102B29C0
	private void AlignAllBubbles(); // 0x102B29C0-0x102B2C10
	[IteratorStateMachine] // 0x1003C510-0x1003C560
	private IEnumerator BounceDot(); // 0x102B2C10-0x102B2C70
	public void GiveFocus(); // 0x102B2D70-0x102B2DA0
}

public class ChatLanguageButton : PoolableBehavior // TypeDefIndex: 5538
{
	// Fields
	public TextRenderer Text; // 0x10
	public PassiveButton Button; // 0x14
	public SpriteRenderer Background; // 0x18

	// Constructors
	public ChatLanguageButton(); // 0x101ACA10-0x101ACA20

	// Methods
	public void SetSelected(bool selected); // 0x10243AC0-0x10243B50
	public override void Reset(); // 0x10243A60-0x10243AC0
}

public class ChatLanguageMenu : MonoBehaviour // TypeDefIndex: 5539
{
	// Fields
	public CreateOptionsPicker Parent; // 0x0C
	public ObjectPoolBehavior ButtonPool; // 0x10

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass2_0 // TypeDefIndex: 5540
	{
		// Fields
		public uint lang; // 0x08
		public ChatLanguageMenu __4__this; // 0x0C

		// Constructors
		public __c__DisplayClass2_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _OnEnable_b__0(); // 0x10259DE0-0x10259EA0
	}

	// Constructors
	public ChatLanguageMenu(); // 0x101A68C0-0x101A68D0

	// Methods
	public void OnEnable(); // 0x10243C40-0x102440C0
	public void OnDisable(); // 0x10243C10-0x10243C40
	public void Open(); // 0x101C32B0-0x101C32E0
	public void ChooseOption(uint language); // 0x10243B50-0x10243C10
	public void Close(); // 0x101C3010-0x101C3040
}

public class ChatLanguageSet // TypeDefIndex: 5494
{
	// Fields
	public static readonly ChatLanguageSet Instance; // 0x00
	public readonly Dictionary<string, uint> Languages; // 0x08

	// Constructors
	public ChatLanguageSet(); // 0x10244960-0x10244A90
	static ChatLanguageSet(); // 0x10244800-0x10244960

	// Methods
	public void Load(); // 0x10244240-0x102444E0
	public void Save(); // 0x102444E0-0x10244800
	public string GetString(uint flag); // 0x102440C0-0x10244240
}

public enum ChatNoteTypes // TypeDefIndex: 5395
{
	DidVote = 0
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000C060-0x1000C080
	public struct CheckFileSignature_t // TypeDefIndex: 4661
	{
		// Fields
		public const int k_iCallback = 705; // Metadata: 0x00242457
		public ECheckFileSignature m_eCheckFileSignature; // 0x00
	}
}

namespace MS.Internal.Xml.XPath
{
	internal class ChildrenQuery : BaseAxisQuery // TypeDefIndex: 1752
	{
		// Fields
		private XPathNodeIterator iterator; // 0x2C
	
		// Constructors
		public ChildrenQuery(Query qyInput, string name, string prefix, XPathNodeType type); // 0x106BB000-0x106BB060
		protected ChildrenQuery(ChildrenQuery other); // 0x106BAF50-0x106BB000
	
		// Methods
		public override void Reset(); // 0x106BAED0-0x106BAF50
		public override XPathNavigator Advance(); // 0x106BAD60-0x106BAE80
		public override XPathNodeIterator Clone(); // 0x106BAE80-0x106BAED0
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x10002360-0x10002380
	public struct ClanOfficerListResponse_t // TypeDefIndex: 4495
	{
		// Fields
		public const int k_iCallback = 335; // Metadata: 0x002421BF
		public CSteamID m_steamIDClan; // 0x00
		public int m_cOfficers; // 0x08
		public byte m_bSuccess; // 0x0C
	}
}

namespace InnerNet
{
	[Serializable]
	public class ClientData // TypeDefIndex: 5901
	{
		// Fields
		public int Id; // 0x08
		public bool InScene; // 0x0C
		public bool IsReady; // 0x0D
		public PlayerControl Character; // 0x10
	
		// Constructors
		public ClientData(int id); // 0x101B54B0-0x101B54D0
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000A5E0-0x1000A600
	public struct ClientGameServerDeny_t // TypeDefIndex: 4636
	{
		// Fields
		public const int k_iCallback = 113; // Metadata: 0x002423F3
		public uint m_uAppID; // 0x00
		public uint m_unGameServerIP; // 0x04
		public ushort m_usGameServerPort; // 0x08
		public ushort m_bSecure; // 0x0A
		public uint m_uReason; // 0x0C
	}
}

public static class ClipboardHelper // TypeDefIndex: 5481
{
	// Fields
	private const uint CF_TEXT = 1; // Metadata: 0x00243BC2

	// Methods
	private static extern bool IsClipboardFormatAvailable(uint format); // 0x102450A0-0x10245110
	private static extern bool OpenClipboard(IntPtr hWndNewOwner); // 0x10245110-0x10245170
	private static extern bool CloseClipboard(); // 0x10244A90-0x10244AF0
	private static extern IntPtr GetClipboardData(uint format); // 0x10244AF0-0x10244B50
	private static extern IntPtr GlobalLock(IntPtr hMem); // 0x10244F80-0x10244FE0
	private static extern bool GlobalUnlock(IntPtr hMem); // 0x10245040-0x102450A0
	private static extern int GlobalSize(IntPtr hMem); // 0x10244FE0-0x10245040
	public static string GetClipboardString(); // 0x10244B50-0x10244F80
}

namespace MS.Internal.Xml.XPath
{
	internal sealed class ClonableStack<T> : List<T> // TypeDefIndex: 1753
	{
		// Constructors
		public ClonableStack();
		private ClonableStack(IEnumerable<T> collection);
	
		// Methods
		public void Push(T value);
		public T Pop();
		public T Peek();
		public ClonableStack<T> Clone();
	}
}

public class CloudGenerator : MonoBehaviour // TypeDefIndex: 5345
{
	// Fields
	public Sprite[] CloudImages; // 0x0C
	private Vector2[] ExtentCache; // 0x10
	public int NumClouds; // 0x14
	public float Length; // 0x18
	public float Width; // 0x1C
	public Vector2 Direction; // 0x20
	private Vector2 NormDir; // 0x28
	private Vector2 Tangent; // 0x30
	private float tanLen; // 0x38
	public FloatRange Rates; // 0x3C
	public FloatRange Sizes; // 0x40
	public bool Depth; // 0x44
	public float MaxDepth; // 0x48
	public float ParallaxOffset; // 0x4C
	public float ParallaxStrength; // 0x50
	[HideInInspector] // 0x10002030-0x10002050
	private Cloud[] clouds; // 0x54
	[HideInInspector] // 0x10002030-0x10002050
	private Vector3[] verts; // 0x58
	[HideInInspector] // 0x10002030-0x10002050
	private Mesh mesh; // 0x5C

	// Nested types
	private struct Cloud // TypeDefIndex: 5346
	{
		// Fields
		public int CloudIdx; // 0x00
		public float Rate; // 0x04
		public float Size; // 0x08
		public float FlipX; // 0x0C
		public float PositionX; // 0x10
		public float PositionY; // 0x14
		public float PositionZ; // 0x18
	}

	// Constructors
	public CloudGenerator(); // 0x10246110-0x10246280

	// Methods
	public void Start(); // 0x102457E0-0x10246110
	private void FixedUpdate(); // 0x10245170-0x102456A0
	public void SetDirection(Vector2 dir); // 0x102456D0-0x102457E0
	private float OrthoDistance(float pointx, float pointy); // 0x102456A0-0x102456D0
}

public class ColorChip : MonoBehaviour // TypeDefIndex: 5559
{
	// Fields
	public HatParent Inner; // 0x0C
	public GameObject InUseForeground; // 0x10
	public PassiveButton Button; // 0x14
	public object Tag; // 0x18

	// Constructors
	public ColorChip(); // 0x101A68C0-0x101A68D0
}

namespace MS.Internal.Xml.XPath
{
	internal class CompiledXpathExpr : XPathExpression // TypeDefIndex: 1754
	{
		// Fields
		private Query query; // 0x08
		private string expr; // 0x0C
		private bool needContext; // 0x10
	
		// Properties
		internal Query QueryTree { get; } // 0x106BB190-0x106BB1E0 
	
		// Nested types
		private class UndefinedXsltContext : XsltContext // TypeDefIndex: 1755
		{
			// Fields
			private IXmlNamespaceResolver nsResolver; // 0x28
	
			// Properties
			public override string DefaultNamespace { get; } // 0x106C6F80-0x106C6FB0 
			public override bool Whitespace { get; } // 0x101A1190-0x101A1520 
	
			// Constructors
			public UndefinedXsltContext(IXmlNamespaceResolver nsResolver); // 0x106C6F60-0x106C6F80
	
			// Methods
			public override string LookupNamespace(string prefix); // 0x106C6DF0-0x106C6EE0
			public override IXsltContextVariable ResolveVariable(string prefix, string name); // 0x106C6F20-0x106C6F60
			public override IXsltContextFunction ResolveFunction(string prefix, string name, XPathResultType[] ArgTypes); // 0x106C6EE0-0x106C6F20
			public override bool PreserveWhitespace(XPathNavigator node); // 0x101A1190-0x101A1520
		}
	
		// Constructors
		internal CompiledXpathExpr(Query query, string expression, bool needContext); // 0x106BB160-0x106BB190
	
		// Methods
		public override void SetContext(XmlNamespaceManager nsManager); // 0x106BB060-0x106BB080
		public override void SetContext(IXmlNamespaceResolver nsResolver); // 0x106BB080-0x106BB160
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x10004E70-0x10004E90
	public struct ComputeNewPlayerCompatibilityResult_t // TypeDefIndex: 4519
	{
		// Fields
		public const int k_iCallback = 211; // Metadata: 0x0024221F
		public EResult m_eResult; // 0x00
		public int m_cPlayersThatDontLikeCandidate; // 0x04
		public int m_cPlayersThatCandidateDoesntLike; // 0x08
		public int m_cClanPlayersThatDontLikeCandidate; // 0x0C
		public CSteamID m_SteamIDCandidate; // 0x10
	}
}

public class ConditionalHide : MonoBehaviour // TypeDefIndex: 5194
{
	// Fields
	public RuntimePlatform[] HideForPlatforms; // 0x0C

	// Constructors
	public ConditionalHide(); // 0x10246300-0x10246370

	// Methods
	private void Awake(); // 0x10246280-0x10246300
}

public class ConditionalStore : MonoBehaviour // TypeDefIndex: 5195
{
	// Constructors
	public ConditionalStore(); // 0x101A68C0-0x101A68D0

	// Methods
	private void Awake(); // 0x101A2F90-0x101A2FA0
}

namespace Hazel
{
	public abstract class Connection : IDisposable // TypeDefIndex: 4162
	{
		// Fields
		[CompilerGenerated] // 0x10002030-0x10002050
		private Action<DataReceivedEventArgs> DataReceived; // 0x08
		public int TestLagMs; // 0x0C
		public int TestDropRate; // 0x10
		protected int testDropCount; // 0x14
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<DisconnectedEventArgs> Disconnected; // 0x18
		[CompilerGenerated] // 0x10002030-0x10002050
		private IPEndPoint _EndPoint_k__BackingField; // 0x1C
		[CompilerGenerated] // 0x10002030-0x10002050
		private IPMode _IPMode_k__BackingField; // 0x20
		[CompilerGenerated] // 0x10002030-0x10002050
		private ConnectionStatistics _Statistics_k__BackingField; // 0x24
		protected ConnectionState _state; // 0x28
	
		// Properties
		public IPEndPoint EndPoint { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ protected set; } // 0x101F85C0-0x101F85D0 0x10219590-0x102195A0
		public IPMode IPMode { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ protected set; } // 0x101BCCB0-0x101BCCC0 0x101F0630-0x101F0640
		public ConnectionStatistics Statistics { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ protected set; } // 0x101BA650-0x101BA660 0x101BA660-0x101BA670
		public ConnectionState State { get; protected set; } // 0x101CB980-0x101CB990 0x109C95D0-0x109C9600
	
		// Events
		public event Action<DataReceivedEventArgs> DataReceived {
			add; // 0x109C93D0-0x109C9450
			remove; // 0x109C94D0-0x109C9550
		}
		public event EventHandler<DisconnectedEventArgs> Disconnected {
			add; // 0x109C9450-0x109C94D0
			remove; // 0x109C9550-0x109C95D0
		}
	
		// Constructors
		protected Connection(); // 0x109C9360-0x109C93D0
	
		// Methods
		protected virtual void SetState(ConnectionState state); // 0x101A2F90-0x101A2FA0
		public abstract void Send(MessageWriter msg);
		public abstract void ConnectAsync(byte[] bytes = null);
		protected void InvokeDataReceived(MessageReader msg, SendOption sendOption); // 0x109C9100-0x109C9230
		protected void InvokeDisconnected(string e, MessageReader reader); // 0x109C9230-0x109C9360
		public abstract void Disconnect(string reason, MessageWriter writer = null);
		public void Dispose(); // 0x109C9090-0x109C9100
		protected virtual void Dispose(bool disposing); // 0x109C9070-0x109C9090
	}

	public abstract class ConnectionListener : IDisposable // TypeDefIndex: 4163
	{
		// Fields
		[CompilerGenerated] // 0x10002030-0x10002050
		private Action<NewConnectionEventArgs> NewConnection; // 0x08
	
		// Events
		public event Action<NewConnectionEventArgs> NewConnection {
			add; // 0x109C8DA0-0x109C8E20
			remove; // 0x109C8E20-0x109C8EA0
		}
	
		// Constructors
		protected ConnectionListener(); // 0x101A2CD0-0x101A2CE0
	
		// Methods
		public abstract void Start();
		protected void InvokeNewConnection(MessageReader msg, Connection connection); // 0x109C8D40-0x109C8DA0
		public void Dispose(); // 0x10328400-0x10328420
		protected virtual void Dispose(bool disposing); // 0x1025EF80-0x1025EF90
	}

	public enum ConnectionState // TypeDefIndex: 4164
	{
		NotConnected = 0,
		Connecting = 1,
		Connected = 2
	}

	public class ConnectionStatistics // TypeDefIndex: 4180
	{
		// Fields
		private const int ExpectedMTU = 1200; // Metadata: 0x00240155
		private int fragmentableMessagesSent; // 0x08
		private int unreliableMessagesSent; // 0x0C
		private int reliableMessagesSent; // 0x10
		private int fragmentedMessagesSent; // 0x14
		private int acknowledgementMessagesSent; // 0x18
		private int helloMessagesSent; // 0x1C
		private long dataBytesSent; // 0x20
		private long totalBytesSent; // 0x28
		private int unreliableMessagesReceived; // 0x30
		private int reliableMessagesReceived; // 0x34
		private int fragmentedMessagesReceived; // 0x38
		private int acknowledgementMessagesReceived; // 0x3C
		private int pingMessagesReceived; // 0x40
		private int helloMessagesReceived; // 0x44
		private long dataBytesReceived; // 0x48
		private long totalBytesReceived; // 0x50
		private int messagesResent; // 0x58
	
		// Properties
		public long TotalBytesSent { get; } // 0x109C9050-0x109C9070 
		public long TotalBytesReceived { get; } // 0x109C9030-0x109C9050 
		public int MessagesResent { get; } // 0x102CD570-0x102CD580 
	
		// Constructors
		public ConnectionStatistics(); // 0x101A2CD0-0x101A2CE0
	
		// Methods
		internal void LogUnreliableSend(int dataLength, int totalLength); // 0x109C8FD0-0x109C9030
		internal void LogReliableSend(int dataLength, int totalLength); // 0x109C8F30-0x109C8F90
		internal void LogUnreliableReceive(int dataLength, int totalLength); // 0x109C8F90-0x109C8FD0
		internal void LogReliableReceive(int dataLength, int totalLength); // 0x109C8EF0-0x109C8F30
		internal void LogHelloReceive(int totalLength); // 0x109C8EA0-0x109C8ED0
		internal void LogMessageResent(); // 0x109C8ED0-0x109C8EF0
	}
}

public class Console : MonoBehaviour, IUsable // TypeDefIndex: 5758
{
	// Fields
	public float usableDistance; // 0x0C
	public int ConsoleId; // 0x10
	public bool onlyFromBelow; // 0x14
	public bool onlySameRoom; // 0x00
	public bool GhostsIgnored; // 0x00
	public bool AllowImpostor; // 0x00
	public SystemTypes Room; // 0x00
	public TaskTypes[] TaskTypes; // 0x1C
	public TaskSet[] ValidTasks; // 0x20
	public SpriteRenderer Image; // 0x24

	// Properties
	public Sprite UseIcon { get; } // 0x101D1BE0-0x101D1BF0 
	public float UsableDistance { get; } // 0x1022CEB0-0x1022CEC0 
	public float PercentCool { get; } // 0x101AE1E0-0x101AE1F0 

	// Constructors
	public Console(); // 0x10246B80-0x10246BA0

	// Methods
	public void SetOutline(bool on, bool mainTarget); // 0x102467C0-0x10246900
	public float CanUse(GameData.PlayerInfo pc, out bool canUse, out bool couldUse); // 0x10246370-0x10246590
	private bool InRoom(Vector2 truePos); // 0x10246640-0x102467C0
	private PlayerTask FindTask(PlayerControl pc); // 0x10246590-0x10246640
	public void Use(); // 0x10246900-0x10246B80
}

namespace Steamworks
{
	public static class Constants // TypeDefIndex: 4667
	{
		// Fields
		public const string STEAMAPPLIST_INTERFACE_VERSION = "STEAMAPPLIST_INTERFACE_VERSION001"; // Metadata: 0x0024246F
		public const string STEAMAPPS_INTERFACE_VERSION = "STEAMAPPS_INTERFACE_VERSION008"; // Metadata: 0x00242494
		public const string STEAMAPPTICKET_INTERFACE_VERSION = "STEAMAPPTICKET_INTERFACE_VERSION001"; // Metadata: 0x002424B6
		public const string STEAMCLIENT_INTERFACE_VERSION = "SteamClient017"; // Metadata: 0x002424DD
		public const string STEAMCONTROLLER_INTERFACE_VERSION = "SteamController006"; // Metadata: 0x002424EF
		public const string STEAMFRIENDS_INTERFACE_VERSION = "SteamFriends015"; // Metadata: 0x00242505
		public const string STEAMGAMECOORDINATOR_INTERFACE_VERSION = "SteamGameCoordinator001"; // Metadata: 0x00242518
		public const string STEAMGAMESERVER_INTERFACE_VERSION = "SteamGameServer012"; // Metadata: 0x00242533
		public const string STEAMGAMESERVERSTATS_INTERFACE_VERSION = "SteamGameServerStats001"; // Metadata: 0x00242549
		public const string STEAMHTMLSURFACE_INTERFACE_VERSION = "STEAMHTMLSURFACE_INTERFACE_VERSION_004"; // Metadata: 0x00242564
		public const string STEAMHTTP_INTERFACE_VERSION = "STEAMHTTP_INTERFACE_VERSION002"; // Metadata: 0x0024258E
		public const string STEAMINVENTORY_INTERFACE_VERSION = "STEAMINVENTORY_INTERFACE_V002"; // Metadata: 0x002425B0
		public const string STEAMMATCHMAKING_INTERFACE_VERSION = "SteamMatchMaking009"; // Metadata: 0x002425D1
		public const string STEAMMATCHMAKINGSERVERS_INTERFACE_VERSION = "SteamMatchMakingServers002"; // Metadata: 0x002425E8
		public const string STEAMMUSIC_INTERFACE_VERSION = "STEAMMUSIC_INTERFACE_VERSION001"; // Metadata: 0x00242606
		public const string STEAMMUSICREMOTE_INTERFACE_VERSION = "STEAMMUSICREMOTE_INTERFACE_VERSION001"; // Metadata: 0x00242629
		public const string STEAMNETWORKING_INTERFACE_VERSION = "SteamNetworking005"; // Metadata: 0x00242652
		public const string STEAMPARENTALSETTINGS_INTERFACE_VERSION = "STEAMPARENTALSETTINGS_INTERFACE_VERSION001"; // Metadata: 0x00242668
		public const string STEAMREMOTESTORAGE_INTERFACE_VERSION = "STEAMREMOTESTORAGE_INTERFACE_VERSION014"; // Metadata: 0x00242696
		public const string STEAMSCREENSHOTS_INTERFACE_VERSION = "STEAMSCREENSHOTS_INTERFACE_VERSION003"; // Metadata: 0x002426C1
		public const string STEAMUGC_INTERFACE_VERSION = "STEAMUGC_INTERFACE_VERSION010"; // Metadata: 0x002426EA
		public const string STEAMUSER_INTERFACE_VERSION = "SteamUser019"; // Metadata: 0x0024270B
		public const string STEAMUSERSTATS_INTERFACE_VERSION = "STEAMUSERSTATS_INTERFACE_VERSION011"; // Metadata: 0x0024271B
		public const string STEAMUTILS_INTERFACE_VERSION = "SteamUtils009"; // Metadata: 0x00242742
		public const string STEAMVIDEO_INTERFACE_VERSION = "STEAMVIDEO_INTERFACE_V002"; // Metadata: 0x00242753
		public const int k_cubAppProofOfPurchaseKeyMax = 240; // Metadata: 0x00242770
		public const int k_iSteamUserCallbacks = 100; // Metadata: 0x00242774
		public const int k_iSteamGameServerCallbacks = 200; // Metadata: 0x00242778
		public const int k_iSteamFriendsCallbacks = 300; // Metadata: 0x0024277C
		public const int k_iSteamBillingCallbacks = 400; // Metadata: 0x00242780
		public const int k_iSteamMatchmakingCallbacks = 500; // Metadata: 0x00242784
		public const int k_iSteamContentServerCallbacks = 600; // Metadata: 0x00242788
		public const int k_iSteamUtilsCallbacks = 700; // Metadata: 0x0024278C
		public const int k_iClientFriendsCallbacks = 800; // Metadata: 0x00242790
		public const int k_iClientUserCallbacks = 900; // Metadata: 0x00242794
		public const int k_iSteamAppsCallbacks = 1000; // Metadata: 0x00242798
		public const int k_iSteamUserStatsCallbacks = 1100; // Metadata: 0x0024279C
		public const int k_iSteamNetworkingCallbacks = 1200; // Metadata: 0x002427A0
		public const int k_iClientRemoteStorageCallbacks = 1300; // Metadata: 0x002427A4
		public const int k_iClientDepotBuilderCallbacks = 1400; // Metadata: 0x002427A8
		public const int k_iSteamGameServerItemsCallbacks = 1500; // Metadata: 0x002427AC
		public const int k_iClientUtilsCallbacks = 1600; // Metadata: 0x002427B0
		public const int k_iSteamGameCoordinatorCallbacks = 1700; // Metadata: 0x002427B4
		public const int k_iSteamGameServerStatsCallbacks = 1800; // Metadata: 0x002427B8
		public const int k_iSteam2AsyncCallbacks = 1900; // Metadata: 0x002427BC
		public const int k_iSteamGameStatsCallbacks = 2000; // Metadata: 0x002427C0
		public const int k_iClientHTTPCallbacks = 2100; // Metadata: 0x002427C4
		public const int k_iClientScreenshotsCallbacks = 2200; // Metadata: 0x002427C8
		public const int k_iSteamScreenshotsCallbacks = 2300; // Metadata: 0x002427CC
		public const int k_iClientAudioCallbacks = 2400; // Metadata: 0x002427D0
		public const int k_iClientUnifiedMessagesCallbacks = 2500; // Metadata: 0x002427D4
		public const int k_iSteamStreamLauncherCallbacks = 2600; // Metadata: 0x002427D8
		public const int k_iClientControllerCallbacks = 2700; // Metadata: 0x002427DC
		public const int k_iSteamControllerCallbacks = 2800; // Metadata: 0x002427E0
		public const int k_iClientParentalSettingsCallbacks = 2900; // Metadata: 0x002427E4
		public const int k_iClientDeviceAuthCallbacks = 3000; // Metadata: 0x002427E8
		public const int k_iClientNetworkDeviceManagerCallbacks = 3100; // Metadata: 0x002427EC
		public const int k_iClientMusicCallbacks = 3200; // Metadata: 0x002427F0
		public const int k_iClientRemoteClientManagerCallbacks = 3300; // Metadata: 0x002427F4
		public const int k_iClientUGCCallbacks = 3400; // Metadata: 0x002427F8
		public const int k_iSteamStreamClientCallbacks = 3500; // Metadata: 0x002427FC
		public const int k_IClientProductBuilderCallbacks = 3600; // Metadata: 0x00242800
		public const int k_iClientShortcutsCallbacks = 3700; // Metadata: 0x00242804
		public const int k_iClientRemoteControlManagerCallbacks = 3800; // Metadata: 0x00242808
		public const int k_iSteamAppListCallbacks = 3900; // Metadata: 0x0024280C
		public const int k_iSteamMusicCallbacks = 4000; // Metadata: 0x00242810
		public const int k_iSteamMusicRemoteCallbacks = 4100; // Metadata: 0x00242814
		public const int k_iClientVRCallbacks = 4200; // Metadata: 0x00242818
		public const int k_iClientGameNotificationCallbacks = 4300; // Metadata: 0x0024281C
		public const int k_iSteamGameNotificationCallbacks = 4400; // Metadata: 0x00242820
		public const int k_iSteamHTMLSurfaceCallbacks = 4500; // Metadata: 0x00242824
		public const int k_iClientVideoCallbacks = 4600; // Metadata: 0x00242828
		public const int k_iClientInventoryCallbacks = 4700; // Metadata: 0x0024282C
		public const int k_iClientBluetoothManagerCallbacks = 4800; // Metadata: 0x00242830
		public const int k_iClientSharedConnectionCallbacks = 4900; // Metadata: 0x00242834
		public const int k_ISteamParentalSettingsCallbacks = 5000; // Metadata: 0x00242838
		public const int k_iClientShaderCallbacks = 5100; // Metadata: 0x0024283C
		public const int k_cchMaxFriendsGroupName = 64; // Metadata: 0x00242840
		public const int k_cFriendsGroupLimit = 100; // Metadata: 0x00242844
		public const int k_cEnumerateFollowersMax = 50; // Metadata: 0x00242848
		public const int k_cchPersonaNameMax = 128; // Metadata: 0x0024284C
		public const int k_cwchPersonaNameMax = 32; // Metadata: 0x00242850
		public const int k_cubChatMetadataMax = 8192; // Metadata: 0x00242854
		public const int k_cchMaxRichPresenceKeys = 20; // Metadata: 0x00242858
		public const int k_cchMaxRichPresenceKeyLength = 64; // Metadata: 0x0024285C
		public const int k_cchMaxRichPresenceValueLength = 256; // Metadata: 0x00242860
		public const int k_unServerFlagNone = 0; // Metadata: 0x00242864
		public const int k_unServerFlagActive = 1; // Metadata: 0x00242868
		public const int k_unServerFlagSecure = 2; // Metadata: 0x0024286C
		public const int k_unServerFlagDedicated = 4; // Metadata: 0x00242870
		public const int k_unServerFlagLinux = 8; // Metadata: 0x00242874
		public const int k_unServerFlagPassworded = 16; // Metadata: 0x00242878
		public const int k_unServerFlagPrivate = 32; // Metadata: 0x0024287C
		public const int k_unFavoriteFlagNone = 0; // Metadata: 0x00242880
		public const int k_unFavoriteFlagFavorite = 1; // Metadata: 0x00242884
		public const int k_unFavoriteFlagHistory = 2; // Metadata: 0x00242888
		public const int k_unMaxCloudFileChunkSize = 104857600; // Metadata: 0x0024288C
		public const int k_cchPublishedDocumentTitleMax = 129; // Metadata: 0x00242890
		public const int k_cchPublishedDocumentDescriptionMax = 8000; // Metadata: 0x00242894
		public const int k_cchPublishedDocumentChangeDescriptionMax = 8000; // Metadata: 0x00242898
		public const int k_unEnumeratePublishedFilesMaxResults = 50; // Metadata: 0x0024289C
		public const int k_cchTagListMax = 1025; // Metadata: 0x002428A0
		public const int k_cchFilenameMax = 260; // Metadata: 0x002428A4
		public const int k_cchPublishedFileURLMax = 256; // Metadata: 0x002428A8
		public const int k_nScreenshotMaxTaggedUsers = 32; // Metadata: 0x002428AC
		public const int k_nScreenshotMaxTaggedPublishedFiles = 32; // Metadata: 0x002428B0
		public const int k_cubUFSTagTypeMax = 255; // Metadata: 0x002428B4
		public const int k_cubUFSTagValueMax = 255; // Metadata: 0x002428B8
		public const int k_ScreenshotThumbWidth = 200; // Metadata: 0x002428BC
		public const int kNumUGCResultsPerPage = 50; // Metadata: 0x002428C0
		public const int k_cchDeveloperMetadataMax = 5000; // Metadata: 0x002428C4
		public const int k_cchStatNameMax = 128; // Metadata: 0x002428C8
		public const int k_cchLeaderboardNameMax = 128; // Metadata: 0x002428CC
		public const int k_cLeaderboardDetailsMax = 64; // Metadata: 0x002428D0
		public const int k_cbMaxGameServerGameDir = 32; // Metadata: 0x002428D4
		public const int k_cbMaxGameServerMapName = 32; // Metadata: 0x002428D8
		public const int k_cbMaxGameServerGameDescription = 64; // Metadata: 0x002428DC
		public const int k_cbMaxGameServerName = 64; // Metadata: 0x002428E0
		public const int k_cbMaxGameServerTags = 128; // Metadata: 0x002428E4
		public const int k_cbMaxGameServerGameData = 2048; // Metadata: 0x002428E8
		public const int k_unSteamAccountIDMask = -1; // Metadata: 0x002428EC
		public const int k_unSteamAccountInstanceMask = 1048575; // Metadata: 0x002428F0
		public const int k_unSteamUserDesktopInstance = 1; // Metadata: 0x002428F4
		public const int k_unSteamUserConsoleInstance = 2; // Metadata: 0x002428F8
		public const int k_unSteamUserWebInstance = 4; // Metadata: 0x002428FC
		public const int k_cchGameExtraInfoMax = 64; // Metadata: 0x00242900
		public const int k_nSteamEncryptedAppTicketSymmetricKeyLen = 32; // Metadata: 0x00242904
		public const int k_cubSaltSize = 8; // Metadata: 0x00242908
		public const ulong k_GIDNil = 18446744073709551615; // Metadata: 0x0024290C
		public const ulong k_TxnIDNil = 18446744073709551615; // Metadata: 0x00242914
		public const ulong k_TxnIDUnknown = 0; // Metadata: 0x0024291C
		public const int k_uPackageIdFreeSub = 0; // Metadata: 0x00242924
		public const int k_uPackageIdInvalid = -1; // Metadata: 0x00242928
		public const ulong k_ulAssetClassIdInvalid = 0; // Metadata: 0x0024292C
		public const int k_uPhysicalItemIdInvalid = 0; // Metadata: 0x00242934
		public const int k_uCellIDInvalid = -1; // Metadata: 0x00242938
		public const int k_uPartnerIdInvalid = 0; // Metadata: 0x0024293C
		public const int STEAM_CONTROLLER_MAX_COUNT = 16; // Metadata: 0x00242940
		public const int STEAM_CONTROLLER_MAX_ANALOG_ACTIONS = 16; // Metadata: 0x00242944
		public const int STEAM_CONTROLLER_MAX_DIGITAL_ACTIONS = 128; // Metadata: 0x00242948
		public const int STEAM_CONTROLLER_MAX_ORIGINS = 8; // Metadata: 0x0024294C
		public const ulong STEAM_CONTROLLER_HANDLE_ALL_CONTROLLERS = 18446744073709551615; // Metadata: 0x00242950
		public const float STEAM_CONTROLLER_MIN_ANALOG_ACTION_DATA = -1f; // Metadata: 0x00242958
		public const float STEAM_CONTROLLER_MAX_ANALOG_ACTION_DATA = 1f; // Metadata: 0x0024295C
		public const ushort MASTERSERVERUPDATERPORT_USEGAMESOCKETSHARE = 65535; // Metadata: 0x00242960
		public const int INVALID_HTTPREQUEST_HANDLE = 0; // Metadata: 0x00242962
		public const byte k_nMaxLobbyKeyLength = 255; // Metadata: 0x00242966
		public const int k_SteamMusicNameMaxLength = 255; // Metadata: 0x00242967
		public const int k_SteamMusicPNGMaxLength = 65535; // Metadata: 0x0024296B
		public const int QUERY_PORT_NOT_INITIALIZED = 65535; // Metadata: 0x0024296F
		public const int QUERY_PORT_ERROR = 65534; // Metadata: 0x00242973
	}
}

namespace Discord
{
	internal static class Constants // TypeDefIndex: 4857
	{
		// Fields
		public const string DllName = "discord_game_sdk"; // Metadata: 0x00243898
	}
}

public static class Constants // TypeDefIndex: 5196
{
	// Fields
	public const string LocalNetAddress = "127.0.0.1"; // Metadata: 0x00243A96
	public const ushort GamePlayPort = 22023; // Metadata: 0x00243AA3
	public const ushort AnnouncementPort = 22024; // Metadata: 0x00243AA5
	public const string InfinitySymbol = "\uFFFD"; // Metadata: 0x00243AA7
	public static readonly int ShipOnlyMask; // 0x00
	public static readonly int ShipAndObjectsMask; // 0x04
	public static readonly int ShipAndAllObjectsMask; // 0x08
	public static readonly int NotShipMask; // 0x0C
	public static readonly int Usables; // 0x10
	public static readonly int PlayersOnlyMask; // 0x14
	public static readonly int ShadowMask; // 0x18
	public static readonly int[] CompatVersions; // 0x1C
	public const int Year = 2020; // Metadata: 0x00243AAE
	public const int Month = 9; // Metadata: 0x00243AB2
	public const int Day = 7; // Metadata: 0x00243AB6
	public const int Revision = 0; // Metadata: 0x00243ABA

	// Constructors
	static Constants(); // 0x10246E40-0x10247410

	// Methods
	internal static int GetBroadcastVersion(); // 0x10246C10-0x10246C20
	internal static int GetVersion(int year, int month, int day, int rev); // 0x10246C20-0x10246C40
	internal static byte[] GetBroadcastVersionBytes(); // 0x10246BA0-0x10246C10
	public static bool ShouldPlaySfx(); // 0x10246DD0-0x10246E40
	internal static bool ShouldFlipSkeld(); // 0x10246C40-0x10246DD0
}

namespace MS.Internal.Xml.XPath
{
	internal class ContextQuery : Query // TypeDefIndex: 1756
	{
		// Fields
		protected XPathNavigator contextNode; // 0x0C
	
		// Properties
		public override XPathNavigator Current { get; } // 0x101AE200-0x101AE210 
		public override XPathResultType StaticType { get; } // 0x1045B170-0x1045B180 
		public override int CurrentPosition { get; } // 0x101B4FF0-0x101B5000 
		public override int Count { get; } // 0x102F68B0-0x102F68C0 
		public override QueryProps Properties { get; } // 0x1038CEB0-0x1038CEC0 
	
		// Constructors
		public ContextQuery(); // 0x106B9200-0x106B9220
		protected ContextQuery(ContextQuery other); // 0x106B9220-0x106B9250
	
		// Methods
		public override void Reset(); // 0x1025EF80-0x1025EF90
		public override object Evaluate(XPathNodeIterator context); // 0x106BB260-0x106BB2A0
		public override XPathNavigator Advance(); // 0x106BB1E0-0x106BB200
		public override XPathNodeIterator Clone(); // 0x106BB200-0x106BB260
	}
}

public class Controller // TypeDefIndex: 5198
{
	// Fields
	public readonly TouchState[] Touches; // 0x08
	private Collider2D amTouching; // 0x0C
	private int touchId; // 0x10
	[CompilerGenerated] // 0x10002030-0x10002050
	private Camera _mainCam_k__BackingField; // 0x14

	// Properties
	public bool AnyTouch { get; } // 0x10247B60-0x10247BC0 
	public bool AnyTouchDown { get; } // 0x10247AA0-0x10247B00 
	public bool AnyTouchUp { get; } // 0x10247B00-0x10247B60 
	public bool FirstDown { get; } // 0x10247CB0-0x10247CF0 
	public Vector2 DragPosition { get; } // 0x10247BC0-0x10247C60 
	public Vector2 DragStartPosition { get; } // 0x10247C60-0x10247CB0 
	public Camera mainCam { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101ADCB0-0x101ADCC0 0x101BCF30-0x101BCF40

	// Nested types
	public class TouchState // TypeDefIndex: 5199
	{
		// Fields
		public Vector2 DownAt; // 0x08
		public Vector2 Position; // 0x10
		public bool WasDown; // 0x18
		public bool IsDown; // 0x00
		public bool TouchStart; // 0x00
		public bool TouchEnd; // 0x00
		public DragState dragState; // 0x00

		// Constructors
		public TouchState(); // 0x101A2CD0-0x101A2CE0
	}

	// Constructors
	public Controller(); // 0x102479C0-0x10247AA0

	// Methods
	public DragState CheckDrag(Collider2D coll); // 0x10247410-0x102476C0
	public void ResetDragPosition(); // 0x10247710-0x10247780
	public void ClearTouch(); // 0x102476C0-0x10247710
	public void Update(); // 0x10247850-0x102479C0
	public void Reset(); // 0x10247780-0x10247850
	public TouchState GetTouch(int i); // 0x101EF520-0x101EF550
}

namespace Steamworks
{
	[Serializable]
	public struct ControllerActionSetHandle_t : IEquatable<ControllerActionSetHandle_t>, IComparable<ControllerActionSetHandle_t> // TypeDefIndex: 4798
	{
		// Fields
		public ulong m_ControllerActionSetHandle; // 0x00
	
		// Constructors
		public ControllerActionSetHandle_t(ulong value); // 0x10073670-0x10073690
	
		// Methods
		public override string ToString(); // 0x10073650-0x10073670
		public override bool Equals(object other); // 0x10091070-0x100910F0
		public override int GetHashCode(); // 0x10073630-0x10073650
		public static bool operator ==(ControllerActionSetHandle_t x, ControllerActionSetHandle_t y); // 0x10187800-0x10187820
		public static bool operator !=(ControllerActionSetHandle_t x, ControllerActionSetHandle_t y); // 0x101D22E0-0x101D2410
		public static explicit operator ControllerActionSetHandle_t(ulong value); // 0x10187820-0x10187830
		public static explicit operator ulong(ControllerActionSetHandle_t that); // 0x10187820-0x10187830
		public bool Equals(ControllerActionSetHandle_t other); // 0x10073610-0x10073630
		public int CompareTo(ControllerActionSetHandle_t other); // 0x10073550-0x10073570
	}

	public struct ControllerAnalogActionData_t // TypeDefIndex: 4746
	{
		// Fields
		public EControllerSourceMode eMode; // 0x00
		public float x; // 0x04
		public float y; // 0x08
		public byte bActive; // 0x0C
	}

	[Serializable]
	public struct ControllerAnalogActionHandle_t : IEquatable<ControllerAnalogActionHandle_t>, IComparable<ControllerAnalogActionHandle_t> // TypeDefIndex: 4799
	{
		// Fields
		public ulong m_ControllerAnalogActionHandle; // 0x00
	
		// Constructors
		public ControllerAnalogActionHandle_t(ulong value); // 0x10073670-0x10073690
	
		// Methods
		public override string ToString(); // 0x10073650-0x10073670
		public override bool Equals(object other); // 0x100910F0-0x10091170
		public override int GetHashCode(); // 0x10073630-0x10073650
		public static bool operator ==(ControllerAnalogActionHandle_t x, ControllerAnalogActionHandle_t y); // 0x10187800-0x10187820
		public static bool operator !=(ControllerAnalogActionHandle_t x, ControllerAnalogActionHandle_t y); // 0x101D22E0-0x101D2410
		public static explicit operator ControllerAnalogActionHandle_t(ulong value); // 0x10187820-0x10187830
		public static explicit operator ulong(ControllerAnalogActionHandle_t that); // 0x10187820-0x10187830
		public bool Equals(ControllerAnalogActionHandle_t other); // 0x10073610-0x10073630
		public int CompareTo(ControllerAnalogActionHandle_t other); // 0x10073550-0x10073570
	}

	public struct ControllerDigitalActionData_t // TypeDefIndex: 4747
	{
		// Fields
		public byte bState; // 0x00
		public byte bActive; // 0x01
	}

	[Serializable]
	public struct ControllerDigitalActionHandle_t : IEquatable<ControllerDigitalActionHandle_t>, IComparable<ControllerDigitalActionHandle_t> // TypeDefIndex: 4800
	{
		// Fields
		public ulong m_ControllerDigitalActionHandle; // 0x00
	
		// Constructors
		public ControllerDigitalActionHandle_t(ulong value); // 0x10073670-0x10073690
	
		// Methods
		public override string ToString(); // 0x10073650-0x10073670
		public override bool Equals(object other); // 0x10091170-0x100911F0
		public override int GetHashCode(); // 0x10073630-0x10073650
		public static bool operator ==(ControllerDigitalActionHandle_t x, ControllerDigitalActionHandle_t y); // 0x10187800-0x10187820
		public static bool operator !=(ControllerDigitalActionHandle_t x, ControllerDigitalActionHandle_t y); // 0x101D22E0-0x101D2410
		public static explicit operator ControllerDigitalActionHandle_t(ulong value); // 0x10187820-0x10187830
		public static explicit operator ulong(ControllerDigitalActionHandle_t that); // 0x10187820-0x10187830
		public bool Equals(ControllerDigitalActionHandle_t other); // 0x10073610-0x10073630
		public int CompareTo(ControllerDigitalActionHandle_t other); // 0x10073550-0x10073570
	}

	[Serializable]
	public struct ControllerHandle_t : IEquatable<ControllerHandle_t>, IComparable<ControllerHandle_t> // TypeDefIndex: 4801
	{
		// Fields
		public ulong m_ControllerHandle; // 0x00
	
		// Constructors
		public ControllerHandle_t(ulong value); // 0x10073670-0x10073690
	
		// Methods
		public override string ToString(); // 0x10073650-0x10073670
		public override bool Equals(object other); // 0x100911F0-0x100913B0
		public override int GetHashCode(); // 0x10073630-0x10073650
		public static bool operator ==(ControllerHandle_t x, ControllerHandle_t y); // 0x10187800-0x10187820
		public static bool operator !=(ControllerHandle_t x, ControllerHandle_t y); // 0x101D22E0-0x101D2410
		public static explicit operator ControllerHandle_t(ulong value); // 0x10187820-0x10187830
		public static explicit operator ulong(ControllerHandle_t that); // 0x10187820-0x10187830
		public bool Equals(ControllerHandle_t other); // 0x10073610-0x10073630
		public int CompareTo(ControllerHandle_t other); // 0x10073550-0x10073570
	}

	public struct ControllerMotionData_t // TypeDefIndex: 4748
	{
		// Fields
		public float rotQuatX; // 0x00
		public float rotQuatY; // 0x04
		public float rotQuatZ; // 0x08
		public float rotQuatW; // 0x0C
		public float posAccelX; // 0x10
		public float posAccelY; // 0x14
		public float posAccelZ; // 0x18
		public float rotVelX; // 0x1C
		public float rotVelY; // 0x20
		public float rotVelZ; // 0x24
	}
}

public static class CooldownHelpers // TypeDefIndex: 5417
{
	// Extension methods
	public static void SetCooldownNormalizedUvs(this SpriteRenderer myRend); // 0x10247CF0-0x10247F00
}

public class CounterArea : MonoBehaviour // TypeDefIndex: 5759
{
	// Fields
	public SystemTypes RoomType; // 0x0C
	public ObjectPoolBehavior pool; // 0x10
	private List<PoolableBehavior> myIcons; // 0x14
	public float XOffset; // 0x18
	public float YOffset; // 0x1C
	public int MaxWidth; // 0x20

	// Constructors
	public CounterArea(); // 0x10248200-0x10248260

	// Methods
	public void UpdateCount(int cnt); // 0x10247F00-0x10248200
}

public class CourseMinigame : Minigame // TypeDefIndex: 5615
{
	// Fields
	public CourseStarBehaviour StarPrefab; // 0x28
	public CourseStarBehaviour[] Stars; // 0x2C
	public SpriteRenderer DotPrefab; // 0x30
	public Sprite DotLight; // 0x34
	public SpriteRenderer[] Dots; // 0x38
	public Collider2D Ship; // 0x3C
	public CourseStarBehaviour Destination; // 0x40
	public Vector3[] PathPoints; // 0x44
	public int NumPoints; // 0x48
	public FloatRange XRange; // 0x4C
	public FloatRange YRange; // 0x50
	public LineRenderer Path; // 0x54
	public Controller myController; // 0x58
	public float lineTimer; // 0x5C
	private UIntFloat Converter; // 0x60
	public AudioClip SetCourseSound; // 0x64
	public AudioClip SetCourseLastSound; // 0x68

	// Nested types
	private struct UIntFloat // TypeDefIndex: 5616
	{
		// Fields
		public float FloatValue; // 0x00
		public int IntValue; // 0x00

		// Methods
		public float GetFloat(byte[] bytes); // 0x10094200-0x10094350
		public void GetBytes(float value, byte[] bytes); // 0x100941D0-0x10094200
	}

	// Constructors
	public CourseMinigame(); // 0x10249630-0x10249690

	// Methods
	public override void Begin(PlayerTask task); // 0x10248260-0x102488C0
	public void FixedUpdate(); // 0x102488C0-0x102493F0
	private void SetLineDivision(float curVec); // 0x102493F0-0x10249630
}

public class CourseStarBehaviour : MonoBehaviour // TypeDefIndex: 5617
{
	// Fields
	public SpriteRenderer Upper; // 0x0C
	public SpriteRenderer Lower; // 0x10
	public float Speed; // 0x14

	// Constructors
	public CourseStarBehaviour(); // 0x10249750-0x10249770

	// Methods
	public void Update(); // 0x10249690-0x10249750
}

namespace Discord
{
	public enum CreateFlags // TypeDefIndex: 4859
	{
		Default = 0,
		NoRequireDiscord = 1
	}
}

public class CreateGameOptions : MonoBehaviour, IConnectButton // TypeDefIndex: 5541
{
	// Fields
	public AudioClip IntroMusic; // 0x0C
	public GameObject Content; // 0x10
	public SpriteRenderer Foreground; // 0x14
	public SpriteAnim connectIcon; // 0x18
	public AnimationClip connectClip; // 0x1C

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoShow_d__6 : IEnumerator<object> // TypeDefIndex: 5542
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public CreateGameOptions __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoShow_d__6(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10257980-0x10257B20
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10257B20-0x10257B70
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoHide_d__10 : IEnumerator<object> // TypeDefIndex: 5543
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public CreateGameOptions __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoHide_d__10(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10256D30-0x10256EF0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10256EF0-0x10256F40
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoStartGame_d__12 : IEnumerator<object> // TypeDefIndex: 5544
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public CreateGameOptions __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoStartGame_d__12(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10257B70-0x10257ED0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10257ED0-0x10257F20
	}

	// Constructors
	public CreateGameOptions(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Show(); // 0x10249960-0x10249AD0
	[IteratorStateMachine] // 0x10002280-0x100022D0
	private IEnumerator CoShow(); // 0x102497C0-0x10249810
	public void StartIcon(); // 0x10249AD0-0x10249B50
	public void StopIcon(); // 0x10249B50-0x10249BF0
	public void Hide(); // 0x10249900-0x10249960
	[IteratorStateMachine] // 0x10002380-0x100023D0
	private IEnumerator CoHide(); // 0x10249770-0x102497C0
	public void Confirm(); // 0x10249860-0x10249900
	[IteratorStateMachine] // 0x10002440-0x10002490
	private IEnumerator CoStartGame(); // 0x10249810-0x10249860
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000A200-0x1000A220
	public struct CreateItemResult_t // TypeDefIndex: 4618
	{
		// Fields
		public const int k_iCallback = 3403; // Metadata: 0x002423AB
		public EResult m_eResult; // 0x00
		public PublishedFileId_t m_nPublishedFileId; // 0x08
		public bool m_bUserNeedsToAcceptWorkshopLegalAgreement; // 0x10
	}
}

public class CreateOptionsPicker : MonoBehaviour // TypeDefIndex: 5734
{
	// Fields
	public SpriteRenderer[] MaxPlayerButtons; // 0x0C
	public SpriteRenderer[] ImpostorButtons; // 0x10
	public TextRenderer LanguageButton; // 0x14
	public SpriteRenderer[] MapButtons; // 0x18
	public SettingsMode mode; // 0x1C
	public CrewVisualizer CrewArea; // 0x20

	// Constructors
	public CreateOptionsPicker(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Start(); // 0x1024A120-0x1024A2A0
	public GameOptionsData GetTargetOptions(); // 0x10249BF0-0x10249CC0
	private void SetTargetOptions(GameOptionsData data); // 0x1024A0A0-0x1024A120
	public void SetMaxPlayersButtons(int maxPlayers); // 0x10249FC0-0x1024A0A0
	private void UpdateMaxPlayersButtons(GameOptionsData opts); // 0x1024A6B0-0x1024A890
	public void SetImpostorButtons(int numImpostors); // 0x10249CC0-0x10249E70
	private void UpdateImpostorsButtons(int numImpostors); // 0x1024A2A0-0x1024A340
	public void SetMap(int mapid); // 0x10249F00-0x10249FC0
	private void UpdateMapButtons(int mapid); // 0x1024A3C0-0x1024A6B0
	public void SetLanguageFilter(uint keyword); // 0x10249E70-0x10249F00
	private void UpdateLanguageButton(uint flag); // 0x1024A340-0x1024A3C0
}

public class CreateStoreButton : MonoBehaviour // TypeDefIndex: 5545
{
	// Constructors
	public CreateStoreButton(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Click(); // 0x1024A890-0x1024A8E0
}

public class CrewVisualizer : MonoBehaviour // TypeDefIndex: 5546
{
	// Fields
	public ObjectPoolBehavior CrewPool; // 0x0C
	public SpriteRenderer Background; // 0x10
	public Sprite[] MapBackgrounds; // 0x14
	public float yOffset; // 0x18
	public FloatRange BgWidth; // 0x1C

	// Constructors
	public CrewVisualizer(); // 0x1024AD30-0x1024AD50

	// Methods
	public void SetCrewSize(int numPlayers, int numImpostors); // 0x1024A8E0-0x1024ACE0
	public void SetMap(int mapid); // 0x1024ACE0-0x1024AD30
}

public class CrossFadeImages : MonoBehaviour // TypeDefIndex: 5266
{
	// Fields
	public SpriteRenderer Image1; // 0x0C
	public SpriteRenderer Image2; // 0x10
	public float Period; // 0x14

	// Constructors
	public CrossFadeImages(); // 0x1021E190-0x1021E1B0

	// Methods
	private void Update(); // 0x1024AD50-0x1024AE90
}

public class CrossFader : ISoundPlayer // TypeDefIndex: 5815
{
	// Fields
	[CompilerGenerated] // 0x10002030-0x10002050
	private string _Name_k__BackingField; // 0x08
	public float MaxVolume; // 0x0C
	[CompilerGenerated] // 0x10002030-0x10002050
	private AudioSource _Player_k__BackingField; // 0x10
	public AudioClip target; // 0x14
	public float Duration; // 0x18
	private float timer; // 0x1C
	private bool didSwitch; // 0x20

	// Properties
	public string Name { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101B4FF0-0x101B5000 0x101D22D0-0x101D22E0
	public AudioSource Player { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101BCD80-0x101BCD90 0x101BCF20-0x101BCF30

	// Constructors
	public CrossFader(); // 0x1024B100-0x1024B130

	// Methods
	public void Update(float dt); // 0x1024AFB0-0x1024B100
	public void SetTarget(AudioClip clip); // 0x1024AE90-0x1024AFB0
}

public class CrystalBehaviour : MonoBehaviour // TypeDefIndex: 5508
{
	// Fields
	public Transform TargetPosition; // 0x0C
	public SpriteRenderer Renderer; // 0x10
	public BoxCollider2D Collider; // 0x14
	public bool CanMove; // 0x18
	public FloatRange Padding; // 0x1C
	private const float Speed = 15f; // Metadata: 0x00243C01
	public float XFloatMag; // 0x20
	private const float FloatMag = 0.05f; // Metadata: 0x00243C05
	private const float FloatSpeed = 0.35f; // Metadata: 0x00243C09
	public float PieceIndex; // 0x24

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Flash_d__12 : IEnumerator<object> // TypeDefIndex: 5509
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public float delay; // 0x10
		public CrystalBehaviour c; // 0x14
		private Color _col_5__2; // 0x18
		private float _time_5__3; // 0x28

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Flash_d__12(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10258620-0x10258950
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10258950-0x102589A0
	}

	// Constructors
	public CrystalBehaviour(); // 0x1024B530-0x1024B560

	// Methods
	private void Update(); // 0x1024B200-0x1024B530
	public void Flash(float delay = 0f /* Metadata: 0x00243BFD */); // 0x1024B130-0x1024B1A0
	[IteratorStateMachine] // 0x10046D70-0x10046DC0
	private static IEnumerator Flash(CrystalBehaviour c, float delay); // 0x1024B1A0-0x1024B200
}

public class CrystalMinigame : Minigame // TypeDefIndex: 5510
{
	// Fields
	public CrystalBehaviour[] CrystalPieces; // 0x28
	private CrystalBehaviour[] Shuffed; // 0x2C
	public Transform[] CrystalSlots; // 0x30
	public FloatRange XRange; // 0x34
	public float TrayY; // 0x38
	public AudioClip[] PickUpSounds; // 0x3C
	public AudioClip AttachSound; // 0x40
	private Controller myController; // 0x44

	// Nested types
	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5511
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<CrystalBehaviour, bool> __9__10_0; // 0x04

		// Constructors
		static __c(); // 0x10259FF0-0x1025A040
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _CheckSolution_b__10_0(CrystalBehaviour c); // 0x10259D30-0x10259D50
	}

	// Constructors
	public CrystalMinigame(); // 0x1024BF30-0x1024BF90

	// Methods
	public void Start(); // 0x1024B970-0x1024BB30
	public void Update(); // 0x1024BB30-0x1024BF30
	private void CheckSolution(int startAt); // 0x1024B560-0x1024B970
}

namespace Steamworks
{
	internal static class CSteamAPIContext // TypeDefIndex: 4302
	{
		// Fields
		private static IntPtr m_pSteamClient; // 0x00
		private static IntPtr m_pSteamUser; // 0x04
		private static IntPtr m_pSteamFriends; // 0x08
		private static IntPtr m_pSteamUtils; // 0x0C
		private static IntPtr m_pSteamMatchmaking; // 0x10
		private static IntPtr m_pSteamUserStats; // 0x14
		private static IntPtr m_pSteamApps; // 0x18
		private static IntPtr m_pSteamMatchmakingServers; // 0x1C
		private static IntPtr m_pSteamNetworking; // 0x20
		private static IntPtr m_pSteamRemoteStorage; // 0x24
		private static IntPtr m_pSteamScreenshots; // 0x28
		private static IntPtr m_pSteamHTTP; // 0x2C
		private static IntPtr m_pController; // 0x30
		private static IntPtr m_pSteamUGC; // 0x34
		private static IntPtr m_pSteamAppList; // 0x38
		private static IntPtr m_pSteamMusic; // 0x3C
		private static IntPtr m_pSteamMusicRemote; // 0x40
		private static IntPtr m_pSteamHTMLSurface; // 0x44
		private static IntPtr m_pSteamInventory; // 0x48
		private static IntPtr m_pSteamVideo; // 0x4C
		private static IntPtr m_pSteamParentalSettings; // 0x50
	
		// Methods
		internal static void Clear(); // 0x1061E430-0x1061E5A0
		internal static bool Init(); // 0x1061E990-0x1061EFA0
		internal static IntPtr GetSteamClient(); // 0x1061E600-0x1061E630
		internal static IntPtr GetSteamUser(); // 0x1061E900-0x1061E930
		internal static IntPtr GetSteamFriends(); // 0x1061E660-0x1061E690
		internal static IntPtr GetSteamUtils(); // 0x1061E930-0x1061E960
		internal static IntPtr GetSteamMatchmaking(); // 0x1061E750-0x1061E780
		internal static IntPtr GetSteamUserStats(); // 0x1061E8D0-0x1061E900
		internal static IntPtr GetSteamApps(); // 0x1061E5D0-0x1061E600
		internal static IntPtr GetSteamMatchmakingServers(); // 0x1061E720-0x1061E750
		internal static IntPtr GetSteamNetworking(); // 0x1061E7E0-0x1061E810
		internal static IntPtr GetSteamRemoteStorage(); // 0x1061E840-0x1061E870
		internal static IntPtr GetSteamScreenshots(); // 0x1061E870-0x1061E8A0
		internal static IntPtr GetSteamHTTP(); // 0x1061E6C0-0x1061E6F0
		internal static IntPtr GetSteamController(); // 0x1061E630-0x1061E660
		internal static IntPtr GetSteamUGC(); // 0x1061E8A0-0x1061E8D0
		internal static IntPtr GetSteamAppList(); // 0x1061E5A0-0x1061E5D0
		internal static IntPtr GetSteamMusic(); // 0x1061E7B0-0x1061E7E0
		internal static IntPtr GetSteamMusicRemote(); // 0x1061E780-0x1061E7B0
		internal static IntPtr GetSteamHTMLSurface(); // 0x1061E690-0x1061E6C0
		internal static IntPtr GetSteamInventory(); // 0x1061E6F0-0x1061E720
		internal static IntPtr GetSteamVideo(); // 0x1061E960-0x1061E990
		internal static IntPtr GetSteamParentalSettings(); // 0x1061E810-0x1061E840
	}

	internal static class CSteamGameServerAPIContext // TypeDefIndex: 4303
	{
		// Fields
		private static IntPtr m_pSteamClient; // 0x00
		private static IntPtr m_pSteamGameServer; // 0x04
		private static IntPtr m_pSteamUtils; // 0x08
		private static IntPtr m_pSteamNetworking; // 0x0C
		private static IntPtr m_pSteamGameServerStats; // 0x10
		private static IntPtr m_pSteamHTTP; // 0x14
		private static IntPtr m_pSteamInventory; // 0x18
		private static IntPtr m_pSteamUGC; // 0x1C
		private static IntPtr m_pSteamApps; // 0x20
	
		// Methods
		internal static void Clear(); // 0x1061EFA0-0x1061F050
		internal static bool Init(); // 0x1061F200-0x1061F600
		internal static IntPtr GetSteamClient(); // 0x1061F080-0x1061F0B0
		internal static IntPtr GetSteamGameServer(); // 0x1061F0E0-0x1061F110
		internal static IntPtr GetSteamUtils(); // 0x1061F1D0-0x1061F200
		internal static IntPtr GetSteamNetworking(); // 0x1061F170-0x1061F1A0
		internal static IntPtr GetSteamGameServerStats(); // 0x1061F0B0-0x1061F0E0
		internal static IntPtr GetSteamHTTP(); // 0x1061F110-0x1061F140
		internal static IntPtr GetSteamInventory(); // 0x1061F140-0x1061F170
		internal static IntPtr GetSteamUGC(); // 0x1061F1A0-0x1061F1D0
		internal static IntPtr GetSteamApps(); // 0x1061F050-0x1061F080
	}

	[Serializable]
	public struct CSteamID : IEquatable<CSteamID>, IComparable<CSteamID> // TypeDefIndex: 4796
	{
		// Fields
		public static readonly CSteamID Nil; // 0x00
		public static readonly CSteamID OutofDateGS; // 0x08
		public static readonly CSteamID LanModeGS; // 0x10
		public static readonly CSteamID NotInitYetGS; // 0x18
		public static readonly CSteamID NonSteamGS; // 0x20
		public ulong m_SteamID; // 0x00
	
		// Constructors
		public CSteamID(AccountID_t unAccountID, EUniverse eUniverse, EAccountType eAccountType); // 0x100C9190-0x100CB320
		public CSteamID(AccountID_t unAccountID, uint unAccountInstance, EUniverse eUniverse, EAccountType eAccountType); // 0x100C8F80-0x100C8FC0
		public CSteamID(ulong ulSteamID); // 0x10073670-0x10073690
		static CSteamID(); // 0x1061F600-0x1061F6A0
	
		// Methods
		public void Set(AccountID_t unAccountID, EUniverse eUniverse, EAccountType eAccountType); // 0x100C9130-0x100C9190
		public void InstancedSet(AccountID_t unAccountID, uint unInstance, EUniverse eUniverse, EAccountType eAccountType); // 0x100C8F80-0x100C8FC0
		public void Clear(); // 0x100C8AF0-0x100C8B10
		public void CreateBlankAnonLogon(EUniverse eUniverse); // 0x100C8DF0-0x100C8E20
		public void CreateBlankAnonUserLogon(EUniverse eUniverse); // 0x100C8E20-0x100C8E50
		public bool BBlankAnonAccount(); // 0x100C8C80-0x100C8CC0
		public bool BGameServerAccount(); // 0x100C8D40-0x100C8D70
		public bool BPersistentGameServerAccount(); // 0x100C8DA0-0x100C8DC0
		public bool BAnonGameServerAccount(); // 0x100C8C40-0x100C8C60
		public bool BContentServerAccount(); // 0x100C8D20-0x100C8D40
		public bool BClanAccount(); // 0x100C8CE0-0x100C8D00
		public bool BChatAccount(); // 0x100C8CC0-0x100C8CE0
		public bool IsLobby(); // 0x100C8FC0-0x100C8FF0
		public bool BIndividualAccount(); // 0x100C8D70-0x100C8DA0
		public bool BAnonAccount(); // 0x100C8C10-0x100C8C40
		public bool BAnonUserAccount(); // 0x100C8C60-0x100C8C80
		public bool BConsoleUserAccount(); // 0x100C8D00-0x100C8D20
		public void SetAccountID(AccountID_t other); // 0x100C9080-0x100C90A0
		public void SetAccountInstance(uint other); // 0x100C90A0-0x100C90D0
		public void SetEAccountType(EAccountType other); // 0x100C90D0-0x100C9100
		public void SetEUniverse(EUniverse other); // 0x100C9100-0x100C9130
		public void ClearIndividualInstance(); // 0x100C8DC0-0x100C8DF0
		public bool HasNoIndividualInstance(); // 0x100C8F40-0x100C8F80
		public AccountID_t GetAccountID(); // 0x10093240-0x10093250
		public uint GetUnAccountInstance(); // 0x100C8F20-0x100C8F40
		public EAccountType GetEAccountType(); // 0x100C8EF0-0x100C8F10
		public EUniverse GetEUniverse(); // 0x100C8F10-0x100C8F20
		public bool IsValid(); // 0x100C8FF0-0x100C9080
		public override string ToString(); // 0x10073650-0x10073670
		public override bool Equals(object other); // 0x100C8E50-0x100C8EF0
		public override int GetHashCode(); // 0x10073630-0x10073650
		public static bool operator ==(CSteamID x, CSteamID y); // 0x10187800-0x10187820
		public static bool operator !=(CSteamID x, CSteamID y); // 0x1061F6A0-0x1061F700
		public static explicit operator CSteamID(ulong value); // 0x10187820-0x10187830
		public static explicit operator ulong(CSteamID that); // 0x10187820-0x10187830
		public bool Equals(CSteamID other); // 0x10073610-0x10073630
		public int CompareTo(CSteamID other); // 0x10073550-0x10073570
	}
}

namespace GoogleMobileAds.Api
{
	public class CustomNativeEventArgs : EventArgs // TypeDefIndex: 5973
	{
		// Fields
		[CompilerGenerated] // 0x10002030-0x10002050
		private CustomNativeTemplateAd _nativeAd_k__BackingField; // 0x08
	
		// Properties
		public CustomNativeTemplateAd nativeAd { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101B4FF0-0x101B5000 0x101D22D0-0x101D22E0
	
		// Constructors
		public CustomNativeEventArgs(); // 0x10271580-0x102715D0
	}

	public class CustomNativeTemplateAd // TypeDefIndex: 5974
	{
		// Fields
		private ICustomNativeTemplateClient client; // 0x08
	
		// Constructors
		internal CustomNativeTemplateAd(ICustomNativeTemplateClient client); // 0x101B54B0-0x101B54D0
	
		// Methods
		public List<string> GetAvailableAssetNames(); // 0x102715D0-0x10271670
		public string GetCustomTemplateId(); // 0x10271670-0x102716C0
		public Texture2D GetTexture2D(string key); // 0x10271770-0x10271890
		public string GetText(string key); // 0x102716C0-0x10271770
		public void PerformClick(string assetName); // 0x10271890-0x102718E0
		public void RecordImpression(); // 0x102718E0-0x10271930
	}
}

[DisallowMultipleComponent] // 0x10002030-0x10002050
public class CustomNetworkTransform : InnerNetObject // TypeDefIndex: 5493
{
	// Fields
	private const float LocalMovementThreshold = 0.0001f; // Metadata: 0x00243BC6
	private const float LocalVelocityThreshold = 0.0001f; // Metadata: 0x00243BCA
	private const float MoveAheadRatio = 0.1f; // Metadata: 0x00243BCE
	private readonly FloatRange XRange; // 0x24
	private readonly FloatRange YRange; // 0x28
	[SerializeField] // 0x10002030-0x10002050
	private float sendInterval; // 0x2C
	[SerializeField] // 0x10002030-0x10002050
	private float snapThreshold; // 0x30
	[SerializeField] // 0x10002030-0x10002050
	private float interpolateMovement; // 0x34
	private Rigidbody2D body; // 0x38
	private Vector2 targetSyncPosition; // 0x3C
	private Vector2 targetSyncVelocity; // 0x44
	private ushort lastSequenceId; // 0x4C
	private Vector2 prevPosSent; // 0x50
	private Vector2 prevVelSent; // 0x58

	// Constructors
	public CustomNetworkTransform(); // 0x1024D030-0x1024D0E0

	// Methods
	private void Awake(); // 0x1024BF90-0x1024C080
	public void OnEnable(); // 0x1024CAB0-0x1024CAD0
	public void Halt(); // 0x1024C790-0x1024C840
	public void RpcSnapTo(Vector2 position); // 0x1024CBA0-0x1024CC60
	public void SnapTo(Vector2 position); // 0x1024CF60-0x1024CF90
	private void SnapTo(Vector2 position, ushort minSid); // 0x1024CE10-0x1024CF60
	private void FixedUpdate(); // 0x1024C440-0x1024C790
	private bool HasMoved(); // 0x1024C8A0-0x1024CAB0
	public override void HandleRpc(byte callId, MessageReader reader); // 0x1024C840-0x1024C8A0
	public override bool Serialize(MessageWriter writer, bool initialState); // 0x1024CC60-0x1024CDD0
	public override void Deserialize(MessageReader reader, bool initialState); // 0x1024C080-0x1024C440
	private static bool SidGreaterThan(ushort newSid, ushort prevSid); // 0x1024CDD0-0x1024CE10
	private void WriteVector2(Vector2 vec, MessageWriter writer); // 0x1024CF90-0x1024D030
	private Vector2 ReadVector2(MessageReader reader); // 0x1024CAD0-0x1024CBA0
}

public class CustomPlayerMenu : MonoBehaviour // TypeDefIndex: 5561
{
	// Fields
	public static CustomPlayerMenu Instance; // 0x00
	public TabButton[] Tabs; // 0x0C
	public Sprite NormalColor; // 0x10
	public Sprite SelectedColor; // 0x14

	// Constructors
	public CustomPlayerMenu(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Start(); // 0x1024D260-0x1024D340
	public void OpenTab(GameObject tab); // 0x1024D140-0x1024D260
	public void Close(bool canMove); // 0x1024D0E0-0x1024D140
}

namespace Hazel
{
	public struct DataReceivedEventArgs // TypeDefIndex: 4165
	{
		// Fields
		public readonly Connection Sender; // 0x00
		public readonly MessageReader Message; // 0x04
		public readonly SendOption SendOption; // 0x08
	
		// Constructors
		public DataReceivedEventArgs(Connection sender, MessageReader msg, SendOption sendOption); // 0x100DFF70-0x100DFFD0
	}
}

namespace QRCoder.Exceptions
{
	public class DataTooLongException : Exception // TypeDefIndex: 4227
	{
		// Constructors
		public DataTooLongException(string eccLevel, string encodingMode, int maxSizeByte); // 0x109BE720-0x109BE7A0
	}
}

public class DateHide : MonoBehaviour // TypeDefIndex: 5287
{
	// Fields
	public int MonthStart; // 0x0C
	public int DayStart; // 0x10
	public int MonthEnd; // 0x14
	public int DayEnd; // 0x18

	// Constructors
	public DateHide(); // 0x101A68C0-0x101A68D0

	// Methods
	private void Awake(); // 0x1024D340-0x1024D510
}

public class DeadBody : MonoBehaviour // TypeDefIndex: 5668
{
	// Fields
	public bool Reported; // 0x0C
	public short KillIdx; // 0x0E
	public byte ParentId; // 0x10
	public Collider2D myCollider; // 0x14

	// Properties
	public Vector2 TruePosition { get; } // 0x1024D810-0x1024D940 

	// Constructors
	public DeadBody(); // 0x101A68C0-0x101A68D0

	// Methods
	public void OnClick(); // 0x1024D510-0x1024D810
}

public enum DeathReason // TypeDefIndex: 5690
{
	Exile = 0,
	Kill = 1,
	Disconnect = 2
}

public class DeconControl : MonoBehaviour, IUsable // TypeDefIndex: 5349
{
	// Fields
	public DeconSystem System; // 0x0C
	public float usableDistance; // 0x10
	public SpriteRenderer Image; // 0x14
	public AudioClip UseSound; // 0x18
	public Button.ButtonClickedEvent OnUse; // 0x1C
	private const float CooldownDuration = 6f; // Metadata: 0x00243B3C
	private float cooldown; // 0x20

	// Properties
	public Sprite UseIcon { get; } // 0x101D1BE0-0x101D1BF0 
	public float UsableDistance { get; } // 0x101AE1F0-0x101AE200 
	public float PercentCool { get; } // 0x1024DE60-0x1024DE80 

	// Constructors
	public DeconControl(); // 0x101AE1C0-0x101AE1E0

	// Methods
	public void SetOutline(bool on, bool mainTarget); // 0x1024DB70-0x1024DCB0
	public void Update(); // 0x1024DCB0-0x1024DD40
	public float CanUse(GameData.PlayerInfo pc, out bool canUse, out bool couldUse); // 0x1024D940-0x1024DB70
	public void Use(); // 0x1024DD40-0x1024DE60
}

public class DeconSystem : MonoBehaviour, ISystemType // TypeDefIndex: 5350
{
	// Fields
	private const byte HeadUpCmd = 1; // Metadata: 0x00243B40
	private const byte HeadDownCmd = 2; // Metadata: 0x00243B41
	private const byte HeadUpInsideCmd = 3; // Metadata: 0x00243B42
	private const byte HeadDownInsideCmd = 4; // Metadata: 0x00243B43
	public SomeKindaDoor UpperDoor; // 0x0C
	public SomeKindaDoor LowerDoor; // 0x10
	public float DoorOpenTime; // 0x14
	public float DeconTime; // 0x18
	public AudioClip SpraySound; // 0x1C
	public ParticleSystem[] Particles; // 0x20
	public SystemTypes TargetSystem; // 0x24
	[CompilerGenerated] // 0x10002030-0x10002050
	private States _CurState_k__BackingField; // 0x25
	private float timer; // 0x28
	public Collider2D RoomArea; // 0x2C
	public DecontamNumController FloorText; // 0x30
	private Coroutine sprayers; // 0x34

	// Properties
	public States CurState { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x1024E960-0x1024E970 0x1024E970-0x1024E980

	// Nested types
	[Flags] // 0x10002030-0x10002050
	public enum States : byte // TypeDefIndex: 5351
	{
		Idle = 0,
		Enter = 1,
		Closed = 2,
		Exit = 4,
		HeadingUp = 8
	}

	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5352
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Action<ParticleSystem> __9__21_0; // 0x04

		// Constructors
		static __c(); // 0x1025A040-0x1025A090
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _CoRunSprayers_b__21_0(ParticleSystem p); // 0x10259D50-0x10259D70
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoRunSprayers_d__21 : IEnumerator<object> // TypeDefIndex: 5353
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public DeconSystem __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoRunSprayers_d__21(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102576E0-0x10257930
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10257930-0x10257980
	}

	// Constructors
	public DeconSystem(); // 0x1024E930-0x1024E960

	// Methods
	public bool Detoriorate(float dt); // 0x1024DF20-0x1024E190
	[IteratorStateMachine] // 0x100345A0-0x100345F0
	private IEnumerator CoRunSprayers(); // 0x1024DE80-0x1024DED0
	private void SoundDynamics(AudioSource source, float dt); // 0x1024E370-0x1024E520
	public void OpenDoor(bool upper); // 0x1024E190-0x1024E1F0
	public void OpenFromInside(bool upper); // 0x1024E1F0-0x1024E250
	public void RepairDamage(PlayerControl player, byte amount); // 0x1024E250-0x1024E2E0
	public void Serialize(MessageWriter writer, bool initialState); // 0x1024E2E0-0x1024E370
	public void Deserialize(MessageReader reader, bool initialState); // 0x1024DED0-0x1024DF20
	private void UpdateDoorsViaState(); // 0x1024E520-0x1024E930
}

public class DecontamNumController : MonoBehaviour // TypeDefIndex: 5354
{
	// Fields
	public SpriteRenderer[] Images; // 0x0C
	public Sprite[] NumImages; // 0x10

	// Constructors
	public DecontamNumController(); // 0x101A68C0-0x101A68D0

	// Methods
	[ContextMenu] // 0x10034800-0x10034830
	public void SpaceEvenly(); // 0x1024EA80-0x1024EBE0
	internal void SetSecond(float curSecond, float maxSecond); // 0x1024E980-0x1024EA80
}

public class DefaultPool : IObjectPool // TypeDefIndex: 5202
{
	// Fields
	private static DefaultPool _instance; // 0x00
	private static object _lock; // 0x04

	// Properties
	public override int InUse { get; } // 0x101D1BE0-0x101D1BF0 
	public override int NotInUse { get; } // 0x101D1BE0-0x101D1BF0 
	public static bool InstanceExists { get; } // 0x1024EE00-0x1024EE80 
	public static DefaultPool Instance { get; } // 0x1024EE80-0x1024F190 

	// Constructors
	public DefaultPool(); // 0x101ACA10-0x101ACA20
	static DefaultPool(); // 0x1024EDB0-0x1024EE00

	// Methods
	public void OnDestroy(); // 0x1024EBE0-0x1024ED10
	public override T Get<T>();
	public override void Reclaim(PoolableBehavior obj); // 0x1024ED10-0x1024EDB0
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000A500-0x1000A520
	public struct DeleteItemResult_t // TypeDefIndex: 4632
	{
		// Fields
		public const int k_iCallback = 3417; // Metadata: 0x002423E3
		public EResult m_eResult; // 0x00
		public PublishedFileId_t m_nPublishedFileId; // 0x08
	}
}

public class DemoKeyboardStick : VirtualJoystick // TypeDefIndex: 5411
{
	// Fields
	public SpriteRenderer UpKey; // 0x28
	public SpriteRenderer DownKey; // 0x2C
	public SpriteRenderer LeftKey; // 0x30
	public SpriteRenderer RightKey; // 0x34

	// Constructors
	public DemoKeyboardStick(); // 0x1024F240-0x1024F250

	// Methods
	protected override void FixedUpdate(); // 0x101A2F90-0x101A2FA0
	public override void UpdateJoystick(FingerBehaviour finger, Vector2 velocity, bool syncFinger); // 0x1024F190-0x1024F240
}

namespace Steamworks
{
	[Serializable]
	public struct DepotId_t : IEquatable<DepotId_t>, IComparable<DepotId_t> // TypeDefIndex: 4821
	{
		// Fields
		public static readonly DepotId_t Invalid; // 0x00
		public uint m_DepotId; // 0x00
	
		// Constructors
		public DepotId_t(uint value); // 0x100900E0-0x100900F0
		static DepotId_t(); // 0x101D2410-0x101D2440
	
		// Methods
		public override string ToString(); // 0x100900C0-0x100900E0
		public override bool Equals(object other); // 0x100913B0-0x100917B0
		public override int GetHashCode(); // 0x100900A0-0x100900C0
		public static bool operator ==(DepotId_t x, DepotId_t y); // 0x1018AFC0-0x1018AFD0
		public static bool operator !=(DepotId_t x, DepotId_t y); // 0x101D2440-0x101D2490
		public static explicit operator DepotId_t(uint value); // 0x1018AFD0-0x1018AFE0
		public static explicit operator uint(DepotId_t that); // 0x1018AFD0-0x1018AFE0
		public bool Equals(DepotId_t other); // 0x10090080-0x100900A0
		public int CompareTo(DepotId_t other); // 0x1008FFF0-0x10090010
	}
}

namespace MS.Internal.Xml.XPath
{
	internal abstract class DescendantBaseQuery : BaseAxisQuery // TypeDefIndex: 1757
	{
		// Fields
		protected bool matchSelf; // 0x2C
		protected bool abbrAxis; // 0x2D
	
		// Constructors
		public DescendantBaseQuery(Query qyParent, string Name, string Prefix, XPathNodeType Type, bool matchSelf, bool abbrAxis); // 0x106BB2E0-0x106BB310
		public DescendantBaseQuery(DescendantBaseQuery other); // 0x106BB2A0-0x106BB2E0
	}

	internal sealed class DescendantOverDescendantQuery : DescendantBaseQuery // TypeDefIndex: 1759
	{
		// Fields
		private int level; // 0x30
	
		// Constructors
		public DescendantOverDescendantQuery(Query qyParent, bool matchSelf, string name, string prefix, XPathNodeType typeTest, bool abbrAxis); // 0x106BB5D0-0x106BB600
		private DescendantOverDescendantQuery(DescendantOverDescendantQuery other); // 0x106BB590-0x106BB5D0
	
		// Methods
		public override void Reset(); // 0x106BB550-0x106BB590
		public override XPathNavigator Advance(); // 0x106BB310-0x106BB440
		private bool MoveToFirstChild(); // 0x106BB4B0-0x106BB4F0
		private bool MoveUpUntillNext(); // 0x106BB4F0-0x106BB550
		public override XPathNodeIterator Clone(); // 0x106BB440-0x106BB4B0
	}

	internal class DescendantQuery : DescendantBaseQuery // TypeDefIndex: 1758
	{
		// Fields
		private XPathNodeIterator nodeIterator; // 0x30
	
		// Constructors
		internal DescendantQuery(Query qyParent, string Name, string Prefix, XPathNodeType Type, bool matchSelf, bool abbrAxis); // 0x106BB2E0-0x106BB310
		public DescendantQuery(DescendantQuery other); // 0x106BB7F0-0x106BB850
	
		// Methods
		public override void Reset(); // 0x106BB550-0x106BB590
		public override XPathNavigator Advance(); // 0x106BB600-0x106BB760
		public override XPathNodeIterator Clone(); // 0x106BB760-0x106BB7F0
	}
}

public class DestroyableSingleton<T> : MonoBehaviour // TypeDefIndex: 5203
	where T : MonoBehaviour
{
	// Fields
	private static T _instance;
	public bool DontDestroy;

	// Properties
	public static bool InstanceExists { get; }
	public static T Instance { get; }

	// Constructors
	public DestroyableSingleton();

	// Methods
	public virtual void Awake();
	public virtual void OnDestroy();
}

public class DetectHeadset // TypeDefIndex: 5288
{
	// Constructors
	public DetectHeadset(); // 0x101A2CD0-0x101A2CE0

	// Methods
	public static bool Detect(); // 0x101D2490-0x101D24A0
}

public class DetectTamper // TypeDefIndex: 5289
{
	// Constructors
	public DetectTamper(); // 0x101A2CD0-0x101A2CE0

	// Methods
	public static bool Detect(); // 0x1024F250-0x1024F270
}

public class DiagnosticGame : Minigame // TypeDefIndex: 5517
{
	// Fields
	public VerticalGauge Gauge; // 0x28
	public SpriteRenderer StartButton; // 0x2C
	public float TimePerStep; // 0x30
	public TextRenderer Text; // 0x34
	private int TargetNum; // 0x38
	public SpriteRenderer[] Targets; // 0x3C
	private Color goodBarColor; // 0x40
	public AudioClip StartSound; // 0x50
	public AudioClip CorrectSound; // 0x54
	public AudioClip TickSound; // 0x58
	private int lastPercent; // 0x5C

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _BlinkButton_d__11 : IEnumerator<object> // TypeDefIndex: 5518
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public DiagnosticGame __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _BlinkButton_d__11(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10255E60-0x10255FB0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10255FB0-0x10256000
	}

	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5519
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Action<SpriteRenderer> __9__15_0; // 0x04
		public static Action<SpriteRenderer> __9__15_1; // 0x08

		// Constructors
		static __c(); // 0x1025A090-0x1025A200
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _Update_b__15_0(SpriteRenderer f); // 0x10259DA0-0x10259DE0
		internal void _Update_b__15_1(SpriteRenderer f); // 0x10259DA0-0x10259DE0
	}

	// Constructors
	public DiagnosticGame(); // 0x1024FAA0-0x1024FB00

	// Methods
	public override void Begin(PlayerTask task); // 0x1024F270-0x1024F350
	[IteratorStateMachine] // 0x10047C90-0x10047CE0
	private IEnumerator BlinkButton(); // 0x1024F350-0x1024F3A0
	public void PickAnomaly(int num); // 0x1024F3A0-0x1024F4D0
	public void StartDiagnostic(); // 0x1024F4D0-0x1024F610
	public void Update(); // 0x1024F660-0x1024FAA0
	[CompilerGenerated] // 0x10002030-0x10002050
	private void _Update_b__15_2(SpriteRenderer f); // 0x1024F610-0x1024F660
}

public class DialBehaviour : MonoBehaviour // TypeDefIndex: 5191
{
	// Fields
	public FloatRange DialRange; // 0x0C
	public Collider2D collider; // 0x10
	public Controller myController; // 0x14
	public float Value; // 0x18
	public bool Engaged; // 0x1C
	public Transform DialTrans; // 0x20
	public Transform DialShadTrans; // 0x24

	// Constructors
	public DialBehaviour(); // 0x1024FDC0-0x1024FE20

	// Methods
	public void Update(); // 0x1024FBA0-0x1024FDC0
	public void SetValue(float angle); // 0x1024FB00-0x1024FBA0
}

public class DialogueBox : MonoBehaviour // TypeDefIndex: 5400
{
	// Fields
	public TextRenderer target; // 0x0C

	// Constructors
	public DialogueBox(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Show(string dialogue); // 0x1024FEC0-0x10250030
	public void Hide(); // 0x1024FE20-0x1024FEC0
}

namespace Hazel
{
	public class DisconnectedEventArgs : EventArgs // TypeDefIndex: 4166
	{
		// Fields
		public readonly string Reason; // 0x08
		public readonly MessageReader Message; // 0x0C
	
		// Constructors
		public DisconnectedEventArgs(string reason, MessageReader message); // 0x109C9600-0x109C9660
	}
}

public class DisconnectPopup : DestroyableSingleton<DisconnectPopup> // TypeDefIndex: 5290
{
	// Fields
	public TextRenderer TextArea; // 0x10

	// Constructors
	public DisconnectPopup(); // 0x10250520-0x10250560

	// Methods
	public void Start(); // 0x10250480-0x10250520
	public void Show(); // 0x10250440-0x10250480
	private void DoShow(); // 0x10250030-0x10250400
	public void ShowCustom(string message); // 0x10250400-0x10250440
	public void Close(); // 0x101C3010-0x101C3040
}

namespace InnerNet
{
	public enum DisconnectReasons // TypeDefIndex: 5933
	{
		ExitGame = 0,
		GameFull = 1,
		GameStarted = 2,
		GameNotFound = 3,
		IncorrectVersion = 5,
		Banned = 6,
		Kicked = 7,
		Custom = 8,
		InvalidName = 9,
		Hacking = 10,
		Destroy = 16,
		Error = 17,
		IncorrectGame = 18,
		ServerRequest = 19,
		ServerFull = 20,
		FocusLostBackground = 207,
		IntentionalLeaving = 208,
		FocusLost = 209,
		NewConnection = 210
	}
}

namespace Discord
{
	public class Discord : IDisposable // TypeDefIndex: 4914
	{
		// Fields
		private GCHandle SelfHandle; // 0x08
		private IntPtr EventsPtr; // 0x0C
		private FFIEvents Events; // 0x10
		private IntPtr ApplicationEventsPtr; // 0x14
		private ApplicationManager.FFIEvents ApplicationEvents; // 0x18
		internal ApplicationManager ApplicationManagerInstance; // 0x1C
		private IntPtr UserEventsPtr; // 0x20
		private UserManager.FFIEvents UserEvents; // 0x24
		internal UserManager UserManagerInstance; // 0x28
		private IntPtr ImageEventsPtr; // 0x2C
		private ImageManager.FFIEvents ImageEvents; // 0x30
		internal ImageManager ImageManagerInstance; // 0x34
		private IntPtr ActivityEventsPtr; // 0x38
		private ActivityManager.FFIEvents ActivityEvents; // 0x3C
		internal ActivityManager ActivityManagerInstance; // 0x4C
		private IntPtr RelationshipEventsPtr; // 0x50
		private RelationshipManager.FFIEvents RelationshipEvents; // 0x54
		internal RelationshipManager RelationshipManagerInstance; // 0x5C
		private IntPtr LobbyEventsPtr; // 0x60
		private LobbyManager.FFIEvents LobbyEvents; // 0x64
		internal LobbyManager LobbyManagerInstance; // 0x84
		private IntPtr NetworkEventsPtr; // 0x88
		private NetworkManager.FFIEvents NetworkEvents; // 0x8C
		internal NetworkManager NetworkManagerInstance; // 0x94
		private IntPtr OverlayEventsPtr; // 0x98
		private OverlayManager.FFIEvents OverlayEvents; // 0x9C
		internal OverlayManager OverlayManagerInstance; // 0xA0
		private IntPtr StorageEventsPtr; // 0xA4
		private StorageManager.FFIEvents StorageEvents; // 0xA8
		internal StorageManager StorageManagerInstance; // 0xAC
		private IntPtr StoreEventsPtr; // 0xB0
		private StoreManager.FFIEvents StoreEvents; // 0xB4
		internal StoreManager StoreManagerInstance; // 0xBC
		private IntPtr VoiceEventsPtr; // 0xC0
		private VoiceManager.FFIEvents VoiceEvents; // 0xC4
		internal VoiceManager VoiceManagerInstance; // 0xC8
		private IntPtr AchievementEventsPtr; // 0xCC
		private AchievementManager.FFIEvents AchievementEvents; // 0xD0
		internal AchievementManager AchievementManagerInstance; // 0xD4
		private IntPtr MethodsPtr; // 0xD8
		private object MethodsStructure; // 0xDC
		private GCHandle? setLogHook; // 0xE0
	
		// Properties
		private FFIMethods Methods { get; } // 0x1076F750-0x1076F850 
	
		// Nested types
		internal struct FFIEvents // TypeDefIndex: 4915
		{
		}
	
		internal struct FFIMethods // TypeDefIndex: 4916
		{
			// Fields
			internal DestroyHandler Destroy; // 0x00
			internal RunCallbacksMethod RunCallbacks; // 0x04
			internal SetLogHookMethod SetLogHook; // 0x08
			internal GetApplicationManagerMethod GetApplicationManager; // 0x0C
			internal GetUserManagerMethod GetUserManager; // 0x10
			internal GetImageManagerMethod GetImageManager; // 0x14
			internal GetActivityManagerMethod GetActivityManager; // 0x18
			internal GetRelationshipManagerMethod GetRelationshipManager; // 0x1C
			internal GetLobbyManagerMethod GetLobbyManager; // 0x20
			internal GetNetworkManagerMethod GetNetworkManager; // 0x24
			internal GetOverlayManagerMethod GetOverlayManager; // 0x28
			internal GetStorageManagerMethod GetStorageManager; // 0x2C
			internal GetStoreManagerMethod GetStoreManager; // 0x30
			internal GetVoiceManagerMethod GetVoiceManager; // 0x34
			internal GetAchievementManagerMethod GetAchievementManager; // 0x38
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void DestroyHandler(IntPtr MethodsPtr); // TypeDefIndex: 4917; 0x1061F960-0x1061FAD0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result RunCallbacksMethod(IntPtr methodsPtr); // TypeDefIndex: 4918; 0x10770520-0x10770680
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void SetLogHookCallback(IntPtr ptr, LogLevel level, string message); // TypeDefIndex: 4919; 0x10344040-0x103442D0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void SetLogHookMethod(IntPtr methodsPtr, LogLevel minLevel, IntPtr callbackData, SetLogHookCallback callback); // TypeDefIndex: 4920; 0x10624180-0x10624420
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate IntPtr GetApplicationManagerMethod(IntPtr discordPtr); // TypeDefIndex: 4921; 0x10770520-0x10770680
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate IntPtr GetUserManagerMethod(IntPtr discordPtr); // TypeDefIndex: 4922; 0x10770520-0x10770680
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate IntPtr GetImageManagerMethod(IntPtr discordPtr); // TypeDefIndex: 4923; 0x10770520-0x10770680
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate IntPtr GetActivityManagerMethod(IntPtr discordPtr); // TypeDefIndex: 4924; 0x10770520-0x10770680
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate IntPtr GetRelationshipManagerMethod(IntPtr discordPtr); // TypeDefIndex: 4925; 0x10770520-0x10770680
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate IntPtr GetLobbyManagerMethod(IntPtr discordPtr); // TypeDefIndex: 4926; 0x10770520-0x10770680
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate IntPtr GetNetworkManagerMethod(IntPtr discordPtr); // TypeDefIndex: 4927; 0x10770520-0x10770680
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate IntPtr GetOverlayManagerMethod(IntPtr discordPtr); // TypeDefIndex: 4928; 0x10770520-0x10770680
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate IntPtr GetStorageManagerMethod(IntPtr discordPtr); // TypeDefIndex: 4929; 0x10770520-0x10770680
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate IntPtr GetStoreManagerMethod(IntPtr discordPtr); // TypeDefIndex: 4930; 0x10770520-0x10770680
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate IntPtr GetVoiceManagerMethod(IntPtr discordPtr); // TypeDefIndex: 4931; 0x10770520-0x10770680
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate IntPtr GetAchievementManagerMethod(IntPtr discordPtr); // TypeDefIndex: 4932; 0x10770520-0x10770680
		}
	
		internal struct FFICreateParams // TypeDefIndex: 4933
		{
			// Fields
			internal long ClientId; // 0x00
			internal ulong Flags; // 0x08
			internal IntPtr Events; // 0x10
			internal IntPtr EventData; // 0x14
			internal IntPtr ApplicationEvents; // 0x18
			internal uint ApplicationVersion; // 0x1C
			internal IntPtr UserEvents; // 0x20
			internal uint UserVersion; // 0x24
			internal IntPtr ImageEvents; // 0x28
			internal uint ImageVersion; // 0x2C
			internal IntPtr ActivityEvents; // 0x30
			internal uint ActivityVersion; // 0x34
			internal IntPtr RelationshipEvents; // 0x38
			internal uint RelationshipVersion; // 0x3C
			internal IntPtr LobbyEvents; // 0x40
			internal uint LobbyVersion; // 0x44
			internal IntPtr NetworkEvents; // 0x48
			internal uint NetworkVersion; // 0x4C
			internal IntPtr OverlayEvents; // 0x50
			internal uint OverlayVersion; // 0x54
			internal IntPtr StorageEvents; // 0x58
			internal uint StorageVersion; // 0x5C
			internal IntPtr StoreEvents; // 0x60
			internal uint StoreVersion; // 0x64
			internal IntPtr VoiceEvents; // 0x68
			internal uint VoiceVersion; // 0x6C
			internal IntPtr AchievementEvents; // 0x70
			internal uint AchievementVersion; // 0x74
		}
	
		public delegate void SetLogHookHandler(LogLevel level, string message); // TypeDefIndex: 4934; 0x101D4290-0x101D4410
	
		// Constructors
		public Discord(long clientId, ulong flags); // 0x1076F340-0x1076F750
	
		// Methods
		private static extern Discord.Result DiscordCreate(uint version, ref FFICreateParams createParams, out IntPtr manager); // 0x1076E1F0-0x1076E260
		private void InitEvents(IntPtr eventsPtr, ref FFIEvents events); // 0x1076F080-0x1076F0E0
		public void Dispose(); // 0x1076E260-0x1076E3F0
		public void RunCallbacks(); // 0x1076F0E0-0x1076F190
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void SetLogHookCallbackImpl(IntPtr ptr, LogLevel level, string message); // 0x1076F190-0x1076F210
		public void SetLogHook(LogLevel minLevel, SetLogHookHandler callback); // 0x1076F210-0x1076F340
		public ApplicationManager GetApplicationManager(); // 0x1076E7B0-0x1076E920
		public UserManager GetUserManager(); // 0x1076EF10-0x1076EFC0
		public ImageManager GetImageManager(); // 0x1076E920-0x1076EA90
		public ActivityManager GetActivityManager(); // 0x1076E590-0x1076E7B0
		public RelationshipManager GetRelationshipManager(); // 0x1076ECD0-0x1076ED90
		public LobbyManager GetLobbyManager(); // 0x1076EA90-0x1076EB50
		public NetworkManager GetNetworkManager(); // 0x1076EB50-0x1076EC10
		public OverlayManager GetOverlayManager(); // 0x1076EC10-0x1076ECD0
		public StorageManager GetStorageManager(); // 0x1076ED90-0x1076EE50
		public StoreManager GetStoreManager(); // 0x1076EE50-0x1076EF10
		public VoiceManager GetVoiceManager(); // 0x1076EFC0-0x1076F080
		public AchievementManager GetAchievementManager(); // 0x1076E3F0-0x1076E590
	}
}

public class DiscordManager : DestroyableSingleton<DiscordManager> // TypeDefIndex: 5291
{
	// Fields
	private const long ClientId = 477175586805252107; // Metadata: 0x00243B16
	[NonSerialized]
	private global::Discord.Discord presence; // 0x10
	private DateTime? StartTime; // 0x18
	private static readonly DateTime epoch; // 0x00

	// Nested types
	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5292
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static ActivityManager.UpdateActivityHandler __9__7_0; // 0x04
		public static ActivityManager.UpdateActivityHandler __9__8_0; // 0x08
		public static ActivityManager.UpdateActivityHandler __9__9_0; // 0x0C
		public static ActivityManager.UpdateActivityHandler __9__10_0; // 0x10
		public static ActivityManager.ClearActivityHandler __9__11_0; // 0x14
		public static ActivityManager.UpdateActivityHandler __9__12_0; // 0x18
		public static ActivityManager.SendRequestReplyHandler __9__15_0; // 0x1C
		public static ActivityManager.SendRequestReplyHandler __9__16_0; // 0x20

		// Constructors
		static __c(); // 0x10259F50-0x10259FA0
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _SetInMenus_b__7_0(Discord.Result r); // 0x101A2F90-0x101A2FA0
		internal void _SetPlayingGame_b__8_0(Discord.Result r); // 0x101A2F90-0x101A2FA0
		internal void _SetHowToPlay_b__9_0(Discord.Result r); // 0x101A2F90-0x101A2FA0
		internal void _SetInLobbyClient_b__10_0(Discord.Result r); // 0x101A2F90-0x101A2FA0
		internal void _ClearPresence_b__11_0(Discord.Result r); // 0x101A2F90-0x101A2FA0
		internal void _SetInLobbyHost_b__12_0(Discord.Result r); // 0x101A2F90-0x101A2FA0
		internal void _RequestRespondYes_b__15_0(Discord.Result r); // 0x101A2F90-0x101A2FA0
		internal void _RequestRespondNo_b__16_0(Discord.Result r); // 0x101A2F90-0x101A2FA0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoJoinGame_d__14 : IEnumerator<object> // TypeDefIndex: 5293
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoJoinGame_d__14(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10256F40-0x10256FE0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10256FE0-0x10257030
	}

	// Constructors
	public DiscordManager(); // 0x10251A40-0x10251A80
	static DiscordManager(); // 0x102519D0-0x10251A40

	// Methods
	public void Start(); // 0x10251680-0x10251890
	private void HandleLog(LogLevel level, string message); // 0x10250AB0-0x10250B30
	private void OnSceneChange(string name); // 0x10250B80-0x10250C00
	public void FixedUpdate(); // 0x10250690-0x10250790
	public void SetInMenus(); // 0x10251350-0x102514A0
	public void SetPlayingGame(); // 0x102514A0-0x10251680
	public void SetHowToPlay(); // 0x10250E00-0x10250F40
	public void SetInLobbyClient(int numPlayers, int gameId); // 0x10250F40-0x10251150
	private void ClearPresence(); // 0x10250560-0x10250640
	public void SetInLobbyHost(int numPlayers, int gameId); // 0x10251150-0x10251350
	private void HandleJoinRequest(string joinSecret); // 0x10250790-0x10250AB0
	[IteratorStateMachine] // 0x1002E740-0x1002E790
	private IEnumerator CoJoinGame(); // 0x10250640-0x10250690
	public void RequestRespondYes(long userId); // 0x10250D20-0x10250E00
	public void RequestRespondNo(long userId); // 0x10250C00-0x10250D20
	public override void OnDestroy(); // 0x10250B30-0x10250B80
	private static long ToUnixTime(DateTime time); // 0x10251890-0x10251940
	[CompilerGenerated] // 0x10002030-0x10002050
	private void _Start_b__3_0(Scene scene, LoadSceneMode mode); // 0x10251940-0x102519D0
}

public enum DiscoveryState // TypeDefIndex: 5864
{
	Off = 0,
	Broadcast = 1
}

public class DiscussBehaviour : MonoBehaviour // TypeDefIndex: 5472
{
	// Fields
	public SpriteRenderer LeftPlayer; // 0x0C
	public SpriteRenderer RightPlayer; // 0x10
	public SpriteRenderer Text; // 0x14
	public FloatRange RotateRange; // 0x18
	public Vector2Range TextTarget; // 0x1C
	public AnimationCurve TextEasing; // 0x2C
	public float Delay; // 0x30
	public float TextDuration; // 0x34
	public float HoldDuration; // 0x38
	private Vector3 vec; // 0x3C

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _PlayAnimation_d__10 : IEnumerator<object> // TypeDefIndex: 5473
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public DiscussBehaviour __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _PlayAnimation_d__10(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10258D80-0x10258EF0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10258EF0-0x10258F40
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _AnimateText_d__12 : IEnumerator<object> // TypeDefIndex: 5474
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public DiscussBehaviour __4__this; // 0x10
		private Vector3 _vec_5__2; // 0x14
		private float _t_5__3; // 0x20

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _AnimateText_d__12(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10255CD0-0x10255E10
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10255E10-0x10255E60
	}

	// Constructors
	public DiscussBehaviour(); // 0x10251D60-0x10251DE0

	// Methods
	[IteratorStateMachine] // 0x100425D0-0x10042620
	public IEnumerator PlayAnimation(); // 0x10251AD0-0x10251B20
	public void Update(); // 0x10251B90-0x10251D60
	[IteratorStateMachine] // 0x10042670-0x100426C0
	private IEnumerator AnimateText(); // 0x10251A80-0x10251AD0
	private void UpdateText(ref Vector3 vec, float p); // 0x10251B20-0x10251B90
}

public class DivertPowerMetagame : Minigame // TypeDefIndex: 5305
{
	// Fields
	public Minigame DistributePrefab; // 0x28
	public Minigame ReceivePrefab; // 0x2C

	// Constructors
	public DivertPowerMetagame(); // 0x101ACA10-0x101ACA20

	// Methods
	public override void Begin(PlayerTask task); // 0x10251DE0-0x10251F10
}

public class DivertPowerMinigame : Minigame // TypeDefIndex: 5306
{
	// Fields
	public SystemTypes[] SliderOrder; // 0x28
	public Collider2D[] Sliders; // 0x2C
	public LineRenderer[] Wires; // 0x30
	public VerticalGauge[] Gauges; // 0x34
	private int sliderId; // 0x38
	public FloatRange SliderY; // 0x3C
	private Controller myController; // 0x40

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass7_0 // TypeDefIndex: 5307
	{
		// Fields
		public DivertPowerTask powerTask; // 0x08

		// Constructors
		public __c__DisplayClass7_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _Begin_b__0(SystemTypes t); // 0x10259EA0-0x10259EC0
	}

	// Constructors
	public DivertPowerMinigame(); // 0x102527C0-0x10252860

	// Methods
	public override void Begin(PlayerTask task); // 0x10251F10-0x102520C0
	public void FixedUpdate(); // 0x102520C0-0x102527C0
}

public class DivertPowerTask : NormalPlayerTask // TypeDefIndex: 5844
{
	// Fields
	public SystemTypes TargetSystem; // 0x44

	// Constructors
	public DivertPowerTask(); // 0x10252B80-0x10252B90

	// Methods
	public override bool ValidConsole(Console console); // 0x10252AD0-0x10252B80
	public override void AppendTaskText(StringBuilder sb); // 0x10252860-0x10252AB0
	[CompilerGenerated] // 0x10002030-0x10002050
	private bool _ValidConsole_b__1_0(TaskSet set); // 0x10252AB0-0x10252AD0
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1004BEF0-0x1004BF10
	public struct DlcInstalled_t // TypeDefIndex: 4485
	{
		// Fields
		public const int k_iCallback = 1005; // Metadata: 0x00242197
		public AppId_t m_nAppID; // 0x00
	}

	public class DllCheck // TypeDefIndex: 4295
	{
		// Constructors
		public DllCheck(); // 0x101A2CD0-0x101A2CE0
	
		// Methods
		public static bool Test(); // 0x101D2490-0x101D24A0
	}
}

namespace MS.Internal.Xml.XPath
{
	internal sealed class DocumentOrderQuery : CacheOutputQuery // TypeDefIndex: 1760
	{
		// Constructors
		public DocumentOrderQuery(Query qyParent); // 0x106BB910-0x106BB920
		private DocumentOrderQuery(DocumentOrderQuery other); // 0x106BB900-0x106BB910
	
		// Methods
		public override object Evaluate(XPathNodeIterator context); // 0x106BB8A0-0x106BB900
		public override XPathNodeIterator Clone(); // 0x106BB850-0x106BB8A0
	}
}

public class DoorBreakerGame : Minigame // TypeDefIndex: 5633
{
	// Fields
	public PlainDoor MyDoor; // 0x28
	public SpriteRenderer[] Buttons; // 0x2C
	public AudioClip FlipSound; // 0x30

	// Nested types
	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5634
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<SpriteRenderer, bool> __9__4_0; // 0x04

		// Constructors
		static __c(); // 0x10259FA0-0x10259FF0
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _FlipSwitch_b__4_0(SpriteRenderer s); // 0x10259D70-0x10259DA0
	}

	// Constructors
	public DoorBreakerGame(); // 0x101ACA10-0x101ACA20

	// Methods
	public void Start(); // 0x10252D90-0x10252F10
	public void FlipSwitch(SpriteRenderer button); // 0x10252B90-0x10252D90
}

public class DoorConsole : MonoBehaviour, IUsable // TypeDefIndex: 5294
{
	// Fields
	private PlainDoor MyDoor; // 0x0C
	public DoorBreakerGame MinigamePrefab; // 0x10
	public SpriteRenderer Image; // 0x14

	// Properties
	public Sprite UseIcon { get; } // 0x101D1BE0-0x101D1BF0 
	public float UsableDistance { get; } // 0x10207240-0x10207250 
	public float PercentCool { get; } // 0x101AE1E0-0x101AE1F0 

	// Constructors
	public DoorConsole(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Awake(); // 0x10252F10-0x10252F50
	public float CanUse(GameData.PlayerInfo pc, out bool canUse, out bool couldUse); // 0x10252F50-0x10253080
	public void SetOutline(bool on, bool mainTarget); // 0x10253080-0x102531C0
	public void Use(); // 0x102531C0-0x10253460
}

public class DoorsSystemType : ISystemType, IActivatable, ISystemTimer, IDoorSystem // TypeDefIndex: 5764
{
	// Fields
	public const byte CloseDoors = 128; // Metadata: 0x00243D39
	public const byte OpenDoor = 64; // Metadata: 0x00243D3A
	private const byte ActionMask = 192; // Metadata: 0x00243D3B
	private const byte IdMask = 31; // Metadata: 0x00243D3C
	private Dictionary<SystemTypes, float> timers; // 0x08

	// Properties
	public bool IsActive { get; } // 0x101A1190-0x101A1520 

	// Constructors
	public DoorsSystemType(); // 0x10253AA0-0x10253B00

	// Methods
	public bool Detoriorate(float deltaTime); // 0x10253640-0x102537A0
	public void RepairDamage(PlayerControl player, byte amount); // 0x10253800-0x10253880
	public void Serialize(MessageWriter writer, bool initialState); // 0x10253880-0x10253AA0
	public void Deserialize(MessageReader reader, bool initialState); // 0x10253530-0x10253640
	public void CloseDoorsOfType(SystemTypes room); // 0x10253460-0x10253530
	public virtual float GetTimer(SystemTypes room); // 0x102537A0-0x10253800
}

public class DotAligner : MonoBehaviour // TypeDefIndex: 5295
{
	// Fields
	public float Width; // 0x0C
	public bool Even; // 0x10

	// Constructors
	public DotAligner(); // 0x10253CD0-0x10253CF0

	// Methods
	public void Start(); // 0x10253CA0-0x10253CD0
	public static void Align(Transform target, float width, bool even); // 0x10253B00-0x10253CA0
}

namespace Steamworks
{
	[CallbackIdentity] // 0x10002630-0x10002650
	public struct DownloadClanActivityCountsResult_t // TypeDefIndex: 4501
	{
		// Fields
		public const int k_iCallback = 341; // Metadata: 0x002421D7
		public bool m_bSuccess; // 0x00
	}

	[CallbackIdentity] // 0x1000A2B0-0x1000A2D0
	public struct DownloadItemResult_t // TypeDefIndex: 4621
	{
		// Fields
		public const int k_iCallback = 3406; // Metadata: 0x002423B7
		public AppId_t m_unAppID; // 0x00
		public PublishedFileId_t m_nPublishedFileId; // 0x08
		public EResult m_eResult; // 0x10
	}
}

public class DragSpecimen : MonoBehaviour // TypeDefIndex: 5296
{
	// Constructors
	public DragSpecimen(); // 0x101A68C0-0x101A68D0

	// Methods
	private void Start(); // 0x101A2F90-0x101A2FA0
	private void Update(); // 0x101A2F90-0x101A2FA0
}

public enum DragState // TypeDefIndex: 5197
{
	NoTouch = 0,
	TouchStart = 1,
	Holding = 2,
	Dragging = 3,
	Released = 4
}

public class DrillMinigame : Minigame // TypeDefIndex: 5635
{
	// Fields
	public SpriteRenderer CaseImage; // 0x28
	public SpriteRenderer StatusImage; // 0x2C
	public Sprite FineStatus; // 0x30
	public SpriteAnim[] Buttons; // 0x34
	public AnimationClip BadAnim; // 0x38
	public AudioClip ButtonSound; // 0x3C
	private int MaxState; // 0x40
	private int[] states; // 0x44

	// Constructors
	public DrillMinigame(); // 0x102542E0-0x10254330

	// Methods
	public void Start(); // 0x10254250-0x102542C0
	public override void Begin(PlayerTask task); // 0x10253CF0-0x10253F20
	public void FixButton(SpriteAnim button); // 0x10253F20-0x10254250
	[CompilerGenerated] // 0x10002030-0x10002050
	private bool _Begin_b__9_0(int s); // 0x102542C0-0x102542E0
	[CompilerGenerated] // 0x10002030-0x10002050
	private bool _FixButton_b__10_0(int ss); // 0x102542C0-0x102542E0
}

public class DripBehaviour : MonoBehaviour // TypeDefIndex: 5297
{
	// Fields
	public Vector2Range SpawnArea; // 0x0C
	public FloatRange FirstWait; // 0x1C
	public FloatRange Frequency; // 0x20
	public SpriteAnim myAnim; // 0x24
	public Collider2D[] IgnoreAreas; // 0x28
	public bool FixDepth; // 0x2C

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass7_0 // TypeDefIndex: 5298
	{
		// Fields
		public Vector3 pos; // 0x08

		// Constructors
		public __c__DisplayClass7_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _Run_b__0(Collider2D i); // 0x10259EC0-0x10259F50
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Run_d__7 : IEnumerator<object> // TypeDefIndex: 5299
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public DripBehaviour __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Run_d__7(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10259440-0x10259740
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10259740-0x10259790
	}

	// Constructors
	public DripBehaviour(); // 0x102543E0-0x10254480

	// Methods
	public void Start(); // 0x10254380-0x102543E0
	[IteratorStateMachine] // 0x1002FBD0-0x1002FC20
	private IEnumerator Run(); // 0x10254330-0x10254380
}

public class DummyBehaviour : MonoBehaviour // TypeDefIndex: 5669
{
	// Fields
	private PlayerControl myPlayer; // 0x0C
	private FloatRange voteTime; // 0x10
	private bool voted; // 0x14

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _DoVote_d__5 : IEnumerator<object> // TypeDefIndex: 5670
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public DummyBehaviour __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _DoVote_d__5(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10258470-0x102585D0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102585D0-0x10258620
	}

	// Constructors
	public DummyBehaviour(); // 0x102545F0-0x10254660

	// Methods
	public void Start(); // 0x102544D0-0x10254510
	public void Update(); // 0x10254510-0x102545F0
	[IteratorStateMachine] // 0x10012180-0x100121D0
	private IEnumerator DoVote(); // 0x10254480-0x102544D0
}

namespace GoogleMobileAds.Common
{
	public class DummyClient : IBannerClient, IInterstitialClient, IRewardBasedVideoAdClient, IAdLoaderClient, IMobileAdsClient // TypeDefIndex: 5947
	{
		// Fields
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdLoaded; // 0x08
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<AdFailedToLoadEventArgs> OnAdFailedToLoad; // 0x0C
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdOpening; // 0x10
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdStarted; // 0x14
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdClosed; // 0x18
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<Reward> OnAdRewarded; // 0x1C
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdLeavingApplication; // 0x20
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdCompleted; // 0x24
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<CustomNativeEventArgs> OnCustomNativeTemplateAdLoaded; // 0x28
	
		// Properties
		public string UserId { get; set; } // 0x10273120-0x102731C0 0x10273640-0x102736E0
	
		// Events
		public event EventHandler<EventArgs> OnAdLoaded {
			add; // 0x10272EA0-0x10272F20
			remove; // 0x102733C0-0x10273440
		}
		public event EventHandler<AdFailedToLoadEventArgs> OnAdFailedToLoad {
			add; // 0x10272DA0-0x10272E20
			remove; // 0x102732C0-0x10273340
		}
		public event EventHandler<EventArgs> OnAdOpening {
			add; // 0x10272F20-0x10272FA0
			remove; // 0x10273440-0x102734C0
		}
		public event EventHandler<EventArgs> OnAdStarted {
			add; // 0x10273020-0x102730A0
			remove; // 0x10273540-0x102735C0
		}
		public event EventHandler<EventArgs> OnAdClosed {
			add; // 0x10272CA0-0x10272D20
			remove; // 0x102731C0-0x10273240
		}
		public event EventHandler<Reward> OnAdRewarded {
			add; // 0x10272FA0-0x10273020
			remove; // 0x102734C0-0x10273540
		}
		public event EventHandler<EventArgs> OnAdLeavingApplication {
			add; // 0x10272E20-0x10272EA0
			remove; // 0x10273340-0x102733C0
		}
		public event EventHandler<EventArgs> OnAdCompleted {
			add; // 0x10272D20-0x10272DA0
			remove; // 0x10273240-0x102732C0
		}
		public event EventHandler<CustomNativeEventArgs> OnCustomNativeTemplateAdLoaded {
			add; // 0x102730A0-0x10273120
			remove; // 0x102735C0-0x10273640
		}
	
		// Constructors
		public DummyClient(); // 0x10272BF0-0x10272CA0
	
		// Methods
		public void Initialize(string appId); // 0x10272150-0x102721F0
		public void Initialize(Action<InitializationStatus> initCompleteAction); // 0x102721F0-0x10272290
		public void SetApplicationMuted(bool muted); // 0x10272650-0x102726F0
		public void SetApplicationVolume(float volume); // 0x102726F0-0x10272790
		public void SetiOSAppPauseOnBackground(bool pause); // 0x10272970-0x10272A10
		public float GetDeviceScale(); // 0x10271ED0-0x10271F70
		public int GetDeviceSafeWidth(); // 0x10271E30-0x10271ED0
		public void CreateBannerView(string adUnitId, AdSize adSize, AdPosition position); // 0x10271A70-0x10271B10
		public void CreateBannerView(string adUnitId, AdSize adSize, int positionX, int positionY); // 0x102719D0-0x10271A70
		public void LoadAd(AdRequest request); // 0x102723D0-0x10272470
		public void ShowBannerView(); // 0x10272A10-0x10272AB0
		public void HideBannerView(); // 0x102720B0-0x10272150
		public void DestroyBannerView(); // 0x10271C50-0x10271CF0
		public float GetHeightInPixels(); // 0x10271F70-0x10272010
		public float GetWidthInPixels(); // 0x10272010-0x102720B0
		public void SetPosition(AdPosition adPosition); // 0x10272790-0x10272830
		public void SetPosition(int x, int y); // 0x10272830-0x102728D0
		public void CreateInterstitialAd(string adUnitId); // 0x10271B10-0x10271BB0
		public bool IsLoaded(); // 0x10272290-0x10272330
		public void ShowInterstitial(); // 0x10272AB0-0x10272B50
		public void DestroyInterstitial(); // 0x10271CF0-0x10271D90
		public void CreateRewardBasedVideoAd(); // 0x10271BB0-0x10271C50
		public void SetUserId(string userId); // 0x102728D0-0x10272970
		public void LoadAd(AdRequest request, string adUnitId); // 0x10272330-0x102723D0
		public void DestroyRewardBasedVideoAd(); // 0x10271D90-0x10271E30
		public void ShowRewardBasedVideoAd(); // 0x10272B50-0x10272BF0
		public void CreateAdLoader(AdLoader.Builder builder); // 0x10271930-0x102719D0
		public void Load(AdRequest request); // 0x10272470-0x10272510
		public void SetAdSize(AdSize adSize); // 0x102725B0-0x10272650
		public string MediationAdapterClassName(); // 0x10272510-0x102725B0
	}
}

public class DummyConsole : MonoBehaviour // TypeDefIndex: 5367
{
	// Fields
	public int ConsoleId; // 0x0C
	public PlayerAnimator[] Players; // 0x10
	public float UseDistance; // 0x14
	[HideInInspector] // 0x10002030-0x10002050
	private SpriteRenderer rend; // 0x18

	// Constructors
	public DummyConsole(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Start(); // 0x102549C0-0x10254A00
	public void FixedUpdate(); // 0x10254660-0x102549C0
}

public class DynamicSound : ISoundPlayer // TypeDefIndex: 5817
{
	// Fields
	[CompilerGenerated] // 0x10002030-0x10002050
	private string _Name_k__BackingField; // 0x08
	[CompilerGenerated] // 0x10002030-0x10002050
	private AudioSource _Player_k__BackingField; // 0x0C
	public GetDynamicsFunction volumeFunc; // 0x10

	// Properties
	public string Name { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101B4FF0-0x101B5000 0x101D22D0-0x101D22E0
	public AudioSource Player { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101AE200-0x101AE210 0x101AEE90-0x101AEEA0

	// Nested types
	public delegate void GetDynamicsFunction(AudioSource source, float dt); // TypeDefIndex: 5818; 0x10255530-0x102559B0

	// Constructors
	public DynamicSound(); // 0x101A2CD0-0x101A2CE0

	// Methods
	public void Update(float dt); // 0x10254A60-0x10254AB0
	public void SetTarget(AudioClip clip, GetDynamicsFunction volumeFunc); // 0x10254A00-0x10254A60
}

namespace Steamworks
{
	public enum EAccountType // TypeDefIndex: 4730
	{
		k_EAccountTypeInvalid = 0,
		k_EAccountTypeIndividual = 1,
		k_EAccountTypeMultiseat = 2,
		k_EAccountTypeGameServer = 3,
		k_EAccountTypeAnonGameServer = 4,
		k_EAccountTypePending = 5,
		k_EAccountTypeContentServer = 6,
		k_EAccountTypeClan = 7,
		k_EAccountTypeChat = 8,
		k_EAccountTypeConsoleUser = 9,
		k_EAccountTypeAnonUser = 10,
		k_EAccountTypeMax = 11
	}

	[Flags] // 0x10002030-0x10002050
	public enum EAppOwnershipFlags // TypeDefIndex: 4732
	{
		k_EAppOwnershipFlags_None = 0,
		k_EAppOwnershipFlags_OwnsLicense = 1,
		k_EAppOwnershipFlags_FreeLicense = 2,
		k_EAppOwnershipFlags_RegionRestricted = 4,
		k_EAppOwnershipFlags_LowViolence = 8,
		k_EAppOwnershipFlags_InvalidPlatform = 16,
		k_EAppOwnershipFlags_SharedLicense = 32,
		k_EAppOwnershipFlags_FreeWeekend = 64,
		k_EAppOwnershipFlags_RetailLicense = 128,
		k_EAppOwnershipFlags_LicenseLocked = 256,
		k_EAppOwnershipFlags_LicensePending = 512,
		k_EAppOwnershipFlags_LicenseExpired = 1024,
		k_EAppOwnershipFlags_LicensePermanent = 2048,
		k_EAppOwnershipFlags_LicenseRecurring = 4096,
		k_EAppOwnershipFlags_LicenseCanceled = 8192,
		k_EAppOwnershipFlags_AutoGrant = 16384,
		k_EAppOwnershipFlags_PendingGift = 32768,
		k_EAppOwnershipFlags_RentalNotActivated = 65536,
		k_EAppOwnershipFlags_Rental = 131072,
		k_EAppOwnershipFlags_SiteLicense = 262144
	}

	public enum EAppReleaseState // TypeDefIndex: 4731
	{
		k_EAppReleaseState_Unknown = 0,
		k_EAppReleaseState_Unavailable = 1,
		k_EAppReleaseState_Prerelease = 2,
		k_EAppReleaseState_PreloadOnly = 3,
		k_EAppReleaseState_Released = 4
	}

	[Flags] // 0x10002030-0x10002050
	public enum EAppType // TypeDefIndex: 4733
	{
		k_EAppType_DepotOnly = -2147483647,
		k_EAppType_Invalid = 0,
		k_EAppType_Game = 1,
		k_EAppType_Application = 2,
		k_EAppType_Tool = 4,
		k_EAppType_Demo = 8,
		k_EAppType_Media_DEPRECATED = 16,
		k_EAppType_DLC = 32,
		k_EAppType_Guide = 64,
		k_EAppType_Driver = 128,
		k_EAppType_Config = 256,
		k_EAppType_Hardware = 512,
		k_EAppType_Franchise = 1024,
		k_EAppType_Video = 2048,
		k_EAppType_Plugin = 4096,
		k_EAppType_Music = 8192,
		k_EAppType_Series = 16384,
		k_EAppType_Comic = 32768,
		k_EAppType_Shortcut = 1073741824
	}

	public enum EAuthSessionResponse // TypeDefIndex: 4728
	{
		k_EAuthSessionResponseOK = 0,
		k_EAuthSessionResponseUserNotConnectedToSteam = 1,
		k_EAuthSessionResponseNoLicenseOrExpired = 2,
		k_EAuthSessionResponseVACBanned = 3,
		k_EAuthSessionResponseLoggedInElseWhere = 4,
		k_EAuthSessionResponseVACCheckTimedOut = 5,
		k_EAuthSessionResponseAuthTicketCanceled = 6,
		k_EAuthSessionResponseAuthTicketInvalidAlreadyUsed = 7,
		k_EAuthSessionResponseAuthTicketInvalid = 8,
		k_EAuthSessionResponsePublisherIssuedBan = 9
	}

	public enum EBeginAuthSessionResult // TypeDefIndex: 4727
	{
		k_EBeginAuthSessionResultOK = 0,
		k_EBeginAuthSessionResultInvalidTicket = 1,
		k_EBeginAuthSessionResultDuplicateRequest = 2,
		k_EBeginAuthSessionResultInvalidVersion = 3,
		k_EBeginAuthSessionResultGameMismatch = 4,
		k_EBeginAuthSessionResultExpiredTicket = 5
	}

	public enum EBroadcastUploadResult // TypeDefIndex: 4740
	{
		k_EBroadcastUploadResultNone = 0,
		k_EBroadcastUploadResultOK = 1,
		k_EBroadcastUploadResultInitFailed = 2,
		k_EBroadcastUploadResultFrameFailed = 3,
		k_EBroadcastUploadResultTimeout = 4,
		k_EBroadcastUploadResultBandwidthExceeded = 5,
		k_EBroadcastUploadResultLowFPS = 6,
		k_EBroadcastUploadResultMissingKeyFrames = 7,
		k_EBroadcastUploadResultNoConnection = 8,
		k_EBroadcastUploadResultRelayFailed = 9,
		k_EBroadcastUploadResultSettingsChanged = 10,
		k_EBroadcastUploadResultMissingAudio = 11,
		k_EBroadcastUploadResultTooFarBehind = 12,
		k_EBroadcastUploadResultTranscodeBehind = 13
	}

	public enum EChatEntryType // TypeDefIndex: 4735
	{
		k_EChatEntryTypeInvalid = 0,
		k_EChatEntryTypeChatMsg = 1,
		k_EChatEntryTypeTyping = 2,
		k_EChatEntryTypeInviteGame = 3,
		k_EChatEntryTypeEmote = 4,
		k_EChatEntryTypeLeftConversation = 6,
		k_EChatEntryTypeEntered = 7,
		k_EChatEntryTypeWasKicked = 8,
		k_EChatEntryTypeWasBanned = 9,
		k_EChatEntryTypeDisconnected = 10,
		k_EChatEntryTypeHistoricalChat = 11,
		k_EChatEntryTypeLinkBlocked = 14
	}

	[Flags] // 0x10002030-0x10002050
	public enum EChatMemberStateChange // TypeDefIndex: 4689
	{
		k_EChatMemberStateChangeEntered = 1,
		k_EChatMemberStateChangeLeft = 2,
		k_EChatMemberStateChangeDisconnected = 4,
		k_EChatMemberStateChangeKicked = 8,
		k_EChatMemberStateChangeBanned = 16
	}

	public enum EChatRoomEnterResponse // TypeDefIndex: 4736
	{
		k_EChatRoomEnterResponseSuccess = 1,
		k_EChatRoomEnterResponseDoesntExist = 2,
		k_EChatRoomEnterResponseNotAllowed = 3,
		k_EChatRoomEnterResponseFull = 4,
		k_EChatRoomEnterResponseError = 5,
		k_EChatRoomEnterResponseBanned = 6,
		k_EChatRoomEnterResponseLimited = 7,
		k_EChatRoomEnterResponseClanDisabled = 8,
		k_EChatRoomEnterResponseCommunityBan = 9,
		k_EChatRoomEnterResponseMemberBlockedYou = 10,
		k_EChatRoomEnterResponseYouBlockedMember = 11,
		k_EChatRoomEnterResponseRatelimitExceeded = 15
	}

	[Flags] // 0x10002030-0x10002050
	public enum EChatSteamIDInstanceFlags // TypeDefIndex: 4737
	{
		k_EChatAccountInstanceMask = 4095,
		k_EChatInstanceFlagMMSLobby = 131072,
		k_EChatInstanceFlagLobby = 262144,
		k_EChatInstanceFlagClan = 524288
	}

	public enum ECheckFileSignature // TypeDefIndex: 4721
	{
		k_ECheckFileSignatureInvalidSignature = 0,
		k_ECheckFileSignatureValidSignature = 1,
		k_ECheckFileSignatureFileNotFound = 2,
		k_ECheckFileSignatureNoSignaturesFoundForThisApp = 3,
		k_ECheckFileSignatureNoSignaturesFoundForThisFile = 4
	}

	public enum EControllerActionOrigin // TypeDefIndex: 4672
	{
		k_EControllerActionOrigin_None = 0,
		k_EControllerActionOrigin_A = 1,
		k_EControllerActionOrigin_B = 2,
		k_EControllerActionOrigin_X = 3,
		k_EControllerActionOrigin_Y = 4,
		k_EControllerActionOrigin_LeftBumper = 5,
		k_EControllerActionOrigin_RightBumper = 6,
		k_EControllerActionOrigin_LeftGrip = 7,
		k_EControllerActionOrigin_RightGrip = 8,
		k_EControllerActionOrigin_Start = 9,
		k_EControllerActionOrigin_Back = 10,
		k_EControllerActionOrigin_LeftPad_Touch = 11,
		k_EControllerActionOrigin_LeftPad_Swipe = 12,
		k_EControllerActionOrigin_LeftPad_Click = 13,
		k_EControllerActionOrigin_LeftPad_DPadNorth = 14,
		k_EControllerActionOrigin_LeftPad_DPadSouth = 15,
		k_EControllerActionOrigin_LeftPad_DPadWest = 16,
		k_EControllerActionOrigin_LeftPad_DPadEast = 17,
		k_EControllerActionOrigin_RightPad_Touch = 18,
		k_EControllerActionOrigin_RightPad_Swipe = 19,
		k_EControllerActionOrigin_RightPad_Click = 20,
		k_EControllerActionOrigin_RightPad_DPadNorth = 21,
		k_EControllerActionOrigin_RightPad_DPadSouth = 22,
		k_EControllerActionOrigin_RightPad_DPadWest = 23,
		k_EControllerActionOrigin_RightPad_DPadEast = 24,
		k_EControllerActionOrigin_LeftTrigger_Pull = 25,
		k_EControllerActionOrigin_LeftTrigger_Click = 26,
		k_EControllerActionOrigin_RightTrigger_Pull = 27,
		k_EControllerActionOrigin_RightTrigger_Click = 28,
		k_EControllerActionOrigin_LeftStick_Move = 29,
		k_EControllerActionOrigin_LeftStick_Click = 30,
		k_EControllerActionOrigin_LeftStick_DPadNorth = 31,
		k_EControllerActionOrigin_LeftStick_DPadSouth = 32,
		k_EControllerActionOrigin_LeftStick_DPadWest = 33,
		k_EControllerActionOrigin_LeftStick_DPadEast = 34,
		k_EControllerActionOrigin_Gyro_Move = 35,
		k_EControllerActionOrigin_Gyro_Pitch = 36,
		k_EControllerActionOrigin_Gyro_Yaw = 37,
		k_EControllerActionOrigin_Gyro_Roll = 38,
		k_EControllerActionOrigin_PS4_X = 39,
		k_EControllerActionOrigin_PS4_Circle = 40,
		k_EControllerActionOrigin_PS4_Triangle = 41,
		k_EControllerActionOrigin_PS4_Square = 42,
		k_EControllerActionOrigin_PS4_LeftBumper = 43,
		k_EControllerActionOrigin_PS4_RightBumper = 44,
		k_EControllerActionOrigin_PS4_Options = 45,
		k_EControllerActionOrigin_PS4_Share = 46,
		k_EControllerActionOrigin_PS4_LeftPad_Touch = 47,
		k_EControllerActionOrigin_PS4_LeftPad_Swipe = 48,
		k_EControllerActionOrigin_PS4_LeftPad_Click = 49,
		k_EControllerActionOrigin_PS4_LeftPad_DPadNorth = 50,
		k_EControllerActionOrigin_PS4_LeftPad_DPadSouth = 51,
		k_EControllerActionOrigin_PS4_LeftPad_DPadWest = 52,
		k_EControllerActionOrigin_PS4_LeftPad_DPadEast = 53,
		k_EControllerActionOrigin_PS4_RightPad_Touch = 54,
		k_EControllerActionOrigin_PS4_RightPad_Swipe = 55,
		k_EControllerActionOrigin_PS4_RightPad_Click = 56,
		k_EControllerActionOrigin_PS4_RightPad_DPadNorth = 57,
		k_EControllerActionOrigin_PS4_RightPad_DPadSouth = 58,
		k_EControllerActionOrigin_PS4_RightPad_DPadWest = 59,
		k_EControllerActionOrigin_PS4_RightPad_DPadEast = 60,
		k_EControllerActionOrigin_PS4_CenterPad_Touch = 61,
		k_EControllerActionOrigin_PS4_CenterPad_Swipe = 62,
		k_EControllerActionOrigin_PS4_CenterPad_Click = 63,
		k_EControllerActionOrigin_PS4_CenterPad_DPadNorth = 64,
		k_EControllerActionOrigin_PS4_CenterPad_DPadSouth = 65,
		k_EControllerActionOrigin_PS4_CenterPad_DPadWest = 66,
		k_EControllerActionOrigin_PS4_CenterPad_DPadEast = 67,
		k_EControllerActionOrigin_PS4_LeftTrigger_Pull = 68,
		k_EControllerActionOrigin_PS4_LeftTrigger_Click = 69,
		k_EControllerActionOrigin_PS4_RightTrigger_Pull = 70,
		k_EControllerActionOrigin_PS4_RightTrigger_Click = 71,
		k_EControllerActionOrigin_PS4_LeftStick_Move = 72,
		k_EControllerActionOrigin_PS4_LeftStick_Click = 73,
		k_EControllerActionOrigin_PS4_LeftStick_DPadNorth = 74,
		k_EControllerActionOrigin_PS4_LeftStick_DPadSouth = 75,
		k_EControllerActionOrigin_PS4_LeftStick_DPadWest = 76,
		k_EControllerActionOrigin_PS4_LeftStick_DPadEast = 77,
		k_EControllerActionOrigin_PS4_RightStick_Move = 78,
		k_EControllerActionOrigin_PS4_RightStick_Click = 79,
		k_EControllerActionOrigin_PS4_RightStick_DPadNorth = 80,
		k_EControllerActionOrigin_PS4_RightStick_DPadSouth = 81,
		k_EControllerActionOrigin_PS4_RightStick_DPadWest = 82,
		k_EControllerActionOrigin_PS4_RightStick_DPadEast = 83,
		k_EControllerActionOrigin_PS4_DPad_North = 84,
		k_EControllerActionOrigin_PS4_DPad_South = 85,
		k_EControllerActionOrigin_PS4_DPad_West = 86,
		k_EControllerActionOrigin_PS4_DPad_East = 87,
		k_EControllerActionOrigin_PS4_Gyro_Move = 88,
		k_EControllerActionOrigin_PS4_Gyro_Pitch = 89,
		k_EControllerActionOrigin_PS4_Gyro_Yaw = 90,
		k_EControllerActionOrigin_PS4_Gyro_Roll = 91,
		k_EControllerActionOrigin_XBoxOne_A = 92,
		k_EControllerActionOrigin_XBoxOne_B = 93,
		k_EControllerActionOrigin_XBoxOne_X = 94,
		k_EControllerActionOrigin_XBoxOne_Y = 95,
		k_EControllerActionOrigin_XBoxOne_LeftBumper = 96,
		k_EControllerActionOrigin_XBoxOne_RightBumper = 97,
		k_EControllerActionOrigin_XBoxOne_Menu = 98,
		k_EControllerActionOrigin_XBoxOne_View = 99,
		k_EControllerActionOrigin_XBoxOne_LeftTrigger_Pull = 100,
		k_EControllerActionOrigin_XBoxOne_LeftTrigger_Click = 101,
		k_EControllerActionOrigin_XBoxOne_RightTrigger_Pull = 102,
		k_EControllerActionOrigin_XBoxOne_RightTrigger_Click = 103,
		k_EControllerActionOrigin_XBoxOne_LeftStick_Move = 104,
		k_EControllerActionOrigin_XBoxOne_LeftStick_Click = 105,
		k_EControllerActionOrigin_XBoxOne_LeftStick_DPadNorth = 106,
		k_EControllerActionOrigin_XBoxOne_LeftStick_DPadSouth = 107,
		k_EControllerActionOrigin_XBoxOne_LeftStick_DPadWest = 108,
		k_EControllerActionOrigin_XBoxOne_LeftStick_DPadEast = 109,
		k_EControllerActionOrigin_XBoxOne_RightStick_Move = 110,
		k_EControllerActionOrigin_XBoxOne_RightStick_Click = 111,
		k_EControllerActionOrigin_XBoxOne_RightStick_DPadNorth = 112,
		k_EControllerActionOrigin_XBoxOne_RightStick_DPadSouth = 113,
		k_EControllerActionOrigin_XBoxOne_RightStick_DPadWest = 114,
		k_EControllerActionOrigin_XBoxOne_RightStick_DPadEast = 115,
		k_EControllerActionOrigin_XBoxOne_DPad_North = 116,
		k_EControllerActionOrigin_XBoxOne_DPad_South = 117,
		k_EControllerActionOrigin_XBoxOne_DPad_West = 118,
		k_EControllerActionOrigin_XBoxOne_DPad_East = 119,
		k_EControllerActionOrigin_XBox360_A = 120,
		k_EControllerActionOrigin_XBox360_B = 121,
		k_EControllerActionOrigin_XBox360_X = 122,
		k_EControllerActionOrigin_XBox360_Y = 123,
		k_EControllerActionOrigin_XBox360_LeftBumper = 124,
		k_EControllerActionOrigin_XBox360_RightBumper = 125,
		k_EControllerActionOrigin_XBox360_Start = 126,
		k_EControllerActionOrigin_XBox360_Back = 127,
		k_EControllerActionOrigin_XBox360_LeftTrigger_Pull = 128,
		k_EControllerActionOrigin_XBox360_LeftTrigger_Click = 129,
		k_EControllerActionOrigin_XBox360_RightTrigger_Pull = 130,
		k_EControllerActionOrigin_XBox360_RightTrigger_Click = 131,
		k_EControllerActionOrigin_XBox360_LeftStick_Move = 132,
		k_EControllerActionOrigin_XBox360_LeftStick_Click = 133,
		k_EControllerActionOrigin_XBox360_LeftStick_DPadNorth = 134,
		k_EControllerActionOrigin_XBox360_LeftStick_DPadSouth = 135,
		k_EControllerActionOrigin_XBox360_LeftStick_DPadWest = 136,
		k_EControllerActionOrigin_XBox360_LeftStick_DPadEast = 137,
		k_EControllerActionOrigin_XBox360_RightStick_Move = 138,
		k_EControllerActionOrigin_XBox360_RightStick_Click = 139,
		k_EControllerActionOrigin_XBox360_RightStick_DPadNorth = 140,
		k_EControllerActionOrigin_XBox360_RightStick_DPadSouth = 141,
		k_EControllerActionOrigin_XBox360_RightStick_DPadWest = 142,
		k_EControllerActionOrigin_XBox360_RightStick_DPadEast = 143,
		k_EControllerActionOrigin_XBox360_DPad_North = 144,
		k_EControllerActionOrigin_XBox360_DPad_South = 145,
		k_EControllerActionOrigin_XBox360_DPad_West = 146,
		k_EControllerActionOrigin_XBox360_DPad_East = 147,
		k_EControllerActionOrigin_SteamV2_A = 148,
		k_EControllerActionOrigin_SteamV2_B = 149,
		k_EControllerActionOrigin_SteamV2_X = 150,
		k_EControllerActionOrigin_SteamV2_Y = 151,
		k_EControllerActionOrigin_SteamV2_LeftBumper = 152,
		k_EControllerActionOrigin_SteamV2_RightBumper = 153,
		k_EControllerActionOrigin_SteamV2_LeftGrip = 154,
		k_EControllerActionOrigin_SteamV2_RightGrip = 155,
		k_EControllerActionOrigin_SteamV2_LeftGrip_Upper = 156,
		k_EControllerActionOrigin_SteamV2_RightGrip_Upper = 157,
		k_EControllerActionOrigin_SteamV2_LeftBumper_Pressure = 158,
		k_EControllerActionOrigin_SteamV2_RightBumper_Pressure = 159,
		k_EControllerActionOrigin_SteamV2_LeftGrip_Pressure = 160,
		k_EControllerActionOrigin_SteamV2_RightGrip_Pressure = 161,
		k_EControllerActionOrigin_SteamV2_LeftGrip_Upper_Pressure = 162,
		k_EControllerActionOrigin_SteamV2_RightGrip_Upper_Pressure = 163,
		k_EControllerActionOrigin_SteamV2_Start = 164,
		k_EControllerActionOrigin_SteamV2_Back = 165,
		k_EControllerActionOrigin_SteamV2_LeftPad_Touch = 166,
		k_EControllerActionOrigin_SteamV2_LeftPad_Swipe = 167,
		k_EControllerActionOrigin_SteamV2_LeftPad_Click = 168,
		k_EControllerActionOrigin_SteamV2_LeftPad_Pressure = 169,
		k_EControllerActionOrigin_SteamV2_LeftPad_DPadNorth = 170,
		k_EControllerActionOrigin_SteamV2_LeftPad_DPadSouth = 171,
		k_EControllerActionOrigin_SteamV2_LeftPad_DPadWest = 172,
		k_EControllerActionOrigin_SteamV2_LeftPad_DPadEast = 173,
		k_EControllerActionOrigin_SteamV2_RightPad_Touch = 174,
		k_EControllerActionOrigin_SteamV2_RightPad_Swipe = 175,
		k_EControllerActionOrigin_SteamV2_RightPad_Click = 176,
		k_EControllerActionOrigin_SteamV2_RightPad_Pressure = 177,
		k_EControllerActionOrigin_SteamV2_RightPad_DPadNorth = 178,
		k_EControllerActionOrigin_SteamV2_RightPad_DPadSouth = 179,
		k_EControllerActionOrigin_SteamV2_RightPad_DPadWest = 180,
		k_EControllerActionOrigin_SteamV2_RightPad_DPadEast = 181,
		k_EControllerActionOrigin_SteamV2_LeftTrigger_Pull = 182,
		k_EControllerActionOrigin_SteamV2_LeftTrigger_Click = 183,
		k_EControllerActionOrigin_SteamV2_RightTrigger_Pull = 184,
		k_EControllerActionOrigin_SteamV2_RightTrigger_Click = 185,
		k_EControllerActionOrigin_SteamV2_LeftStick_Move = 186,
		k_EControllerActionOrigin_SteamV2_LeftStick_Click = 187,
		k_EControllerActionOrigin_SteamV2_LeftStick_DPadNorth = 188,
		k_EControllerActionOrigin_SteamV2_LeftStick_DPadSouth = 189,
		k_EControllerActionOrigin_SteamV2_LeftStick_DPadWest = 190,
		k_EControllerActionOrigin_SteamV2_LeftStick_DPadEast = 191,
		k_EControllerActionOrigin_SteamV2_Gyro_Move = 192,
		k_EControllerActionOrigin_SteamV2_Gyro_Pitch = 193,
		k_EControllerActionOrigin_SteamV2_Gyro_Yaw = 194,
		k_EControllerActionOrigin_SteamV2_Gyro_Roll = 195,
		k_EControllerActionOrigin_Count = 196
	}

	public enum EControllerSource // TypeDefIndex: 4670
	{
		k_EControllerSource_None = 0,
		k_EControllerSource_LeftTrackpad = 1,
		k_EControllerSource_RightTrackpad = 2,
		k_EControllerSource_Joystick = 3,
		k_EControllerSource_ABXY = 4,
		k_EControllerSource_Switch = 5,
		k_EControllerSource_LeftTrigger = 6,
		k_EControllerSource_RightTrigger = 7,
		k_EControllerSource_Gyro = 8,
		k_EControllerSource_CenterTrackpad = 9,
		k_EControllerSource_RightJoystick = 10,
		k_EControllerSource_DPad = 11,
		k_EControllerSource_Key = 12,
		k_EControllerSource_Mouse = 13,
		k_EControllerSource_Count = 14
	}

	public enum EControllerSourceMode // TypeDefIndex: 4671
	{
		k_EControllerSourceMode_None = 0,
		k_EControllerSourceMode_Dpad = 1,
		k_EControllerSourceMode_Buttons = 2,
		k_EControllerSourceMode_FourButtons = 3,
		k_EControllerSourceMode_AbsoluteMouse = 4,
		k_EControllerSourceMode_RelativeMouse = 5,
		k_EControllerSourceMode_JoystickMove = 6,
		k_EControllerSourceMode_JoystickMouse = 7,
		k_EControllerSourceMode_JoystickCamera = 8,
		k_EControllerSourceMode_ScrollWheel = 9,
		k_EControllerSourceMode_Trigger = 10,
		k_EControllerSourceMode_TouchMenu = 11,
		k_EControllerSourceMode_MouseJoystick = 12,
		k_EControllerSourceMode_MouseRegion = 13,
		k_EControllerSourceMode_RadialMenu = 14,
		k_EControllerSourceMode_SingleButton = 15,
		k_EControllerSourceMode_Switches = 16
	}

	public enum EDenyReason // TypeDefIndex: 4726
	{
		k_EDenyInvalid = 0,
		k_EDenyInvalidVersion = 1,
		k_EDenyGeneric = 2,
		k_EDenyNotLoggedOn = 3,
		k_EDenyNoLicense = 4,
		k_EDenyCheater = 5,
		k_EDenyLoggedInElseWhere = 6,
		k_EDenyUnknownText = 7,
		k_EDenyIncompatibleAnticheat = 8,
		k_EDenyMemoryCorruption = 9,
		k_EDenyIncompatibleSoftware = 10,
		k_EDenySteamConnectionLost = 11,
		k_EDenySteamConnectionError = 12,
		k_EDenySteamResponseTimedOut = 13,
		k_EDenySteamValidationStalled = 14,
		k_EDenySteamOwnerLeftGuestUser = 15
	}
}

public class EdgeTransition : MonoBehaviour // TypeDefIndex: 5300
{
	// Fields
	public float Duration; // 0x0C
	public Vector3 OpenPosition; // 0x10
	public Vector3 ClosedPosition; // 0x1C
	public AspectPosition.EdgeAlignments Alignment; // 0x28
	public Button.ButtonClickedEvent OnClose; // 0x2C

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoOpen_d__7 : IEnumerator<object> // TypeDefIndex: 5301
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public EdgeTransition __4__this; // 0x10
		private Vector3 _sourcePos_5__2; // 0x14
		private Vector3 _targetPos_5__3; // 0x20
		private float _timer_5__4; // 0x2C

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoOpen_d__7(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10257480-0x10257690
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10257690-0x102576E0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoClose_d__9 : IEnumerator<object> // TypeDefIndex: 5302
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public EdgeTransition __4__this; // 0x10
		private Vector3 _sourcePos_5__2; // 0x14
		private Vector3 _targetPos_5__3; // 0x20
		private float _timer_5__4; // 0x2C

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoClose_d__9(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10256AC0-0x10256CE0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10256CE0-0x10256D30
	}

	// Constructors
	public EdgeTransition(); // 0x10254CB0-0x10254D10

	// Methods
	public void Awake(); // 0x10254AB0-0x10254B20
	public void Open(); // 0x10254C30-0x10254CB0
	[IteratorStateMachine] // 0x1002FF40-0x1002FF90
	private IEnumerator CoOpen(); // 0x10254BE0-0x10254C30
	public void Close(); // 0x10254B20-0x10254B90
	[IteratorStateMachine] // 0x10030010-0x10030060
	private IEnumerator CoClose(); // 0x10254B90-0x10254BE0
}

namespace Steamworks
{
	public enum EFailureType // TypeDefIndex: 4713
	{
		k_EFailureFlushedCallbackQueue = 0,
		k_EFailurePipeFail = 1
	}
}

public static class Effects // TypeDefIndex: 5204
{
	// Fields
	private static HashSet<Transform> activeShakes; // 0x00

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Wait_d__1 : IEnumerator<object> // TypeDefIndex: 5205
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public float duration; // 0x10
		private float _t_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Wait_d__1(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022E960-0x1022E9D0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1022E9D0-0x1022EA20
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Sequence_d__2 : IEnumerator<object> // TypeDefIndex: 5206
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public IEnumerator[] items; // 0x10
		private int _i_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Sequence_d__2(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102599B0-0x10259A20
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10259A20-0x10259A70
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _All_d__3 : IEnumerator<object> // TypeDefIndex: 5207
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public IEnumerator[] items; // 0x10
		private Stack<IEnumerator>[] _enums_5__2; // 0x14
		private int _cap_5__3; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _All_d__3(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102559B0-0x10255C80
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10255C80-0x10255CD0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Lerp_d__4 : IEnumerator<object> // TypeDefIndex: 5208
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public Action<float> action; // 0x10
		public float duration; // 0x14
		private float _t_5__2; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Lerp_d__4(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102589A0-0x10258A70
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10258A70-0x10258AC0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Overlerp_d__5 : IEnumerator<object> // TypeDefIndex: 5209
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public float duration; // 0x10
		public Action<float> action; // 0x14
		public float overextend; // 0x18
		private float _d1_5__2; // 0x1C
		private float _d2_5__3; // 0x20
		private float _t_5__4; // 0x24

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Overlerp_d__5(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10258AC0-0x10258D30
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10258D30-0x10258D80
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _ScaleIn_d__6 : IEnumerator<object> // TypeDefIndex: 5210
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public Transform self; // 0x10
		public float source; // 0x14
		public float target; // 0x18
		public float duration; // 0x1C
		private float _t_5__2; // 0x20

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _ScaleIn_d__6(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10259790-0x10259960
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10259960-0x102599B0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CycleColors_d__7 : IEnumerator<object> // TypeDefIndex: 5211
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SpriteRenderer self; // 0x10
		public float rate; // 0x14
		public Color source; // 0x18
		public Color target; // 0x28
		public float duration; // 0x38
		private float _t_5__2; // 0x3C

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CycleColors_d__7(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10258260-0x10258420
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10258420-0x10258470
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _PulseColor_d__8 : IEnumerator<object> // TypeDefIndex: 5212
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SpriteRenderer self; // 0x10
		public Color target; // 0x14
		public Color source; // 0x24
		public float duration; // 0x34
		private float _t_5__2; // 0x38

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _PulseColor_d__8(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10258F40-0x102590A0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102590A0-0x102590F0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _PulseColor_d__9 : IEnumerator<object> // TypeDefIndex: 5213
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public TextRenderer self; // 0x10
		public Color target; // 0x14
		public Color source; // 0x24
		public float duration; // 0x34
		private float _t_5__2; // 0x38

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _PulseColor_d__9(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102590F0-0x10259210
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10259210-0x10259260
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _ColorFade_d__10 : IEnumerator<object> // TypeDefIndex: 5214
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public TextRenderer self; // 0x10
		public Color source; // 0x14
		public Color target; // 0x24
		public float duration; // 0x34
		private float _t_5__2; // 0x38

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _ColorFade_d__10(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10257F20-0x10258060
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10258060-0x102580B0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _ColorFade_d__11 : IEnumerator<object> // TypeDefIndex: 5215
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SpriteRenderer self; // 0x10
		public Color source; // 0x14
		public Color target; // 0x24
		public float duration; // 0x34
		private float _t_5__2; // 0x38

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _ColorFade_d__11(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102580B0-0x10258210
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10258210-0x10258260
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Rotate2D_d__12 : IEnumerator<object> // TypeDefIndex: 5216
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public Transform target; // 0x10
		public float duration; // 0x14
		public float source; // 0x18
		public float dest; // 0x1C
		private Vector3 _temp_5__2; // 0x20
		private float _time_5__3; // 0x2C

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Rotate2D_d__12(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10259260-0x102593F0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102593F0-0x10259440
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Slide2D_d__13 : IEnumerator<object> // TypeDefIndex: 5217
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public Transform target; // 0x10
		public float duration; // 0x14
		public Vector2 source; // 0x18
		public Vector2 dest; // 0x20
		private Vector3 _temp_5__2; // 0x28
		private float _time_5__3; // 0x34

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Slide2D_d__13(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022DBB0-0x1022DD80
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1022DD80-0x1022DDD0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Bounce_d__14 : IEnumerator<object> // TypeDefIndex: 5218
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public Transform target; // 0x10
		public float duration; // 0x14
		public float height; // 0x18
		private Vector3 _origin_5__2; // 0x1C
		private Vector3 _temp_5__3; // 0x28
		private float _timer_5__4; // 0x34

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Bounce_d__14(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102563A0-0x10256620
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10256620-0x10256670
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Shake_d__15 : IEnumerator<object> // TypeDefIndex: 5219
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public Transform target; // 0x10
		public float duration; // 0x14
		public float halfWidth; // 0x18
		public bool taper; // 0x1C
		private float _timer_5__2; // 0x20

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Shake_d__15(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10259A70-0x10259CE0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10259CE0-0x10259D30
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _SwayX_d__16 : IEnumerator<object> // TypeDefIndex: 5220
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public Transform target; // 0x10
		public float duration; // 0x14
		public float halfWidth; // 0x18
		private Vector3 _origin_5__2; // 0x1C
		private float _timer_5__3; // 0x28

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _SwayX_d__16(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022E250-0x1022E520
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1022E520-0x1022E570
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Bloop_d__17 : IEnumerator<object> // TypeDefIndex: 5221
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public float delay; // 0x10
		public float duration; // 0x14
		public Transform target; // 0x18
		private float _t_5__2; // 0x1C

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Bloop_d__17(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10256000-0x102561E0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102561E0-0x10256230
	}

	// Constructors
	static Effects(); // 0x10255480-0x102554D0

	// Methods
	[IteratorStateMachine] // 0x1001E640-0x1001E690
	public static IEnumerator Wait(float duration); // 0x10255420-0x10255480
	[IteratorStateMachine] // 0x1001E6F0-0x1001E740
	public static IEnumerator Sequence(params /* 0x10002030-0x10002050 */ IEnumerator[] items); // 0x10255260-0x102552B0
	[IteratorStateMachine] // 0x1001E830-0x1001E880
	public static IEnumerator All(params /* 0x10002030-0x10002050 */ IEnumerator[] items); // 0x10254D10-0x10254D60
	[IteratorStateMachine] // 0x1001E910-0x1001E960
	internal static IEnumerator Lerp(float duration, Action<float> action); // 0x10254FE0-0x10255040
	[IteratorStateMachine] // 0x1001E9F0-0x1001EA40
	internal static IEnumerator Overlerp(float duration, Action<float> action, float overextend = 0.05f /* Metadata: 0x00243AD2 */); // 0x10255040-0x102550A0
	[IteratorStateMachine] // 0x1001EAD0-0x1001EB20
	internal static IEnumerator ScaleIn(Transform self, float source, float target, float duration); // 0x102551F0-0x10255260
	[IteratorStateMachine] // 0x1001EB20-0x1001EB70
	internal static IEnumerator CycleColors(SpriteRenderer self, Color source, Color target, float rate, float duration); // 0x10254F00-0x10254F70
	[IteratorStateMachine] // 0x1001EC00-0x1001EC50
	internal static IEnumerator PulseColor(SpriteRenderer self, Color source, Color target, float duration = 0.5f /* Metadata: 0x00243AD6 */); // 0x102550A0-0x10255110
	[IteratorStateMachine] // 0x1001EC80-0x1001ECD0
	internal static IEnumerator PulseColor(TextRenderer self, Color source, Color target, float duration = 0.5f /* Metadata: 0x00243ADA */); // 0x10255110-0x10255180
	[IteratorStateMachine] // 0x1001ED60-0x1001EDB0
	public static IEnumerator ColorFade(TextRenderer self, Color source, Color target, float duration); // 0x10254E90-0x10254F00
	[IteratorStateMachine] // 0x1001EE40-0x1001EE90
	public static IEnumerator ColorFade(SpriteRenderer self, Color source, Color target, float duration); // 0x10254E20-0x10254E90
	[IteratorStateMachine] // 0x1001EEF0-0x1001EF40
	public static IEnumerator Rotate2D(Transform target, float source, float dest, float duration = 0.75f /* Metadata: 0x00243ADE */); // 0x10255180-0x102551F0
	[IteratorStateMachine] // 0x1001EF90-0x1001EFE0
	public static IEnumerator Slide2D(Transform target, Vector2 source, Vector2 dest, float duration = 0.75f /* Metadata: 0x00243AE2 */); // 0x10255320-0x102553B0
	[IteratorStateMachine] // 0x1001F070-0x1001F0C0
	public static IEnumerator Bounce(Transform target, float duration = 0.3f /* Metadata: 0x00243AE6 */, float height = 0.15f /* Metadata: 0x00243AEA */); // 0x10254DC0-0x10254E20
	[IteratorStateMachine] // 0x1001F110-0x1001F160
	public static IEnumerator Shake(Transform target, float duration, float halfWidth, bool taper); // 0x102552B0-0x10255320
	[IteratorStateMachine] // 0x1001F160-0x1001F1B0
	public static IEnumerator SwayX(Transform target, float duration = 0.75f /* Metadata: 0x00243AEE */, float halfWidth = 0.25f /* Metadata: 0x00243AF2 */); // 0x102553B0-0x10255420
	[IteratorStateMachine] // 0x1001F210-0x1001F260
	public static IEnumerator Bloop(float delay, Transform target, float duration = 0.5f /* Metadata: 0x00243AF6 */); // 0x10254D60-0x10254DC0
	private static float ElasticOut(float time, float duration); // 0x10254F70-0x10254FE0
}

namespace Steamworks
{
	[Flags] // 0x10002030-0x10002050
	public enum EFriendFlags // TypeDefIndex: 4677
	{
		k_EFriendFlagNone = 0,
		k_EFriendFlagBlocked = 1,
		k_EFriendFlagFriendshipRequested = 2,
		k_EFriendFlagImmediate = 4,
		k_EFriendFlagClanMember = 8,
		k_EFriendFlagOnGameServer = 16,
		k_EFriendFlagRequestingFriendship = 128,
		k_EFriendFlagRequestingInfo = 256,
		k_EFriendFlagIgnored = 512,
		k_EFriendFlagIgnoredFriend = 1024,
		k_EFriendFlagChatMember = 4096,
		k_EFriendFlagAll = 65535
	}

	public enum EFriendRelationship // TypeDefIndex: 4675
	{
		k_EFriendRelationshipNone = 0,
		k_EFriendRelationshipBlocked = 1,
		k_EFriendRelationshipRequestRecipient = 2,
		k_EFriendRelationshipFriend = 3,
		k_EFriendRelationshipRequestInitiator = 4,
		k_EFriendRelationshipIgnored = 5,
		k_EFriendRelationshipIgnoredFriend = 6,
		k_EFriendRelationshipSuggested_DEPRECATED = 7,
		k_EFriendRelationshipMax = 8
	}

	public enum EGamepadTextInputLineMode // TypeDefIndex: 4720
	{
		k_EGamepadTextInputLineModeSingleLine = 0,
		k_EGamepadTextInputLineModeMultipleLines = 1
	}

	public enum EGamepadTextInputMode // TypeDefIndex: 4719
	{
		k_EGamepadTextInputModeNormal = 0,
		k_EGamepadTextInputModePassword = 1
	}

	public enum EGCResults // TypeDefIndex: 4681
	{
		k_EGCResultOK = 0,
		k_EGCResultNoMessage = 1,
		k_EGCResultBufferTooSmall = 2,
		k_EGCResultNotLoggedOn = 3,
		k_EGCResultInvalidMessage = 4
	}

	[Flags] // 0x10002030-0x10002050
	public enum EHTMLKeyModifiers // TypeDefIndex: 4684
	{
		k_eHTMLKeyModifier_None = 0,
		k_eHTMLKeyModifier_AltDown = 1,
		k_eHTMLKeyModifier_CtrlDown = 2,
		k_eHTMLKeyModifier_ShiftDown = 4
	}

	public enum EHTMLMouseButton // TypeDefIndex: 4682
	{
		eHTMLMouseButton_Left = 0,
		eHTMLMouseButton_Right = 1,
		eHTMLMouseButton_Middle = 2
	}

	public enum EHTTPMethod // TypeDefIndex: 4743
	{
		k_EHTTPMethodInvalid = 0,
		k_EHTTPMethodGET = 1,
		k_EHTTPMethodHEAD = 2,
		k_EHTTPMethodPOST = 3,
		k_EHTTPMethodPUT = 4,
		k_EHTTPMethodDELETE = 5,
		k_EHTTPMethodOPTIONS = 6,
		k_EHTTPMethodPATCH = 7
	}

	public enum EHTTPStatusCode // TypeDefIndex: 4744
	{
		k_EHTTPStatusCodeInvalid = 0,
		k_EHTTPStatusCode100Continue = 100,
		k_EHTTPStatusCode101SwitchingProtocols = 101,
		k_EHTTPStatusCode200OK = 200,
		k_EHTTPStatusCode201Created = 201,
		k_EHTTPStatusCode202Accepted = 202,
		k_EHTTPStatusCode203NonAuthoritative = 203,
		k_EHTTPStatusCode204NoContent = 204,
		k_EHTTPStatusCode205ResetContent = 205,
		k_EHTTPStatusCode206PartialContent = 206,
		k_EHTTPStatusCode300MultipleChoices = 300,
		k_EHTTPStatusCode301MovedPermanently = 301,
		k_EHTTPStatusCode302Found = 302,
		k_EHTTPStatusCode303SeeOther = 303,
		k_EHTTPStatusCode304NotModified = 304,
		k_EHTTPStatusCode305UseProxy = 305,
		k_EHTTPStatusCode307TemporaryRedirect = 307,
		k_EHTTPStatusCode400BadRequest = 400,
		k_EHTTPStatusCode401Unauthorized = 401,
		k_EHTTPStatusCode402PaymentRequired = 402,
		k_EHTTPStatusCode403Forbidden = 403,
		k_EHTTPStatusCode404NotFound = 404,
		k_EHTTPStatusCode405MethodNotAllowed = 405,
		k_EHTTPStatusCode406NotAcceptable = 406,
		k_EHTTPStatusCode407ProxyAuthRequired = 407,
		k_EHTTPStatusCode408RequestTimeout = 408,
		k_EHTTPStatusCode409Conflict = 409,
		k_EHTTPStatusCode410Gone = 410,
		k_EHTTPStatusCode411LengthRequired = 411,
		k_EHTTPStatusCode412PreconditionFailed = 412,
		k_EHTTPStatusCode413RequestEntityTooLarge = 413,
		k_EHTTPStatusCode414RequestURITooLong = 414,
		k_EHTTPStatusCode415UnsupportedMediaType = 415,
		k_EHTTPStatusCode416RequestedRangeNotSatisfiable = 416,
		k_EHTTPStatusCode417ExpectationFailed = 417,
		k_EHTTPStatusCode4xxUnknown = 418,
		k_EHTTPStatusCode429TooManyRequests = 429,
		k_EHTTPStatusCode500InternalServerError = 500,
		k_EHTTPStatusCode501NotImplemented = 501,
		k_EHTTPStatusCode502BadGateway = 502,
		k_EHTTPStatusCode503ServiceUnavailable = 503,
		k_EHTTPStatusCode504GatewayTimeout = 504,
		k_EHTTPStatusCode505HTTPVersionNotSupported = 505,
		k_EHTTPStatusCode5xxUnknown = 599
	}

	public enum EItemPreviewType // TypeDefIndex: 4712
	{
		k_EItemPreviewType_Image = 0,
		k_EItemPreviewType_YouTubeVideo = 1,
		k_EItemPreviewType_Sketchfab = 2,
		k_EItemPreviewType_EnvironmentMap_HorizontalCross = 3,
		k_EItemPreviewType_EnvironmentMap_LatLong = 4,
		k_EItemPreviewType_ReservedMax = 255
	}

	[Flags] // 0x10002030-0x10002050
	public enum EItemState // TypeDefIndex: 4710
	{
		k_EItemStateNone = 0,
		k_EItemStateSubscribed = 1,
		k_EItemStateLegacyItem = 2,
		k_EItemStateInstalled = 4,
		k_EItemStateNeedsUpdate = 8,
		k_EItemStateDownloading = 16,
		k_EItemStateDownloadPending = 32
	}

	public enum EItemStatistic // TypeDefIndex: 4711
	{
		k_EItemStatistic_NumSubscriptions = 0,
		k_EItemStatistic_NumFavorites = 1,
		k_EItemStatistic_NumFollowers = 2,
		k_EItemStatistic_NumUniqueSubscriptions = 3,
		k_EItemStatistic_NumUniqueFavorites = 4,
		k_EItemStatistic_NumUniqueFollowers = 5,
		k_EItemStatistic_NumUniqueWebsiteViews = 6,
		k_EItemStatistic_ReportScore = 7,
		k_EItemStatistic_NumSecondsPlayed = 8,
		k_EItemStatistic_NumPlaytimeSessions = 9,
		k_EItemStatistic_NumComments = 10,
		k_EItemStatistic_NumSecondsPlayedDuringTimePeriod = 11,
		k_EItemStatistic_NumPlaytimeSessionsDuringTimePeriod = 12
	}

	public enum EItemUpdateStatus // TypeDefIndex: 4709
	{
		k_EItemUpdateStatusInvalid = 0,
		k_EItemUpdateStatusPreparingConfig = 1,
		k_EItemUpdateStatusPreparingContent = 2,
		k_EItemUpdateStatusUploadingContent = 3,
		k_EItemUpdateStatusUploadingPreviewFile = 4,
		k_EItemUpdateStatusCommittingChanges = 5
	}

	public enum ELaunchOptionType // TypeDefIndex: 4741
	{
		k_ELaunchOptionType_None = 0,
		k_ELaunchOptionType_Default = 1,
		k_ELaunchOptionType_SafeMode = 2,
		k_ELaunchOptionType_Multiplayer = 3,
		k_ELaunchOptionType_Config = 4,
		k_ELaunchOptionType_OpenVR = 5,
		k_ELaunchOptionType_Server = 6,
		k_ELaunchOptionType_Editor = 7,
		k_ELaunchOptionType_Manual = 8,
		k_ELaunchOptionType_Benchmark = 9,
		k_ELaunchOptionType_Option1 = 10,
		k_ELaunchOptionType_Option2 = 11,
		k_ELaunchOptionType_Option3 = 12,
		k_ELaunchOptionType_OculusVR = 13,
		k_ELaunchOptionType_OpenVROverlay = 14,
		k_ELaunchOptionType_OSVR = 15,
		k_ELaunchOptionType_Dialog = 1000
	}

	public enum ELeaderboardDataRequest // TypeDefIndex: 4714
	{
		k_ELeaderboardDataRequestGlobal = 0,
		k_ELeaderboardDataRequestGlobalAroundUser = 1,
		k_ELeaderboardDataRequestFriends = 2,
		k_ELeaderboardDataRequestUsers = 3
	}

	public enum ELeaderboardDisplayType // TypeDefIndex: 4716
	{
		k_ELeaderboardDisplayTypeNone = 0,
		k_ELeaderboardDisplayTypeNumeric = 1,
		k_ELeaderboardDisplayTypeTimeSeconds = 2,
		k_ELeaderboardDisplayTypeTimeMilliSeconds = 3
	}

	public enum ELeaderboardSortMethod // TypeDefIndex: 4715
	{
		k_ELeaderboardSortMethodNone = 0,
		k_ELeaderboardSortMethodAscending = 1,
		k_ELeaderboardSortMethodDescending = 2
	}

	public enum ELeaderboardUploadScoreMethod // TypeDefIndex: 4717
	{
		k_ELeaderboardUploadScoreMethodNone = 0,
		k_ELeaderboardUploadScoreMethodKeepBest = 1,
		k_ELeaderboardUploadScoreMethodForceUpdate = 2
	}
}

public class ElectricTask : SabotageTask // TypeDefIndex: 5845
{
	// Fields
	private bool isComplete; // 0x30
	private SwitchSystem system; // 0x34
	private bool even; // 0x38

	// Properties
	public override int TaskStep { get; } // 0x1021B3D0-0x1021B3E0 
	public override bool IsComplete { get; } // 0x101C2370-0x101C2380 

	// Constructors
	public ElectricTask(); // 0x102044C0-0x102044D0

	// Methods
	public override void Initialize(); // 0x1021B2D0-0x1021B380
	private void FixedUpdate(); // 0x1021B290-0x1021B2D0
	public override bool ValidConsole(Console console); // 0x1021B380-0x1021B3D0
	public override void Complete(); // 0x1021B1E0-0x1021B290
	public override void AppendTaskText(StringBuilder sb); // 0x1021B050-0x1021B1E0
}

namespace Steamworks
{
	public enum ELobbyComparison // TypeDefIndex: 4687
	{
		k_ELobbyComparisonEqualToOrLessThan = -2,
		k_ELobbyComparisonLessThan = -1,
		k_ELobbyComparisonEqual = 0,
		k_ELobbyComparisonGreaterThan = 1,
		k_ELobbyComparisonEqualToOrGreaterThan = 2,
		k_ELobbyComparisonNotEqual = 3
	}

	public enum ELobbyDistanceFilter // TypeDefIndex: 4688
	{
		k_ELobbyDistanceFilterClose = 0,
		k_ELobbyDistanceFilterDefault = 1,
		k_ELobbyDistanceFilterFar = 2,
		k_ELobbyDistanceFilterWorldwide = 3
	}

	public enum ELobbyType // TypeDefIndex: 4686
	{
		k_ELobbyTypePrivate = 0,
		k_ELobbyTypeFriendsOnly = 1,
		k_ELobbyTypePublic = 2,
		k_ELobbyTypeInvisible = 3
	}

	[Flags] // 0x10002030-0x10002050
	public enum EMarketingMessageFlags // TypeDefIndex: 4738
	{
		k_EMarketingMessageFlagsNone = 0,
		k_EMarketingMessageFlagsHighPriority = 1,
		k_EMarketingMessageFlagsPlatformWindows = 2,
		k_EMarketingMessageFlagsPlatformMac = 4,
		k_EMarketingMessageFlagsPlatformLinux = 8,
		k_EMarketingMessageFlagsPlatformRestrictions = 14
	}

	public enum EMatchMakingServerResponse // TypeDefIndex: 4722
	{
		eServerResponded = 0,
		eServerFailedToRespond = 1,
		eNoServersListedOnMasterServer = 2
	}
}

public class EmergencyMinigame : Minigame // TypeDefIndex: 5770
{
	// Fields
	public SpriteRenderer ClosedLid; // 0x28
	public SpriteRenderer OpenLid; // 0x2C
	public Transform meetingButton; // 0x30
	public TextRenderer StatusText; // 0x34
	public TextRenderer NumberText; // 0x38
	public bool ButtonActive; // 0x3C
	public AudioClip ButtonSound; // 0x40
	private int state; // 0x44
	public const int MinEmergencyTime = 15; // Metadata: 0x00243D3D

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoAnimateOpen_d__13 : IEnumerator<object> // TypeDefIndex: 5771
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public EmergencyMinigame __4__this; // 0x10
		private Vector3 _meetingPos_5__2; // 0x14
		private float _timer_5__3; // 0x20

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoAnimateOpen_d__13(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022B6C0-0x1022BA10
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1022BA10-0x1022BA60
	}

	// Constructors
	public EmergencyMinigame(); // 0x1021BA80-0x1021BAA0

	// Methods
	public override void Begin(PlayerTask task); // 0x1021B3E0-0x1021B400
	public void Update(); // 0x1021B620-0x1021BA80
	public void CallMeeting(); // 0x1021B400-0x1021B5D0
	private float easeOutElastic(float t); // 0x1021BAA0-0x1021BB50
	[IteratorStateMachine] // 0x1001BA70-0x1001BAC0
	protected override IEnumerator CoAnimateOpen(); // 0x1021B5D0-0x1021B620
}

namespace Steamworks
{
	public enum EMouseCursor // TypeDefIndex: 4683
	{
		dc_user = 0,
		dc_none = 1,
		dc_arrow = 2,
		dc_ibeam = 3,
		dc_hourglass = 4,
		dc_waitarrow = 5,
		dc_crosshair = 6,
		dc_up = 7,
		dc_sizenw = 8,
		dc_sizese = 9,
		dc_sizene = 10,
		dc_sizesw = 11,
		dc_sizew = 12,
		dc_sizee = 13,
		dc_sizen = 14,
		dc_sizes = 15,
		dc_sizewe = 16,
		dc_sizens = 17,
		dc_sizeall = 18,
		dc_no = 19,
		dc_hand = 20,
		dc_blank = 21,
		dc_middle_pan = 22,
		dc_north_pan = 23,
		dc_north_east_pan = 24,
		dc_east_pan = 25,
		dc_south_east_pan = 26,
		dc_south_pan = 27,
		dc_south_west_pan = 28,
		dc_west_pan = 29,
		dc_north_west_pan = 30,
		dc_alias = 31,
		dc_cell = 32,
		dc_colresize = 33,
		dc_copycur = 34,
		dc_verticaltext = 35,
		dc_rowresize = 36,
		dc_zoomin = 37,
		dc_zoomout = 38,
		dc_help = 39,
		dc_custom = 40,
		dc_last = 41
	}
}

public class EmptyGarbageMinigame : Minigame // TypeDefIndex: 5835
{
	// Fields
	private const float GrinderVolume = 0.8f; // Metadata: 0x00243DE0
	public FloatRange HandleRange; // 0x28
	public Vector2Range SpawnRange; // 0x2C
	public Collider2D Blocker; // 0x3C
	public AreaEffector2D Popper; // 0x40
	public Collider2D Handle; // 0x44
	public SpriteRenderer Bars; // 0x48
	private Controller controller; // 0x4C
	private bool finished; // 0x50
	public int NumObjects; // 0x54
	private SpriteRenderer[] Objects; // 0x58
	public SpriteRenderer[] GarbagePrefabs; // 0x5C
	public SpriteRenderer[] LeafPrefabs; // 0x60
	public SpriteRenderer[] SpecialObjectPrefabs; // 0x64
	public AudioClip LeverDown; // 0x68
	public AudioClip LeverUp; // 0x6C
	public AudioClip GrinderStart; // 0x70
	public AudioClip GrinderLoop; // 0x74
	public AudioClip GrinderEnd; // 0x78

	// Nested types
	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5836
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<SpriteRenderer, bool> __9__20_0; // 0x04

		// Constructors
		static __c(); // 0x1022E7D0-0x1022E820
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _Update_b__20_0(SpriteRenderer o); // 0x1022E680-0x1022E6E0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _PopObjects_d__21 : IEnumerator<object> // TypeDefIndex: 5837
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public EmptyGarbageMinigame __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _PopObjects_d__21(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022CC80-0x1022CD30
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1022CD30-0x1022CD80
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _AnimateObjects_d__22 : IEnumerator<object> // TypeDefIndex: 5838
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public EmptyGarbageMinigame __4__this; // 0x10
		private Vector3 _pos_5__2; // 0x14
		private float _t_5__3; // 0x20

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _AnimateObjects_d__22(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022A6F0-0x1022A920
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1022A920-0x1022A970
	}

	// Constructors
	public EmptyGarbageMinigame(); // 0x1021CAF0-0x1021CB70

	// Methods
	public override void Begin(PlayerTask task); // 0x1021BBA0-0x1021C000
	public void Update(); // 0x1021C1B0-0x1021CAF0
	[IteratorStateMachine] // 0x1001D940-0x1001D990
	private IEnumerator PopObjects(); // 0x1021C160-0x1021C1B0
	[IteratorStateMachine] // 0x1001DA00-0x1001DA50
	private IEnumerator AnimateObjects(); // 0x1021BB50-0x1021BBA0
	public override void Close(); // 0x1021C000-0x1021C160
}

namespace MS.Internal.Xml.XPath
{
	internal sealed class EmptyQuery : Query // TypeDefIndex: 1761
	{
		// Properties
		public override int CurrentPosition { get; } // 0x101D1BE0-0x101D1BF0 
		public override int Count { get; } // 0x101D1BE0-0x101D1BF0 
		public override QueryProps Properties { get; } // 0x1038CEB0-0x1038CEC0 
		public override XPathResultType StaticType { get; } // 0x1045B170-0x1045B180 
		public override XPathNavigator Current { get; } // 0x101D1BE0-0x101D1BF0 
	
		// Constructors
		public EmptyQuery(); // 0x106BB920-0x106BB940
	
		// Methods
		public override XPathNavigator Advance(); // 0x101D1BE0-0x101D1BF0
		public override XPathNodeIterator Clone(); // 0x1018AFD0-0x1018AFE0
		public override object Evaluate(XPathNodeIterator context); // 0x1018AFD0-0x1018AFE0
		public override void Reset(); // 0x101A2F90-0x101A2FA0
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000A7E0-0x1000A800
	public struct EncryptedAppTicketResponse_t // TypeDefIndex: 4641
	{
		// Fields
		public const int k_iCallback = 154; // Metadata: 0x00242407
		public EResult m_eResult; // 0x00
	}
}

public class EndGameManager : DestroyableSingleton<EndGameManager> // TypeDefIndex: 5267
{
	// Fields
	public TextRenderer WinText; // 0x10
	public MeshRenderer BackgroundBar; // 0x14
	public MeshRenderer Foreground; // 0x18
	public FloatRange ForegroundRadius; // 0x1C
	public SpriteRenderer FrontMost; // 0x20
	public PoolablePlayer PlayerPrefab; // 0x24
	public Sprite GhostSprite; // 0x28
	public SpriteRenderer PlayAgainButton; // 0x2C
	public SpriteRenderer ExitButton; // 0x30
	public AudioClip DisconnectStinger; // 0x34
	public AudioClip CrewStinger; // 0x38
	public AudioClip ImpostorStinger; // 0x3C
	public float BaseY; // 0x40
	private float stingerTime; // 0x44

	// Nested types
	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5268
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<WinningPlayerData, bool> __9__15_1; // 0x04
		public static Func<WinningPlayerData, bool> __9__15_2; // 0x08
		public static Func<WinningPlayerData, int> __9__15_0; // 0x0C
		public static Func<bool> __9__20_0; // 0x10

		// Constructors
		static __c(); // 0x1022E870-0x1022E8C0
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _SetEverythingUp_b__15_1(WinningPlayerData h); // 0x101D0D50-0x101D0D70
		internal bool _SetEverythingUp_b__15_2(WinningPlayerData h); // 0x101D0D50-0x101D0D70
		internal int _SetEverythingUp_b__15_0(WinningPlayerData b); // 0x1022E640-0x1022E660
		internal bool _CoJoinGame_b__20_0(); // 0x1022E5A0-0x1022E5E0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoBegin_d__18 : IEnumerator<object> // TypeDefIndex: 5269
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public EndGameManager __4__this; // 0x10
		private Color _c_5__2; // 0x14
		private Color _fade_5__3; // 0x24
		private Vector3 _titlePos_5__4; // 0x34
		private float _timer_5__5; // 0x40

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoBegin_d__18(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022BA60-0x1022BD80
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1022BD80-0x1022BDD0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoJoinGame_d__20 : IEnumerator<object> // TypeDefIndex: 5270
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoJoinGame_d__20(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022BDD0-0x1022BF40
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1022BF40-0x1022BF90
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _WaitWithTimeout_d__22 : IEnumerator<object> // TypeDefIndex: 5271
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public Func<bool> success; // 0x10
		private float _timer_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _WaitWithTimeout_d__22(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022EA20-0x1022EAD0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1022EAD0-0x1022EB20
	}

	// Constructors
	public EndGameManager(); // 0x1021DD50-0x1021DD90

	// Methods
	public void Start(); // 0x1021DC00-0x1021DD00
	private void ShowButtons(); // 0x1021DB80-0x1021DC00
	private void SetEverythingUp(); // 0x1021CF60-0x1021DB80
	private void GetStingerVol(AudioSource source, float dt); // 0x1021CD40-0x1021CE00
	[IteratorStateMachine] // 0x10028F70-0x10028FC0
	public IEnumerator CoBegin(); // 0x1021CB70-0x1021CBC0
	public void NextGame(); // 0x1021CE00-0x1021CF60
	[IteratorStateMachine] // 0x10029180-0x100291D0
	public IEnumerator CoJoinGame(); // 0x1021CBC0-0x1021CC10
	public void Exit(); // 0x1021CC10-0x1021CD40
	[IteratorStateMachine] // 0x10029280-0x100292D0
	public static IEnumerator WaitWithTimeout(Func<bool> success); // 0x1021DD00-0x1021DD50
}

public class EngineBehaviour : MonoBehaviour // TypeDefIndex: 5318
{
	// Fields
	public AudioClip ElectricSound; // 0x0C
	public AudioClip SteamSound; // 0x10
	public float SoundDistance; // 0x14

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass4_0 // TypeDefIndex: 5319
	{
		// Fields
		public float pitch; // 0x08
		public EngineBehaviour __4__this; // 0x0C

		// Constructors
		public __c__DisplayClass4_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _PlaySteamSound_b__0(AudioSource p, float d); // 0x1022E750-0x1022E790
	}

	// Constructors
	public EngineBehaviour(); // 0x1021E190-0x1021E1B0

	// Methods
	public void PlayElectricSound(); // 0x1021DF70-0x1021E060
	public void PlaySteamSound(); // 0x1021E060-0x1021E190
	private void GetSoundDistance(AudioSource player, float dt); // 0x1021DD90-0x1021DDC0
	private void GetSoundDistance(AudioSource player, float dt, float pitch); // 0x1021DDC0-0x1021DF70
}

namespace Steamworks
{
	public enum ENotificationPosition // TypeDefIndex: 4739
	{
		k_EPositionTopLeft = 0,
		k_EPositionTopRight = 1,
		k_EPositionBottomLeft = 2,
		k_EPositionBottomRight = 3
	}
}

public class EnterCodeMinigame : Minigame // TypeDefIndex: 5167
{
	// Fields
	public TextRenderer NumberText; // 0x28
	public TextRenderer TargetText; // 0x2C
	public SpriteRenderer Card; // 0x30
	public int number; // 0x34
	public string numString; // 0x38
	private bool animating; // 0x3C
	private bool cardOut; // 0x3D
	private bool done; // 0x3E
	private int targetNumber; // 0x40
	public AudioClip WalletOut; // 0x44
	public AudioClip NumberSound; // 0x48
	public AudioClip AcceptSound; // 0x4C
	public AudioClip RejectSound; // 0x50

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoShowCard_d__14 : IEnumerator<object> // TypeDefIndex: 5168
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public EnterCodeMinigame __4__this; // 0x10
		private Vector3 _pos_5__2; // 0x14
		private Vector3 _targ_5__3; // 0x20
		private float _time_5__4; // 0x2C

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoShowCard_d__14(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022C190-0x1022C520
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1022C520-0x1022C570
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Animate_d__19 : IEnumerator<object> // TypeDefIndex: 5169
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public EnterCodeMinigame __4__this; // 0x10
		private WaitForSeconds _wait_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Animate_d__19(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022B0F0-0x1022B4B0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1022B4B0-0x1022B500
	}

	// Constructors
	public EnterCodeMinigame(); // 0x1021E730-0x1021E780

	// Methods
	public void ShowCard(); // 0x1021E6D0-0x1021E730
	[IteratorStateMachine] // 0x1001C260-0x1001C2B0
	private IEnumerator CoShowCard(); // 0x1021E480-0x1021E4D0
	public void EnterDigit(int i); // 0x1021E4D0-0x1021E6D0
	public void ClearDigits(); // 0x1021E3B0-0x1021E480
	public void AcceptDigits(); // 0x1021E1B0-0x1021E2B0
	public override void Begin(PlayerTask task); // 0x1021E300-0x1021E3B0
	[IteratorStateMachine] // 0x1001C370-0x1001C3C0
	private IEnumerator Animate(); // 0x1021E2B0-0x1021E300
}

namespace Discord
{
	public struct Entitlement // TypeDefIndex: 4890
	{
		// Fields
		public long Id; // 0x00
		public EntitlementType Type; // 0x08
		public long SkuId; // 0x10
	}

	public enum EntitlementType // TypeDefIndex: 4873
	{
		Purchase = 1,
		PremiumSubscription = 2,
		DeveloperGift = 3,
		TestModePurchase = 4,
		FreePurchase = 5,
		UserGift = 6,
		PremiumPurchase = 7
	}
}

namespace Steamworks
{
	public enum EOverlayToStoreFlag // TypeDefIndex: 4679
	{
		k_EOverlayToStoreFlag_None = 0,
		k_EOverlayToStoreFlag_AddToCart = 1,
		k_EOverlayToStoreFlag_AddToCartAndShow = 2
	}

	public enum EP2PSend // TypeDefIndex: 4692
	{
		k_EP2PSendUnreliable = 0,
		k_EP2PSendUnreliableNoDelay = 1,
		k_EP2PSendReliable = 2,
		k_EP2PSendReliableWithBuffering = 3
	}

	public enum EP2PSessionError // TypeDefIndex: 4691
	{
		k_EP2PSessionErrorNone = 0,
		k_EP2PSessionErrorNotRunningApp = 1,
		k_EP2PSessionErrorNoRightsToApp = 2,
		k_EP2PSessionErrorDestinationNotLoggedIn = 3,
		k_EP2PSessionErrorTimeout = 4,
		k_EP2PSessionErrorMax = 5
	}

	public enum EParentalFeature // TypeDefIndex: 4695
	{
		k_EFeatureInvalid = 0,
		k_EFeatureStore = 1,
		k_EFeatureCommunity = 2,
		k_EFeatureProfile = 3,
		k_EFeatureFriends = 4,
		k_EFeatureNews = 5,
		k_EFeatureTrading = 6,
		k_EFeatureSettings = 7,
		k_EFeatureConsole = 8,
		k_EFeatureBrowser = 9,
		k_EFeatureParentalSetup = 10,
		k_EFeatureLibrary = 11,
		k_EFeatureTest = 12,
		k_EFeatureMax = 13
	}

	[Flags] // 0x10002030-0x10002050
	public enum EPersonaChange // TypeDefIndex: 4680
	{
		k_EPersonaChangeName = 1,
		k_EPersonaChangeStatus = 2,
		k_EPersonaChangeComeOnline = 4,
		k_EPersonaChangeGoneOffline = 8,
		k_EPersonaChangeGamePlayed = 16,
		k_EPersonaChangeGameServer = 32,
		k_EPersonaChangeAvatar = 64,
		k_EPersonaChangeJoinedSource = 128,
		k_EPersonaChangeLeftSource = 256,
		k_EPersonaChangeRelationshipChanged = 512,
		k_EPersonaChangeNameFirstSet = 1024,
		k_EPersonaChangeFacebookInfo = 2048,
		k_EPersonaChangeNickname = 4096,
		k_EPersonaChangeSteamLevel = 8192
	}

	public enum EPersonaState // TypeDefIndex: 4676
	{
		k_EPersonaStateOffline = 0,
		k_EPersonaStateOnline = 1,
		k_EPersonaStateBusy = 2,
		k_EPersonaStateAway = 3,
		k_EPersonaStateSnooze = 4,
		k_EPersonaStateLookingToTrade = 5,
		k_EPersonaStateLookingToPlay = 6,
		k_EPersonaStateMax = 7
	}

	public enum ERegisterActivationCodeResult // TypeDefIndex: 4668
	{
		k_ERegisterActivationCodeResultOK = 0,
		k_ERegisterActivationCodeResultFail = 1,
		k_ERegisterActivationCodeResultAlreadyRegistered = 2,
		k_ERegisterActivationCodeResultTimeout = 3,
		k_ERegisterActivationCodeAlreadyOwned = 4
	}

	[Flags] // 0x10002030-0x10002050
	public enum ERemoteStoragePlatform // TypeDefIndex: 4696
	{
		k_ERemoteStoragePlatformAll = -1,
		k_ERemoteStoragePlatformNone = 0,
		k_ERemoteStoragePlatformWindows = 1,
		k_ERemoteStoragePlatformOSX = 2,
		k_ERemoteStoragePlatformPS3 = 4,
		k_ERemoteStoragePlatformLinux = 8,
		k_ERemoteStoragePlatformReserved2 = 16
	}

	public enum ERemoteStoragePublishedFileVisibility // TypeDefIndex: 4697
	{
		k_ERemoteStoragePublishedFileVisibilityPublic = 0,
		k_ERemoteStoragePublishedFileVisibilityFriendsOnly = 1,
		k_ERemoteStoragePublishedFileVisibilityPrivate = 2
	}

	public enum EResult // TypeDefIndex: 4724
	{
		k_EResultOK = 1,
		k_EResultFail = 2,
		k_EResultNoConnection = 3,
		k_EResultInvalidPassword = 5,
		k_EResultLoggedInElsewhere = 6,
		k_EResultInvalidProtocolVer = 7,
		k_EResultInvalidParam = 8,
		k_EResultFileNotFound = 9,
		k_EResultBusy = 10,
		k_EResultInvalidState = 11,
		k_EResultInvalidName = 12,
		k_EResultInvalidEmail = 13,
		k_EResultDuplicateName = 14,
		k_EResultAccessDenied = 15,
		k_EResultTimeout = 16,
		k_EResultBanned = 17,
		k_EResultAccountNotFound = 18,
		k_EResultInvalidSteamID = 19,
		k_EResultServiceUnavailable = 20,
		k_EResultNotLoggedOn = 21,
		k_EResultPending = 22,
		k_EResultEncryptionFailure = 23,
		k_EResultInsufficientPrivilege = 24,
		k_EResultLimitExceeded = 25,
		k_EResultRevoked = 26,
		k_EResultExpired = 27,
		k_EResultAlreadyRedeemed = 28,
		k_EResultDuplicateRequest = 29,
		k_EResultAlreadyOwned = 30,
		k_EResultIPNotFound = 31,
		k_EResultPersistFailed = 32,
		k_EResultLockingFailed = 33,
		k_EResultLogonSessionReplaced = 34,
		k_EResultConnectFailed = 35,
		k_EResultHandshakeFailed = 36,
		k_EResultIOFailure = 37,
		k_EResultRemoteDisconnect = 38,
		k_EResultShoppingCartNotFound = 39,
		k_EResultBlocked = 40,
		k_EResultIgnored = 41,
		k_EResultNoMatch = 42,
		k_EResultAccountDisabled = 43,
		k_EResultServiceReadOnly = 44,
		k_EResultAccountNotFeatured = 45,
		k_EResultAdministratorOK = 46,
		k_EResultContentVersion = 47,
		k_EResultTryAnotherCM = 48,
		k_EResultPasswordRequiredToKickSession = 49,
		k_EResultAlreadyLoggedInElsewhere = 50,
		k_EResultSuspended = 51,
		k_EResultCancelled = 52,
		k_EResultDataCorruption = 53,
		k_EResultDiskFull = 54,
		k_EResultRemoteCallFailed = 55,
		k_EResultPasswordUnset = 56,
		k_EResultExternalAccountUnlinked = 57,
		k_EResultPSNTicketInvalid = 58,
		k_EResultExternalAccountAlreadyLinked = 59,
		k_EResultRemoteFileConflict = 60,
		k_EResultIllegalPassword = 61,
		k_EResultSameAsPreviousValue = 62,
		k_EResultAccountLogonDenied = 63,
		k_EResultCannotUseOldPassword = 64,
		k_EResultInvalidLoginAuthCode = 65,
		k_EResultAccountLogonDeniedNoMail = 66,
		k_EResultHardwareNotCapableOfIPT = 67,
		k_EResultIPTInitError = 68,
		k_EResultParentalControlRestricted = 69,
		k_EResultFacebookQueryError = 70,
		k_EResultExpiredLoginAuthCode = 71,
		k_EResultIPLoginRestrictionFailed = 72,
		k_EResultAccountLockedDown = 73,
		k_EResultAccountLogonDeniedVerifiedEmailRequired = 74,
		k_EResultNoMatchingURL = 75,
		k_EResultBadResponse = 76,
		k_EResultRequirePasswordReEntry = 77,
		k_EResultValueOutOfRange = 78,
		k_EResultUnexpectedError = 79,
		k_EResultDisabled = 80,
		k_EResultInvalidCEGSubmission = 81,
		k_EResultRestrictedDevice = 82,
		k_EResultRegionLocked = 83,
		k_EResultRateLimitExceeded = 84,
		k_EResultAccountLoginDeniedNeedTwoFactor = 85,
		k_EResultItemDeleted = 86,
		k_EResultAccountLoginDeniedThrottle = 87,
		k_EResultTwoFactorCodeMismatch = 88,
		k_EResultTwoFactorActivationCodeMismatch = 89,
		k_EResultAccountAssociatedToMultiplePartners = 90,
		k_EResultNotModified = 91,
		k_EResultNoMobileDevice = 92,
		k_EResultTimeNotSynced = 93,
		k_EResultSmsCodeFailed = 94,
		k_EResultAccountLimitExceeded = 95,
		k_EResultAccountActivityLimitExceeded = 96,
		k_EResultPhoneActivityLimitExceeded = 97,
		k_EResultRefundToWallet = 98,
		k_EResultEmailSendFailure = 99,
		k_EResultNotSettled = 100,
		k_EResultNeedCaptcha = 101,
		k_EResultGSLTDenied = 102,
		k_EResultGSOwnerDenied = 103,
		k_EResultInvalidItemType = 104,
		k_EResultIPBanned = 105,
		k_EResultGSLTExpired = 106,
		k_EResultInsufficientFunds = 107,
		k_EResultTooManyPending = 108,
		k_EResultNoSiteLicensesFound = 109,
		k_EResultWGNetworkSendExceeded = 110,
		k_EResultAccountNotFriends = 111,
		k_EResultLimitedUserAccount = 112
	}

	public enum EServerMode // TypeDefIndex: 4723
	{
		eServerModeInvalid = 0,
		eServerModeNoAuthentication = 1,
		eServerModeAuthentication = 2,
		eServerModeAuthenticationAndSecure = 3
	}

	public enum ESNetSocketConnectionType // TypeDefIndex: 4694
	{
		k_ESNetSocketConnectionTypeNotConnected = 0,
		k_ESNetSocketConnectionTypeUDP = 1,
		k_ESNetSocketConnectionTypeUDPRelay = 2
	}

	public enum ESNetSocketState // TypeDefIndex: 4693
	{
		k_ESNetSocketStateInvalid = 0,
		k_ESNetSocketStateConnected = 1,
		k_ESNetSocketStateInitiated = 10,
		k_ESNetSocketStateLocalCandidatesFound = 11,
		k_ESNetSocketStateReceivedRemoteCandidates = 12,
		k_ESNetSocketStateChallengeHandshake = 15,
		k_ESNetSocketStateDisconnecting = 21,
		k_ESNetSocketStateLocalDisconnect = 22,
		k_ESNetSocketStateTimeoutDuringConnect = 23,
		k_ESNetSocketStateRemoteEndDisconnected = 24,
		k_ESNetSocketStateConnectionBroken = 25
	}

	public enum ESteamAPICallFailure // TypeDefIndex: 4718
	{
		k_ESteamAPICallFailureNone = -1,
		k_ESteamAPICallFailureSteamGone = 0,
		k_ESteamAPICallFailureNetworkFailure = 1,
		k_ESteamAPICallFailureInvalidHandle = 2,
		k_ESteamAPICallFailureMismatchedCallback = 3
	}

	public enum ESteamControllerLEDFlag // TypeDefIndex: 4673
	{
		k_ESteamControllerLEDFlag_SetColor = 0,
		k_ESteamControllerLEDFlag_RestoreUserDefault = 1
	}

	public enum ESteamControllerPad // TypeDefIndex: 4669
	{
		k_ESteamControllerPad_Left = 0,
		k_ESteamControllerPad_Right = 1
	}

	public enum ESteamInputType // TypeDefIndex: 4674
	{
		k_ESteamInputType_Unknown = 0,
		k_ESteamInputType_SteamController = 1,
		k_ESteamInputType_XBox360Controller = 2,
		k_ESteamInputType_XBoxOneController = 3,
		k_ESteamInputType_GenericXInput = 4,
		k_ESteamInputType_PS4Controller = 5
	}

	[Flags] // 0x10002030-0x10002050
	public enum ESteamItemFlags // TypeDefIndex: 4685
	{
		k_ESteamItemNoTrade = 1,
		k_ESteamItemRemoved = 256,
		k_ESteamItemConsumed = 512
	}

	public enum ESteamUserStatType // TypeDefIndex: 4734
	{
		k_ESteamUserStatTypeINVALID = 0,
		k_ESteamUserStatTypeINT = 1,
		k_ESteamUserStatTypeFLOAT = 2,
		k_ESteamUserStatTypeAVGRATE = 3,
		k_ESteamUserStatTypeACHIEVEMENTS = 4,
		k_ESteamUserStatTypeGROUPACHIEVEMENTS = 5,
		k_ESteamUserStatTypeMAX = 6
	}

	public enum EUGCMatchingUGCType // TypeDefIndex: 4705
	{
		k_EUGCMatchingUGCType_All = -1,
		k_EUGCMatchingUGCType_Items = 0,
		k_EUGCMatchingUGCType_Items_Mtx = 1,
		k_EUGCMatchingUGCType_Items_ReadyToUse = 2,
		k_EUGCMatchingUGCType_Collections = 3,
		k_EUGCMatchingUGCType_Artwork = 4,
		k_EUGCMatchingUGCType_Videos = 5,
		k_EUGCMatchingUGCType_Screenshots = 6,
		k_EUGCMatchingUGCType_AllGuides = 7,
		k_EUGCMatchingUGCType_WebGuides = 8,
		k_EUGCMatchingUGCType_IntegratedGuides = 9,
		k_EUGCMatchingUGCType_UsableInGame = 10,
		k_EUGCMatchingUGCType_ControllerBindings = 11,
		k_EUGCMatchingUGCType_GameManagedItems = 12
	}

	public enum EUGCQuery // TypeDefIndex: 4708
	{
		k_EUGCQuery_RankedByVote = 0,
		k_EUGCQuery_RankedByPublicationDate = 1,
		k_EUGCQuery_AcceptedForGameRankedByAcceptanceDate = 2,
		k_EUGCQuery_RankedByTrend = 3,
		k_EUGCQuery_FavoritedByFriendsRankedByPublicationDate = 4,
		k_EUGCQuery_CreatedByFriendsRankedByPublicationDate = 5,
		k_EUGCQuery_RankedByNumTimesReported = 6,
		k_EUGCQuery_CreatedByFollowedUsersRankedByPublicationDate = 7,
		k_EUGCQuery_NotYetRated = 8,
		k_EUGCQuery_RankedByTotalVotesAsc = 9,
		k_EUGCQuery_RankedByVotesUp = 10,
		k_EUGCQuery_RankedByTextSearch = 11,
		k_EUGCQuery_RankedByTotalUniqueSubscriptions = 12,
		k_EUGCQuery_RankedByPlaytimeTrend = 13,
		k_EUGCQuery_RankedByTotalPlaytime = 14,
		k_EUGCQuery_RankedByAveragePlaytimeTrend = 15,
		k_EUGCQuery_RankedByLifetimeAveragePlaytime = 16,
		k_EUGCQuery_RankedByPlaytimeSessionsTrend = 17,
		k_EUGCQuery_RankedByLifetimePlaytimeSessions = 18
	}

	public enum EUGCReadAction // TypeDefIndex: 4703
	{
		k_EUGCRead_ContinueReadingUntilFinished = 0,
		k_EUGCRead_ContinueReading = 1,
		k_EUGCRead_Close = 2
	}

	public enum EUniverse // TypeDefIndex: 4745
	{
		k_EUniverseInvalid = 0,
		k_EUniversePublic = 1,
		k_EUniverseBeta = 2,
		k_EUniverseInternal = 3,
		k_EUniverseDev = 4,
		k_EUniverseMax = 5
	}

	public enum EUserHasLicenseForAppResult // TypeDefIndex: 4729
	{
		k_EUserHasLicenseResultHasLicense = 0,
		k_EUserHasLicenseResultDoesNotHaveLicense = 1,
		k_EUserHasLicenseResultNoAuth = 2
	}

	public enum EUserRestriction // TypeDefIndex: 4678
	{
		k_nUserRestrictionNone = 0,
		k_nUserRestrictionUnknown = 1,
		k_nUserRestrictionAnyChat = 2,
		k_nUserRestrictionVoiceChat = 4,
		k_nUserRestrictionGroupChat = 8,
		k_nUserRestrictionRating = 16,
		k_nUserRestrictionGameInvites = 32,
		k_nUserRestrictionTrading = 64
	}

	public enum EUserUGCList // TypeDefIndex: 4706
	{
		k_EUserUGCList_Published = 0,
		k_EUserUGCList_VotedOn = 1,
		k_EUserUGCList_VotedUp = 2,
		k_EUserUGCList_VotedDown = 3,
		k_EUserUGCList_WillVoteLater = 4,
		k_EUserUGCList_Favorited = 5,
		k_EUserUGCList_Subscribed = 6,
		k_EUserUGCList_UsedOrPlayed = 7,
		k_EUserUGCList_Followed = 8
	}

	public enum EUserUGCListSortOrder // TypeDefIndex: 4707
	{
		k_EUserUGCListSortOrder_CreationOrderDesc = 0,
		k_EUserUGCListSortOrder_CreationOrderAsc = 1,
		k_EUserUGCListSortOrder_TitleAsc = 2,
		k_EUserUGCListSortOrder_LastUpdatedDesc = 3,
		k_EUserUGCListSortOrder_SubscriptionDateDesc = 4,
		k_EUserUGCListSortOrder_VoteScoreDesc = 5,
		k_EUserUGCListSortOrder_ForModeration = 6
	}

	public enum EVoiceResult // TypeDefIndex: 4725
	{
		k_EVoiceResultOK = 0,
		k_EVoiceResultNotInitialized = 1,
		k_EVoiceResultNotRecording = 2,
		k_EVoiceResultNoData = 3,
		k_EVoiceResultBufferTooSmall = 4,
		k_EVoiceResultDataCorrupted = 5,
		k_EVoiceResultRestricted = 6,
		k_EVoiceResultUnsupportedCodec = 7,
		k_EVoiceResultReceiverOutOfDate = 8,
		k_EVoiceResultReceiverDidNotAnswer = 9
	}

	public enum EVRHMDType // TypeDefIndex: 4742
	{
		k_eEVRHMDType_None = -1,
		k_eEVRHMDType_Unknown = 0,
		k_eEVRHMDType_HTC_Dev = 1,
		k_eEVRHMDType_HTC_VivePre = 2,
		k_eEVRHMDType_HTC_Vive = 3,
		k_eEVRHMDType_HTC_Unknown = 20,
		k_eEVRHMDType_Oculus_DK1 = 21,
		k_eEVRHMDType_Oculus_DK2 = 22,
		k_eEVRHMDType_Oculus_Rift = 23,
		k_eEVRHMDType_Oculus_Unknown = 40,
		k_eEVRHMDType_Acer_Unknown = 50,
		k_eEVRHMDType_Acer_WindowsMR = 51,
		k_eEVRHMDType_Dell_Unknown = 60,
		k_eEVRHMDType_Dell_Visor = 61,
		k_eEVRHMDType_Lenovo_Unknown = 70,
		k_eEVRHMDType_Lenovo_Explorer = 71,
		k_eEVRHMDType_HP_Unknown = 80,
		k_eEVRHMDType_HP_WindowsMR = 81,
		k_eEVRHMDType_Samsung_Unknown = 90,
		k_eEVRHMDType_Samsung_Odyssey = 91,
		k_eEVRHMDType_Unannounced_Unknown = 100,
		k_eEVRHMDType_Unannounced_WindowsMR = 101
	}

	public enum EVRScreenshotType // TypeDefIndex: 4704
	{
		k_EVRScreenshotType_None = 0,
		k_EVRScreenshotType_Mono = 1,
		k_EVRScreenshotType_Stereo = 2,
		k_EVRScreenshotType_MonoCubemap = 3,
		k_EVRScreenshotType_MonoPanorama = 4,
		k_EVRScreenshotType_StereoPanorama = 5
	}

	public enum EWorkshopEnumerationType // TypeDefIndex: 4701
	{
		k_EWorkshopEnumerationTypeRankedByVote = 0,
		k_EWorkshopEnumerationTypeRecent = 1,
		k_EWorkshopEnumerationTypeTrending = 2,
		k_EWorkshopEnumerationTypeFavoritesOfFriends = 3,
		k_EWorkshopEnumerationTypeVotedByFriends = 4,
		k_EWorkshopEnumerationTypeContentByFriends = 5,
		k_EWorkshopEnumerationTypeRecentFromFollowedUsers = 6
	}

	public enum EWorkshopFileAction // TypeDefIndex: 4700
	{
		k_EWorkshopFileActionPlayed = 0,
		k_EWorkshopFileActionCompleted = 1
	}

	public enum EWorkshopFileType // TypeDefIndex: 4698
	{
		k_EWorkshopFileTypeFirst = 0,
		k_EWorkshopFileTypeCommunity = 0,
		k_EWorkshopFileTypeMicrotransaction = 1,
		k_EWorkshopFileTypeCollection = 2,
		k_EWorkshopFileTypeArt = 3,
		k_EWorkshopFileTypeVideo = 4,
		k_EWorkshopFileTypeScreenshot = 5,
		k_EWorkshopFileTypeGame = 6,
		k_EWorkshopFileTypeSoftware = 7,
		k_EWorkshopFileTypeConcept = 8,
		k_EWorkshopFileTypeWebGuide = 9,
		k_EWorkshopFileTypeIntegratedGuide = 10,
		k_EWorkshopFileTypeMerch = 11,
		k_EWorkshopFileTypeControllerBinding = 12,
		k_EWorkshopFileTypeSteamworksAccessInvite = 13,
		k_EWorkshopFileTypeSteamVideo = 14,
		k_EWorkshopFileTypeGameManagedItem = 15,
		k_EWorkshopFileTypeMax = 16
	}

	public enum EWorkshopVideoProvider // TypeDefIndex: 4702
	{
		k_EWorkshopVideoProviderNone = 0,
		k_EWorkshopVideoProviderYoutube = 1
	}

	public enum EWorkshopVote // TypeDefIndex: 4699
	{
		k_EWorkshopVoteUnvoted = 0,
		k_EWorkshopVoteFor = 1,
		k_EWorkshopVoteAgainst = 2,
		k_EWorkshopVoteLater = 3
	}
}

public class ExileController : MonoBehaviour // TypeDefIndex: 5272
{
	// Fields
	public static ExileController Instance; // 0x00
	public TextRenderer ImpostorText; // 0x0C
	public TextRenderer Text; // 0x10
	public SpriteRenderer Player; // 0x14
	public HatParent PlayerHat; // 0x18
	public SpriteRenderer PlayerSkin; // 0x1C
	public AnimationCurve LerpCurve; // 0x20
	public float Duration; // 0x24
	public AudioClip TextSound; // 0x28
	protected string completeString; // 0x2C
	protected GameData.PlayerInfo exiled; // 0x30

	// Nested types
	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5273
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<GameData.PlayerInfo, bool> __9__11_0; // 0x04
		public static Func<GameData.PlayerInfo, bool> __9__11_1; // 0x08

		// Constructors
		static __c(); // 0x1022E910-0x1022E960
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _Begin_b__11_0(GameData.PlayerInfo p); // 0x1022E570-0x1022E5A0
		internal bool _Begin_b__11_1(GameData.PlayerInfo p); // 0x101D0ED0-0x101D0EF0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Animate_d__12 : IEnumerator<object> // TypeDefIndex: 5274
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public ExileController __4__this; // 0x10
		private Vector2 _left_5__2; // 0x14
		private Vector2 _right_5__3; // 0x1C
		private float _t_5__4; // 0x24

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Animate_d__12(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022A970-0x1022B0A0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1022B0A0-0x1022B0F0
	}

	// Constructors
	public ExileController(); // 0x1021F0C0-0x1021F110

	// Methods
	public void Begin(GameData.PlayerInfo exiled, bool tie); // 0x1021E7D0-0x1021EE70
	[IteratorStateMachine] // 0x1002B070-0x1002B0C0
	protected virtual IEnumerator Animate(); // 0x1021E780-0x1021E7D0
	protected void WrapUp(); // 0x1021EE70-0x1021F0C0
}

public class ExitGameButton : MonoBehaviour // TypeDefIndex: 5547
{
	// Constructors
	public ExitGameButton(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Start(); // 0x1021F1A0-0x1021F200
	public void OnClick(); // 0x1021F110-0x1021F1A0
}

namespace MS.Internal.Xml.XPath
{
	internal abstract class ExtensionQuery : Query // TypeDefIndex: 1762
	{
		// Fields
		protected string prefix; // 0x0C
		protected string name; // 0x10
		protected XsltContext xsltContext; // 0x14
		private ResetableIterator queryIterator; // 0x18
	
		// Properties
		public override XPathNavigator Current { get; } // 0x106BC010-0x106BC0B0 
		public override int CurrentPosition { get; } // 0x106BBFE0-0x106BC010 
		protected string QName { get; } // 0x106BC0B0-0x106BC110 
		public override int Count { get; } // 0x106BBFB0-0x106BBFE0 
		public override XPathResultType StaticType { get; } // 0x102F6F80-0x102F6F90 
	
		// Constructors
		public ExtensionQuery(string prefix, string name); // 0x106BBEB0-0x106BBEE0
		protected ExtensionQuery(ExtensionQuery other); // 0x106BBEE0-0x106BBFB0
	
		// Methods
		public override void Reset(); // 0x106BBE80-0x106BBEB0
		public override XPathNavigator Advance(); // 0x106BB940-0x106BB9D0
		protected object ProcessResult(object value); // 0x106BB9D0-0x106BBE80
	}
}

public static class Extensions // TypeDefIndex: 5222
{
	// Fields
	private static string[] ByteHex; // 0x00

	// Nested types
	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5223
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<char, bool> __9__44_0; // 0x04

		// Constructors
		static __c(); // 0x1022E820-0x1022E870
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _IsNullOrWhiteSpace_b__44_0(char c); // 0x1022E5E0-0x1022E640
		internal string _.cctor_b__45_0(int x); // 0x1022E6E0-0x1022E720
	}

	// Constructors
	static Extensions(); // 0x1021FFC0-0x10220070

	// Extension methods
	public static string RemoveAll(this string self, params /* 0x10002030-0x10002050 */ char[] chars); // 0x1021F910-0x1021F9D0
	public static void TrimEnd(this StringBuilder self); // 0x1021FF30-0x1021FFA0
	public static void DestroyAll<T>(this IList<T> self)
		where T : MonoBehaviour;
	public static void AddUnique<T>(this IList<T> self, T item);
	public static string ToTextColor(this Color c); // 0x1021FC10-0x1021FF30
	public static int ToInteger(this Color c, bool alpha); // 0x1021FBA0-0x1021FC10
	public static bool HasAnyBit(this int self, int bit); // 0x1021F470-0x1021F480
	public static bool HasAnyBit(this byte self, byte bit); // 0x1021F460-0x1021F470
	public static bool HasAnyBit(this ushort self, byte bit); // 0x1021F480-0x1021F490
	public static bool HasBit(this byte self, byte bit); // 0x1021F490-0x1021F4B0
	public static int BitCount(this byte self); // 0x1021F3C0-0x1021F410
	public static int IndexOf<T>(this T[] self, T item)
		where T : class;
	public static int IndexOfMin<T>(this T[] self, Func<T, float> comparer);
	public static int IndexOfMax<T>(this T[] self, Func<T, int> comparer, out bool tie);
	public static void SetAll<T>(this IList<T> self, T value);
	public static void AddAll<T>(this List<T> self, IList<T> other);
	public static void RemoveDupes<T>(this IList<T> self)
		where T : class;
	public static void Shuffle<T>(this IList<T> self);
	public static void Shuffle<T>(this System.Random r, IList<T> self);
	public static T[] RandomSet<T>(this IList<T> self, int length);
	public static void RandomFill<T>(this IList<T> self, T[] target);
	public static int RandomIdx<T>(this IList<T> self);
	public static int RandomIdx<T>(this IEnumerable<T> self);
	public static T Random<T>(this IEnumerable<T> self);
	public static T Random<T>(this IList<T> self);
	public static Vector2 Div(this Vector2 a, Vector2 b); // 0x1021F410-0x1021F460
	public static Vector2 Mul(this Vector2 a, Vector2 b); // 0x1021F860-0x1021F8B0
	public static Vector3 Mul(this Vector3 a, Vector3 b); // 0x1021F8B0-0x1021F910
	public static Vector3 Inv(this Vector3 a); // 0x1021F4B0-0x1021F510
	public static Rect Lerp(this Rect source, Rect target, float t); // 0x1021F5E0-0x1021F6D0
	public static void ForEach<T>(this IList<T> self, Action<T> todo);
	public static T Max<T>(this IList<T> self, Func<T, float> comparer);
	public static T Max<T>(this IList<T> self, Func<T, decimal> comparer);
	public static int Wrap(this int self, int max); // 0x1021FFA0-0x1021FFC0
	public static int IndexOf<T>(this T[] self, Predicate<T> pred);
	public static Vector2 MapToRectangle(this Vector2 del, Vector2 widthAndHeight); // 0x1021F6D0-0x1021F860
	public static float AngleSignedRad(this Vector2 vector1, Vector2 vector2); // 0x1021F200-0x1021F2C0
	public static float AngleSigned(this Vector2 vector1, Vector2 vector2); // 0x1021F2C0-0x1021F3C0
	public static Vector2 Rotate(this Vector2 self, float degrees); // 0x1021FAC0-0x1021FBA0
	public static Vector3 RotateY(this Vector3 self, float degrees); // 0x1021F9D0-0x1021FAC0
	public static bool TryToEnum<TEnum>(this string strEnumValue, out TEnum enumValue);
	public static TEnum ToEnum<TEnum>(this string strEnumValue);
	public static TEnum ToEnum<TEnum>(this string strEnumValue, TEnum defaultValue);
	public static bool IsNullOrWhiteSpace(this string s); // 0x1021F510-0x1021F5E0
}

namespace Steamworks
{
	[CallbackIdentity] // 0x10006CA0-0x10006CC0
	public struct FavoritesListAccountsUpdated_t // TypeDefIndex: 4565
	{
		// Fields
		public const int k_iCallback = 516; // Metadata: 0x002422D7
		public EResult m_eResult; // 0x00
	}

	[CallbackIdentity] // 0x10006990-0x100069B0
	public struct FavoritesListChanged_t // TypeDefIndex: 4555
	{
		// Fields
		public const int k_iCallback = 502; // Metadata: 0x002422AF
		public uint m_nIP; // 0x00
		public uint m_nQueryPort; // 0x04
		public uint m_nConnPort; // 0x08
		public uint m_nAppID; // 0x0C
		public uint m_nFlags; // 0x10
		public bool m_bAdd; // 0x14
		public AccountID_t m_unAccountId; // 0x18
	}

	[CallbackIdentity] // 0x10002050-0x10002070
	public struct FileDetailsResult_t // TypeDefIndex: 4489
	{
		// Fields
		public const int k_iCallback = 1023; // Metadata: 0x002421A7
		public EResult m_eResult; // 0x00
		public ulong m_ulFileSize; // 0x08
		public byte[] m_FileSHA; // 0x10
		public uint m_unFlags; // 0x14
	}
}

namespace Discord
{
	public struct FileStat // TypeDefIndex: 4889
	{
		// Fields
		public string Filename; // 0x00
		public ulong Size; // 0x08
		public ulong LastModified; // 0x10
	}
}

public class FillCanistersGame : Minigame // TypeDefIndex: 5637
{
	// Fields
	private Vector3 CanisterAppearPosition; // 0x28
	private Vector3 CanisterStartPosition; // 0x34
	private Vector3 CanisterDragPosition; // 0x40
	private Vector3 CanisterSnapPosition; // 0x4C
	private Vector3 CanisterAwayPosition; // 0x58
	public float FillTime; // 0x64
	public CanisterBehaviour Canister; // 0x68
	private Controller controller; // 0x6C
	public AudioClip FillLoop; // 0x70
	public AudioClip DropSound; // 0x74
	public AudioClip GrabSound; // 0x78
	public AudioClip PlugInSound; // 0x7C
	public AudioClip PlugOutSound; // 0x80

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Run_d__15 : IEnumerator<object> // TypeDefIndex: 5638
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public FillCanistersGame __4__this; // 0x10
		private AudioSource _fillSound_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Run_d__15(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022D190-0x1022DB60
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1022DB60-0x1022DBB0
	}

	// Constructors
	public FillCanistersGame(); // 0x102201C0-0x10220380

	// Methods
	public void Start(); // 0x10220130-0x10220190
	public override void Close(); // 0x10220070-0x102200E0
	[IteratorStateMachine] // 0x1000DA90-0x1000DAE0
	private IEnumerator Run(); // 0x102200E0-0x10220130
	[CompilerGenerated] // 0x10002030-0x10002050
	private void _Run_b__15_0(float t); // 0x10220190-0x102201C0
}

namespace MS.Internal.Xml.XPath
{
	internal class Filter : AstNode // TypeDefIndex: 1763
	{
		// Fields
		private AstNode input; // 0x08
		private AstNode condition; // 0x0C
	
		// Properties
		public override AstType Type { get; } // 0x102EC630-0x102EC640 
		public override XPathResultType ReturnType { get; } // 0x1045B170-0x1045B180 
		public AstNode Input { get; } // 0x101B4FF0-0x101B5000 
		public AstNode Condition { get; } // 0x101AE200-0x101AE210 
	
		// Constructors
		public Filter(AstNode input, AstNode condition); // 0x101A5800-0x101A5830
	}

	internal sealed class FilterQuery : BaseAxisQuery // TypeDefIndex: 1764
	{
		// Fields
		private Query cond; // 0x2C
		private bool noPosition; // 0x30
	
		// Properties
		public Query Condition { get; } // 0x101F0010-0x101F0020 
		public override QueryProps Properties { get; } // 0x106BC500-0x106BC530 
	
		// Constructors
		public FilterQuery(Query qyParent, Query cond, bool noPosition); // 0x106BC490-0x106BC4C0
		private FilterQuery(FilterQuery other); // 0x106BC4C0-0x106BC500
	
		// Methods
		public override void Reset(); // 0x106BC330-0x106BC390
		public override void SetXsltContext(XsltContext input); // 0x106BC390-0x106BC490
		public override XPathNavigator Advance(); // 0x106BC110-0x106BC160
		internal bool EvaluatePredicate(); // 0x106BC1D0-0x106BC330
		public override XPathNodeIterator Clone(); // 0x106BC160-0x106BC1D0
	}
}

public class FindAGameManager : DestroyableSingleton<FindAGameManager>, IGameListHandler // TypeDefIndex: 5548
{
	// Fields
	private const float RefreshTime = 5f; // Metadata: 0x00243C35
	private float timer; // 0x10
	public ObjectPoolBehavior buttonPool; // 0x14
	public SpinAnimator RefreshSpinner; // 0x18
	public Scroller TargetArea; // 0x1C
	public TextRenderer TotalText; // 0x20
	public float ButtonStart; // 0x24
	public float ButtonHeight; // 0x28
	public const bool showPrivate = false; // Metadata: 0x00243C39

	// Nested types
	private class GameSorter : IComparer<GameListing> // TypeDefIndex: 5549
	{
		// Fields
		public static readonly GameSorter Instance; // 0x00

		// Constructors
		public GameSorter(); // 0x101A2CD0-0x101A2CE0
		static GameSorter(); // 0x10228D80-0x10228DD0

		// Methods
		public int Compare(GameListing x, GameListing y); // 0x10228D60-0x10228D80
	}

	// Constructors
	public FindAGameManager(); // 0x10220D80-0x10220DD0

	// Methods
	public void ResetTimer(); // 0x10220B10-0x10220B50
	public void Start(); // 0x10220B50-0x10220C80
	public void Update(); // 0x10220C80-0x10220D80
	public void RefreshList(); // 0x10220A70-0x10220B10
	public override void OnDestroy(); // 0x102209D0-0x10220A70
	public void HandleList(InnerNetClient.TotalGameData totalGames, List<GameListing> availableGames); // 0x102203C0-0x102209D0
	public void ExitGame(); // 0x10220380-0x102203C0
}

public class FindGameButton : MonoBehaviour, IConnectButton // TypeDefIndex: 5550
{
	// Fields
	public SpriteAnim connectIcon; // 0x0C
	public AnimationClip connectClip; // 0x10

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _ConnectForFindGame_d__3 : IEnumerator<object> // TypeDefIndex: 5551
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _ConnectForFindGame_d__3(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022C570-0x1022C6B0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1022C6B0-0x1022C700
	}

	// Constructors
	public FindGameButton(); // 0x101A68C0-0x101A68D0

	// Methods
	public void OnClick(); // 0x10220E20-0x10220F90
	[IteratorStateMachine] // 0x10004D70-0x10004DC0
	private IEnumerator ConnectForFindGame(); // 0x10220DD0-0x10220E20
	public void StartIcon(); // 0x10220F90-0x10220FC0
	public void StopIcon(); // 0x10220FC0-0x10221030
}

public class FingerBehaviour : MonoBehaviour // TypeDefIndex: 5368
{
	// Fields
	public SpriteRenderer Finger; // 0x0C
	public SpriteRenderer Click; // 0x10
	public float liftedAngle; // 0x14

	// Nested types
	public static class Quadratic // TypeDefIndex: 5369
	{
		// Methods
		public static float InOut(float k); // 0x1022A5E0-0x1022A640
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _DoClick_d__3 : IEnumerator<object> // TypeDefIndex: 5370
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public float duration; // 0x10
		public FingerBehaviour __4__this; // 0x14
		private float _time_5__2; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _DoClick_d__3(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022C700-0x1022C9A0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1022C9A0-0x1022C9F0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _MoveTo_d__7 : IEnumerator<object> // TypeDefIndex: 5371
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public FingerBehaviour __4__this; // 0x10
		public Vector2 target; // 0x14
		public float duration; // 0x1C
		private Vector3 _startPos_5__2; // 0x20
		private Vector3 _targetPos_5__3; // 0x2C
		private float _time_5__4; // 0x38

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _MoveTo_d__7(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022C9F0-0x1022CC30
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1022CC30-0x1022CC80
	}

	// Constructors
	public FingerBehaviour(); // 0x10221230-0x10221250

	// Methods
	[IteratorStateMachine] // 0x100375A0-0x100375F0
	public IEnumerator DoClick(float duration); // 0x102210B0-0x10221110
	private void SetFingerAngle(float angle); // 0x10221180-0x10221230
	public void ClickOff(); // 0x10221030-0x10221070
	public void ClickOn(); // 0x10221070-0x102210B0
	[IteratorStateMachine] // 0x10037640-0x10037690
	public IEnumerator MoveTo(Vector2 target, float duration); // 0x10221110-0x10221180
}

[RequireComponent] // 0x100308C0-0x10030930
[RequireComponent] // 0x100308C0-0x10030930
public class FlatWaveBehaviour : MonoBehaviour // TypeDefIndex: 5309
{
	// Fields
	public int NumPoints; // 0x0C
	public FloatRange Width; // 0x10
	public FloatRange Delta; // 0x14
	public float Center; // 0x18
	private Mesh mesh; // 0x1C
	private Vector3[] vecs; // 0x20
	public float TickRate; // 0x24
	private float timer; // 0x28
	public int Skip; // 0x2C
	[Range] // 0x1001D290-0x1001D2C0
	public float NoiseP; // 0x30

	// Constructors
	public FlatWaveBehaviour(); // 0x10221610-0x10221650

	// Methods
	public void Start(); // 0x10221250-0x102214B0
	public void Update(); // 0x102214B0-0x10221610
}

[Serializable]
public class FloatRange // TypeDefIndex: 5238
{
	// Fields
	public float min; // 0x08
	public float max; // 0x0C
	[CompilerGenerated] // 0x10002030-0x10002050
	private float _Last_k__BackingField; // 0x10

	// Properties
	public float Last { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101AE1F0-0x101AE200 0x10222000-0x10222020
	public float Width { get; } // 0x10221FF0-0x10222000 

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Range_d__20 : IEnumerable<float>, IEnumerator<float> // TypeDefIndex: 5239
	{
		// Fields
		private int __1__state; // 0x08
		private float __2__current; // 0x0C
		private int __l__initialThreadId; // 0x10
		public FloatRange __4__this; // 0x14
		private int numStops; // 0x18
		public int __3__numStops; // 0x1C
		private float _i_5__2; // 0x20

		// Properties
		float IEnumerator<System.Single>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x1022CEB0-0x1022CEC0 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x1022D140-0x1022D190 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Range_d__20(int __1__state); // 0x101B7DC0-0x101B7DF0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022CF60-0x1022D060
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1022D0F0-0x1022D140
		[DebuggerHidden] // 0x10002030-0x10002050
		IEnumerator<float> IEnumerable<float>.GetEnumerator(); // 0x1022D060-0x1022D0F0
		[DebuggerHidden] // 0x10002030-0x10002050
		IEnumerator IEnumerable.GetEnumerator(); // 0x1022D060-0x1022D0F0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _RandomRange_d__21 : IEnumerable<float>, IEnumerator<float> // TypeDefIndex: 5240
	{
		// Fields
		private int __1__state; // 0x08
		private float __2__current; // 0x0C
		private int __l__initialThreadId; // 0x10
		public FloatRange __4__this; // 0x14
		private int numStops; // 0x18
		public int __3__numStops; // 0x1C
		private float _i_5__2; // 0x20

		// Properties
		float IEnumerator<System.Single>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x1022CEB0-0x1022CEC0 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x1022CF10-0x1022CF60 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _RandomRange_d__21(int __1__state); // 0x101B7DC0-0x101B7DF0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022CD80-0x1022CE20
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1022CEC0-0x1022CF10
		[DebuggerHidden] // 0x10002030-0x10002050
		IEnumerator<float> IEnumerable<float>.GetEnumerator(); // 0x1022CE20-0x1022CEB0
		[DebuggerHidden] // 0x10002030-0x10002050
		IEnumerator IEnumerable.GetEnumerator(); // 0x1022CE20-0x1022CEB0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _SpreadToEdges_d__26 : IEnumerable<float>, IEnumerator<float> // TypeDefIndex: 5241
	{
		// Fields
		private int __1__state; // 0x08
		private float __2__current; // 0x0C
		private int __l__initialThreadId; // 0x10
		private int stops; // 0x14
		public int __3__stops; // 0x18
		private float min; // 0x1C
		public float __3__min; // 0x20
		private float max; // 0x24
		public float __3__max; // 0x28
		private int _i_5__2; // 0x2C

		// Properties
		float IEnumerator<System.Single>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x1022CEB0-0x1022CEC0 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x1022E200-0x1022E250 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _SpreadToEdges_d__26(int __1__state); // 0x101B7DC0-0x101B7DF0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022E010-0x1022E110
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1022E1B0-0x1022E200
		[DebuggerHidden] // 0x10002030-0x10002050
		IEnumerator<float> IEnumerable<float>.GetEnumerator(); // 0x1022E110-0x1022E1B0
		[DebuggerHidden] // 0x10002030-0x10002050
		IEnumerator IEnumerable.GetEnumerator(); // 0x1022E110-0x1022E1B0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _SpreadEvenly_d__27 : IEnumerable<float>, IEnumerator<float> // TypeDefIndex: 5242
	{
		// Fields
		private int __1__state; // 0x08
		private float __2__current; // 0x0C
		private int __l__initialThreadId; // 0x10
		private int stops; // 0x14
		public int __3__stops; // 0x18
		private float min; // 0x1C
		public float __3__min; // 0x20
		private float max; // 0x24
		public float __3__max; // 0x28
		private float _step_5__2; // 0x2C
		private float _i_5__3; // 0x30

		// Properties
		float IEnumerator<System.Single>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x1022CEB0-0x1022CEC0 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x1022DFC0-0x1022E010 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _SpreadEvenly_d__27(int __1__state); // 0x101B7DC0-0x101B7DF0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022DDD0-0x1022DED0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1022DF70-0x1022DFC0
		[DebuggerHidden] // 0x10002030-0x10002050
		IEnumerator<float> IEnumerable<float>.GetEnumerator(); // 0x1022DED0-0x1022DF70
		[DebuggerHidden] // 0x10002030-0x10002050
		IEnumerator IEnumerable.GetEnumerator(); // 0x1022DED0-0x1022DF70
	}

	// Constructors
	public FloatRange(float min, float max); // 0x10221FC0-0x10221FF0

	// Methods
	public float ChangeRange(float y, float min, float max); // 0x10221650-0x102216F0
	public float Clamp(float value); // 0x102216F0-0x10221780
	public bool Contains(float t); // 0x10221780-0x102217B0
	public float CubicLerp(float v); // 0x102217B0-0x10221860
	public float EitherOr(); // 0x10221860-0x10221890
	public float LerpUnclamped(float v); // 0x10221A40-0x10221AD0
	public float Lerp(float v); // 0x10221AD0-0x10221B60
	public float ExpOutLerp(float v); // 0x10221930-0x10221A40
	public static float ExpOutLerp(float v, float min, float max); // 0x10221890-0x10221930
	public static float Next(float min, float max); // 0x10221BA0-0x10221BD0
	public float Next(); // 0x10221B60-0x10221BA0
	[IteratorStateMachine] // 0x10026B50-0x10026BA0
	public IEnumerable<float> Range(int numStops); // 0x10221C30-0x10221C90
	[IteratorStateMachine] // 0x10026C10-0x10026C60
	public IEnumerable<float> RandomRange(int numStops); // 0x10221BD0-0x10221C30
	internal float ReverseLerp(float t); // 0x10221C90-0x10221D30
	public static float ReverseLerp(float t, float min, float max); // 0x10221D30-0x10221DC0
	public IEnumerable<float> SpreadToEdges(int stops); // 0x10221EC0-0x10221F50
	public IEnumerable<float> SpreadEvenly(int stops); // 0x10221DC0-0x10221E50
	[IteratorStateMachine] // 0x10026CF0-0x10026D40
	public static IEnumerable<float> SpreadToEdges(float min, float max, int stops); // 0x10221F50-0x10221FC0
	[IteratorStateMachine] // 0x10026D90-0x10026DE0
	public static IEnumerable<float> SpreadEvenly(float min, float max, int stops); // 0x10221E50-0x10221EC0
}

internal class FollowerCamera : MonoBehaviour // TypeDefIndex: 5324
{
	// Fields
	public MonoBehaviour Target; // 0x0C
	public Vector2 Offset; // 0x10
	public bool Locked; // 0x18
	public float shakeAmount; // 0x1C
	public float shakePeriod; // 0x20

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoShakeScreen_d__7 : IEnumerator<object> // TypeDefIndex: 5325
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public float duration; // 0x10
		public FollowerCamera __4__this; // 0x14
		public float severity; // 0x18
		private WaitForFixedUpdate _wait_5__2; // 0x1C
		private float _t_5__3; // 0x20

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoShakeScreen_d__7(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022BF90-0x1022C140
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1022C140-0x1022C190
	}

	// Constructors
	public FollowerCamera(); // 0x10222540-0x10222560

	// Methods
	public void FixedUpdate(); // 0x10222080-0x10222390
	public void ShakeScreen(float duration, float severity); // 0x102224D0-0x10222540
	[IteratorStateMachine] // 0x10032830-0x10032880
	private IEnumerator CoShakeScreen(float duration, float severity); // 0x10222020-0x10222080
	internal void SetTarget(MonoBehaviour target); // 0x10222390-0x102224D0
}

namespace MS.Internal.Xml.XPath
{
	internal sealed class FollowingQuery : BaseAxisQuery // TypeDefIndex: 1765
	{
		// Fields
		private XPathNavigator input; // 0x2C
		private XPathNodeIterator iterator; // 0x30
	
		// Constructors
		public FollowingQuery(Query qyInput, string name, string prefix, XPathNodeType typeTest); // 0x1054EA60-0x1054EA70
		private FollowingQuery(FollowingQuery other); // 0x106BCE30-0x106BCEA0
	
		// Methods
		public override void Reset(); // 0x106BB550-0x106BB590
		public override XPathNavigator Advance(); // 0x106BCB60-0x106BCD90
		public override XPathNodeIterator Clone(); // 0x106BCD90-0x106BCE30
	}

	internal sealed class FollSiblingQuery : BaseAxisQuery // TypeDefIndex: 1766
	{
		// Fields
		private ClonableStack<XPathNavigator> elementStk; // 0x2C
		private List<XPathNavigator> parentStk; // 0x30
		private XPathNavigator nextInput; // 0x34
	
		// Constructors
		public FollSiblingQuery(Query qyInput, string name, string prefix, XPathNodeType type); // 0x106BCAE0-0x106BCB60
		private FollSiblingQuery(FollSiblingQuery other); // 0x106BCA30-0x106BCAE0
	
		// Methods
		public override void Reset(); // 0x106BC8B0-0x106BC940
		private bool Visited(XPathNavigator nav); // 0x106BC940-0x106BCA30
		private XPathNavigator FetchInput(); // 0x106BC770-0x106BC8B0
		public override XPathNavigator Advance(); // 0x106BC530-0x106BC690
		public override XPathNodeIterator Clone(); // 0x106BC690-0x106BC770
	}
}

public class FontCache : MonoBehaviour // TypeDefIndex: 5250
{
	// Fields
	public static FontCache Instance; // 0x00
	private Dictionary<string, FontData> cache; // 0x0C
	public List<FontExtensionData> extraData; // 0x10
	public List<TextAsset> DefaultFonts; // 0x14
	public List<Material> DefaultFontMaterials; // 0x18

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass7_0 // TypeDefIndex: 5251
	{
		// Fields
		public TextAsset dataSrc; // 0x08

		// Constructors
		public __c__DisplayClass7_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _LoadFont_b__0(FontExtensionData ed); // 0x1022E790-0x1022E7D0
	}

	// Constructors
	public FontCache(); // 0x102229C0-0x10222A70

	// Methods
	public void OnEnable(); // 0x102226E0-0x102227F0
	public void SetFont(TextRenderer self, string name); // 0x102227F0-0x102229C0
	public FontData LoadFont(TextAsset dataSrc); // 0x10222570-0x102226E0
	public static FontData LoadFontUncached(TextAsset dataSrc, FontExtensionData eData = null); // 0x10222560-0x10222570
}

[Serializable]
public class FontData // TypeDefIndex: 5252
{
	// Fields
	public Vector2 TextureSize; // 0x08
	public List<Vector4> bounds; // 0x10
	public List<Vector3> offsets; // 0x14
	public List<Vector4> Channels; // 0x18
	public Dictionary<int, int> charMap; // 0x1C
	public float LineHeight; // 0x20
	public Dictionary<int, Dictionary<int, float>> kernings; // 0x24

	// Constructors
	public FontData(); // 0x10222B00-0x10222BD0

	// Methods
	public float GetKerning(int last, int cur); // 0x10222A70-0x10222B00
}

[CreateAssetMenu] // 0x10002030-0x10002050
public class FontExtensionData : ScriptableObject // TypeDefIndex: 5255
{
	// Fields
	public string FontName; // 0x0C
	public List<KerningPair> kernings; // 0x10
	public List<OffsetAdjustment> Offsets; // 0x14

	// Constructors
	public FontExtensionData(); // 0x10222EE0-0x10222F50

	// Methods
	public void AdjustKernings(FontData target); // 0x10222BD0-0x10222D80
	public void AdjustOffsets(FontData target); // 0x10222D80-0x10222EE0
}

public static class FontLoader // TypeDefIndex: 5256
{
	// Methods
	public static FontData FromBinary(TextAsset dataSrc, FontExtensionData eData); // 0x10222F50-0x10223A30
	private static Vector4 IntToChannels(int input); // 0x10223A30-0x10223A80
}

internal class FootstepWatcher : MonoBehaviour, IStepWatcher // TypeDefIndex: 5772
{
	// Fields
	public int priority; // 0x0C
	public Collider2D Area; // 0x10
	public SoundGroup Sounds; // 0x14

	// Properties
	public int Priority { get; } // 0x101AE200-0x101AE210 

	// Constructors
	public FootstepWatcher(); // 0x101A68C0-0x101A68D0

	// Methods
	public SoundGroup MakeFootstep(PlayerControl player); // 0x10223A80-0x10223AD0
}

namespace MS.Internal.Xml.XPath
{
	internal class ForwardPositionQuery : CacheOutputQuery // TypeDefIndex: 1767
	{
		// Constructors
		public ForwardPositionQuery(Query input); // 0x106BB910-0x106BB920
		protected ForwardPositionQuery(ForwardPositionQuery other); // 0x106BB900-0x106BB910
	
		// Methods
		public override object Evaluate(XPathNodeIterator context); // 0x106BCEF0-0x106BCF90
		public override XPathNodeIterator Clone(); // 0x106BCEA0-0x106BCEF0
	}
}

public class FreeplayPopover : MonoBehaviour // TypeDefIndex: 5328
{
	// Fields
	public GameObject Content; // 0x0C
	public SpriteRenderer[] MapButtons; // 0x10
	public HostGameButton HostGame; // 0x14

	// Constructors
	public FreeplayPopover(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Show(); // 0x10223BE0-0x10223E30
	public void PlayMap(int i); // 0x10223B80-0x10223BE0
}

public class FreeWeekendShower : MonoBehaviour // TypeDefIndex: 5326
{
	// Fields
	public TextRenderer Output; // 0x0C

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Check_d__2 : IEnumerator<object> // TypeDefIndex: 5327
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public FreeWeekendShower __4__this; // 0x10
		private WaitForSeconds _wait_5__2; // 0x14
		private StringBuilder _txt_5__3; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Check_d__2(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022B500-0x1022B670
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1022B670-0x1022B6C0
	}

	// Constructors
	public FreeWeekendShower(); // 0x101A68C0-0x101A68D0

	// Methods
	private void Start(); // 0x10223B20-0x10223B80
	[IteratorStateMachine] // 0x10032B60-0x10032BB0
	private IEnumerator Check(); // 0x10223AD0-0x10223B20
}

[Flags] // 0x10002030-0x10002050
public enum FreeWeekendState : byte // TypeDefIndex: 5718
{
	NotFree = 0,
	FreeMIRA = 1,
	FreePolus = 2
}

namespace Steamworks
{
	public struct FriendGameInfo_t // TypeDefIndex: 4749
	{
		// Fields
		public CGameID m_gameID; // 0x00
		public uint m_unGameIP; // 0x08
		public ushort m_usGamePort; // 0x0C
		public ushort m_usQueryPort; // 0x0E
		public CSteamID m_steamIDLobby; // 0x10
	}

	[CallbackIdentity] // 0x100023D0-0x100023F0
	public struct FriendRichPresenceUpdate_t // TypeDefIndex: 4496
	{
		// Fields
		public const int k_iCallback = 336; // Metadata: 0x002421C3
		public CSteamID m_steamIDFriend; // 0x00
		public AppId_t m_nAppID; // 0x08
	}

	[CallbackIdentity] // 0x100038A0-0x100038C0
	public struct FriendsEnumerateFollowingList_t // TypeDefIndex: 4506
	{
		// Fields
		public const int k_iCallback = 346; // Metadata: 0x002421EB
		public EResult m_eResult; // 0x00
		public CSteamID[] m_rgSteamID; // 0x04
		public int m_nResultsReturned; // 0x08
		public int m_nTotalResultCount; // 0x0C
	}

	public struct FriendSessionStateInfo_t // TypeDefIndex: 4750
	{
		// Fields
		public uint m_uiOnlineSessionInstances; // 0x00
		public byte m_uiPublishedToFriendsSessionInstance; // 0x04
	}

	[CallbackIdentity] // 0x10003860-0x10003880
	public struct FriendsGetFollowerCount_t // TypeDefIndex: 4504
	{
		// Fields
		public const int k_iCallback = 344; // Metadata: 0x002421E3
		public EResult m_eResult; // 0x00
		public CSteamID m_steamID; // 0x04
		public int m_nCount; // 0x0C
	}

	[Serializable]
	public struct FriendsGroupID_t : IEquatable<FriendsGroupID_t>, IComparable<FriendsGroupID_t> // TypeDefIndex: 4802
	{
		// Fields
		public static readonly FriendsGroupID_t Invalid; // 0x00
		public short m_FriendsGroupID; // 0x00
	
		// Constructors
		public FriendsGroupID_t(short value); // 0x100918C0-0x10091CE0
		static FriendsGroupID_t(); // 0x101D24A0-0x101D24D0
	
		// Methods
		public override string ToString(); // 0x100918A0-0x100918C0
		public override bool Equals(object other); // 0x100917F0-0x10091880
		public override int GetHashCode(); // 0x10091880-0x100918A0
		public static bool operator ==(FriendsGroupID_t x, FriendsGroupID_t y); // 0x101D24D0-0x101D24E0
		public static bool operator !=(FriendsGroupID_t x, FriendsGroupID_t y); // 0x101D24F0-0x101D2540
		public static explicit operator FriendsGroupID_t(short value); // 0x101D24E0-0x101D24F0
		public static explicit operator short(FriendsGroupID_t that); // 0x101D24E0-0x101D24F0
		public bool Equals(FriendsGroupID_t other); // 0x100917D0-0x100917F0
		public int CompareTo(FriendsGroupID_t other); // 0x100917B0-0x100917D0
	}

	[CallbackIdentity] // 0x10003880-0x100038A0
	public struct FriendsIsFollowing_t // TypeDefIndex: 4505
	{
		// Fields
		public const int k_iCallback = 345; // Metadata: 0x002421E7
		public EResult m_eResult; // 0x00
		public CSteamID m_steamID; // 0x04
		public bool m_bIsFollowing; // 0x0C
	}
}

namespace MS.Internal.Xml.XPath
{
	internal class Function : AstNode // TypeDefIndex: 1768
	{
		// Fields
		private FunctionType functionType; // 0x08
		private ArrayList argumentList; // 0x0C
		private string name; // 0x10
		private string prefix; // 0x14
		internal static XPathResultType[] ReturnTypes; // 0x00
	
		// Properties
		public override AstType Type { get; } // 0x102ECA00-0x102ECA10 
		public override XPathResultType ReturnType { get; } // 0x106BDC60-0x106BDCD0 
		public FunctionType TypeOfFunction { get; } // 0x101B4FF0-0x101B5000 
		public ArrayList ArgumentList { get; } // 0x101AE200-0x101AE210 
		public string Prefix { get; } // 0x101ADCB0-0x101ADCC0 
		public string Name { get; } // 0x101BCD80-0x101BCD90 
	
		// Nested types
		public enum FunctionType // TypeDefIndex: 1769
		{
			FuncLast = 0,
			FuncPosition = 1,
			FuncCount = 2,
			FuncID = 3,
			FuncLocalName = 4,
			FuncNameSpaceUri = 5,
			FuncName = 6,
			FuncString = 7,
			FuncBoolean = 8,
			FuncNumber = 9,
			FuncTrue = 10,
			FuncFalse = 11,
			FuncNot = 12,
			FuncConcat = 13,
			FuncStartsWith = 14,
			FuncContains = 15,
			FuncSubstringBefore = 16,
			FuncSubstringAfter = 17,
			FuncSubstring = 18,
			FuncStringLength = 19,
			FuncNormalize = 20,
			FuncTranslate = 21,
			FuncLang = 22,
			FuncSum = 23,
			FuncFloor = 24,
			FuncCeiling = 25,
			FuncRound = 26,
			FuncUserDefined = 27
		}
	
		// Constructors
		public Function(FunctionType ftype, ArrayList argumentList); // 0x106BDB10-0x106BDB70
		public Function(string prefix, string name, ArrayList argumentList); // 0x106BDBF0-0x106BDC60
		public Function(FunctionType ftype, AstNode arg); // 0x106BDB70-0x106BDBF0
		static Function(); // 0x106BDAC0-0x106BDB10
	}

	internal sealed class FunctionQuery : ExtensionQuery // TypeDefIndex: 1770
	{
		// Fields
		private IList<Query> args; // 0x1C
		private IXsltContextFunction function; // 0x20
	
		// Properties
		public override XPathResultType StaticType { get; } // 0x106BDA60-0x106BDAC0 
	
		// Constructors
		public FunctionQuery(string prefix, string name, List<Query> args); // 0x106BD8C0-0x106BD8F0
		private FunctionQuery(FunctionQuery other); // 0x106BD8F0-0x106BDA60
	
		// Methods
		public override void SetXsltContext(XsltContext context); // 0x106BD4D0-0x106BD8C0
		public override object Evaluate(XPathNodeIterator nodeIterator); // 0x106BD120-0x106BD4D0
		public override XPathNodeIterator Clone(); // 0x106BCF90-0x106BD120
	}
}

namespace InnerNet
{
	public static class GameCode // TypeDefIndex: 5902
	{
		// Fields
		public const int V2Flag = -2147483648; // Metadata: 0x0024432E
		public const int MaxGameNumber = 676; // Metadata: 0x00244332
		public static readonly int GameCodeV2MinVersion; // 0x00
		private static readonly string V2; // 0x04
		private static readonly int[] V2Map; // 0x08
	
		// Nested types
		[Serializable]
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c // TypeDefIndex: 5903
		{
			// Fields
			public static readonly __c __9; // 0x00
			public static Func<char, bool> __9__3_0; // 0x04
			public static Func<char, bool> __9__4_0; // 0x08
			public static Func<char, bool> __9__8_0; // 0x0C
			public static Func<char, bool> __9__9_0; // 0x10
	
			// Constructors
			static __c(); // 0x10285CB0-0x10285D00
			public __c(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal bool _IntToGameName_b__3_0(char c); // 0x10285610-0x10285630
			internal bool _GameNameToInt_b__4_0(char c); // 0x102855F0-0x10285610
			internal bool _IntToGameNameV2_b__8_0(char c); // 0x10285610-0x10285630
			internal bool _GameNameToIntV2_b__9_0(char c); // 0x10285610-0x10285630
			internal int _.cctor_b__10_0(int v); // 0x10285930-0x102859A0
		}
	
		// Constructors
		static GameCode(); // 0x10274000-0x102740F0
	
		// Methods
		public static string IntToGameName(int gameId); // 0x10273E50-0x10274000
		public static int GameNameToInt(string gameId); // 0x102739D0-0x10273B50
		private static int CreateGameId(int sn, int gn); // 0x102736E0-0x10273700
		private static string IntToGameNameV2(int gameId); // 0x10273B50-0x10273E50
		private static int GameNameToIntV2(string gameId); // 0x10273700-0x102739D0
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x10002560-0x10002580
	public struct GameConnectedChatJoin_t // TypeDefIndex: 4499
	{
		// Fields
		public const int k_iCallback = 339; // Metadata: 0x002421CF
		public CSteamID m_steamIDClanChat; // 0x00
		public CSteamID m_steamIDUser; // 0x08
	}

	[CallbackIdentity] // 0x10002580-0x100025A0
	public struct GameConnectedChatLeave_t // TypeDefIndex: 4500
	{
		// Fields
		public const int k_iCallback = 340; // Metadata: 0x002421D3
		public CSteamID m_steamIDClanChat; // 0x00
		public CSteamID m_steamIDUser; // 0x08
		public bool m_bKicked; // 0x10
		public bool m_bDropped; // 0x11
	}

	[CallbackIdentity] // 0x100024D0-0x100024F0
	public struct GameConnectedClanChatMsg_t // TypeDefIndex: 4498
	{
		// Fields
		public const int k_iCallback = 338; // Metadata: 0x002421CB
		public CSteamID m_steamIDClanChat; // 0x00
		public CSteamID m_steamIDUser; // 0x08
		public int m_iMessageID; // 0x10
	}

	[CallbackIdentity] // 0x10003800-0x10003820
	public struct GameConnectedFriendChatMsg_t // TypeDefIndex: 4503
	{
		// Fields
		public const int k_iCallback = 343; // Metadata: 0x002421DF
		public CSteamID m_steamIDUser; // 0x00
		public int m_iMessageID; // 0x08
	}
}

public class GameData : InnerNetObject, IDisconnectHandler // TypeDefIndex: 5329
{
	// Fields
	public static GameData Instance; // 0x00
	public List<PlayerInfo> AllPlayers; // 0x24
	public int TotalTasks; // 0x28
	public int CompletedTasks; // 0x2C
	public const byte InvalidPlayerId = 255; // Metadata: 0x00243B2A
	public const byte DisconnectedPlayerId = 254; // Metadata: 0x00243B2B

	// Properties
	public int PlayerCount { get; } // 0x10225730-0x10225770 

	// Nested types
	public class TaskInfo // TypeDefIndex: 5330
	{
		// Fields
		public uint Id; // 0x08
		public byte TypeId; // 0x0C
		public bool Complete; // 0x0D

		// Constructors
		public TaskInfo(); // 0x101A2CD0-0x101A2CE0
		public TaskInfo(byte typeId, uint id); // 0x1022A6C0-0x1022A6F0

		// Methods
		public void Serialize(MessageWriter writer); // 0x1022A680-0x1022A6C0
		public void Deserialize(MessageReader reader); // 0x1022A640-0x1022A680
	}

	public class PlayerInfo // TypeDefIndex: 5331
	{
		// Fields
		public readonly byte PlayerId; // 0x08
		public string PlayerName; // 0x0C
		public byte ColorId; // 0x10
		public uint HatId; // 0x14
		public uint PetId; // 0x18
		public uint SkinId; // 0x1C
		public bool Disconnected; // 0x20
		public List<TaskInfo> Tasks; // 0x24
		public bool IsImpostor; // 0x28
		public bool IsDead; // 0x29
		private PlayerControl _object; // 0x2C

		// Properties
		public PlayerControl Object { get; } // 0x1022A520-0x1022A5E0 

		// Constructors
		public PlayerInfo(byte playerId); // 0x1022A4D0-0x1022A520
		public PlayerInfo(PlayerControl pc); // 0x1022A470-0x1022A4D0

		// Methods
		public void Serialize(MessageWriter writer); // 0x1022A300-0x1022A450
		public void Deserialize(MessageReader reader); // 0x1022A100-0x1022A260
		public TaskInfo FindTaskById(uint taskId); // 0x1022A260-0x1022A300
		[CompilerGenerated] // 0x10002030-0x10002050
		private bool _get_Object_b__12_0(PlayerControl p); // 0x1022A450-0x1022A470
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass21_0 // TypeDefIndex: 5332
	{
		// Fields
		public sbyte i; // 0x08

		// Constructors
		public __c__DisplayClass21_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _GetAvailableId_b__0(PlayerInfo p); // 0x1022E720-0x1022E750
	}

	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5333
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<TaskInfo, uint> __9__32_0; // 0x04

		// Constructors
		static __c(); // 0x1022E8C0-0x1022E910
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal uint _TutOnlyAddTask_b__32_0(TaskInfo d); // 0x1022E660-0x1022E680
	}

	// Constructors
	public GameData(); // 0x102256D0-0x10225730

	// Methods
	public void RpcSetTasks(byte playerId, byte[] taskTypeIds); // 0x10224C50-0x10224D00
	public override void PreSerialize(); // 0x102248D0-0x10224A20
	public void RpcUpdateGameData(); // 0x102248D0-0x10224A20
	public static bool ContainsBadChars(string name, bool chat); // 0x10224160-0x102241E0
	public void UpdateGameData(MessageReader reader); // 0x102254E0-0x102255D0
	public override bool Serialize(MessageWriter writer, bool initialState); // 0x10224D00-0x10224DD0
	public override void Deserialize(MessageReader reader, bool initialState); // 0x102241E0-0x102242D0
	public override void HandleRpc(byte callId, MessageReader reader); // 0x102247A0-0x102248D0
	public void Awake(); // 0x10223EF0-0x10224080
	internal void SetDirty(); // 0x10224DD0-0x10224DF0
	public PlayerInfo GetHost(); // 0x10224370-0x10224400
	public sbyte GetAvailableId(); // 0x102242D0-0x10224370
	public PlayerInfo GetPlayerById(byte id); // 0x10224400-0x102244B0
	public void UpdateName(byte playerId, string name); // 0x10225610-0x10225650
	public void UpdateColor(byte playerId, byte color); // 0x102254A0-0x102254E0
	public void UpdateHat(byte playerId, uint hat); // 0x102255D0-0x10225610
	public void UpdatePet(byte playerId, uint petId); // 0x10225650-0x10225690
	public void UpdateSkin(byte playerId, uint skin); // 0x10225690-0x102256D0
	public void AddPlayer(PlayerControl pc); // 0x10223E30-0x10223EF0
	public bool RemovePlayer(byte playerId); // 0x10224BA0-0x10224C50
	public void RecomputeTaskCounts(); // 0x10224A20-0x10224BA0
	public void TutOnlyRemoveTask(byte playerId, uint taskId); // 0x10225430-0x102254A0
	public uint TutOnlyAddTask(byte playerId); // 0x102252F0-0x10225430
	private void SetTasks(byte playerId, byte[] taskTypeIds); // 0x10224DF0-0x102250D0
	public void CompleteTask(PlayerControl pc, uint taskId); // 0x10224080-0x10224160
	public void HandleDisconnect(PlayerControl player, DisconnectReasons reason); // 0x102244B0-0x102246A0
	private void ShowNotification(string playerName, DisconnectReasons reason); // 0x102250D0-0x102252F0
	public void HandleDisconnect(); // 0x102246A0-0x102247A0
}

public class GameDiscovery : MonoBehaviour // TypeDefIndex: 5552
{
	// Fields
	public JoinGameButton ButtonPrefab; // 0x0C
	public Transform ItemLocation; // 0x10
	public float YStart; // 0x14
	public float YOffset; // 0x18
	public Scroller TargetArea; // 0x1C
	private Dictionary<string, JoinGameButton> received; // 0x20

	// Constructors
	public GameDiscovery(); // 0x10225D90-0x10225DF0

	// Methods
	public void Start(); // 0x10225AB0-0x10225B30
	public void Update(); // 0x10225B30-0x10225D90
	private void Receive(BroadcastPacket packet); // 0x10225970-0x10225AB0
	private void CreateButtonForAddess(string fromAddress, string[] gameNameParts); // 0x10225770-0x10225970
}

namespace InnerNet
{
	[Flags] // 0x10002030-0x10002050
	public enum GameKeywords : uint // TypeDefIndex: 5904
	{
		All = 0,
		Other = 1,
		Spanish = 2,
		Korean = 4,
		Russian = 8,
		Portuguese = 16,
		Arabic = 32,
		Filipino = 64,
		Polish = 128,
		English = 256
	}

	[Serializable]
	public struct GameListing // TypeDefIndex: 5934
	{
		// Fields
		public uint IP; // 0x00
		public ushort Port; // 0x04
		public int GameId; // 0x08
		public byte PlayerCount; // 0x0C
		public string HostName; // 0x10
		public int Age; // 0x14
		public int MaxPlayers; // 0x18
		public int NumImpostors; // 0x1C
		public byte MapId; // 0x20
	
		// Methods
		public static GameListing Deserialize(MessageReader reader); // 0x102741B0-0x10274290
		public static GameListing DeserializeV2(MessageReader reader); // 0x102740F0-0x102741B0
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x10002230-0x10002250
	public struct GameLobbyJoinRequested_t // TypeDefIndex: 4493
	{
		// Fields
		public const int k_iCallback = 333; // Metadata: 0x002421B7
		public CSteamID m_steamIDLobby; // 0x00
		public CSteamID m_steamIDFriend; // 0x08
	}
}

public enum GameModes // TypeDefIndex: 5553
{
	LocalGame = 0,
	OnlineGame = 1,
	FreePlay = 2
}

public static class GameObjectExtensions // TypeDefIndex: 5224
{
	// Extension methods
	public static T Find<T>(this List<T> self, GameObject toFind)
		where T : MonoBehaviour;
	public static void SetZ(this Transform self, float z); // 0x10226450-0x102264A0
	public static void LookAt2d(this Transform self, Vector3 target); // 0x10226250-0x10226450
	public static void LookAt2d(this Transform self, Transform target); // 0x10226010-0x10226250
	public static void DestroyChildren(this Transform self); // 0x10225DF0-0x10225EB0
	public static void DestroyChildren(this MonoBehaviour self); // 0x10225EB0-0x10225F70
	public static void ForEachChild(this GameObject self, Action<GameObject> todo); // 0x10225F70-0x10226010
	public static void ForEachChildBehavior<T>(this MonoBehaviour self, Action<T> todo)
		where T : MonoBehaviour;
}

public class GameOptionsData : IBytesSerializable // TypeDefIndex: 5736
{
	// Fields
	public const byte ServerVersion = 2; // Metadata: 0x00243D2F
	public const byte NewestVersion = 3; // Metadata: 0x00243D30
	public static readonly string[] MapNames; // 0x00
	public static readonly float[] KillDistances; // 0x04
	public static readonly string[] KillDistanceStrings; // 0x08
	public int MaxPlayers; // 0x08
	public GameKeywords Keywords; // 0x0C
	public byte MapId; // 0x10
	public float PlayerSpeedMod; // 0x14
	public float CrewLightMod; // 0x18
	public float ImpostorLightMod; // 0x1C
	public float KillCooldown; // 0x20
	public int NumCommonTasks; // 0x24
	public int NumLongTasks; // 0x28
	public int NumShortTasks; // 0x2C
	public int NumEmergencyMeetings; // 0x30
	public int EmergencyCooldown; // 0x34
	public int NumImpostors; // 0x38
	public bool GhostsDoTasks; // 0x3C
	public int KillDistance; // 0x40
	public int DiscussionTime; // 0x44
	public int VotingTime; // 0x48
	public bool ConfirmImpostor; // 0x4C
	public bool VisualTasks; // 0x4D
	public bool isDefaults; // 0x4E
	private static readonly int[] RecommendedKillCooldown; // 0x0C
	private static readonly int[] RecommendedImpostors; // 0x10
	private static readonly int[] MaxImpostors; // 0x14
	public static readonly int[] MinPlayers; // 0x18
	private StringBuilder settings; // 0x50

	// Constructors
	public GameOptionsData(); // 0x10227EF0-0x10228130
	static GameOptionsData(); // 0x10227BE0-0x10227EF0

	// Methods
	public void ToggleMapFilter(byte newId); // 0x10227BC0-0x10227BE0
	public bool FilterContainsMap(byte newId); // 0x10226DB0-0x10226DE0
	public void SetRecommendations(int numPlayers, GameModes modes); // 0x102272C0-0x10227420
	public void Serialize(BinaryWriter writer, byte version); // 0x102270B0-0x102272C0
	public static GameOptionsData Deserialize(BinaryReader reader); // 0x10226A50-0x10226DB0
	public static GameOptionsData Deserialize(MessageReader reader); // 0x102267B0-0x10226A50
	public byte[] ToBytes(byte version); // 0x10227420-0x10227600
	public static GameOptionsData FromBytes(byte[] bytes); // 0x10226DE0-0x10226FA0
	public override string ToString(); // 0x10227BA0-0x10227BC0
	public string ToHudString(int numPlayers); // 0x10227600-0x10227BA0
	private void AppendItem(StringBuilder settings, StringNames stringName, bool value); // 0x10226660-0x10226720
	private void AppendItem(StringBuilder settings, StringNames stringName, float value, string secs); // 0x102264A0-0x10226540
	private void AppendItem(StringBuilder settings, StringNames stringName, int value, string secs); // 0x10226540-0x102265D0
	private void AppendItem(StringBuilder settings, StringNames stringName, string value); // 0x102265D0-0x10226660
	private void AppendItem(StringBuilder settings, StringNames stringName, int value); // 0x10226720-0x102267B0
	public int GetAdjustedNumImpostors(int playerCount); // 0x10226FA0-0x102270B0
}

public class GameOptionsMenu : MonoBehaviour // TypeDefIndex: 5737
{
	// Fields
	private GameOptionsData cachedData; // 0x0C
	public GameObject ResetButton; // 0x10
	private OptionBehaviour[] Children; // 0x14

	// Constructors
	public GameOptionsMenu(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Start(); // 0x102281B0-0x10228320
	public void Update(); // 0x10228320-0x102283B0
	private void RefreshChildren(); // 0x10228130-0x102281B0
	public void ValueChanged(OptionBehaviour option); // 0x102283B0-0x102289A0
}

namespace Steamworks
{
	[CallbackIdentity] // 0x100021A0-0x100021C0
	public struct GameOverlayActivated_t // TypeDefIndex: 4491
	{
		// Fields
		public const int k_iCallback = 331; // Metadata: 0x002421AF
		public byte m_bActive; // 0x00
	}
}

public enum GameOverReason // TypeDefIndex: 5865
{
	HumansByVote = 0,
	HumansByTask = 1,
	ImpostorByVote = 2,
	ImpostorByKill = 3,
	ImpostorBySabotage = 4,
	ImpostorDisconnect = 5,
	HumansDisconnect = 6
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000C0B0-0x1000C0D0
	public struct GamepadTextInputDismissed_t // TypeDefIndex: 4662
	{
		// Fields
		public const int k_iCallback = 714; // Metadata: 0x0024245B
		public bool m_bSubmitted; // 0x00
		public uint m_unSubmittedText; // 0x04
	}

	[CallbackIdentity] // 0x10002420-0x10002440
	public struct GameRichPresenceJoinRequested_t // TypeDefIndex: 4497
	{
		// Fields
		public const int k_iCallback = 337; // Metadata: 0x002421C7
		public CSteamID m_steamIDFriend; // 0x00
		public string m_rgchConnect; // 0x08
	}

	public static class GameServer // TypeDefIndex: 4300
	{
		// Methods
		public static bool Init(uint unIP, ushort usSteamPort, ushort usGamePort, ushort usQueryPort, EServerMode eServerMode, string pchVersionString); // 0x101D2710-0x101D29A0
		public static void Shutdown(); // 0x101D2A60-0x101D2AC0
		public static void RunCallbacks(); // 0x101D2A00-0x101D2A60
		public static void ReleaseCurrentThreadMemory(); // 0x101D29A0-0x101D2A00
		public static bool BSecure(); // 0x101D2540-0x101D25A0
		public static CSteamID GetSteamID(); // 0x101D2660-0x101D2710
		public static HSteamPipe GetHSteamPipe(); // 0x101D25A0-0x101D2600
		public static HSteamUser GetHSteamUser(); // 0x101D2600-0x101D2660
	}

	[CallbackIdentity] // 0x10002210-0x10002230
	public struct GameServerChangeRequested_t // TypeDefIndex: 4492
	{
		// Fields
		public const int k_iCallback = 332; // Metadata: 0x002421B3
		public string m_rgchServer; // 0x00
		public string m_rgchPassword; // 0x04
	}

	[Serializable]
	public class gameserveritem_t // TypeDefIndex: 4788
	{
		// Fields
		public servernetadr_t m_NetAdr; // 0x08
		public int m_nPing; // 0x10
		public bool m_bHadSuccessfulResponse; // 0x14
		public bool m_bDoNotRefresh; // 0x15
		private byte[] m_szGameDir; // 0x18
		private byte[] m_szMap; // 0x1C
		private byte[] m_szGameDescription; // 0x20
		public uint m_nAppID; // 0x24
		public int m_nPlayers; // 0x28
		public int m_nMaxPlayers; // 0x2C
		public int m_nBotPlayers; // 0x30
		public bool m_bPassword; // 0x34
		public bool m_bSecure; // 0x35
		public uint m_ulTimeLastPlayed; // 0x38
		public int m_nServerVersion; // 0x3C
		private byte[] m_szServerName; // 0x40
		private byte[] m_szGameTags; // 0x44
		public CSteamID m_steamID; // 0x48
	
		// Constructors
		public gameserveritem_t(); // 0x101A2CD0-0x101A2CE0
	
		// Methods
		public string GetGameDir(); // 0x10724CB0-0x10724D20
		public void SetGameDir(string dir); // 0x10724F10-0x10724F80
		public string GetMap(); // 0x10724D90-0x10724E00
		public void SetMap(string map); // 0x10725000-0x10725070
		public string GetGameDescription(); // 0x10724C40-0x10724CB0
		public void SetGameDescription(string desc); // 0x10724EA0-0x10724F10
		public string GetServerName(); // 0x10724E00-0x10724EA0
		public void SetServerName(string name); // 0x10725070-0x107250E0
		public string GetGameTags(); // 0x10724D20-0x10724D90
		public void SetGameTags(string tags); // 0x10724F80-0x10725000
	}
}

public class GameSettingMenu : MonoBehaviour // TypeDefIndex: 5562
{
	// Fields
	public Transform[] AllItems; // 0x0C
	public float YStart; // 0x10
	public float YOffset; // 0x14
	public Transform[] HideForOnline; // 0x18

	// Constructors
	public GameSettingMenu(); // 0x101A68C0-0x101A68D0

	// Methods
	private void OnEnable(); // 0x102289A0-0x10228D60
}

public class GameStartManager : DestroyableSingleton<GameStartManager>, IDisconnectHandler // TypeDefIndex: 5334
{
	// Fields
	private const float CountdownDuration = 5.0001f; // Metadata: 0x00243B2C
	public int MinPlayers; // 0x10
	public TextRenderer PlayerCounter; // 0x14
	private int LastPlayerCount; // 0x18
	public GameObject GameSizePopup; // 0x1C
	public TextRenderer GameRoomName; // 0x20
	public LobbyBehaviour LobbyPrefab; // 0x24
	public TextRenderer GameStartText; // 0x28
	public SpriteRenderer StartButton; // 0x2C
	public SpriteRenderer MakePublicButton; // 0x30
	public Sprite PublicGameImage; // 0x34
	public Sprite PrivateGameImage; // 0x38
	private StartingStates startState; // 0x3C
	private float countDownTimer; // 0x40

	// Nested types
	private enum StartingStates // TypeDefIndex: 5335
	{
		NotStarting = 0,
		Countdown = 1,
		Starting = 2
	}

	// Constructors
	public GameStartManager(); // 0x10229D30-0x10229D80

	// Methods
	public void Start(); // 0x102294A0-0x102297F0
	public void MakePublic(); // 0x10229110-0x10229180
	public void Update(); // 0x102297F0-0x10229D30
	public void ResetStartState(); // 0x10229230-0x102293C0
	public void SetStartCounter(sbyte sec); // 0x102293C0-0x102294A0
	public void BeginGame(); // 0x10228DD0-0x10228FB0
	public void ReallyBegin(bool neverShow); // 0x10229180-0x10229230
	public void FinallyBegin(); // 0x10228FB0-0x10229060
	public void HandleDisconnect(PlayerControl pc, DisconnectReasons reason); // 0x10229060-0x10229110
	public void HandleDisconnect(); // 0x10229060-0x10229110
}

namespace InnerNet
{
	public enum GameStates : byte // TypeDefIndex: 5937
	{
		NotStarted = 0,
		Started = 1,
		Ended = 2,
		Destroyed = 3
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000A820-0x1000A840
	public struct GameWebCallback_t // TypeDefIndex: 4643
	{
		// Fields
		public const int k_iCallback = 164; // Metadata: 0x0024240F
		public string m_szURL; // 0x00
	}
}

public class GarbageBehaviour : MonoBehaviour // TypeDefIndex: 5839
{
	// Constructors
	public GarbageBehaviour(); // 0x101A68C0-0x101A68D0

	// Methods
	public void FixedUpdate(); // 0x10229D80-0x10229E20
}

public class GaugeRandomizer : MonoBehaviour // TypeDefIndex: 5336
{
	// Fields
	public FloatRange Range; // 0x0C
	public SpriteRenderer Gauge; // 0x10
	public float Frequency; // 0x14
	public float Offset; // 0x18
	private float naturalY; // 0x1C
	private float naturalSizeY; // 0x20
	private Color goodLineColor; // 0x24

	// Constructors
	public GaugeRandomizer(); // 0x1022A0A0-0x1022A100

	// Methods
	public void Start(); // 0x10229E20-0x10229E90
	private void Update(); // 0x10229E90-0x1022A0A0
}

namespace Steamworks
{
	[CallbackIdentity] // 0x10004AA0-0x10004AC0
	public struct GCMessageAvailable_t // TypeDefIndex: 4508
	{
		// Fields
		public const int k_iCallback = 1701; // Metadata: 0x002421F3
		public uint m_nMessageSize; // 0x00
	}

	[CallbackIdentity] // 0x10004B60-0x10004B80
	public struct GCMessageFailed_t // TypeDefIndex: 4509
	{
		// Fields
		public const int k_iCallback = 1702; // Metadata: 0x002421F7
	}
}

namespace GoogleMobileAds.Api
{
	public enum Gender // TypeDefIndex: 5975
	{
		Unknown = 0,
		Male = 1,
		Female = 2
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000A4E0-0x1000A500
	public struct GetAppDependenciesResult_t // TypeDefIndex: 4631
	{
		// Fields
		public const int k_iCallback = 3416; // Metadata: 0x002423DF
		public EResult m_eResult; // 0x00
		public PublishedFileId_t m_nPublishedFileId; // 0x08
		public AppId_t[] m_rgAppIDs; // 0x10
		public uint m_nNumAppDependencies; // 0x14
		public uint m_nTotalNumAppDependencies; // 0x18
	}

	[CallbackIdentity] // 0x1000A800-0x1000A820
	public struct GetAuthSessionTicketResponse_t // TypeDefIndex: 4642
	{
		// Fields
		public const int k_iCallback = 163; // Metadata: 0x0024240B
		public HAuthTicket m_hAuthTicket; // 0x00
		public EResult m_eResult; // 0x04
	}

	[CallbackIdentity] // 0x1000C2E0-0x1000C300
	public struct GetOPFSettingsResult_t // TypeDefIndex: 4666
	{
		// Fields
		public const int k_iCallback = 4624; // Metadata: 0x0024246B
		public EResult m_eResult; // 0x00
		public AppId_t m_unVideoAppID; // 0x04
	}

	[CallbackIdentity] // 0x1000A340-0x1000A360
	public struct GetUserItemVoteResult_t // TypeDefIndex: 4624
	{
		// Fields
		public const int k_iCallback = 3409; // Metadata: 0x002423C3
		public PublishedFileId_t m_nPublishedFileId; // 0x00
		public EResult m_eResult; // 0x08
		public bool m_bVotedUp; // 0x0C
		public bool m_bVotedDown; // 0x0D
		public bool m_bVoteSkipped; // 0x0E
	}

	[CallbackIdentity] // 0x1000C240-0x1000C260
	public struct GetVideoURLResult_t // TypeDefIndex: 4665
	{
		// Fields
		public const int k_iCallback = 4611; // Metadata: 0x00242467
		public EResult m_eResult; // 0x00
		public AppId_t m_unVideoAppID; // 0x04
		public string m_rgchURL; // 0x08
	}

	[CallbackIdentity] // 0x1000ACF0-0x1000AD10
	public struct GlobalAchievementPercentagesReady_t // TypeDefIndex: 4654
	{
		// Fields
		public const int k_iCallback = 1110; // Metadata: 0x0024243B
		public ulong m_nGameID; // 0x00
		public EResult m_eResult; // 0x08
	}

	[CallbackIdentity] // 0x1000BF60-0x1000BF80
	public struct GlobalStatsReceived_t // TypeDefIndex: 4656
	{
		// Fields
		public const int k_iCallback = 1112; // Metadata: 0x00242443
		public ulong m_nGameID; // 0x00
		public EResult m_eResult; // 0x08
	}
}

namespace GoogleMobileAds
{
	public class GoogleMobileAdsClientFactory // TypeDefIndex: 5946
	{
		// Constructors
		public GoogleMobileAdsClientFactory(); // 0x101A2CD0-0x101A2CE0
	
		// Methods
		public static IBannerClient BuildBannerClient(); // 0x102742D0-0x10274310
		public static IInterstitialClient BuildInterstitialClient(); // 0x10274310-0x10274350
		public static IRewardBasedVideoAdClient BuildRewardBasedVideoAdClient(); // 0x10274350-0x10274390
		public static IRewardedAdClient BuildRewardedAdClient(); // 0x10274390-0x10274470
		public static IAdLoaderClient BuildAdLoaderClient(AdLoader adLoader); // 0x10274290-0x102742D0
		public static IMobileAdsClient MobileAdsInstance(); // 0x10274470-0x102744B0
	}
}

namespace MS.Internal.Xml.XPath
{
	internal class Group : AstNode // TypeDefIndex: 1771
	{
		// Fields
		private AstNode groupNode; // 0x08
	
		// Properties
		public override AstType Type { get; } // 0x102F6F80-0x102F6F90 
		public override XPathResultType ReturnType { get; } // 0x1045B170-0x1045B180 
		public AstNode GroupNode { get; } // 0x101B4FF0-0x101B5000 
	
		// Constructors
		public Group(AstNode groupNode); // 0x101B54B0-0x101B54D0
	}

	internal sealed class GroupQuery : BaseAxisQuery // TypeDefIndex: 1772
	{
		// Properties
		public override XPathResultType StaticType { get; } // 0x106BDDA0-0x106BDDD0 
		public override QueryProps Properties { get; } // 0x102F68B0-0x102F68C0 
	
		// Constructors
		public GroupQuery(Query qy); // 0x106BDD90-0x106BDDA0
		private GroupQuery(GroupQuery other); // 0x1054EA50-0x1054EA60
	
		// Methods
		public override XPathNavigator Advance(); // 0x106BDCD0-0x106BDD10
		public override object Evaluate(XPathNodeIterator nodeIterator); // 0x106BDD60-0x106BDD90
		public override XPathNodeIterator Clone(); // 0x106BDD10-0x106BDD60
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x10004C50-0x10004C70
	public struct GSClientAchievementStatus_t // TypeDefIndex: 4513
	{
		// Fields
		public const int k_iCallback = 206; // Metadata: 0x00242207
		public ulong m_SteamID; // 0x00
		public string m_pchAchievement; // 0x08
		public bool m_bUnlocked; // 0x0C
	}

	[CallbackIdentity] // 0x10004BB0-0x10004BD0
	public struct GSClientApprove_t // TypeDefIndex: 4510
	{
		// Fields
		public const int k_iCallback = 201; // Metadata: 0x002421FB
		public CSteamID m_SteamID; // 0x00
		public CSteamID m_OwnerSteamID; // 0x08
	}

	[CallbackIdentity] // 0x10004C10-0x10004C30
	public struct GSClientDeny_t // TypeDefIndex: 4511
	{
		// Fields
		public const int k_iCallback = 202; // Metadata: 0x002421FF
		public CSteamID m_SteamID; // 0x00
		public EDenyReason m_eDenyReason; // 0x08
		public string m_rgchOptionalText; // 0x0C
	}

	[CallbackIdentity] // 0x10004D10-0x10004D30
	public struct GSClientGroupStatus_t // TypeDefIndex: 4516
	{
		// Fields
		public const int k_iCallback = 208; // Metadata: 0x00242213
		public CSteamID m_SteamIDUser; // 0x00
		public CSteamID m_SteamIDGroup; // 0x08
		public bool m_bMember; // 0x10
		public bool m_bOfficer; // 0x11
	}

	[CallbackIdentity] // 0x10004C30-0x10004C50
	public struct GSClientKick_t // TypeDefIndex: 4512
	{
		// Fields
		public const int k_iCallback = 203; // Metadata: 0x00242203
		public CSteamID m_SteamID; // 0x00
		public EDenyReason m_eDenyReason; // 0x08
	}

	[CallbackIdentity] // 0x10004CD0-0x10004CF0
	public struct GSGameplayStats_t // TypeDefIndex: 4515
	{
		// Fields
		public const int k_iCallback = 207; // Metadata: 0x0024220F
		public EResult m_eResult; // 0x00
		public int m_nRank; // 0x04
		public uint m_unTotalConnects; // 0x08
		public uint m_unTotalMinutesPlayed; // 0x0C
	}

	[CallbackIdentity] // 0x10004C70-0x10004C90
	public struct GSPolicyResponse_t // TypeDefIndex: 4514
	{
		// Fields
		public const int k_iCallback = 115; // Metadata: 0x0024220B
		public byte m_bSecure; // 0x00
	}

	[CallbackIdentity] // 0x10004DC0-0x10004DE0
	public struct GSReputation_t // TypeDefIndex: 4517
	{
		// Fields
		public const int k_iCallback = 209; // Metadata: 0x00242217
		public EResult m_eResult; // 0x00
		public uint m_unReputationScore; // 0x04
		public bool m_bBanned; // 0x08
		public uint m_unBannedIP; // 0x0C
		public ushort m_usBannedPort; // 0x10
		public ulong m_ulBannedGameID; // 0x18
		public uint m_unBanExpires; // 0x20
	}

	[CallbackIdentity] // 0x10004E90-0x10004EB0
	public struct GSStatsReceived_t // TypeDefIndex: 4520
	{
		// Fields
		public const int k_iCallback = 1800; // Metadata: 0x00242223
		public EResult m_eResult; // 0x00
		public CSteamID m_steamIDUser; // 0x04
	}

	[CallbackIdentity] // 0x10004EF0-0x10004F10
	public struct GSStatsStored_t // TypeDefIndex: 4521
	{
		// Fields
		public const int k_iCallback = 1801; // Metadata: 0x00242227
		public EResult m_eResult; // 0x00
		public CSteamID m_steamIDUser; // 0x04
	}

	[CallbackIdentity] // 0x10004F70-0x10004F90
	public struct GSStatsUnloaded_t // TypeDefIndex: 4522
	{
		// Fields
		public const int k_iCallback = 1108; // Metadata: 0x0024222B
		public CSteamID m_steamIDUser; // 0x00
	}
}

public static class HashRandom // TypeDefIndex: 5225
{
	// Fields
	private static XXHash src; // 0x00
	private static int cnt; // 0x04

	// Constructors
	static HashRandom(); // 0x10274780-0x10274820

	// Methods
	public static uint Next(); // 0x10274710-0x10274780
	public static int FastNext(int maxInt); // 0x102744B0-0x10274510
	public static int Next(int maxInt); // 0x10274510-0x102745F0
	public static int Next(int minInt, int maxInt); // 0x102745F0-0x10274710
}

[CreateAssetMenu] // 0x10002030-0x10002050
public class HatBehaviour : ScriptableObject, IBuyable // TypeDefIndex: 5338
{
	// Fields
	public Sprite MainImage; // 0x0C
	public Sprite BackImage; // 0x10
	public Sprite FloorImage; // 0x14
	public bool InFront; // 0x18
	public bool NoBounce; // 0x00
	public bool NotInStore; // 0x00
	public bool Free; // 0x00
	public Material AltShader; // 0x00
	public Vector2 ChipOffset; // 0x20
	public int LimitedMonth; // 0x28
	public int LimitedYear; // 0x2C
	public SkinData RelatedSkin; // 0x30
	public string StoreName; // 0x34
	public string ProductId; // 0x38
	public int Order; // 0x3C

	// Properties
	public string ProdId { get; } // 0x101F0150-0x101F0160 

	// Constructors
	public HatBehaviour(); // 0x101ADCA0-0x101ADCB0
}

public class HatManager : DestroyableSingleton<HatManager> // TypeDefIndex: 5339
{
	// Fields
	public HatBehaviour NoneHat; // 0x10
	public Material DefaultHatShader; // 0x14
	public List<PetBehaviour> AllPets; // 0x18
	public List<HatBehaviour> AllHats; // 0x1C
	public List<SkinData> AllSkins; // 0x20
	public List<MapBuyable> AllMaps; // 0x24

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass7_0 // TypeDefIndex: 5340
	{
		// Fields
		public PetBehaviour pet; // 0x08

		// Constructors
		public __c__DisplayClass7_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _GetIdFromPet_b__0(PetBehaviour p); // 0x10285BA0-0x10285C10
	}

	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5341
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<PetBehaviour, bool> __9__8_0; // 0x04
		public static Func<HatBehaviour, bool> __9__10_0; // 0x08
		public static Func<HatBehaviour, int> __9__10_1; // 0x0C
		public static Func<HatBehaviour, string> __9__10_2; // 0x10
		public static Func<SkinData, bool> __9__13_0; // 0x14
		public static Func<SkinData, int> __9__13_1; // 0x18
		public static Func<SkinData, string> __9__13_2; // 0x1C

		// Constructors
		static __c(); // 0x10285C60-0x10285CB0
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _GetUnlockedPets_b__8_0(PetBehaviour h); // 0x10285730-0x102857A0
		internal bool _GetUnlockedHats_b__10_0(HatBehaviour h); // 0x10285630-0x102856F0
		internal int _GetUnlockedHats_b__10_1(HatBehaviour o); // 0x102856F0-0x10285710
		internal string _GetUnlockedHats_b__10_2(HatBehaviour o); // 0x10285710-0x10285730
		internal bool _GetUnlockedSkins_b__13_0(SkinData s); // 0x102857A0-0x10285870
		internal int _GetUnlockedSkins_b__13_1(SkinData o); // 0x10285870-0x10285890
		internal string _GetUnlockedSkins_b__13_2(SkinData o); // 0x10285710-0x10285730
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass17_0 // TypeDefIndex: 5342
	{
		// Fields
		public string prodId; // 0x08

		// Constructors
		public __c__DisplayClass17_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _GetHatByProdId_b__0(HatBehaviour h); // 0x10285B70-0x10285BA0
	}

	// Constructors
	public HatManager(); // 0x10275190-0x10275240

	// Methods
	internal PetBehaviour GetPetById(uint petId); // 0x10274A60-0x10274AF0
	public uint GetIdFromPet(PetBehaviour pet); // 0x10274980-0x10274A10
	public PetBehaviour[] GetUnlockedPets(); // 0x10274D70-0x10274E50
	public HatBehaviour GetHatById(uint hatId); // 0x10274820-0x102748A0
	public HatBehaviour[] GetUnlockedHats(); // 0x10274B80-0x10274D70
	public static bool IsMapStuff(string prodId); // 0x10275040-0x102750A0
	public uint GetIdFromHat(HatBehaviour hat); // 0x10274930-0x10274980
	public SkinData[] GetUnlockedSkins(); // 0x10274E50-0x10275040
	public uint GetIdFromSkin(SkinData skin); // 0x10274A10-0x10274A60
	internal SkinData GetSkinById(uint skinId); // 0x10274AF0-0x10274B80
	internal void SetSkin(SpriteRenderer skinRend, uint skinId); // 0x102750A0-0x10275190
	internal HatBehaviour GetHatByProdId(string prodId); // 0x102748A0-0x10274930
}

public class HatParent : MonoBehaviour // TypeDefIndex: 5671
{
	// Fields
	public SpriteRenderer BackLayer; // 0x0C
	public SpriteRenderer FrontLayer; // 0x10
	public SpriteRenderer Parent; // 0x14

	// Properties
	public Color color { set; } // 0x102756B0-0x10275700
	public bool flipX { set; } // 0x10275700-0x10275740

	// Constructors
	public HatParent(); // 0x101A68C0-0x101A68D0

	// Methods
	public void SetHat(HatBehaviour hat, int color); // 0x10275420-0x102756B0
	public void SetHat(uint hatId, int color); // 0x102753B0-0x10275420
	internal void SetHatFloor(HatBehaviour hat); // 0x10275350-0x102753B0
	public void LateUpdate(); // 0x10275240-0x102752E0
	internal void SetColor(int color); // 0x102752E0-0x10275350
}

public class HatsTab : MonoBehaviour // TypeDefIndex: 5563
{
	// Fields
	public ColorChip ColorTabPrefab; // 0x0C
	public SpriteRenderer DemoImage; // 0x10
	public HatParent HatImage; // 0x14
	public SpriteRenderer SkinImage; // 0x18
	public SpriteRenderer PetImage; // 0x1C
	public FloatRange XRange; // 0x20
	public float YStart; // 0x24
	public float YOffset; // 0x28
	public int NumPerRow; // 0x2C
	public Scroller scroller; // 0x30
	private List<ColorChip> ColorChips; // 0x34

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass11_0 // TypeDefIndex: 5564
	{
		// Fields
		public HatBehaviour hat; // 0x08
		public HatsTab __4__this; // 0x0C

		// Constructors
		public __c__DisplayClass11_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _OnEnable_b__0(); // 0x102859A0-0x10285B30
	}

	// Constructors
	public HatsTab(); // 0x10275FA0-0x10276040

	// Methods
	public void OnEnable(); // 0x10275810-0x10275CE0
	public void OnDisable(); // 0x10275740-0x10275810
	public void Update(); // 0x10275E60-0x10275FA0
	private void SelectHat(HatBehaviour hat); // 0x10275CE0-0x10275E60
}

namespace Steamworks
{
	[Serializable]
	public struct HAuthTicket : IEquatable<HAuthTicket>, IComparable<HAuthTicket> // TypeDefIndex: 4797
	{
		// Fields
		public static readonly HAuthTicket Invalid; // 0x00
		public uint m_HAuthTicket; // 0x00
	
		// Constructors
		public HAuthTicket(uint value); // 0x100900E0-0x100900F0
		static HAuthTicket(); // 0x101D2AC0-0x101D2AF0
	
		// Methods
		public override string ToString(); // 0x100900C0-0x100900E0
		public override bool Equals(object other); // 0x10091CE0-0x10091D70
		public override int GetHashCode(); // 0x100900A0-0x100900C0
		public static bool operator ==(HAuthTicket x, HAuthTicket y); // 0x1018AFC0-0x1018AFD0
		public static bool operator !=(HAuthTicket x, HAuthTicket y); // 0x101D2AF0-0x101D2B40
		public static explicit operator HAuthTicket(uint value); // 0x1018AFD0-0x1018AFE0
		public static explicit operator uint(HAuthTicket that); // 0x1018AFD0-0x1018AFE0
		public bool Equals(HAuthTicket other); // 0x10090080-0x100900A0
		public int CompareTo(HAuthTicket other); // 0x1008FFF0-0x10090010
	}
}

namespace Hazel
{
	[Serializable]
	public class HazelException : Exception // TypeDefIndex: 4167
	{
		// Constructors
		internal HazelException(string msg); // 0x109C9660-0x109C96B0
		internal HazelException(string msg, Exception e); // 0x109C96B0-0x109C9700
	}

	public enum HazelInternalErrors // TypeDefIndex: 4172
	{
		SocketExceptionSend = 0,
		SocketExceptionReceive = 1,
		ReceivedZeroBytes = 2,
		PingsWithoutResponse = 3,
		ReliablePacketWithoutResponse = 4,
		ConnectionDisconnected = 5
	}
}

namespace Steamworks
{
	[Serializable]
	public struct HHTMLBrowser : IEquatable<HHTMLBrowser>, IComparable<HHTMLBrowser> // TypeDefIndex: 4803
	{
		// Fields
		public static readonly HHTMLBrowser Invalid; // 0x00
		public uint m_HHTMLBrowser; // 0x00
	
		// Constructors
		public HHTMLBrowser(uint value); // 0x100900E0-0x100900F0
		static HHTMLBrowser(); // 0x101D2B40-0x101D2B70
	
		// Methods
		public override string ToString(); // 0x100900C0-0x100900E0
		public override bool Equals(object other); // 0x10091D70-0x10091E00
		public override int GetHashCode(); // 0x100900A0-0x100900C0
		public static bool operator ==(HHTMLBrowser x, HHTMLBrowser y); // 0x1018AFC0-0x1018AFD0
		public static bool operator !=(HHTMLBrowser x, HHTMLBrowser y); // 0x101D2B70-0x101D2BC0
		public static explicit operator HHTMLBrowser(uint value); // 0x1018AFD0-0x1018AFE0
		public static explicit operator uint(HHTMLBrowser that); // 0x1018AFD0-0x1018AFE0
		public bool Equals(HHTMLBrowser other); // 0x10090080-0x100900A0
		public int CompareTo(HHTMLBrowser other); // 0x1008FFF0-0x10090010
	}
}

public class HorizontalGauge : MonoBehaviour // TypeDefIndex: 5401
{
	// Fields
	public float Value; // 0x0C
	public float MaxValue; // 0x10
	public float maskScale; // 0x14
	public SpriteMask Mask; // 0x18
	private float lastValue; // 0x1C

	// Constructors
	public HorizontalGauge(); // 0x10276200-0x10276240

	// Methods
	public void Update(); // 0x10276040-0x10276200
}

public class HorizontalSpriteGauge : MonoBehaviour // TypeDefIndex: 5402
{
	// Fields
	public float Value; // 0x0C
	public float MaxValue; // 0x10
	public float maskScale; // 0x14
	public SpriteRenderer Mask; // 0x18
	private float lastValue; // 0x1C

	// Constructors
	public HorizontalSpriteGauge(); // 0x10276200-0x10276240

	// Methods
	public void Update(); // 0x10276240-0x10276410
}

public class HostGameButton : MonoBehaviour, IConnectButton // TypeDefIndex: 5554
{
	// Fields
	public AudioClip IntroMusic; // 0x0C
	public string targetScene; // 0x10
	public SpriteRenderer FillScreen; // 0x14
	public SpriteAnim connectIcon; // 0x18
	public AnimationClip connectClip; // 0x1C
	public GameModes GameMode; // 0x20

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoStartGame_d__10 : IEnumerator<object> // TypeDefIndex: 5555
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public HostGameButton __4__this; // 0x10
		private float _time_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoStartGame_d__10(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102846F0-0x10284EE0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10284EE0-0x10284F30
	}

	// Constructors
	public HostGameButton(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Start(); // 0x102766A0-0x10276700
	public void OnClick(); // 0x10276460-0x10276620
	public void StartIcon(); // 0x10276620-0x102766A0
	public void StopIcon(); // 0x10276700-0x102767A0
	[IteratorStateMachine] // 0x10005010-0x10005060
	private IEnumerator CoStartGame(); // 0x10276410-0x10276460
}

public class HoverAnimBehaviour : MonoBehaviour // TypeDefIndex: 5366
{
	// Fields
	public FloatRange YMovement; // 0x0C
	public float Speed; // 0x10
	private float offset; // 0x14

	// Constructors
	public HoverAnimBehaviour(); // 0x101AE1C0-0x101AE1E0

	// Methods
	private void Start(); // 0x102767A0-0x102767D0
	private void Update(); // 0x102767D0-0x102768F0
}

public class HowToPlayController : MonoBehaviour // TypeDefIndex: 5372
{
	// Fields
	public Transform DotParent; // 0x0C
	public SpriteRenderer leftButton; // 0x10
	public SpriteRenderer rightButton; // 0x14
	public SceneController PCMove; // 0x18
	public SceneController[] Scenes; // 0x1C
	public int SceneNum; // 0x20

	// Constructors
	public HowToPlayController(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Start(); // 0x10276BD0-0x10276D90
	public void Update(); // 0x10276D90-0x10276DD0
	public void NextScene(); // 0x10276B90-0x10276BB0
	public void PreviousScene(); // 0x10276BB0-0x10276BD0
	public void Close(); // 0x10276B60-0x10276B90
	private void ChangeScene(int del); // 0x102768F0-0x10276B60
}

public class HqHudOverrideTask : SabotageTask, IHudOverrideTask // TypeDefIndex: 5847
{
	// Fields
	private bool isComplete; // 0x30
	private HqHudSystemType system; // 0x34
	private bool even; // 0x38

	// Properties
	public override int TaskStep { get; } // 0x1021B3D0-0x1021B3E0 
	public override bool IsComplete { get; } // 0x101C2370-0x101C2380 

	// Constructors
	public HqHudOverrideTask(); // 0x102044C0-0x102044D0

	// Methods
	public override void Initialize(); // 0x10277090-0x10277140
	private void FixedUpdate(); // 0x10277030-0x10277090
	public override bool ValidConsole(Console console); // 0x10277140-0x10277190
	public override void Complete(); // 0x10276F80-0x10277030
	public override void AppendTaskText(StringBuilder sb); // 0x10276DD0-0x10276F80
}

internal class HqHudSystemType : ISystemType, IActivatable // TypeDefIndex: 5773
{
	// Fields
	public const byte TagMask = 240; // Metadata: 0x00243D41
	public const byte IdMask = 15; // Metadata: 0x00243D42
	private HashSet<Tuple<byte, byte>> ActiveConsoles; // 0x08
	private HashSet<byte> CompletedConsoles; // 0x0C
	private const float ActiveTime = 10f; // Metadata: 0x00243D43
	private float Timer; // 0x10
	public int TargetNumber; // 0x14

	// Properties
	public bool IsActive { get; } // 0x10277960-0x102779A0 
	public float NumComplete { get; } // 0x102779A0-0x102779F0 
	public float PercentActive { get; } // 0x102779F0-0x10277A10 

	// Nested types
	public enum Tags // TypeDefIndex: 5774
	{
		FixBit = 16,
		DeactiveBit = 32,
		ActiveBit = 64,
		DamageBit = 128
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass16_0 // TypeDefIndex: 5775
	{
		// Fields
		public int consoleId; // 0x08

		// Constructors
		public __c__DisplayClass16_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _IsConsoleActive_b__0(Tuple<byte, byte> s); // 0x10285B30-0x10285B70
	}

	// Constructors
	public HqHudSystemType(); // 0x102778B0-0x10277960

	// Methods
	public bool Detoriorate(float deltaTime); // 0x102772C0-0x102773E0
	internal bool IsConsoleActive(int consoleId); // 0x102773E0-0x10277470
	internal bool IsConsoleOkay(int consoleId); // 0x10277470-0x102774C0
	public void RepairDamage(PlayerControl player, byte amount); // 0x102774C0-0x10277640
	public void Serialize(MessageWriter writer, bool initialState); // 0x10277640-0x102778B0
	public void Deserialize(MessageReader reader, bool initialState); // 0x10277190-0x102772C0
}

namespace Steamworks
{
	[Serializable]
	public struct HServerListRequest : IEquatable<HServerListRequest> // TypeDefIndex: 4810
	{
		// Fields
		public static readonly HServerListRequest Invalid; // 0x00
		public IntPtr m_HServerListRequest; // 0x00
	
		// Constructors
		public HServerListRequest(IntPtr value); // 0x100900E0-0x100900F0
		static HServerListRequest(); // 0x101D2BC0-0x101D2BF0
	
		// Methods
		public override string ToString(); // 0x10091EB0-0x10091ED0
		public override bool Equals(object other); // 0x10091E00-0x10091E90
		public override int GetHashCode(); // 0x100900A0-0x100900C0
		public static bool operator ==(HServerListRequest x, HServerListRequest y); // 0x101D2BF0-0x101D2C00
		public static bool operator !=(HServerListRequest x, HServerListRequest y); // 0x101D2C00-0x101D2C60
		public static explicit operator HServerListRequest(IntPtr value); // 0x1018AFD0-0x1018AFE0
		public static explicit operator IntPtr(HServerListRequest that); // 0x1018AFD0-0x1018AFE0
		public bool Equals(HServerListRequest other); // 0x10091E90-0x10091EB0
	}

	[Serializable]
	public struct HServerQuery : IEquatable<HServerQuery>, IComparable<HServerQuery> // TypeDefIndex: 4811
	{
		// Fields
		public static readonly HServerQuery Invalid; // 0x00
		public int m_HServerQuery; // 0x00
	
		// Constructors
		public HServerQuery(int value); // 0x100900E0-0x100900F0
		static HServerQuery(); // 0x101D2C60-0x101D2C90
	
		// Methods
		public override string ToString(); // 0x10091F80-0x10091FA0
		public override bool Equals(object other); // 0x10091EF0-0x10091F80
		public override int GetHashCode(); // 0x100900A0-0x100900C0
		public static bool operator ==(HServerQuery x, HServerQuery y); // 0x1018AFC0-0x1018AFD0
		public static bool operator !=(HServerQuery x, HServerQuery y); // 0x101D2C90-0x101D2CE0
		public static explicit operator HServerQuery(int value); // 0x1018AFD0-0x1018AFE0
		public static explicit operator int(HServerQuery that); // 0x1018AFD0-0x1018AFE0
		public bool Equals(HServerQuery other); // 0x10090080-0x100900A0
		public int CompareTo(HServerQuery other); // 0x10091ED0-0x10091EF0
	}

	[Serializable]
	public struct HSteamPipe : IEquatable<HSteamPipe>, IComparable<HSteamPipe> // TypeDefIndex: 4790
	{
		// Fields
		public int m_HSteamPipe; // 0x00
	
		// Constructors
		public HSteamPipe(int value); // 0x100900E0-0x100900F0
	
		// Methods
		public override string ToString(); // 0x10091F80-0x10091FA0
		public override bool Equals(object other); // 0x10091FA0-0x10092010
		public override int GetHashCode(); // 0x100900A0-0x100900C0
		public static bool operator ==(HSteamPipe x, HSteamPipe y); // 0x1018AFC0-0x1018AFD0
		public static bool operator !=(HSteamPipe x, HSteamPipe y); // 0x1018AFE0-0x1018AFF0
		public static explicit operator HSteamPipe(int value); // 0x1018AFD0-0x1018AFE0
		public static explicit operator int(HSteamPipe that); // 0x1018AFD0-0x1018AFE0
		public bool Equals(HSteamPipe other); // 0x10090080-0x100900A0
		public int CompareTo(HSteamPipe other); // 0x10091ED0-0x10091EF0
	}

	[Serializable]
	public struct HSteamUser : IEquatable<HSteamUser>, IComparable<HSteamUser> // TypeDefIndex: 4791
	{
		// Fields
		public int m_HSteamUser; // 0x00
	
		// Constructors
		public HSteamUser(int value); // 0x100900E0-0x100900F0
	
		// Methods
		public override string ToString(); // 0x10091F80-0x10091FA0
		public override bool Equals(object other); // 0x10092010-0x10092450
		public override int GetHashCode(); // 0x100900A0-0x100900C0
		public static bool operator ==(HSteamUser x, HSteamUser y); // 0x1018AFC0-0x1018AFD0
		public static bool operator !=(HSteamUser x, HSteamUser y); // 0x1018AFE0-0x1018AFF0
		public static explicit operator HSteamUser(int value); // 0x1018AFD0-0x1018AFE0
		public static explicit operator int(HSteamUser that); // 0x1018AFD0-0x1018AFE0
		public bool Equals(HSteamUser other); // 0x10090080-0x100900A0
		public int CompareTo(HSteamUser other); // 0x10091ED0-0x10091EF0
	}

	[CallbackIdentity] // 0x10004F90-0x10004FB0
	public struct HTML_BrowserReady_t // TypeDefIndex: 4523
	{
		// Fields
		public const int k_iCallback = 4501; // Metadata: 0x0024222F
		public HHTMLBrowser unBrowserHandle; // 0x00
	}

	[CallbackIdentity] // 0x10006820-0x10006840
	public struct HTML_BrowserRestarted_t // TypeDefIndex: 4545
	{
		// Fields
		public const int k_iCallback = 4527; // Metadata: 0x00242287
		public HHTMLBrowser unBrowserHandle; // 0x00
		public HHTMLBrowser unOldBrowserHandle; // 0x04
	}

	[CallbackIdentity] // 0x10005310-0x10005330
	public struct HTML_CanGoBackAndForward_t // TypeDefIndex: 4532
	{
		// Fields
		public const int k_iCallback = 4510; // Metadata: 0x00242253
		public HHTMLBrowser unBrowserHandle; // 0x00
		public bool bCanGoBack; // 0x04
		public bool bCanGoForward; // 0x05
	}

	[CallbackIdentity] // 0x10005200-0x10005220
	public struct HTML_ChangedTitle_t // TypeDefIndex: 4530
	{
		// Fields
		public const int k_iCallback = 4508; // Metadata: 0x0024224B
		public HHTMLBrowser unBrowserHandle; // 0x00
		public string pchTitle; // 0x04
	}

	[CallbackIdentity] // 0x10005100-0x10005120
	public struct HTML_CloseBrowser_t // TypeDefIndex: 4526
	{
		// Fields
		public const int k_iCallback = 4504; // Metadata: 0x0024223B
		public HHTMLBrowser unBrowserHandle; // 0x00
	}

	[CallbackIdentity] // 0x100054C0-0x100054E0
	public struct HTML_FileOpenDialog_t // TypeDefIndex: 4538
	{
		// Fields
		public const int k_iCallback = 4516; // Metadata: 0x0024226B
		public HHTMLBrowser unBrowserHandle; // 0x00
		public string pchTitle; // 0x04
		public string pchInitialFile; // 0x08
	}

	[CallbackIdentity] // 0x100051C0-0x100051E0
	public struct HTML_FinishedRequest_t // TypeDefIndex: 4528
	{
		// Fields
		public const int k_iCallback = 4506; // Metadata: 0x00242243
		public HHTMLBrowser unBrowserHandle; // 0x00
		public string pchURL; // 0x04
		public string pchPageTitle; // 0x08
	}

	[CallbackIdentity] // 0x10006800-0x10006820
	public struct HTML_HideToolTip_t // TypeDefIndex: 4544
	{
		// Fields
		public const int k_iCallback = 4526; // Metadata: 0x00242283
		public HHTMLBrowser unBrowserHandle; // 0x00
	}

	[CallbackIdentity] // 0x10005330-0x10005350
	public struct HTML_HorizontalScroll_t // TypeDefIndex: 4533
	{
		// Fields
		public const int k_iCallback = 4511; // Metadata: 0x00242257
		public HHTMLBrowser unBrowserHandle; // 0x00
		public uint unScrollMax; // 0x04
		public uint unScrollCurrent; // 0x08
		public float flPageScale; // 0x0C
		public bool bVisible; // 0x10
		public uint unPageSize; // 0x14
	}

	[CallbackIdentity] // 0x10005420-0x10005440
	public struct HTML_JSAlert_t // TypeDefIndex: 4536
	{
		// Fields
		public const int k_iCallback = 4514; // Metadata: 0x00242263
		public HHTMLBrowser unBrowserHandle; // 0x00
		public string pchMessage; // 0x04
	}

	[CallbackIdentity] // 0x10005480-0x100054A0
	public struct HTML_JSConfirm_t // TypeDefIndex: 4537
	{
		// Fields
		public const int k_iCallback = 4515; // Metadata: 0x00242267
		public HHTMLBrowser unBrowserHandle; // 0x00
		public string pchMessage; // 0x04
	}

	[CallbackIdentity] // 0x100053C0-0x100053E0
	public struct HTML_LinkAtPosition_t // TypeDefIndex: 4535
	{
		// Fields
		public const int k_iCallback = 4513; // Metadata: 0x0024225F
		public HHTMLBrowser unBrowserHandle; // 0x00
		public uint x; // 0x04
		public uint y; // 0x08
		public string pchURL; // 0x0C
		public bool bInput; // 0x10
		public bool bLiveLink; // 0x11
	}

	[CallbackIdentity] // 0x10004FF0-0x10005010
	public struct HTML_NeedsPaint_t // TypeDefIndex: 4524
	{
		// Fields
		public const int k_iCallback = 4502; // Metadata: 0x00242233
		public HHTMLBrowser unBrowserHandle; // 0x00
		public IntPtr pBGRA; // 0x04
		public uint unWide; // 0x08
		public uint unTall; // 0x0C
		public uint unUpdateX; // 0x10
		public uint unUpdateY; // 0x14
		public uint unUpdateWide; // 0x18
		public uint unUpdateTall; // 0x1C
		public uint unScrollX; // 0x20
		public uint unScrollY; // 0x24
		public float flPageScale; // 0x28
		public uint unPageSerial; // 0x2C
	}

	[CallbackIdentity] // 0x10005520-0x10005540
	public struct HTML_NewWindow_t // TypeDefIndex: 4539
	{
		// Fields
		public const int k_iCallback = 4521; // Metadata: 0x0024226F
		public HHTMLBrowser unBrowserHandle; // 0x00
		public string pchURL; // 0x04
		public uint unX; // 0x08
		public uint unY; // 0x0C
		public uint unWide; // 0x10
		public uint unTall; // 0x14
		public HHTMLBrowser unNewWindow_BrowserHandle; // 0x18
	}

	[CallbackIdentity] // 0x100051E0-0x10005200
	public struct HTML_OpenLinkInNewTab_t // TypeDefIndex: 4529
	{
		// Fields
		public const int k_iCallback = 4507; // Metadata: 0x00242247
		public HHTMLBrowser unBrowserHandle; // 0x00
		public string pchURL; // 0x04
	}

	[CallbackIdentity] // 0x10005260-0x10005280
	public struct HTML_SearchResults_t // TypeDefIndex: 4531
	{
		// Fields
		public const int k_iCallback = 4509; // Metadata: 0x0024224F
		public HHTMLBrowser unBrowserHandle; // 0x00
		public uint unResults; // 0x04
		public uint unCurrentMatch; // 0x08
	}

	[CallbackIdentity] // 0x10006660-0x10006680
	public struct HTML_SetCursor_t // TypeDefIndex: 4540
	{
		// Fields
		public const int k_iCallback = 4522; // Metadata: 0x00242273
		public HHTMLBrowser unBrowserHandle; // 0x00
		public uint eMouseCursor; // 0x04
	}

	[CallbackIdentity] // 0x100066F0-0x10006710
	public struct HTML_ShowToolTip_t // TypeDefIndex: 4542
	{
		// Fields
		public const int k_iCallback = 4524; // Metadata: 0x0024227B
		public HHTMLBrowser unBrowserHandle; // 0x00
		public string pchMsg; // 0x04
	}

	[CallbackIdentity] // 0x10005060-0x10005080
	public struct HTML_StartRequest_t // TypeDefIndex: 4525
	{
		// Fields
		public const int k_iCallback = 4503; // Metadata: 0x00242237
		public HHTMLBrowser unBrowserHandle; // 0x00
		public string pchURL; // 0x04
		public string pchTarget; // 0x08
		public string pchPostData; // 0x0C
		public bool bIsRedirect; // 0x10
	}

	[CallbackIdentity] // 0x100066D0-0x100066F0
	public struct HTML_StatusText_t // TypeDefIndex: 4541
	{
		// Fields
		public const int k_iCallback = 4523; // Metadata: 0x00242277
		public HHTMLBrowser unBrowserHandle; // 0x00
		public string pchMsg; // 0x04
	}

	[CallbackIdentity] // 0x10006740-0x10006760
	public struct HTML_UpdateToolTip_t // TypeDefIndex: 4543
	{
		// Fields
		public const int k_iCallback = 4525; // Metadata: 0x0024227F
		public HHTMLBrowser unBrowserHandle; // 0x00
		public string pchMsg; // 0x04
	}

	[CallbackIdentity] // 0x10005140-0x10005160
	public struct HTML_URLChanged_t // TypeDefIndex: 4527
	{
		// Fields
		public const int k_iCallback = 4505; // Metadata: 0x0024223F
		public HHTMLBrowser unBrowserHandle; // 0x00
		public string pchURL; // 0x04
		public string pchPostData; // 0x08
		public bool bIsRedirect; // 0x0C
		public string pchPageTitle; // 0x10
		public bool bNewNavigation; // 0x14
	}

	[CallbackIdentity] // 0x100053A0-0x100053C0
	public struct HTML_VerticalScroll_t // TypeDefIndex: 4534
	{
		// Fields
		public const int k_iCallback = 4512; // Metadata: 0x0024225B
		public HHTMLBrowser unBrowserHandle; // 0x00
		public uint unScrollMax; // 0x04
		public uint unScrollCurrent; // 0x08
		public float flPageScale; // 0x0C
		public bool bVisible; // 0x10
		public uint unPageSize; // 0x14
	}

	[Serializable]
	public struct HTTPCookieContainerHandle : IEquatable<HTTPCookieContainerHandle>, IComparable<HTTPCookieContainerHandle> // TypeDefIndex: 4804
	{
		// Fields
		public static readonly HTTPCookieContainerHandle Invalid; // 0x00
		public uint m_HTTPCookieContainerHandle; // 0x00
	
		// Constructors
		public HTTPCookieContainerHandle(uint value); // 0x100900E0-0x100900F0
		static HTTPCookieContainerHandle(); // 0x101D2CE0-0x101D2D10
	
		// Methods
		public override string ToString(); // 0x100900C0-0x100900E0
		public override bool Equals(object other); // 0x10092450-0x100924E0
		public override int GetHashCode(); // 0x100900A0-0x100900C0
		public static bool operator ==(HTTPCookieContainerHandle x, HTTPCookieContainerHandle y); // 0x1018AFC0-0x1018AFD0
		public static bool operator !=(HTTPCookieContainerHandle x, HTTPCookieContainerHandle y); // 0x101D2D10-0x101D2D60
		public static explicit operator HTTPCookieContainerHandle(uint value); // 0x1018AFD0-0x1018AFE0
		public static explicit operator uint(HTTPCookieContainerHandle that); // 0x1018AFD0-0x1018AFE0
		public bool Equals(HTTPCookieContainerHandle other); // 0x10090080-0x100900A0
		public int CompareTo(HTTPCookieContainerHandle other); // 0x1008FFF0-0x10090010
	}

	[CallbackIdentity] // 0x10006840-0x10006860
	public struct HTTPRequestCompleted_t // TypeDefIndex: 4546
	{
		// Fields
		public const int k_iCallback = 2101; // Metadata: 0x0024228B
		public HTTPRequestHandle m_hRequest; // 0x00
		public ulong m_ulContextValue; // 0x08
		public bool m_bRequestSuccessful; // 0x10
		public EHTTPStatusCode m_eStatusCode; // 0x14
		public uint m_unBodySize; // 0x18
	}

	[CallbackIdentity] // 0x100068B0-0x100068D0
	public struct HTTPRequestDataReceived_t // TypeDefIndex: 4548
	{
		// Fields
		public const int k_iCallback = 2103; // Metadata: 0x00242293
		public HTTPRequestHandle m_hRequest; // 0x00
		public ulong m_ulContextValue; // 0x08
		public uint m_cOffset; // 0x10
		public uint m_cBytesReceived; // 0x14
	}

	[Serializable]
	public struct HTTPRequestHandle : IEquatable<HTTPRequestHandle>, IComparable<HTTPRequestHandle> // TypeDefIndex: 4805
	{
		// Fields
		public static readonly HTTPRequestHandle Invalid; // 0x00
		public uint m_HTTPRequestHandle; // 0x00
	
		// Constructors
		public HTTPRequestHandle(uint value); // 0x100900E0-0x100900F0
		static HTTPRequestHandle(); // 0x101D2D60-0x101D2D90
	
		// Methods
		public override string ToString(); // 0x100900C0-0x100900E0
		public override bool Equals(object other); // 0x100924E0-0x10092570
		public override int GetHashCode(); // 0x100900A0-0x100900C0
		public static bool operator ==(HTTPRequestHandle x, HTTPRequestHandle y); // 0x1018AFC0-0x1018AFD0
		public static bool operator !=(HTTPRequestHandle x, HTTPRequestHandle y); // 0x101D2D90-0x101D2DE0
		public static explicit operator HTTPRequestHandle(uint value); // 0x1018AFD0-0x1018AFE0
		public static explicit operator uint(HTTPRequestHandle that); // 0x1018AFD0-0x1018AFE0
		public bool Equals(HTTPRequestHandle other); // 0x10090080-0x100900A0
		public int CompareTo(HTTPRequestHandle other); // 0x1008FFF0-0x10090010
	}

	[CallbackIdentity] // 0x10006890-0x100068B0
	public struct HTTPRequestHeadersReceived_t // TypeDefIndex: 4547
	{
		// Fields
		public const int k_iCallback = 2102; // Metadata: 0x0024228F
		public HTTPRequestHandle m_hRequest; // 0x00
		public ulong m_ulContextValue; // 0x08
	}
}

public class HudManager : DestroyableSingleton<HudManager> // TypeDefIndex: 5403
{
	// Fields
	public MeetingHud MeetingPrefab; // 0x10
	public KillButtonManager KillButton; // 0x14
	public UseButtonManager UseButton; // 0x18
	public ReportButtonManager ReportButton; // 0x1C
	public TextRenderer GameSettings; // 0x20
	public GameObject TaskStuff; // 0x24
	public ChatController Chat; // 0x28
	public DialogueBox Dialogue; // 0x2C
	public TextRenderer TaskText; // 0x30
	public Transform TaskCompleteOverlay; // 0x34
	private float taskDirtyTimer; // 0x38
	public MeshRenderer ShadowQuad; // 0x3C
	public SpriteRenderer FullScreen; // 0x40
	[CompilerGenerated] // 0x10002030-0x10002050
	private Coroutine _ReactorFlash_k__BackingField; // 0x44
	[CompilerGenerated] // 0x10002030-0x10002050
	private Coroutine _OxyFlash_k__BackingField; // 0x48
	public SpriteRenderer MapButton; // 0x4C
	public KillOverlay KillOverlay; // 0x50
	public IVirtualJoystick joystick; // 0x54
	public MonoBehaviour[] Joysticks; // 0x58
	public DiscussBehaviour discussEmblem; // 0x5C
	public ShhhBehaviour shhhEmblem; // 0x60
	public IntroCutscene IntroPrefab; // 0x64
	public OptionsMenuBehaviour GameMenu; // 0x68
	public NotificationPopper Notifier; // 0x6C
	public RoomTracker roomTracker; // 0x70
	public AudioClip SabotageSound; // 0x74
	public AudioClip TaskCompleteSound; // 0x78
	public AudioClip TaskUpdateSound; // 0x7C
	private StringBuilder tasksString; // 0x80

	// Properties
	public Coroutine ReactorFlash { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101F8590-0x101F85A0 0x10278D70-0x10278D80
	public Coroutine OxyFlash { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101F85B0-0x101F85C0 0x101FB8E0-0x101FB8F0

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoTaskComplete_d__37 : IEnumerator<object> // TypeDefIndex: 5404
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public HudManager __4__this; // 0x10
		private float _time_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoTaskComplete_d__37(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10284F30-0x10285220
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10285220-0x10285270
	}

	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5405
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Action<MapBehaviour> __9__40_0; // 0x04
		public static Func<PlainShipRoom, bool> __9__48_0; // 0x08

		// Constructors
		static __c(); // 0x10285C10-0x10285C60
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _OpenMap_b__40_0(MapBehaviour m); // 0x10285890-0x102858B0
		internal bool _StopReactorFlash_b__48_0(PlainShipRoom r); // 0x102858B0-0x10285930
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _ShowEmblem_d__44 : IEnumerator<object> // TypeDefIndex: 5406
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public bool shhh; // 0x10
		public HudManager __4__this; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _ShowEmblem_d__44(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10285480-0x102855A0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102855A0-0x102855F0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoFadeFullScreen_d__50 : IEnumerator<object> // TypeDefIndex: 5407
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public HudManager __4__this; // 0x10
		public Color target; // 0x14
		public Color source; // 0x24
		public float duration; // 0x34
		private float _t_5__2; // 0x38

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoFadeFullScreen_d__50(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10283E70-0x102840A0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102840A0-0x102840F0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoReactorFlash_d__51 : IEnumerator<object> // TypeDefIndex: 5408
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public HudManager __4__this; // 0x10
		private WaitForSeconds _wait_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoReactorFlash_d__51(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102840F0-0x10284260
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10284260-0x102842B0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoShowIntro_d__52 : IEnumerator<object> // TypeDefIndex: 5409
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public HudManager __4__this; // 0x10
		public List<PlayerControl> yourTeam; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoShowIntro_d__52(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102842B0-0x102846A0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102846A0-0x102846F0
	}

	// Constructors
	public HudManager(); // 0x10278D10-0x10278D70

	// Methods
	public void Start(); // 0x102787F0-0x10278850
	public void ShowTaskComplete(); // 0x102786D0-0x10278730
	[IteratorStateMachine] // 0x1003CCF0-0x1003CD40
	private IEnumerator CoTaskComplete(); // 0x10277B30-0x10277B80
	public void SetJoystickSize(float size); // 0x10278190-0x10278360
	public void SetTouchType(int type); // 0x10278360-0x102784F0
	public void OpenMap(); // 0x10277B80-0x10277D70
	public void ShowMap(Action<MapBehaviour> mapAction); // 0x10278550-0x102786A0
	public void SetHudActive(bool isActive); // 0x10277FD0-0x10278190
	public void Update(); // 0x10278A00-0x10278D10
	[IteratorStateMachine] // 0x1003CD90-0x1003CDE0
	public IEnumerator ShowEmblem(bool shhh); // 0x102784F0-0x10278550
	public void StartReactorFlash(); // 0x10278790-0x102787F0
	public void StartOxyFlash(); // 0x10278730-0x10278790
	public void ShowPopUp(string text); // 0x102786A0-0x102786D0
	public void StopReactorFlash(); // 0x10278890-0x10278A00
	public void StopOxyFlash(); // 0x10278850-0x10278890
	[IteratorStateMachine] // 0x1003DF50-0x1003DFA0
	public IEnumerator CoFadeFullScreen(Color source, Color target, float duration = 0.2f /* Metadata: 0x00243B89 */); // 0x10277A10-0x10277A80
	[IteratorStateMachine] // 0x1003E000-0x1003E050
	private IEnumerator CoReactorFlash(); // 0x10277A80-0x10277AD0
	[IteratorStateMachine] // 0x1003E0D0-0x1003E120
	public IEnumerator CoShowIntro(List<PlayerControl> yourTeam); // 0x10277AD0-0x10277B30
	public void OpenMeetingRoom(PlayerControl reporter); // 0x10277D70-0x10277FD0
}

internal class HudOverrideSystemType : ISystemType, IActivatable // TypeDefIndex: 5778
{
	// Fields
	public const byte DamageBit = 128; // Metadata: 0x00243D57
	public const byte TaskMask = 127; // Metadata: 0x00243D58
	[CompilerGenerated] // 0x10002030-0x10002050
	private bool _IsActive_k__BackingField; // 0x08

	// Properties
	public bool IsActive { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101CA160-0x101CA170 0x101CA170-0x101CA180

	// Constructors
	public HudOverrideSystemType(); // 0x101A2CD0-0x101A2CE0

	// Methods
	public bool Detoriorate(float deltaTime); // 0x10278DB0-0x10278E60
	public void RepairDamage(PlayerControl player, byte amount); // 0x10278E60-0x10278E80
	public void Serialize(MessageWriter writer, bool initialState); // 0x10278E80-0x10278EB0
	public void Deserialize(MessageReader reader, bool initialState); // 0x10278D80-0x10278DB0
}

public class HudOverrideTask : SabotageTask, IHudOverrideTask // TypeDefIndex: 5848
{
	// Fields
	private bool isComplete; // 0x30
	private HudOverrideSystemType system; // 0x34
	private bool even; // 0x38

	// Properties
	public override int TaskStep { get; } // 0x1021B3D0-0x1021B3E0 
	public override bool IsComplete { get; } // 0x101C2370-0x101C2380 

	// Constructors
	public HudOverrideTask(); // 0x102044C0-0x102044D0

	// Methods
	public override void Initialize(); // 0x102790F0-0x102791A0
	private void FixedUpdate(); // 0x102790B0-0x102790F0
	public override bool ValidConsole(Console console); // 0x102791A0-0x102791F0
	public override void Complete(); // 0x10279000-0x102790B0
	public override void AppendTaskText(StringBuilder sb); // 0x10278EB0-0x10279000
}

public interface IActivatable // TypeDefIndex: 5777
{
	// Properties
	bool IsActive { get; }
}

namespace GoogleMobileAds.Common
{
	public interface IAdLoaderClient // TypeDefIndex: 5948
	{
		// Events
		event EventHandler<AdFailedToLoadEventArgs> OnAdFailedToLoad {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
		event EventHandler<CustomNativeEventArgs> OnCustomNativeTemplateAdLoaded {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
	
		// Methods
		void LoadAd(AdRequest request);
	}
}

[AddComponentMenu] // 0x10022DE0-0x10022E10
public class IAPDemo : MonoBehaviour, IStoreListener // TypeDefIndex: 4237
{
	// Fields
	private IStoreController m_Controller; // 0x0C
	private IAppleExtensions m_AppleExtensions; // 0x10
	private ISamsungAppsExtensions m_SamsungExtensions; // 0x14
	private IMicrosoftExtensions m_MicrosoftExtensions; // 0x18
	private ITransactionHistoryExtensions m_TransactionHistoryExtensions; // 0x1C
	private IGooglePlayStoreExtensions m_GooglePlayStoreExtensions; // 0x20
	private bool m_IsGooglePlayStoreSelected; // 0x24
	private bool m_IsSamsungAppsStoreSelected; // 0x25
	private bool m_PurchaseInProgress; // 0x26
	private Dictionary<string, IAPDemoProductUI> m_ProductUIs; // 0x28
	public GameObject productUITemplate; // 0x2C
	public RectTransform contentRect; // 0x30
	public Button restoreButton; // 0x34
	public UnityEngine.UI.Text versionText; // 0x38

	// Constructors
	public IAPDemo(); // 0x10623B10-0x10623B70

	// Methods
	public void OnInitialized(IStoreController controller, IExtensionProvider extensions); // 0x10622E90-0x106232F0
	public PurchaseProcessingResult ProcessPurchase(PurchaseEventArgs e); // 0x106234D0-0x10623630
	public void OnPurchaseFailed(Product item, PurchaseFailureReason r); // 0x106232F0-0x10623460
	public void OnInitializeFailed(InitializationFailureReason error); // 0x10622D90-0x10622E90
	public void Awake(); // 0x10621F70-0x106227F0
	private void OnTransactionsRestored(bool success); // 0x10623460-0x106234D0
	private void OnDeferred(Product item); // 0x10622D10-0x10622D90
	private void InitUI(IEnumerable<Product> items); // 0x10622980-0x10622A60
	public void PurchaseButtonClick(string productID); // 0x10623630-0x106237F0
	public void RestoreButtonClick(); // 0x106237F0-0x10623950
	private void ClearProductUIs(); // 0x106227F0-0x10622980
	private void AddProductUIs(Product[] products); // 0x10621C60-0x10621F70
	private void UpdateProductUI(Product p); // 0x10623A50-0x10623B10
	private void UpdateProductPendingUI(Product p, int secondsRemaining); // 0x10623950-0x10623A50
	private bool NeedRestoreButton(); // 0x10622CA0-0x10622D10
	private void LogProductDefinitions(); // 0x10622A60-0x10622CA0
}

public class IAPDemoProductUI : MonoBehaviour // TypeDefIndex: 4238
{
	// Fields
	public Button purchaseButton; // 0x0C
	public Button receiptButton; // 0x10
	public UnityEngine.UI.Text titleText; // 0x14
	public UnityEngine.UI.Text descriptionText; // 0x18
	public UnityEngine.UI.Text priceText; // 0x1C
	public UnityEngine.UI.Text statusText; // 0x20
	private string m_ProductID; // 0x24
	private Action<string> m_PurchaseCallback; // 0x28
	private string m_Receipt; // 0x2C

	// Constructors
	public IAPDemoProductUI(); // 0x101A68C0-0x101A68D0

	// Methods
	public void SetProduct(Product p, Action<string> purchaseCallback); // 0x10621B30-0x10621C60
	public void SetPendingTime(int secondsRemaining); // 0x10621AC0-0x10621B30
	public void PurchaseButtonClick(); // 0x106219E0-0x10621A40
	public void ReceiptButtonClick(); // 0x10621A40-0x10621AC0
}

namespace GoogleMobileAds.Common
{
	public interface IBannerClient // TypeDefIndex: 5949
	{
		// Events
		event EventHandler<EventArgs> OnAdLoaded {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
		event EventHandler<AdFailedToLoadEventArgs> OnAdFailedToLoad {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
		event EventHandler<EventArgs> OnAdOpening {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
		event EventHandler<EventArgs> OnAdClosed {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
		event EventHandler<EventArgs> OnAdLeavingApplication {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
	
		// Methods
		void CreateBannerView(string adUnitId, AdSize adSize, AdPosition position);
		void CreateBannerView(string adUnitId, AdSize adSize, int x, int y);
		void LoadAd(AdRequest request);
		void ShowBannerView();
		void HideBannerView();
		void DestroyBannerView();
		float GetHeightInPixels();
		float GetWidthInPixels();
		void SetPosition(AdPosition adPosition);
		void SetPosition(int x, int y);
		string MediationAdapterClassName();
	}
}

public interface IBuyable // TypeDefIndex: 5343
{
	// Properties
	string ProdId { get; }
}

public interface IBytesSerializable // TypeDefIndex: 5735
{
	// Methods
	byte[] ToBytes(byte version);
}

public interface IConnectButton // TypeDefIndex: 5575
{
	// Methods
	void StartIcon();
	void StopIcon();
}

namespace GoogleMobileAds.Common
{
	public interface ICustomNativeTemplateClient // TypeDefIndex: 5950
	{
		// Methods
		string GetTemplateId();
		byte[] GetImageByteArray(string key);
		List<string> GetAvailableAssetNames();
		string GetText(string key);
		void PerformClick(string assetName);
		void RecordImpression();
	}
}

public interface IDisconnectHandler // TypeDefIndex: 5491
{
	// Methods
	void HandleDisconnect(PlayerControl pc, DisconnectReasons reason);
	void HandleDisconnect();
}

public interface IDoorSystem // TypeDefIndex: 5763
{
	// Methods
	void CloseDoorsOfType(SystemTypes room);
}

namespace MS.Internal.Xml.XPath
{
	internal sealed class IDQuery : CacheOutputQuery // TypeDefIndex: 1773
	{
		// Constructors
		public IDQuery(Query arg); // 0x106BB910-0x106BB920
		private IDQuery(IDQuery other); // 0x106BB900-0x106BB910
	
		// Methods
		public override object Evaluate(XPathNodeIterator context); // 0x106BDE20-0x106BE050
		private void ProcessIds(XPathNavigator contextNode, string val); // 0x106BE050-0x106BE110
		public override XPathNodeIterator Clone(); // 0x106BDDD0-0x106BDE20
	}
}

public interface IFocusHolder // TypeDefIndex: 5410
{
	// Methods
	void GiveFocus();
	void LoseFocus();
	bool CheckCollision(Vector2 pt);
}

public interface IGameListHandler // TypeDefIndex: 5556
{
	// Methods
	void HandleList(InnerNetClient.TotalGameData totalGames, List<GameListing> availableGames);
}

public interface IHudOverrideTask // TypeDefIndex: 5846
{
}

namespace GoogleMobileAds.Common
{
	internal interface IInitializationStatusClient // TypeDefIndex: 5951
	{
		// Methods
		AdapterStatus getAdapterStatusForClassName(string className);
		Dictionary<string, AdapterStatus> getAdapterStatusMap();
	}

	public interface IInterstitialClient // TypeDefIndex: 5952
	{
		// Events
		event EventHandler<EventArgs> OnAdLoaded {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
		event EventHandler<AdFailedToLoadEventArgs> OnAdFailedToLoad {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
		event EventHandler<EventArgs> OnAdOpening {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
		event EventHandler<EventArgs> OnAdClosed {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
		event EventHandler<EventArgs> OnAdLeavingApplication {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
	
		// Methods
		void CreateInterstitialAd(string adUnitId);
		void LoadAd(AdRequest request);
		bool IsLoaded();
		void ShowInterstitial();
		void DestroyInterstitial();
		string MediationAdapterClassName();
	}
}

internal interface ILocationActivate // TypeDefIndex: 5492
{
	// Methods
	void LocationUse(PlayerControl pc);
}

namespace Hazel
{
	public interface ILogger // TypeDefIndex: 4181
	{
		// Methods
		void WriteError(string msg);
		void WriteInfo(string msg);
	}
}

[Serializable]
public struct ImageData // TypeDefIndex: 5876
{
	// Fields
	public ImageNames Name; // 0x00
	public Sprite Sprite; // 0x04
}

namespace Discord
{
	public struct ImageDimensions // TypeDefIndex: 4879
	{
		// Fields
		public uint Width; // 0x00
		public uint Height; // 0x04
	}

	public struct ImageHandle // TypeDefIndex: 4878
	{
		// Fields
		public ImageType Type; // 0x00
		public long Id; // 0x08
		public uint Size; // 0x10
	
		// Methods
		public static ImageHandle User(long id); // 0x10771700-0x10771750
		public static ImageHandle User(long id, uint size); // 0x10771750-0x107717A0
	}

	public class ImageManager // TypeDefIndex: 4961
	{
		// Fields
		private IntPtr MethodsPtr; // 0x08
		private object MethodsStructure; // 0x0C
	
		// Properties
		private FFIMethods Methods { get; } // 0x10771EE0-0x10771FC0 
	
		// Nested types
		internal struct FFIEvents // TypeDefIndex: 4962
		{
		}
	
		internal struct FFIMethods // TypeDefIndex: 4963
		{
			// Fields
			internal FetchMethod Fetch; // 0x00
			internal GetDimensionsMethod GetDimensions; // 0x04
			internal GetDataMethod GetData; // 0x08
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void FetchCallback(IntPtr ptr, Discord.Result result, ImageHandle handleResult); // TypeDefIndex: 4964; 0x1076F8D0-0x1076FC00
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void FetchMethod(IntPtr methodsPtr, ImageHandle handle, bool refresh, IntPtr callbackData, FetchCallback callback); // TypeDefIndex: 4965; 0x10770020-0x10770380
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetDimensionsMethod(IntPtr methodsPtr, ImageHandle handle, ref ImageDimensions dimensions); // TypeDefIndex: 4966; 0x10770C90-0x10770FF0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetDataMethod(IntPtr methodsPtr, ImageHandle handle, byte[] data, int dataLen); // TypeDefIndex: 4967; 0x107708B0-0x10770C10
		}
	
		public delegate void FetchHandler(Discord.Result result, ImageHandle handleResult); // TypeDefIndex: 4968; 0x1076FC70-0x1076FF80
	
		// Constructors
		internal ImageManager(IntPtr ptr, IntPtr eventsPtr, ref FFIEvents events); // 0x10771E10-0x10771EE0
	
		// Methods
		private void InitEvents(IntPtr eventsPtr, ref FFIEvents events); // 0x10771DB0-0x10771E10
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void FetchCallbackImpl(IntPtr ptr, Discord.Result result, ImageHandle handleResult); // 0x107717A0-0x10771840
		public void Fetch(ImageHandle handle, bool refresh, FetchHandler callback); // 0x10771840-0x10771900
		public ImageDimensions GetDimensions(ImageHandle handle); // 0x10771B70-0x10771C30
		public void GetData(ImageHandle handle, byte[] data); // 0x10771AC0-0x10771B70
		public void Fetch(ImageHandle handle, FetchHandler callback); // 0x10771900-0x107719C0
		public byte[] GetData(ImageHandle handle); // 0x107719C0-0x10771AC0
		public Texture2D GetTexture(ImageHandle handle); // 0x10771C30-0x10771DB0
	}
}

public enum ImageNames // TypeDefIndex: 5869
{
	LocalButton = 0,
	OnlineButton = 1,
	HowToPlayButton = 2,
	FreeplayButton = 3,
	HostHeader = 4,
	PublicHeader = 5,
	PrivateHeader = 6
}

[RequireComponent] // 0x1001EF40-0x1001EF90
public class ImageTranslator : MonoBehaviour, ITranslatedText // TypeDefIndex: 5870
{
	// Fields
	public ImageNames TargetImage; // 0x0C

	// Constructors
	public ImageTranslator(); // 0x101A68C0-0x101A68D0

	// Methods
	public void ResetText(); // 0x10279260-0x102792D0
	public void Start(); // 0x102792D0-0x10279390
	public void OnDestroy(); // 0x102791F0-0x10279260
}

namespace Discord
{
	public enum ImageType // TypeDefIndex: 4863
	{
		User = 0
	}
}

namespace GoogleMobileAds.Common
{
	public interface IMobileAdsClient // TypeDefIndex: 5953
	{
		// Methods
		void Initialize(string appId);
		void Initialize(Action<InitializationStatus> initCompleteAction);
		void SetApplicationVolume(float volume);
		void SetApplicationMuted(bool muted);
		void SetiOSAppPauseOnBackground(bool pause);
		float GetDeviceScale();
		int GetDeviceSafeWidth();
	}
}

public class ImportantTextTask : PlayerTask // TypeDefIndex: 5849
{
	// Fields
	public string Text; // 0x28

	// Properties
	public override int TaskStep { get; } // 0x101D1BE0-0x101D1BF0 
	public override bool IsComplete { get; } // 0x101A1190-0x101A1520 

	// Constructors
	public ImportantTextTask(); // 0x102044C0-0x102044D0

	// Methods
	public override void Initialize(); // 0x101A2F90-0x101A2FA0
	public override bool ValidConsole(Console console); // 0x101A1190-0x101A1520
	public override void Complete(); // 0x101A2F90-0x101A2FA0
	public override void AppendTaskText(StringBuilder sb); // 0x10279390-0x102793F0
}

public class InfectedOverlay : MonoBehaviour // TypeDefIndex: 5426
{
	// Fields
	public MapRoom[] rooms; // 0x0C
	private IActivatable doors; // 0x10
	private SabotageSystemType SabSystem; // 0x14

	// Properties
	public bool CanUseDoors { get; } // 0x10279660-0x102796C0 
	public bool CanUseSpecial { get; } // 0x102796C0-0x10279740 

	// Constructors
	public InfectedOverlay(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Start(); // 0x102794F0-0x10279660
	private void FixedUpdate(); // 0x102793F0-0x102794F0
}

namespace GoogleMobileAds.Api
{
	public class InitializationStatus // TypeDefIndex: 5976
	{
		// Fields
		private IInitializationStatusClient client; // 0x08
	
		// Constructors
		internal InitializationStatus(IInitializationStatusClient client); // 0x101B54B0-0x101B54D0
	
		// Methods
		public AdapterStatus getAdapterStatusForClassName(string className); // 0x10279740-0x102797F0
		public Dictionary<string, AdapterStatus> getAdapterStatusMap(); // 0x102797F0-0x10279890
	}
}

namespace InnerNet
{
	public class InnerDiscover : DestroyableSingleton<InnerDiscover> // TypeDefIndex: 5905
	{
		// Fields
		private UdpBroadcastListener listener; // 0x10
		private UdpBroadcaster sender; // 0x14
		public int Port; // 0x18
		public float Interval; // 0x1C
		[CompilerGenerated] // 0x10002030-0x10002050
		private Action<BroadcastPacket> OnPacketGet; // 0x20
	
		// Events
		public event Action<BroadcastPacket> OnPacketGet {
			add; // 0x10279D00-0x10279D80
			remove; // 0x10279D80-0x10279E00
		}
	
		// Nested types
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class _RunServer_d__8 : IEnumerator<object> // TypeDefIndex: 5906
		{
			// Fields
			private int __1__state; // 0x08
			private object __2__current; // 0x0C
			public InnerDiscover __4__this; // 0x10
			private float _timer_5__2; // 0x14
	
			// Properties
			object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
			object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
	
			// Constructors
			[DebuggerHidden] // 0x10002030-0x10002050
			public _RunServer_d__8(int __1__state); // 0x101B54B0-0x101B54D0
	
			// Methods
			[DebuggerHidden] // 0x10002030-0x10002050
			void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
			private bool MoveNext(); // 0x10285390-0x10285430
			[DebuggerHidden] // 0x10002030-0x10002050
			void IEnumerator.Reset(); // 0x10285430-0x10285480
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class _RunClient_d__11 : IEnumerator<object> // TypeDefIndex: 5907
		{
			// Fields
			private int __1__state; // 0x08
			private object __2__current; // 0x0C
			public InnerDiscover __4__this; // 0x10
	
			// Properties
			object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
			object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
	
			// Constructors
			[DebuggerHidden] // 0x10002030-0x10002050
			public _RunClient_d__11(int __1__state); // 0x101B54B0-0x101B54D0
	
			// Methods
			[DebuggerHidden] // 0x10002030-0x10002050
			void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
			private bool MoveNext(); // 0x10285270-0x10285340
			[DebuggerHidden] // 0x10002030-0x10002050
			void IEnumerator.Reset(); // 0x10285340-0x10285390
		}
	
		// Constructors
		public InnerDiscover(); // 0x10279CB0-0x10279D00
	
		// Methods
		public void StartAsServer(string data); // 0x10279B60-0x10279C50
		[IteratorStateMachine] // 0x10021990-0x100219E0
		private IEnumerator RunServer(); // 0x10279950-0x102799A0
		public void StopServer(); // 0x10279C80-0x10279CB0
		public void StartAsClient(); // 0x102799A0-0x10279B60
		[IteratorStateMachine] // 0x10021A20-0x10021A70
		private IEnumerator RunClient(); // 0x10279900-0x10279950
		public void StopClient(); // 0x10279C50-0x10279C80
		public override void OnDestroy(); // 0x10279890-0x10279900
	}

	public abstract class InnerNetClient : MonoBehaviour // TypeDefIndex: 5909
	{
		// Fields
		public const int CurrentClient = -3; // Metadata: 0x00244373
		public const int HostInherit = -2; // Metadata: 0x00244377
		internal const byte DataFlag = 1; // Metadata: 0x0024437B
		internal const byte RpcFlag = 2; // Metadata: 0x0024437C
		internal const byte SpawnFlag = 4; // Metadata: 0x0024437D
		internal const byte DespawnFlag = 5; // Metadata: 0x0024437E
		internal const byte SceneChangeFlag = 6; // Metadata: 0x0024437F
		internal const byte ReadyFlag = 7; // Metadata: 0x00244380
		internal const byte ChangeSettingsFlag = 8; // Metadata: 0x00244381
		public float MinSendInterval; // 0x0C
		private uint NetIdCnt; // 0x10
		private float timer; // 0x14
		public InnerNetObject[] SpawnableObjects; // 0x18
		private bool InOnlineScene; // 0x1C
		private HashSet<uint> DestroyedObjects; // 0x20
		public List<InnerNetObject> allObjects; // 0x24
		private Dictionary<uint, InnerNetObject> allObjectsFast; // 0x28
		private MessageWriter[] Streams; // 0x2C
		private static readonly DisconnectReasons[] disconnectReasons; // 0x00
		private const int SecondsDelayBeforeDisconnect = 30; // Metadata: 0x00244382
		public const int NoClientId = -1; // Metadata: 0x00244386
		private string networkAddress; // 0x30
		private int networkPort; // 0x34
		private UnityUdpClientConnection connection; // 0x38
		public MatchMakerModes mode; // 0x3C
		public int GameId; // 0x40
		public int HostId; // 0x44
		public int ClientId; // 0x48
		public List<ClientData> allClients; // 0x4C
		public DisconnectReasons LastDisconnectReason; // 0x50
		public string LastCustomDisconnect; // 0x54
		private readonly List<Action> PreSpawnDispatcher; // 0x58
		private readonly List<Action> Dispatcher; // 0x5C
		[CompilerGenerated] // 0x10002030-0x10002050
		private bool _IsGamePublic_k__BackingField; // 0x60
		public GameStates GameState; // 0x64
		private List<Action> TempQueue; // 0x68
		private bool appPaused; // 0x6C
	
		// Properties
		private bool AmConnected { get; } // 0x10280180-0x10280190 
		public int Ping { get; } // 0x10280240-0x10280260 
		public int BytesSent { get; } // 0x102801E0-0x10280210 
		public int BytesGot { get; } // 0x102801B0-0x102801E0 
		public int Resends { get; } // 0x10280260-0x10280290 
		public bool AmHost { get; } // 0x10280190-0x102801B0 
		public bool AmClient { get; } // 0x10280170-0x10280180 
		public bool IsGamePublic { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x10280220-0x10280230 0x10280290-0x102802A0
		public bool IsGameStarted { get; } // 0x10280230-0x10280240 
		public bool IsGameOver { get; } // 0x10280210-0x10280220 
	
		// Nested types
		public enum GameStates // TypeDefIndex: 5910
		{
			NotJoined = 0,
			Joined = 1,
			Started = 2,
			Ended = 3
		}
	
		public class TotalGameData // TypeDefIndex: 5911
		{
			// Fields
			public int[] PerMapTotals; // 0x08
	
			// Constructors
			public TotalGameData(); // 0x101A2CD0-0x101A2CE0
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c__DisplayClass26_0 // TypeDefIndex: 5912
		{
			// Fields
			public InnerNetClient __4__this; // 0x08
			public ClientData client; // 0x0C
			public string sceneName; // 0x10
	
			// Constructors
			public __c__DisplayClass26_0(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal void _CoSendSceneChange_b__0(); // 0x101B91D0-0x101B9200
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class _CoSendSceneChange_d__26 : IEnumerator<object> // TypeDefIndex: 5913
		{
			// Fields
			private int __1__state; // 0x08
			private object __2__current; // 0x0C
			public InnerNetClient __4__this; // 0x10
			public string sceneName; // 0x14
			private __c__DisplayClass26_0 __8__1; // 0x18
	
			// Properties
			object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
			object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
	
			// Constructors
			[DebuggerHidden] // 0x10002030-0x10002050
			public _CoSendSceneChange_d__26(int __1__state); // 0x101B54B0-0x101B54D0
	
			// Methods
			[DebuggerHidden] // 0x10002030-0x10002050
			void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
			private bool MoveNext(); // 0x101B6A50-0x101B6F40
			[DebuggerHidden] // 0x10002030-0x10002050
			void IEnumerator.Reset(); // 0x101B6F40-0x101B6F90
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c__DisplayClass34_0 // TypeDefIndex: 5914
		{
			// Fields
			public ClientData client; // 0x08
			public string targetScene; // 0x0C
			public InnerNetClient __4__this; // 0x10
	
			// Constructors
			public __c__DisplayClass34_0(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal void _HandleGameDataInner_b__0(); // 0x101B9200-0x101B9230
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c__DisplayClass35_0 // TypeDefIndex: 5915
		{
			// Fields
			public InnerNetClient __4__this; // 0x08
			public MessageReader copy; // 0x0C
			public int cnt; // 0x10
	
			// Constructors
			public __c__DisplayClass35_0(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal void _DeferMessage_b__0(); // 0x101B9230-0x101B9260
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class _CoConnect_d__81 : IEnumerator<object> // TypeDefIndex: 5916
		{
			// Fields
			private int __1__state; // 0x08
			private object __2__current; // 0x0C
			public InnerNetClient __4__this; // 0x10
			private string _ipAddr_5__2; // 0x14
	
			// Properties
			object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
			object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
	
			// Constructors
			[DebuggerHidden] // 0x10002030-0x10002050
			public _CoConnect_d__81(int __1__state); // 0x101B54B0-0x101B54D0
	
			// Methods
			[DebuggerHidden] // 0x10002030-0x10002050
			void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
			private bool MoveNext(); // 0x101B5E40-0x101B6240
			[DebuggerHidden] // 0x10002030-0x10002050
			void IEnumerator.Reset(); // 0x101B6240-0x101B6290
		}
	
		[Serializable]
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c // TypeDefIndex: 5917
		{
			// Fields
			public static readonly __c __9; // 0x00
			public static Func<byte, string> __9__82_0; // 0x04
			public static Func<byte, string> __9__83_0; // 0x08
	
			// Constructors
			static __c(); // 0x101B9480-0x101B94D0
			public __c(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal string _Connection_DataReceivedRaw_b__82_0(byte b); // 0x101B8AC0-0x101B8AE0
			internal string _Connection_DataSentRaw_b__83_0(byte b); // 0x101B8AC0-0x101B8AE0
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class _CoConnect_d__85 : IEnumerator<object> // TypeDefIndex: 5918
		{
			// Fields
			private int __1__state; // 0x08
			private object __2__current; // 0x0C
			public InnerNetClient __4__this; // 0x10
			public MatchMakerModes mode; // 0x14
	
			// Properties
			object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
			object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
	
			// Constructors
			[DebuggerHidden] // 0x10002030-0x10002050
			public _CoConnect_d__85(int __1__state); // 0x101B54B0-0x101B54D0
	
			// Methods
			[DebuggerHidden] // 0x10002030-0x10002050
			void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
			private bool MoveNext(); // 0x101B6290-0x101B6570
			[DebuggerHidden] // 0x10002030-0x10002050
			void IEnumerator.Reset(); // 0x101B6570-0x101B65C0
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class _WaitForConnectionOrFail_d__86 : IEnumerator<object> // TypeDefIndex: 5919
		{
			// Fields
			private int __1__state; // 0x08
			private object __2__current; // 0x0C
			public InnerNetClient __4__this; // 0x10
	
			// Properties
			object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
			object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
	
			// Constructors
			[DebuggerHidden] // 0x10002030-0x10002050
			public _WaitForConnectionOrFail_d__86(int __1__state); // 0x101B54B0-0x101B54D0
	
			// Methods
			[DebuggerHidden] // 0x10002030-0x10002050
			void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
			private bool MoveNext(); // 0x101B9520-0x101B95A0
			[DebuggerHidden] // 0x10002030-0x10002050
			void IEnumerator.Reset(); // 0x101B95A0-0x101B95F0
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class _WaitWithTimeout_d__87 : IEnumerator<object> // TypeDefIndex: 5920
		{
			// Fields
			private int __1__state; // 0x08
			private object __2__current; // 0x0C
			public Func<bool> success; // 0x10
			public InnerNetClient __4__this; // 0x14
			public int durationSeconds; // 0x18
			public string errorMessage; // 0x1C
			private bool _failed_5__2; // 0x20
			private float _timer_5__3; // 0x24
	
			// Properties
			object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
			object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
	
			// Constructors
			[DebuggerHidden] // 0x10002030-0x10002050
			public _WaitWithTimeout_d__87(int __1__state); // 0x101B54B0-0x101B54D0
	
			// Methods
			[DebuggerHidden] // 0x10002030-0x10002050
			void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
			private bool MoveNext(); // 0x101B96B0-0x101B97B0
			[DebuggerHidden] // 0x10002030-0x10002050
			void IEnumerator.Reset(); // 0x101B97B0-0x101B9800
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c__DisplayClass92_0 // TypeDefIndex: 5921
		{
			// Fields
			public InnerNetClient __4__this; // 0x08
			public DisconnectReasons reason; // 0x0C
			public string stringReason; // 0x10
	
			// Constructors
			public __c__DisplayClass92_0(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal void _EnqueueDisconnect_b__0(); // 0x101B9360-0x101B9390
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c__DisplayClass107_0 // TypeDefIndex: 5922
		{
			// Fields
			public GameOverReason reason; // 0x08
			public bool showAd; // 0x0C
			public InnerNetClient __4__this; // 0x10
	
			// Constructors
			public __c__DisplayClass107_0(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal void _HandleMessage_b__2(); // 0x101B8D00-0x101B8D40
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c__DisplayClass107_1 // TypeDefIndex: 5923
		{
			// Fields
			public ClientData myClient; // 0x08
			public InnerNetClient __4__this; // 0x0C
	
			// Constructors
			public __c__DisplayClass107_1(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal void _HandleMessage_b__4(); // 0x101B8D40-0x101B8DD0
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c__DisplayClass107_2 // TypeDefIndex: 5924
		{
			// Fields
			public ClientData client; // 0x08
			public InnerNetClient __4__this; // 0x0C
	
			// Constructors
			public __c__DisplayClass107_2(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal void _HandleMessage_b__5(); // 0x101B8DD0-0x101B8E00
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c__DisplayClass107_3 // TypeDefIndex: 5925
		{
			// Fields
			public MessageReader subReader; // 0x08
			public InnerNetClient __4__this; // 0x0C
	
			// Constructors
			public __c__DisplayClass107_3(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal void _HandleMessage_b__7(); // 0x101B8E00-0x101B8E30
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c__DisplayClass107_4 // TypeDefIndex: 5926
		{
			// Fields
			public MessageReader subReader; // 0x08
			public InnerNetClient __4__this; // 0x0C
	
			// Constructors
			public __c__DisplayClass107_4(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal void _HandleMessage_b__8(); // 0x101B8E00-0x101B8E30
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c__DisplayClass107_5 // TypeDefIndex: 5927
		{
			// Fields
			public TotalGameData totals; // 0x08
			public List<GameListing> output; // 0x0C
			public InnerNetClient __4__this; // 0x10
	
			// Constructors
			public __c__DisplayClass107_5(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal void _HandleMessage_b__9(); // 0x101B8E30-0x101B8E60
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c__DisplayClass107_6 // TypeDefIndex: 5928
		{
			// Fields
			public TotalGameData totals; // 0x08
			public List<GameListing> output; // 0x0C
			public InnerNetClient __4__this; // 0x10
	
			// Constructors
			public __c__DisplayClass107_6(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal void _HandleMessage_b__10(); // 0x101B8E30-0x101B8E60
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c__DisplayClass107_7 // TypeDefIndex: 5929
		{
			// Fields
			public uint address; // 0x08
			public ushort port; // 0x0C
			public InnerNetClient __4__this; // 0x10
	
			// Constructors
			public __c__DisplayClass107_7(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal void _HandleMessage_b__12(); // 0x101B8E60-0x101B8F70
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c__DisplayClass109_0 // TypeDefIndex: 5930
		{
			// Fields
			public int clientId; // 0x08
	
			// Constructors
			public __c__DisplayClass109_0(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal bool _GetOrCreateClient_b__0(ClientData c); // 0x101B8F70-0x101B8F90
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c__DisplayClass110_0 // TypeDefIndex: 5931
		{
			// Fields
			public InnerNetClient __4__this; // 0x08
			public ClientData client; // 0x0C
			public DisconnectReasons reason; // 0x10
	
			// Constructors
			public __c__DisplayClass110_0(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal void _RemovePlayer_b__0(); // 0x101B8FB0-0x101B9000
		}
	
		// Constructors
		protected InnerNetClient(); // 0x10280050-0x10280170
		static InnerNetClient(); // 0x10280000-0x10280050
	
		// Methods
		private void FixedUpdate(); // 0x1027AF40-0x1027B260
		public T FindObjectByNetId<T>(uint netId)
			where T : InnerNetObject;
		public void SendRpcImmediately(uint targetNetId, byte callId, SendOption option); // 0x1027F110-0x1027F1E0
		public MessageWriter StartRpcImmediately(uint targetNetId, byte callId, SendOption option, int targetClientId = -1 /* Metadata: 0x00244360 */); // 0x1027F500-0x1027F5D0
		public void FinishRpcImmediately(MessageWriter msg); // 0x1027AF00-0x1027AF40
		public void SendRpc(uint targetNetId, byte callId, SendOption option = SendOption.None | SendOption.Reliable /* Metadata: 0x00244364 */); // 0x1027F1E0-0x1027F240
		public MessageWriter StartRpc(uint targetNetId, byte callId, SendOption option = SendOption.None | SendOption.Reliable /* Metadata: 0x00244365 */); // 0x1027F5D0-0x1027F630
		private void SendSceneChange(string sceneName); // 0x1027F240-0x1027F320
		[IteratorStateMachine] // 0x10022EA0-0x10022EF0
		private IEnumerator CoSendSceneChange(string sceneName); // 0x1027A220-0x1027A280
		public void Spawn(InnerNetObject netObjParent, int ownerId = -2 /* Metadata: 0x00244366 */, SpawnFlags flags = SpawnFlags.None /* Metadata: 0x0024436A */); // 0x1027F3D0-0x1027F480
		private void WriteSpawnMessage(InnerNetObject netObjParent, int ownerId, SpawnFlags flags, MessageWriter msg); // 0x1027FE80-0x10280000
		public void Despawn(InnerNetObject objToDespawn); // 0x1027A730-0x1027A800
		private bool AddNetObject(InnerNetObject obj); // 0x10279E00-0x10279EA0
		public void RemoveNetObject(InnerNetObject obj); // 0x1027E470-0x1027E500
		public void RemoveUnownedObjects(); // 0x1027E7A0-0x1027EAF0
		private void HandleGameData(MessageReader parentReader, int cnt = 0 /* Metadata: 0x0024436B */); // 0x1027C3D0-0x1027C4C0
		private void HandleGameDataInner(MessageReader reader, int cnt); // 0x1027B7B0-0x1027C3D0
		private void DeferMessage(int cnt, MessageReader reader, string logMsg); // 0x1027A520-0x1027A730
		public void SetEndpoint(string addr, ushort port); // 0x1027F3B0-0x1027F3D0
		public virtual void Start(); // 0x1027F630-0x1027F6A0
		private void SendOrDisconnect(MessageWriter msg); // 0x1027EFB0-0x1027F110
		public ClientData GetHost(); // 0x1027B440-0x1027B5C0
		public int GetClientIdFromCharacter(InnerNetObject character); // 0x1027B260-0x1027B440
		public virtual void OnDestroy(); // 0x1027E1D0-0x1027E1F0
		[IteratorStateMachine] // 0x10023070-0x100230C0
		public IEnumerator CoConnect(); // 0x1027A1C0-0x1027A220
		private void Connection_DataReceivedRaw(byte[] data); // 0x1027A2F0-0x1027A400
		private void Connection_DataSentRaw(byte[] data, int length); // 0x1027A400-0x1027A520
		public void Connect(MatchMakerModes mode); // 0x1027A280-0x1027A2F0
		[IteratorStateMachine] // 0x10023150-0x100231A0
		private IEnumerator CoConnect(MatchMakerModes mode); // 0x1027A160-0x1027A1C0
		[IteratorStateMachine] // 0x10023200-0x10023250
		public IEnumerator WaitForConnectionOrFail(); // 0x1027FD40-0x1027FDA0
		[IteratorStateMachine] // 0x10023370-0x100233C0
		private IEnumerator WaitWithTimeout(Func<bool> success, string errorMessage, int durationSeconds = 15 /* Metadata: 0x0024436F */); // 0x1027FE10-0x1027FE80
		public void Update(); // 0x1027F8D0-0x1027FD40
		private void OnDisconnect(object sender, DisconnectedEventArgs e); // 0x1027E1F0-0x1027E380
		public void HandleDisconnect(DisconnectReasons reason, string stringReason = null); // 0x1027B770-0x1027B7B0
		protected void EnqueueDisconnect(DisconnectReasons reason, string stringReason = null); // 0x1027ABF0-0x1027AD50
		protected void DisconnectInternal(DisconnectReasons reason, string stringReason = null); // 0x1027A800-0x1027ABF0
		public void HostGame(IBytesSerializable settings); // 0x1027DDD0-0x1027DEB0
		public void JoinGame(); // 0x1027DEB0-0x1027E020
		public bool CanBan(); // 0x1027A060-0x1027A080
		public bool CanKick(); // 0x1027A080-0x1027A0A0
		public void KickPlayer(int clientId, bool ban); // 0x1027E020-0x1027E0E0
		public MessageWriter StartEndGame(); // 0x1027F480-0x1027F500
		public void FinishEndGame(MessageWriter msg); // 0x1027AEC0-0x1027AF00
		protected void SendLateRejection(int targetId, DisconnectReasons reason); // 0x1027EF00-0x1027EFB0
		protected void SendClientReady(); // 0x1027EBA0-0x1027ECB0
		protected void SendStartGame(); // 0x1027F320-0x1027F3B0
		public void RequestGameList(bool includePrivate, IBytesSerializable settings); // 0x1027EAF0-0x1027EBA0
		public void ChangeGamePublic(bool isPublic); // 0x1027A0A0-0x1027A160
		private void OnMessageReceived(DataReceivedEventArgs e); // 0x1027E380-0x1027E470
		private void HandleMessage(MessageReader reader, SendOption sendOption); // 0x1027C4C0-0x1027DDD0
		public static string AddressToString(uint address); // 0x10279EA0-0x1027A060
		private ClientData GetOrCreateClient(int clientId); // 0x1027B5C0-0x1027B770
		private void RemovePlayer(int playerIdThatLeft, DisconnectReasons reason); // 0x1027E500-0x1027E7A0
		protected virtual void OnApplicationPause(bool pause); // 0x1027E0E0-0x1027E1D0
		private void WaitToDisconnect(object state); // 0x1027FDA0-0x1027FE10
		protected void SendInitialData(int clientId); // 0x1027ECB0-0x1027EF00
		protected abstract void OnGameCreated(string gameIdString);
		protected abstract void OnGameJoined(string gameIdString, ClientData client);
		protected abstract void OnWaitForHost(string gameIdString);
		protected abstract void OnStartGame();
		protected abstract void OnGameEnd(GameOverReason reason, bool showAd);
		protected abstract void OnBecomeHost();
		protected abstract void OnPlayerJoined(ClientData client);
		protected abstract void OnPlayerChangedScene(ClientData client, string targetScene);
		protected abstract void OnPlayerLeft(ClientData client, DisconnectReasons reason);
		protected abstract void OnDisconnected();
		protected abstract void OnGetGameList(TotalGameData totalGames, List<GameListing> availableGames);
		protected abstract byte[] GetConnectionData();
		protected ClientData FindClientById(int id); // 0x1027AD50-0x1027AEC0
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _Start_b__76_0(Scene oldScene, Scene scene); // 0x1027F7E0-0x1027F8D0
		[CompilerGenerated] // 0x10002030-0x10002050
		private bool _CoConnect_b__85_0(); // 0x1027F6A0-0x1027F6B0
		[CompilerGenerated] // 0x10002030-0x10002050
		private bool _CoConnect_b__85_1(); // 0x1027F6B0-0x1027F6C0
		[CompilerGenerated] // 0x10002030-0x10002050
		private bool _CoConnect_b__85_2(); // 0x1027F6A0-0x1027F6B0
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _HandleMessage_b__107_0(); // 0x1027F6C0-0x1027F730
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _HandleMessage_b__107_1(); // 0x1027F750-0x1027F770
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _HandleMessage_b__107_3(); // 0x1027F770-0x1027F7E0
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _HandleMessage_b__107_6(); // 0x1027F750-0x1027F770
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _HandleMessage_b__107_11(); // 0x1027F730-0x1027F750
	}

	public abstract class InnerNetObject : MonoBehaviour, IComparable<InnerNetObject> // TypeDefIndex: 5935
	{
		// Fields
		public uint SpawnId; // 0x0C
		public uint NetId; // 0x10
		public uint DirtyBits; // 0x14
		public SpawnFlags SpawnFlags; // 0x18
		public SendOption sendMode; // 0x19
		public int OwnerId; // 0x1C
		protected bool DespawnOnDestroy; // 0x20
	
		// Properties
		public bool AmOwner { get; } // 0x101A2FD0-0x101A3020 
	
		// Constructors
		protected InnerNetObject(); // 0x101A2FB0-0x101A2FD0
	
		// Methods
		public void Despawn(); // 0x101A2E30-0x101A2EB0
		public virtual void OnDestroy(); // 0x101A2EB0-0x101A2F90
		public virtual void PreSerialize(); // 0x101A2F90-0x101A2FA0
		public abstract void HandleRpc(byte callId, MessageReader reader);
		public abstract bool Serialize(MessageWriter writer, bool initialState);
		public abstract void Deserialize(MessageReader reader, bool initialState);
		public int CompareTo(InnerNetObject other); // 0x101A2E00-0x101A2E30
		protected void SetDirtyBit(uint val); // 0x101A2FA0-0x101A2FB0
	}

	public class InnerNetServer : DestroyableSingleton<InnerNetServer> // TypeDefIndex: 5939
	{
		// Fields
		public const int MaxPlayers = 10; // Metadata: 0x00244409
		public const int LocalGameId = 32; // Metadata: 0x0024440D
		private const int InvalidHost = -1; // Metadata: 0x00244411
		private int HostId; // 0x10
		public HashSet<string> ipBans; // 0x14
		public int Port; // 0x18
		[SerializeField] // 0x10002030-0x10002050
		private GameStates GameState; // 0x1C
		private UdpConnectionListener listener; // 0x20
		private List<Player> Clients; // 0x24
	
		// Nested types
		protected class Player // TypeDefIndex: 5940
		{
			// Fields
			private static int IdCount; // 0x00
			public int Id; // 0x08
			public Connection Connection; // 0x0C
			public LimboStates LimboState; // 0x10
	
			// Constructors
			public Player(Connection connection); // 0x101B4F80-0x101B4FF0
			static Player(); // 0x101B4F50-0x101B4F80
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c__DisplayClass15_0 // TypeDefIndex: 5941
		{
			// Fields
			public InnerNetServer __4__this; // 0x08
			public Player client; // 0x0C
	
			// Constructors
			public __c__DisplayClass15_0(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal void _OnServerConnect_b__0(DataReceivedEventArgs e); // 0x101B9160-0x101B91A0
			internal void _OnServerConnect_b__1(object o, DisconnectedEventArgs e); // 0x101B91A0-0x101B91D0
		}
	
		[Serializable]
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c // TypeDefIndex: 5942
		{
			// Fields
			public static readonly __c __9; // 0x00
			public static Func<byte, string> __9__17_0; // 0x04
	
			// Constructors
			static __c(); // 0x101B93E0-0x101B9430
			public __c(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal string _Connection_DataSentRaw_b__17_0(byte b); // 0x101B8AC0-0x101B8AE0
		}
	
		// Constructors
		public InnerNetServer(); // 0x101A55C0-0x101A5640
	
		// Methods
		public override void OnDestroy(); // 0x101A4BE0-0x101A4C20
		public void StartAsServer(); // 0x101A51D0-0x101A52F0
		private void DebugString(string obj); // 0x101A35A0-0x101A3600
		public void StopServer(); // 0x101A5380-0x101A54A0
		public static bool IsCompatibleVersion(int version); // 0x101A4370-0x101A43D0
		private void OnServerConnect(NewConnectionEventArgs evt); // 0x101A4C20-0x101A4F60
		private static void SendIncorrectVersion(Connection connection); // 0x101A4F60-0x101A5000
		private void Connection_DataSentRaw(byte[] data, int length); // 0x101A3480-0x101A35A0
		private void OnDataReceived(Player client, DataReceivedEventArgs evt); // 0x101A4A50-0x101A4BE0
		private void HandleMessage(Player client, MessageReader reader, SendOption sendOption); // 0x101A37D0-0x101A3C50
		private void KickPlayer(int targetId, bool ban); // 0x101A4740-0x101A4A50
		protected void JoinGame(Player client); // 0x101A43D0-0x101A4740
		private void HandleRejoin(Player client); // 0x101A3FC0-0x101A4370
		private void HandleNewGameJoin(Player client); // 0x101A3C50-0x101A3FC0
		private void EndGame(MessageReader message, Player source); // 0x101A3600-0x101A37D0
		private void StartGame(MessageReader message, Player source); // 0x101A52F0-0x101A5380
		private void ClientDisconnect(Player client); // 0x101A3230-0x101A3480
		protected void SendTo(MessageWriter msg, int targetId); // 0x101A5000-0x101A51D0
		protected void Broadcast(MessageWriter msg, Player source); // 0x101A3090-0x101A3230
		private void BroadcastJoinMessage(Player client, MessageWriter msg); // 0x101A3020-0x101A3090
		private void WriteJoinedMessage(Player client, MessageWriter msg, bool clear); // 0x101A54A0-0x101A55C0
	}
}

namespace Discord
{
	public struct InputMode // TypeDefIndex: 4893
	{
		// Fields
		public InputModeType Type; // 0x00
		public string Shortcut; // 0x04
	}

	public enum InputModeType // TypeDefIndex: 4875
	{
		VoiceActivity = 0,
		PushToTalk = 1
	}
}

namespace Steamworks
{
	public class InteropHelp // TypeDefIndex: 4291
	{
		// Nested types
		public class UTF8StringHandle : SafeHandleZeroOrMinusOneIsInvalid // TypeDefIndex: 4292
		{
			// Constructors
			public UTF8StringHandle(string str); // 0x101ED310-0x101ED410
	
			// Methods
			protected override bool ReleaseHandle(); // 0x101ED2A0-0x101ED310
		}
	
		public class SteamParamStringArray // TypeDefIndex: 4293
		{
			// Fields
			private IntPtr[] m_Strings; // 0x08
			private IntPtr m_ptrStrings; // 0x0C
			private IntPtr m_pSteamParamStringArray; // 0x10
	
			// Constructors
			public SteamParamStringArray(IList<string> strings); // 0x101ED000-0x101ED280
	
			// Methods
			~SteamParamStringArray(); // 0x101ECE50-0x101ED000
			public static implicit operator IntPtr(SteamParamStringArray that); // 0x101ED280-0x101ED2A0
		}
	
		// Constructors
		public InteropHelp(); // 0x101A2CD0-0x101A2CE0
	
		// Methods
		public static void TestIfPlatformSupported(); // 0x101A2F90-0x101A2FA0
		public static void TestIfAvailableClient(); // 0x101D4890-0x101D4930
		public static void TestIfAvailableGameServer(); // 0x101D4930-0x101D49D0
		public static string PtrToStringUTF8(IntPtr nativeUtf8); // 0x101D4790-0x101D4890
	}
}

namespace GoogleMobileAds.Api
{
	public class InterstitialAd // TypeDefIndex: 5977
	{
		// Fields
		private IInterstitialClient client; // 0x08
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdLoaded; // 0x0C
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<AdFailedToLoadEventArgs> OnAdFailedToLoad; // 0x10
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdOpening; // 0x14
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdClosed; // 0x18
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdLeavingApplication; // 0x1C
	
		// Events
		public event EventHandler<EventArgs> OnAdLoaded {
			add; // 0x102808B0-0x10280930
			remove; // 0x10280B30-0x10280BB0
		}
		public event EventHandler<AdFailedToLoadEventArgs> OnAdFailedToLoad {
			add; // 0x102807B0-0x10280830
			remove; // 0x10280A30-0x10280AB0
		}
		public event EventHandler<EventArgs> OnAdOpening {
			add; // 0x10280930-0x102809B0
			remove; // 0x10280BB0-0x10280C30
		}
		public event EventHandler<EventArgs> OnAdClosed {
			add; // 0x10280730-0x102807B0
			remove; // 0x102809B0-0x10280A30
		}
		public event EventHandler<EventArgs> OnAdLeavingApplication {
			add; // 0x10280830-0x102808B0
			remove; // 0x10280AB0-0x10280B30
		}
	
		// Constructors
		public InterstitialAd(string adUnitId); // 0x10280570-0x10280730
	
		// Methods
		public void LoadAd(AdRequest request); // 0x10280340-0x10280390
		public bool IsLoaded(); // 0x102802F0-0x10280340
		public void Show(); // 0x102803E0-0x10280430
		public void Destroy(); // 0x102802A0-0x102802F0
		public string MediationAdapterClassName(); // 0x10280390-0x102803E0
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _.ctor_b__1_0(object sender, EventArgs args); // 0x10280430-0x10280470
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _.ctor_b__1_1(object sender, AdFailedToLoadEventArgs args); // 0x10280470-0x102804B0
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _.ctor_b__1_2(object sender, EventArgs args); // 0x102804B0-0x102804F0
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _.ctor_b__1_3(object sender, EventArgs args); // 0x102804F0-0x10280530
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _.ctor_b__1_4(object sender, EventArgs args); // 0x10280530-0x10280570
	}
}

[Serializable]
public class IntRange // TypeDefIndex: 5237
{
	// Fields
	public int min; // 0x08
	public int max; // 0x0C

	// Constructors
	public IntRange(); // 0x101A2CD0-0x101A2CE0
	public IntRange(int min, int max); // 0x101A5800-0x101A5830

	// Methods
	public int Next(); // 0x101A5770-0x101A5790
	public bool Contains(int value); // 0x101A5640-0x101A5660
	public static int Next(int max); // 0x101A57A0-0x101A57D0
	internal static int Next(int min, int max); // 0x101A5790-0x101A57A0
	internal static byte NextByte(byte max); // 0x101A5750-0x101A5770
	public static void FillRandom(sbyte min, sbyte max, sbyte[] array); // 0x101A56F0-0x101A5750
	public static int RandomSign(); // 0x101A57D0-0x101A5800
	public static void FillRandomRange(sbyte[] array); // 0x101A5660-0x101A56F0
}

public class IntroCutscene : MonoBehaviour // TypeDefIndex: 5275
{
	// Fields
	public static IntroCutscene Instance; // 0x00
	public TextRenderer Title; // 0x0C
	public TextRenderer ImpostorText; // 0x10
	public PoolablePlayer PlayerPrefab; // 0x14
	public MeshRenderer BackgroundBar; // 0x18
	public MeshRenderer Foreground; // 0x1C
	public FloatRange ForegroundRadius; // 0x20
	public SpriteRenderer FrontMost; // 0x24
	public AudioClip IntroStinger; // 0x28
	public float BaseY; // 0x2C

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoBegin_d__10 : IEnumerator<object> // TypeDefIndex: 5276
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public IntroCutscene __4__this; // 0x10
		public bool isImpostor; // 0x14
		public List<PlayerControl> yourTeam; // 0x18
		private Color _c_5__2; // 0x1C
		private Color _fade_5__3; // 0x2C
		private Color _impColor_5__4; // 0x3C
		private Vector3 _titlePos_5__5; // 0x4C
		private float _timer_5__6; // 0x58

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoBegin_d__10(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101B5650-0x101B5B20
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101B5B20-0x101B5B70
	}

	// Constructors
	public IntroCutscene(); // 0x101A6410-0x101A6430

	// Methods
	[IteratorStateMachine] // 0x1002B3F0-0x1002B440
	public IEnumerator CoBegin(List<PlayerControl> yourTeam, bool isImpostor); // 0x101A63B0-0x101A6410
	private void BeginCrewmate(List<PlayerControl> yourTeam); // 0x101A5830-0x101A5ED0
	private void BeginImpostor(List<PlayerControl> yourTeam); // 0x101A5ED0-0x101A63B0
}

public abstract class IObjectPool : MonoBehaviour // TypeDefIndex: 5226
{
	// Properties
	public abstract int InUse { get; }
	public abstract int NotInUse { get; }

	// Constructors
	protected IObjectPool(); // 0x101A68C0-0x101A68D0

	// Methods
	public abstract T Get<T>()
		where T : PoolableBehavior;
	public abstract void Reclaim(PoolableBehavior obj);
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000A6B0-0x1000A6D0
	public struct IPCFailure_t // TypeDefIndex: 4637
	{
		// Fields
		public const int k_iCallback = 117; // Metadata: 0x002423F7
		public byte m_eFailureType; // 0x00
	}

	[CallbackIdentity] // 0x1000BF80-0x1000BFA0
	public struct IPCountry_t // TypeDefIndex: 4657
	{
		// Fields
		public const int k_iCallback = 701; // Metadata: 0x00242447
	}
}

namespace Hazel
{
	public enum IPMode // TypeDefIndex: 4168
	{
		IPv4 = 0,
		IPv6 = 1
	}

	public interface IRecyclable // TypeDefIndex: 4169
	{
	}
}

namespace GoogleMobileAds.Common
{
	public interface IRewardBasedVideoAdClient // TypeDefIndex: 5954
	{
		// Events
		event EventHandler<EventArgs> OnAdLoaded {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
		event EventHandler<AdFailedToLoadEventArgs> OnAdFailedToLoad {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
		event EventHandler<EventArgs> OnAdOpening {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
		event EventHandler<EventArgs> OnAdStarted {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
		event EventHandler<Reward> OnAdRewarded {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
		event EventHandler<EventArgs> OnAdClosed {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
		event EventHandler<EventArgs> OnAdLeavingApplication {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
		event EventHandler<EventArgs> OnAdCompleted {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
	
		// Methods
		void CreateRewardBasedVideoAd();
		void LoadAd(AdRequest request, string adUnitId);
		bool IsLoaded();
		string MediationAdapterClassName();
		void ShowRewardBasedVideoAd();
		void SetUserId(string userId);
	}

	public interface IRewardedAdClient // TypeDefIndex: 5955
	{
		// Events
		event EventHandler<EventArgs> OnAdLoaded {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
		event EventHandler<AdErrorEventArgs> OnAdFailedToLoad {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
		event EventHandler<AdErrorEventArgs> OnAdFailedToShow {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
		event EventHandler<EventArgs> OnAdOpening {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
		event EventHandler<Reward> OnUserEarnedReward {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
		event EventHandler<EventArgs> OnAdClosed {
			add; // 0x00000000-0x00000000
			remove; // 0x00000000-0x00000000
		}
	
		// Methods
		void CreateRewardedAd(string adUnitId);
		void LoadAd(AdRequest request);
		bool IsLoaded();
		string MediationAdapterClassName();
		Reward GetRewardItem();
		void Show();
		void SetServerSideVerificationOptions(ServerSideVerificationOptions serverSideVerificationOptions);
	}
}

public interface ISoundPlayer // TypeDefIndex: 5816
{
	// Properties
	string Name { get; set; }
	AudioSource Player { get; set; }

	// Methods
	void Update(float dt);
}

internal interface ISteamBuyable // TypeDefIndex: 5587
{
	// Properties
	uint SteamAppId { get; }
	string SteamPrice { get; }
}

namespace Steamworks
{
	public class ISteamMatchmakingPingResponse // TypeDefIndex: 4269
	{
		// Fields
		private VTable m_VTable; // 0x08
		private IntPtr m_pVTable; // 0x0C
		private GCHandle m_pGCHandle; // 0x10
		private ServerResponded m_ServerResponded; // 0x14
		private ServerFailedToRespond m_ServerFailedToRespond; // 0x18
	
		// Nested types
		public delegate void ServerResponded(gameserveritem_t server); // TypeDefIndex: 4270; 0x101D4590-0x101D4790
	
		public delegate void ServerFailedToRespond(); // TypeDefIndex: 4271; 0x101D40E0-0x101D4220
	
		[UnmanagedFunctionPointer] // 0x1000C5E0-0x1000C600
		private delegate void InternalServerResponded(gameserveritem_t server); // TypeDefIndex: 4272; 0x101D4590-0x101D4790
	
		[UnmanagedFunctionPointer] // 0x1000C5E0-0x1000C600
		private delegate void InternalServerFailedToRespond(); // TypeDefIndex: 4273; 0x101D40E0-0x101D4220
	
		private class VTable // TypeDefIndex: 4274
		{
			// Fields
			[NonSerialized]
			public InternalServerResponded m_VTServerResponded; // 0x08
			[NonSerialized]
			public InternalServerFailedToRespond m_VTServerFailedToRespond; // 0x0C
	
			// Constructors
			public VTable(); // 0x101A2CD0-0x101A2CE0
		}
	
		// Constructors
		public ISteamMatchmakingPingResponse(ServerResponded onServerResponded, ServerFailedToRespond onServerFailedToRespond); // 0x101D30A0-0x101D3220
	
		// Methods
		~ISteamMatchmakingPingResponse(); // 0x101D2DE0-0x101D2F10
		private void InternalOnServerResponded(gameserveritem_t server); // 0x101D3070-0x101D30A0
		private void InternalOnServerFailedToRespond(); // 0x101D2F10-0x101D3070
		public static explicit operator IntPtr(ISteamMatchmakingPingResponse that); // 0x101D3220-0x101D3250
	}

	public class ISteamMatchmakingPlayersResponse // TypeDefIndex: 4275
	{
		// Fields
		private VTable m_VTable; // 0x08
		private IntPtr m_pVTable; // 0x0C
		private GCHandle m_pGCHandle; // 0x10
		private AddPlayerToList m_AddPlayerToList; // 0x14
		private PlayersFailedToRespond m_PlayersFailedToRespond; // 0x18
		private PlayersRefreshComplete m_PlayersRefreshComplete; // 0x1C
	
		// Nested types
		public delegate void AddPlayerToList(string pchName, int nScore, float flTimePlayed); // TypeDefIndex: 4276; 0x101D1C60-0x101D2120
	
		public delegate void PlayersFailedToRespond(); // TypeDefIndex: 4277; 0x101D40E0-0x101D4220
	
		public delegate void PlayersRefreshComplete(); // TypeDefIndex: 4278; 0x101D40E0-0x101D4220
	
		[UnmanagedFunctionPointer] // 0x1000C5E0-0x1000C600
		public delegate void InternalAddPlayerToList(IntPtr pchName, int nScore, float flTimePlayed); // TypeDefIndex: 4279; 0x101D3DE0-0x101D40B0
	
		[UnmanagedFunctionPointer] // 0x1000C5E0-0x1000C600
		public delegate void InternalPlayersFailedToRespond(); // TypeDefIndex: 4280; 0x101D40E0-0x101D4220
	
		[UnmanagedFunctionPointer] // 0x1000C5E0-0x1000C600
		public delegate void InternalPlayersRefreshComplete(); // TypeDefIndex: 4281; 0x101D40E0-0x101D4220
	
		private class VTable // TypeDefIndex: 4282
		{
			// Fields
			[NonSerialized]
			public InternalAddPlayerToList m_VTAddPlayerToList; // 0x08
			[NonSerialized]
			public InternalPlayersFailedToRespond m_VTPlayersFailedToRespond; // 0x0C
			[NonSerialized]
			public InternalPlayersRefreshComplete m_VTPlayersRefreshComplete; // 0x10
	
			// Constructors
			public VTable(); // 0x101A2CD0-0x101A2CE0
		}
	
		// Constructors
		public ISteamMatchmakingPlayersResponse(AddPlayerToList onAddPlayerToList, PlayersFailedToRespond onPlayersFailedToRespond, PlayersRefreshComplete onPlayersRefreshComplete); // 0x101D3520-0x101D36D0
	
		// Methods
		~ISteamMatchmakingPlayersResponse(); // 0x101D3250-0x101D3380
		private void InternalOnAddPlayerToList(IntPtr pchName, int nScore, float flTimePlayed); // 0x101D3380-0x101D33C0
		private void InternalOnPlayersFailedToRespond(); // 0x101D2F10-0x101D3070
		private void InternalOnPlayersRefreshComplete(); // 0x101D33C0-0x101D3520
		public static explicit operator IntPtr(ISteamMatchmakingPlayersResponse that); // 0x101D3220-0x101D3250
	}

	public class ISteamMatchmakingRulesResponse // TypeDefIndex: 4283
	{
		// Fields
		private VTable m_VTable; // 0x08
		private IntPtr m_pVTable; // 0x0C
		private GCHandle m_pGCHandle; // 0x10
		private RulesResponded m_RulesResponded; // 0x14
		private RulesFailedToRespond m_RulesFailedToRespond; // 0x18
		private RulesRefreshComplete m_RulesRefreshComplete; // 0x1C
	
		// Nested types
		public delegate void RulesResponded(string pchRule, string pchValue); // TypeDefIndex: 4284; 0x101EC950-0x101ECD70
	
		public delegate void RulesFailedToRespond(); // TypeDefIndex: 4285; 0x101D40E0-0x101D4220
	
		public delegate void RulesRefreshComplete(); // TypeDefIndex: 4286; 0x101D40E0-0x101D4220
	
		[UnmanagedFunctionPointer] // 0x1000C5E0-0x1000C600
		public delegate void InternalRulesResponded(IntPtr pchRule, IntPtr pchValue); // TypeDefIndex: 4287; 0x1018BF80-0x1018C200
	
		[UnmanagedFunctionPointer] // 0x1000C5E0-0x1000C600
		public delegate void InternalRulesFailedToRespond(); // TypeDefIndex: 4288; 0x101D40E0-0x101D4220
	
		[UnmanagedFunctionPointer] // 0x1000C5E0-0x1000C600
		public delegate void InternalRulesRefreshComplete(); // TypeDefIndex: 4289; 0x101D40E0-0x101D4220
	
		private class VTable // TypeDefIndex: 4290
		{
			// Fields
			[NonSerialized]
			public InternalRulesResponded m_VTRulesResponded; // 0x08
			[NonSerialized]
			public InternalRulesFailedToRespond m_VTRulesFailedToRespond; // 0x0C
			[NonSerialized]
			public InternalRulesRefreshComplete m_VTRulesRefreshComplete; // 0x10
	
			// Constructors
			public VTable(); // 0x101A2CD0-0x101A2CE0
		}
	
		// Constructors
		public ISteamMatchmakingRulesResponse(RulesResponded onRulesResponded, RulesFailedToRespond onRulesFailedToRespond, RulesRefreshComplete onRulesRefreshComplete); // 0x101D3840-0x101D39F0
	
		// Methods
		~ISteamMatchmakingRulesResponse(); // 0x101D36D0-0x101D3800
		private void InternalOnRulesResponded(IntPtr pchRule, IntPtr pchValue); // 0x101D3800-0x101D3840
		private void InternalOnRulesFailedToRespond(); // 0x101D2F10-0x101D3070
		private void InternalOnRulesRefreshComplete(); // 0x101D33C0-0x101D3520
		public static explicit operator IntPtr(ISteamMatchmakingRulesResponse that); // 0x101D3220-0x101D3250
	}

	public class ISteamMatchmakingServerListResponse // TypeDefIndex: 4261
	{
		// Fields
		private VTable m_VTable; // 0x08
		private IntPtr m_pVTable; // 0x0C
		private GCHandle m_pGCHandle; // 0x10
		private ServerResponded m_ServerResponded; // 0x14
		private ServerFailedToRespond m_ServerFailedToRespond; // 0x18
		private RefreshComplete m_RefreshComplete; // 0x1C
	
		// Nested types
		public delegate void ServerResponded(HServerListRequest hRequest, int iServer); // TypeDefIndex: 4262; 0x101D4290-0x101D4410
	
		public delegate void ServerFailedToRespond(HServerListRequest hRequest, int iServer); // TypeDefIndex: 4263; 0x101D4290-0x101D4410
	
		public delegate void RefreshComplete(HServerListRequest hRequest, EMatchMakingServerResponse response); // TypeDefIndex: 4264; 0x101D4290-0x101D4410
	
		[UnmanagedFunctionPointer] // 0x1000C5E0-0x1000C600
		private delegate void InternalServerResponded(HServerListRequest hRequest, int iServer); // TypeDefIndex: 4265; 0x101D4290-0x101D4410
	
		[UnmanagedFunctionPointer] // 0x1000C5E0-0x1000C600
		private delegate void InternalServerFailedToRespond(HServerListRequest hRequest, int iServer); // TypeDefIndex: 4266; 0x101D4290-0x101D4410
	
		[UnmanagedFunctionPointer] // 0x1000C5E0-0x1000C600
		private delegate void InternalRefreshComplete(HServerListRequest hRequest, EMatchMakingServerResponse response); // TypeDefIndex: 4267; 0x101D4290-0x101D4410
	
		private class VTable // TypeDefIndex: 4268
		{
			// Fields
			[NonSerialized]
			public InternalServerResponded m_VTServerResponded; // 0x08
			[NonSerialized]
			public InternalServerFailedToRespond m_VTServerFailedToRespond; // 0x0C
			[NonSerialized]
			public InternalRefreshComplete m_VTRefreshComplete; // 0x10
	
			// Constructors
			public VTable(); // 0x101A2CD0-0x101A2CE0
		}
	
		// Constructors
		public ISteamMatchmakingServerListResponse(ServerResponded onServerResponded, ServerFailedToRespond onServerFailedToRespond, RefreshComplete onRefreshComplete); // 0x101D3BB0-0x101D3D60
	
		// Methods
		~ISteamMatchmakingServerListResponse(); // 0x101D39F0-0x101D3B20
		private void InternalOnServerResponded(HServerListRequest hRequest, int iServer); // 0x101D3B80-0x101D3BB0
		private void InternalOnServerFailedToRespond(HServerListRequest hRequest, int iServer); // 0x101D3B50-0x101D3B80
		private void InternalOnRefreshComplete(HServerListRequest hRequest, EMatchMakingServerResponse response); // 0x101D3B20-0x101D3B50
		public static explicit operator IntPtr(ISteamMatchmakingServerListResponse that); // 0x101D3220-0x101D3250
	}
}

public interface IStepWatcher // TypeDefIndex: 5779
{
	// Properties
	int Priority { get; }

	// Methods
	SoundGroup MakeFootstep(PlayerControl player);
}

public interface ISystemTimer // TypeDefIndex: 5776
{
	// Methods
	float GetTimer(SystemTypes system);
}

public interface ISystemType // TypeDefIndex: 5807
{
	// Methods
	bool Detoriorate(float deltaTime);
	void RepairDamage(PlayerControl player, byte amount);
	void Serialize(MessageWriter writer, bool initialState);
	void Deserialize(MessageReader reader, bool initialState);
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000A290-0x1000A2B0
	public struct ItemInstalled_t // TypeDefIndex: 4620
	{
		// Fields
		public const int k_iCallback = 3405; // Metadata: 0x002423B3
		public AppId_t m_unAppID; // 0x00
		public PublishedFileId_t m_nPublishedFileId; // 0x08
	}
}

namespace MS.Internal.Xml.XPath
{
	internal class IteratorFilter : XPathNodeIterator // TypeDefIndex: 1774
	{
		// Fields
		private XPathNodeIterator innerIterator; // 0x0C
		private string name; // 0x10
		private int position; // 0x14
	
		// Properties
		public override XPathNavigator Current { get; } // 0x106BE290-0x106BE2C0 
		public override int CurrentPosition { get; } // 0x101ADCB0-0x101ADCC0 
	
		// Constructors
		internal IteratorFilter(XPathNodeIterator innerIterator, string name); // 0x106BE260-0x106BE290
		private IteratorFilter(IteratorFilter it); // 0x106BE210-0x106BE260
	
		// Methods
		public override XPathNodeIterator Clone(); // 0x106BE110-0x106BE190
		public override bool MoveNext(); // 0x106BE190-0x106BE210
	}
}

public interface ITranslatedText // TypeDefIndex: 5875
{
	// Methods
	void ResetText();
}

public interface IUsable // TypeDefIndex: 5780
{
	// Properties
	float UsableDistance { get; }
	float PercentCool { get; }
	Sprite UseIcon { get; }

	// Methods
	void SetOutline(bool on, bool mainTarget);
	float CanUse(GameData.PlayerInfo pc, out bool canUse, out bool couldUse);
	void Use();
}

namespace Uniject
{
	internal interface IUtil // TypeDefIndex: 4044
	{
		// Properties
		RuntimePlatform platform { get; }
		string persistentDataPath { get; }
		string cloudProjectId { get; }
		string unityVersion { get; }
		string userId { get; }
		string gameVersion { get; }
		ulong sessionId { get; }
		string operatingSystem { get; }
		int screenWidth { get; }
		int screenHeight { get; }
		float screenDpi { get; }
		string screenOrientation { get; }
	
		// Methods
		object InitiateCoroutine(IEnumerator start);
		void InitiateCoroutine(IEnumerator start, int delayInSeconds);
		void RunOnMainThread(Action runnable);
		void AddPauseListener(Action<bool> runnable);
		bool IsClassOrSubclass(Type potentialBase, Type potentialDescendant);
	}
}

public interface IVirtualJoystick // TypeDefIndex: 5412
{
	// Properties
	Vector2 Delta { get; }
}

namespace Steamworks
{
	[CallbackIdentity] // 0x10002650-0x10002670
	public struct JoinClanChatRoomCompletionResult_t // TypeDefIndex: 4502
	{
		// Fields
		public const int k_iCallback = 342; // Metadata: 0x002421DB
		public CSteamID m_steamIDClanChat; // 0x00
		public EChatRoomEnterResponse m_eChatRoomEnterResponse; // 0x08
	}
}

namespace InnerNet
{
	public enum JoinFailureReasons : byte // TypeDefIndex: 5936
	{
		TooManyPlayers = 1,
		GameStarted = 2,
		GameNotFound = 3,
		HostNotReady = 4,
		IncorrectVersion = 5,
		Banned = 6,
		Kicked = 7
	}
}

public class JoinGameButton : MonoBehaviour, IConnectButton // TypeDefIndex: 5557
{
	// Fields
	public AudioClip IntroMusic; // 0x0C
	public TextBox GameIdText; // 0x10
	public TextRenderer gameNameText; // 0x14
	public float timeRecieved; // 0x18
	public SpriteRenderer FillScreen; // 0x1C
	public SpriteAnim connectIcon; // 0x20
	public AnimationClip connectClip; // 0x24
	public GameModes GameMode; // 0x28
	public string netAddress; // 0x2C

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _JoinGame_d__10 : IEnumerator<object> // TypeDefIndex: 5558
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public JoinGameButton __4__this; // 0x10
		private float _time_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _JoinGame_d__10(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101B8190-0x101B85F0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101B85F0-0x101B8640
	}

	// Constructors
	public JoinGameButton(); // 0x101A68C0-0x101A68D0

	// Methods
	public void OnClick(); // 0x101A6480-0x101A67A0
	[IteratorStateMachine] // 0x100052C0-0x10005310
	private IEnumerator JoinGame(); // 0x101A6430-0x101A6480
	public void SetGameName(string[] gameNameParts); // 0x101A67A0-0x101A6820
	public void StartIcon(); // 0x101A6820-0x101A6850
	public void StopIcon(); // 0x101A6850-0x101A68C0
}

[Serializable]
public class KerningPair // TypeDefIndex: 5253
{
	// Fields
	public char First; // 0x08
	public char Second; // 0x0A
	public int Pixels; // 0x0C

	// Constructors
	public KerningPair(); // 0x101A68D0-0x101A68F0
}

public class KeyboardJoystick : MonoBehaviour, IVirtualJoystick // TypeDefIndex: 5413
{
	// Fields
	private Vector2 del; // 0x0C

	// Properties
	public Vector2 Delta { get; } // 0x101A7E20-0x101A7E40 

	// Nested types
	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5414
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Action<MapBehaviour> __9__4_0; // 0x04

		// Constructors
		static __c(); // 0x101B9390-0x101B93E0
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _HandleHud_b__4_0(MapBehaviour m); // 0x101B8AE0-0x101B8C50
	}

	// Constructors
	public KeyboardJoystick(); // 0x101A68C0-0x101A68D0

	// Methods
	private void Update(); // 0x101A7B30-0x101A7E20
	private static void HandleHud(); // 0x101A77B0-0x101A7B30
}

public class KeyMinigame : Minigame // TypeDefIndex: 5640
{
	// Fields
	public KeySlotBehaviour[] Slots; // 0x28
	private int keyState; // 0x2C
	public SpriteRenderer KeyImage; // 0x30
	public Sprite normalImage; // 0x34
	public Sprite insertImage; // 0x38
	public BoxCollider2D key; // 0x3C
	private int targetSlotId; // 0x40
	private Controller controller; // 0x44
	public AudioClip KeyGrab; // 0x48
	public AudioClip KeyInsert; // 0x4C
	public AudioClip KeyOpen; // 0x50
	public AudioClip KeyTurn; // 0x54

	// Constructors
	public KeyMinigame(); // 0x101A72D0-0x101A7330

	// Methods
	public void Start(); // 0x101A68F0-0x101A69F0
	public void Update(); // 0x101A69F0-0x101A72D0
}

public class KeypadGame : Minigame // TypeDefIndex: 5520
{
	// Fields
	public TextRenderer TargetText; // 0x28
	public TextRenderer NumberText; // 0x2C
	public int number; // 0x30
	public string numString; // 0x34
	private bool animating; // 0x38
	public SpriteRenderer AcceptButton; // 0x3C
	private LifeSuppSystemType system; // 0x40
	private NoOxyTask oxyTask; // 0x44
	private bool done; // 0x48

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _BlinkAccept_d__11 : IEnumerator<object> // TypeDefIndex: 5521
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public KeypadGame __4__this; // 0x10
		private int _i_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _BlinkAccept_d__11(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101B54D0-0x101B5600
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101B5600-0x101B5650
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Animate_d__14 : IEnumerator<object> // TypeDefIndex: 5522
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public KeypadGame __4__this; // 0x10
		private WaitForSeconds _wait_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Animate_d__14(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101B5000-0x101B5460
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101B5460-0x101B54B0
	}

	// Constructors
	public KeypadGame(); // 0x101A8230-0x101A8280

	// Methods
	public override void Begin(PlayerTask task); // 0x101A7E90-0x101A8030
	public void ClickNumber(int i); // 0x101A80E0-0x101A81D0
	[IteratorStateMachine] // 0x10049250-0x100492A0
	private IEnumerator BlinkAccept(); // 0x101A8030-0x101A8080
	public void ClearEntry(); // 0x101A8080-0x101A80E0
	public void Enter(); // 0x101A81D0-0x101A8230
	[IteratorStateMachine] // 0x10049330-0x10049380
	private IEnumerator Animate(); // 0x101A7E40-0x101A7E90
}

public class KeySlotBehaviour : MonoBehaviour // TypeDefIndex: 5641
{
	// Fields
	public Sprite Highlit; // 0x0C
	public Sprite Inserted; // 0x10
	public Sprite Finished; // 0x14
	public SpriteRenderer Image; // 0x18
	public BoxCollider2D Hitbox; // 0x1C

	// Constructors
	public KeySlotBehaviour(); // 0x101A68C0-0x101A68D0

	// Methods
	internal void SetFinished(); // 0x101A7330-0x101A73C0
	internal void SetInserted(); // 0x101A73F0-0x101A7420
	internal void SetHighlight(); // 0x101A73C0-0x101A73F0
}

public class KeyValueOption : OptionBehaviour // TypeDefIndex: 5738
{
	// Fields
	public TextRenderer TitleText; // 0x14
	public TextRenderer ValueText; // 0x18
	public List<KeyValuePair<string, int>> Values; // 0x1C
	private int Selected; // 0x20
	private int oldValue; // 0x24

	// Constructors
	public KeyValueOption(); // 0x101A7790-0x101A77B0

	// Methods
	public void OnEnable(); // 0x101A7610-0x101A7790
	private void FixedUpdate(); // 0x101A74B0-0x101A7520
	public void Increase(); // 0x101A7580-0x101A7610
	public void Decrease(); // 0x101A7420-0x101A74B0
	public override int GetInt(); // 0x101A7520-0x101A7580
}

public class KillAnimation : MonoBehaviour // TypeDefIndex: 5672
{
	// Fields
	public AnimationClip BlurAnim; // 0x0C
	public DeadBody bodyPrefab; // 0x10
	public Vector3 BodyOffset; // 0x14

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoPerformKill_d__3 : IEnumerator<object> // TypeDefIndex: 5673
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public PlayerControl source; // 0x10
		public PlayerControl target; // 0x14
		public KillAnimation __4__this; // 0x18
		private FollowerCamera _cam_5__2; // 0x1C
		private bool _isParticipant_5__3; // 0x20
		private PlayerPhysics _sourcePhys_5__4; // 0x24
		private SpriteAnim _sourceAnim_5__5; // 0x28

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoPerformKill_d__3(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101B65C0-0x101B6A00
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101B6A00-0x101B6A50
	}

	// Constructors
	public KillAnimation(); // 0x101A68C0-0x101A68D0

	// Methods
	[IteratorStateMachine] // 0x10012300-0x10012350
	public IEnumerator CoPerformKill(PlayerControl source, PlayerControl target); // 0x101A8280-0x101A82E0
	public static void SetMovement(PlayerControl source, bool canMove); // 0x101A82E0-0x101A8350
}

public enum KillAnimType // TypeDefIndex: 5674
{
	Stab = 0,
	Tongue = 1,
	Shoot = 2,
	Neck = 3,
	None = 4
}

public class KillButtonManager : MonoBehaviour // TypeDefIndex: 5418
{
	// Fields
	public PlayerControl CurrentTarget; // 0x0C
	public SpriteRenderer renderer; // 0x10
	public TextRenderer TimerText; // 0x14
	public bool isCoolingDown; // 0x18
	public bool isActive; // 0x19
	private Vector2 uv; // 0x1C

	// Constructors
	public KillButtonManager(); // 0x101A8910-0x101A8930

	// Methods
	public void Start(); // 0x101A88E0-0x101A8910
	public void PerformKill(); // 0x101A8350-0x101A84A0
	public void SetTarget(PlayerControl target); // 0x101A8640-0x101A88E0
	public void SetCoolDown(float timer, float maxTimer); // 0x101A84A0-0x101A8640
}

public class KillOverlay : MonoBehaviour // TypeDefIndex: 5419
{
	// Fields
	public SpriteRenderer background; // 0x0C
	public GameObject flameParent; // 0x10
	public OverlayKillAnimation[] KillAnims; // 0x14
	public float FadeTime; // 0x18
	public OverlayKillAnimation EmergencyOverlay; // 0x1C
	public OverlayKillAnimation ReportOverlay; // 0x20
	private Queue<Func<IEnumerator>> queue; // 0x24
	private Coroutine showAll; // 0x28
	private Coroutine showOne; // 0x2C

	// Properties
	public bool IsOpen { get; } // 0x101A8D80-0x101A8DD0 

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _WaitForFinish_d__11 : IEnumerator<object> // TypeDefIndex: 5420
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public KillOverlay __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _WaitForFinish_d__11(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101B95F0-0x101B9660
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101B9660-0x101B96B0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass12_0 // TypeDefIndex: 5421
	{
		// Fields
		public KillOverlay __4__this; // 0x08
		public GameData.PlayerInfo killer; // 0x0C
		public GameData.PlayerInfo victim; // 0x10

		// Constructors
		public __c__DisplayClass12_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal IEnumerator _ShowOne_b__0(); // 0x101B9000-0x101B90E0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass13_0 // TypeDefIndex: 5422
	{
		// Fields
		public KillOverlay __4__this; // 0x08
		public OverlayKillAnimation killAnimPrefab; // 0x0C
		public GameData.PlayerInfo killer; // 0x10
		public GameData.PlayerInfo victim; // 0x14

		// Constructors
		public __c__DisplayClass13_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal IEnumerator _ShowOne_b__0(); // 0x101B90E0-0x101B9160
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _ShowAll_d__14 : IEnumerator<object> // TypeDefIndex: 5423
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public KillOverlay __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _ShowAll_d__14(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101B8960-0x101B8A20
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101B8A20-0x101B8A70
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoShowOne_d__15 : IEnumerator<object> // TypeDefIndex: 5424
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public OverlayKillAnimation killAnimPrefab; // 0x10
		public KillOverlay __4__this; // 0x14
		public GameData.PlayerInfo killer; // 0x18
		public GameData.PlayerInfo victim; // 0x1C

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoShowOne_d__15(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101B6F90-0x101B70C0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101B70C0-0x101B7110
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoShowOne_d__16 : IEnumerator<object> // TypeDefIndex: 5425
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public OverlayKillAnimation anim; // 0x10
		public KillOverlay __4__this; // 0x14
		private WaitForSeconds _wait_5__2; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoShowOne_d__16(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101B7110-0x101B76F0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101B76F0-0x101B7740
	}

	// Constructors
	public KillOverlay(); // 0x101A8D20-0x101A8D80

	// Methods
	[IteratorStateMachine] // 0x1003F000-0x1003F050
	public IEnumerator WaitForFinish(); // 0x101A8CD0-0x101A8D20
	public void ShowOne(GameData.PlayerInfo killer, GameData.PlayerInfo victim); // 0x101A8A40-0x101A8B40
	public void ShowOne(OverlayKillAnimation killAnimPrefab, GameData.PlayerInfo killer, GameData.PlayerInfo victim); // 0x101A8B40-0x101A8C40
	[IteratorStateMachine] // 0x1003F0A0-0x1003F0F0
	private IEnumerator ShowAll(); // 0x101A89F0-0x101A8A40
	[IteratorStateMachine] // 0x1003F140-0x1003F190
	private IEnumerator CoShowOne(OverlayKillAnimation killAnimPrefab, GameData.PlayerInfo killer, GameData.PlayerInfo victim); // 0x101A8930-0x101A8990
	[IteratorStateMachine] // 0x1003F1E0-0x1003F230
	private IEnumerator CoShowOne(OverlayKillAnimation anim); // 0x101A8990-0x101A89F0
	[CompilerGenerated] // 0x10002030-0x10002050
	private void _CoShowOne_b__16_0(float t); // 0x101A8C40-0x101A8CD0
}

public class LanguageButton : MonoBehaviour // TypeDefIndex: 5739
{
	// Fields
	public TextRenderer Title; // 0x0C
	public PassiveButton Button; // 0x10
	[HideInInspector] // 0x10002030-0x10002050
	public TextAsset Language; // 0x14

	// Constructors
	public LanguageButton(); // 0x101A68C0-0x101A68D0
}

public class LanguageSetter : MonoBehaviour // TypeDefIndex: 5740
{
	// Fields
	public LanguageButton ButtonPrefab; // 0x0C
	public Scroller ButtonParent; // 0x10
	public float ButtonStart; // 0x14
	public float ButtonHeight; // 0x18
	private LanguageButton[] AllButtons; // 0x1C

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass5_0 // TypeDefIndex: 5741
	{
		// Fields
		public LanguageButton button; // 0x08
		public LanguageSetter __4__this; // 0x0C

		// Constructors
		public __c__DisplayClass5_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _Start_b__0(); // 0x101B9260-0x101B9360
	}

	// Constructors
	public LanguageSetter(); // 0x101A9210-0x101A9240

	// Methods
	public void Start(); // 0x101A8EC0-0x101A9210
	public void SetLanguage(LanguageButton selected); // 0x101A8DD0-0x101A8EC0
}

public class LanguageUnit // TypeDefIndex: 5871
{
	// Fields
	public bool IsEnglish; // 0x08
	private Dictionary<StringNames, string> AllStrings; // 0x0C
	private Dictionary<ImageNames, Sprite> AllImages; // 0x10
	private StringBuilder builder; // 0x14

	// Constructors
	public LanguageUnit(TextAsset data, ImageData[] images); // 0x101A9410-0x101A9700

	// Methods
	public string UnescapeCodes(string src, int startAt); // 0x101A9330-0x101A9410
	public string GetString(StringNames stringId, params /* 0x10002030-0x10002050 */ object[] parts); // 0x101A92A0-0x101A9330
	public Sprite GetImage(ImageNames id); // 0x101A9240-0x101A92A0
}

namespace Steamworks
{
	public struct LeaderboardEntry_t // TypeDefIndex: 4756
	{
		// Fields
		public CSteamID m_steamIDUser; // 0x00
		public int m_nGlobalRank; // 0x08
		public int m_nScore; // 0x0C
		public int m_cDetails; // 0x10
		public UGCHandle_t m_hUGC; // 0x18
	}

	[CallbackIdentity] // 0x1000A9A0-0x1000A9C0
	public struct LeaderboardFindResult_t // TypeDefIndex: 4648
	{
		// Fields
		public const int k_iCallback = 1104; // Metadata: 0x00242423
		public SteamLeaderboard_t m_hSteamLeaderboard; // 0x00
		public byte m_bLeaderboardFound; // 0x08
	}

	[CallbackIdentity] // 0x1000A9F0-0x1000AA10
	public struct LeaderboardScoresDownloaded_t // TypeDefIndex: 4649
	{
		// Fields
		public const int k_iCallback = 1105; // Metadata: 0x00242427
		public SteamLeaderboard_t m_hSteamLeaderboard; // 0x00
		public SteamLeaderboardEntries_t m_hSteamLeaderboardEntries; // 0x08
		public int m_cEntryCount; // 0x10
	}

	[CallbackIdentity] // 0x1000AA80-0x1000AAA0
	public struct LeaderboardScoreUploaded_t // TypeDefIndex: 4650
	{
		// Fields
		public const int k_iCallback = 1106; // Metadata: 0x0024242B
		public byte m_bSuccess; // 0x00
		public SteamLeaderboard_t m_hSteamLeaderboard; // 0x08
		public int m_nScore; // 0x10
		public byte m_bScoreChanged; // 0x14
		public int m_nGlobalRankNew; // 0x18
		public int m_nGlobalRankPrevious; // 0x1C
	}

	[CallbackIdentity] // 0x1000AE00-0x1000AE20
	public struct LeaderboardUGCSet_t // TypeDefIndex: 4655
	{
		// Fields
		public const int k_iCallback = 1111; // Metadata: 0x0024243F
		public EResult m_eResult; // 0x00
		public SteamLeaderboard_t m_hSteamLeaderboard; // 0x08
	}
}

public class LeafBehaviour : MonoBehaviour // TypeDefIndex: 5523
{
	// Fields
	public Sprite[] Images; // 0x0C
	public FloatRange SpinSpeed; // 0x10
	public Vector2Range StartVel; // 0x14
	public float AccelRate; // 0x24
	[HideInInspector] // 0x10002030-0x10002050
	public LeafMinigame Parent; // 0x28
	public bool Held; // 0x2C
	private static RandomFill<Sprite> ImageFiller; // 0x00
	[HideInInspector] // 0x10002030-0x10002050
	public Rigidbody2D body; // 0x30

	// Constructors
	public LeafBehaviour(); // 0x101A98D0-0x101A9940
	static LeafBehaviour(); // 0x101A9880-0x101A98D0

	// Methods
	public void Start(); // 0x101A9770-0x101A9880
	public void FixedUpdate(); // 0x101A9700-0x101A9770
}

public class LeafMinigame : Minigame // TypeDefIndex: 5524
{
	// Fields
	public LeafBehaviour LeafPrefab; // 0x28
	public Vector2Range ValidArea; // 0x2C
	public SpriteAnim[] Arrows; // 0x3C
	public AnimationClip[] Inactive; // 0x40
	public AnimationClip[] Active; // 0x44
	public AnimationClip[] Complete; // 0x48
	private Collider2D[] Leaves; // 0x4C
	public AudioClip[] LeaveSounds; // 0x50
	public AudioClip[] SuckSounds; // 0x54
	private Controller myController; // 0x58

	// Constructors
	public LeafMinigame(); // 0x101AA0D0-0x101AA130

	// Methods
	public override void Begin(PlayerTask task); // 0x101A9940-0x101A9AF0
	public void FixedUpdate(); // 0x101A9AF0-0x101A9EE0
	public void LeafDone(LeafBehaviour leaf); // 0x101A9EE0-0x101AA0D0
}

public class LetterTree // TypeDefIndex: 5434
{
	// Fields
	private LetterNode root; // 0x08

	// Nested types
	private enum NodeTypes : byte // TypeDefIndex: 5435
	{
		NonTerm = 0,
		Terminal = 1,
		TerminalStrict = 2,
		TerminalExact = 3,
		TerminalUnbroken = 4
	}

	private class LetterNode // TypeDefIndex: 5436
	{
		// Fields
		public char Letter; // 0x08
		public NodeTypes Terminal; // 0x0A
		public LetterNode[] Children; // 0x0C

		// Constructors
		public LetterNode(char l); // 0x101AA3E0-0x101AA430

		// Methods
		public LetterNode CreateChild(char l); // 0x101AA130-0x101AA230
		public LetterNode FindChild(char l); // 0x101AA230-0x101AA270
		public static int ToIndex(char c); // 0x101AA270-0x101AA3E0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _GetWords_d__9 : IEnumerable<string>, IEnumerator<string> // TypeDefIndex: 5437
	{
		// Fields
		private int __1__state; // 0x08
		private string __2__current; // 0x0C
		private int __l__initialThreadId; // 0x10
		public LetterTree __4__this; // 0x14
		private StringBuilder _b_5__2; // 0x18
		private LetterNode[] __7__wrap2; // 0x1C
		private int __7__wrap3; // 0x20
		private IEnumerator<string> __7__wrap4; // 0x24

		// Properties
		string IEnumerator<System.String>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _GetWords_d__9(int __1__state); // 0x101B7DC0-0x101B7DF0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101B80D0-0x101B8140
		private bool MoveNext(); // 0x101B7DF0-0x101B8000
		private void __m__Finally1(); // 0x101B8140-0x101B8190
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101B8080-0x101B80D0
		[DebuggerHidden] // 0x10002030-0x10002050
		IEnumerator<string> IEnumerable<string>.GetEnumerator(); // 0x101B8000-0x101B8080
		[DebuggerHidden] // 0x10002030-0x10002050
		IEnumerator IEnumerable.GetEnumerator(); // 0x101B8000-0x101B8080
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _GetWords_d__10 : IEnumerable<string>, IEnumerator<string> // TypeDefIndex: 5438
	{
		// Fields
		private int __1__state; // 0x08
		private string __2__current; // 0x0C
		private int __l__initialThreadId; // 0x10
		private LetterNode node; // 0x14
		public LetterNode __3__node; // 0x18
		private StringBuilder b; // 0x1C
		public StringBuilder __3__b; // 0x20
		private int i; // 0x24
		public int __3__i; // 0x28
		public LetterTree __4__this; // 0x2C
		private LetterNode[] __7__wrap1; // 0x30
		private int __7__wrap2; // 0x34
		private IEnumerator<string> __7__wrap3; // 0x38

		// Properties
		string IEnumerator<System.String>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _GetWords_d__10(int __1__state); // 0x101B7DC0-0x101B7DF0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101B7D00-0x101B7D70
		private bool MoveNext(); // 0x101B78A0-0x101B7C10
		private void __m__Finally1(); // 0x101B7D70-0x101B7DC0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101B7CB0-0x101B7D00
		[DebuggerHidden] // 0x10002030-0x10002050
		IEnumerator<string> IEnumerable<string>.GetEnumerator(); // 0x101B7C10-0x101B7CB0
		[DebuggerHidden] // 0x10002030-0x10002050
		IEnumerator IEnumerable.GetEnumerator(); // 0x101B7C10-0x101B7CB0
	}

	// Constructors
	public LetterTree(); // 0x101AA960-0x101AA9F0

	// Methods
	public void Clear(); // 0x101AA500-0x101AA580
	public void AddWord(string word); // 0x101AA430-0x101AA500
	public bool IsFiller(char l); // 0x101AA650-0x101AA670
	public int Search(StringBuilder input, int start); // 0x101AA670-0x101AA700
	public int Search(string inputStr, int start); // 0x101AA700-0x101AA7D0
	private int SubSearchRec(StringBuilder input, int start, LetterNode previous, bool postDupes, bool postBreak, bool exactStart); // 0x101AA7D0-0x101AA960
	[IteratorStateMachine] // 0x1003FB80-0x1003FBD0
	public IEnumerable<string> GetWords(); // 0x101AA580-0x101AA5E0
	[IteratorStateMachine] // 0x1003FC20-0x1003FC70
	private IEnumerable<string> GetWords(StringBuilder b, int i, LetterNode node); // 0x101AA5E0-0x101AA650
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000A6D0-0x1000A6F0
	public struct LicensesUpdated_t // TypeDefIndex: 4638
	{
		// Fields
		public const int k_iCallback = 125; // Metadata: 0x002423FB
	}
}

public class LifeSuppSystemType : ISystemType, IActivatable // TypeDefIndex: 5703
{
	// Fields
	private const float SyncRate = 2f; // Metadata: 0x00243CEA
	private float timer; // 0x08
	public const byte StartCountdown = 128; // Metadata: 0x00243CEE
	public const byte AddUserOp = 64; // Metadata: 0x00243CEF
	public const byte ClearCountdown = 16; // Metadata: 0x00243CF0
	public const float CountdownStopped = 10000f; // Metadata: 0x00243CF1
	public readonly float LifeSuppDuration; // 0x0C
	public const byte ConsoleIdMask = 3; // Metadata: 0x00243CF5
	public const byte RequiredUserCount = 2; // Metadata: 0x00243CF6
	public float Countdown; // 0x10
	private HashSet<int> CompletedConsoles; // 0x14

	// Properties
	public int UserCount { get; } // 0x101AAF10-0x101AAF50 
	public bool IsActive { get; } // 0x101AAEF0-0x101AAF10 

	// Constructors
	public LifeSuppSystemType(float duration); // 0x101AAE80-0x101AAEF0

	// Methods
	public bool GetConsoleComplete(int consoleId); // 0x101AABF0-0x101AAC40
	public void RepairDamage(PlayerControl player, byte opCode); // 0x101AAC40-0x101AAD10
	public bool Detoriorate(float deltaTime); // 0x101AAAA0-0x101AABF0
	public void Serialize(MessageWriter writer, bool initialState); // 0x101AAD10-0x101AAE80
	public void Deserialize(MessageReader reader, bool initialState); // 0x101AA9F0-0x101AAAA0
}

public class LightSource : MonoBehaviour // TypeDefIndex: 5750
{
	// Fields
	public static Dictionary<GameObject, NoShadowBehaviour> NoShadows; // 0x00
	public static Dictionary<GameObject, OneWayShadows> OneWayShadows; // 0x04
	[HideInInspector] // 0x10002030-0x10002050
	private GameObject child; // 0x0C
	[HideInInspector] // 0x10002030-0x10002050
	private Vector2[] requiredDels; // 0x10
	[HideInInspector] // 0x10002030-0x10002050
	private Mesh myMesh; // 0x14
	public int MinRays; // 0x18
	public float LightRadius; // 0x1C
	public Material Material; // 0x20
	[HideInInspector] // 0x10002030-0x10002050
	private List<VertInfo> verts; // 0x24
	[HideInInspector] // 0x10002030-0x10002050
	private int vertCount; // 0x28
	private RaycastHit2D[] buffer; // 0x2C
	private Collider2D[] hits; // 0x30
	private ContactFilter2D filter; // 0x34
	private Vector3[] vec; // 0x50
	private Vector2[] uvs; // 0x54
	private int[] triangles; // 0x58
	public float tol; // 0x5C
	private Vector2 del; // 0x60
	private Vector2 tan; // 0x68
	private Vector2 side; // 0x70
	private List<RaycastHit2D> lightHits; // 0x78

	// Nested types
	private class VertInfo // TypeDefIndex: 5751
	{
		// Fields
		public float Angle; // 0x08
		public Vector3 Position; // 0x0C

		// Constructors
		public VertInfo(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void Complete(float x, float y); // 0x101B9D10-0x101B9DD0
		internal void Complete(Vector2 point); // 0x101B9DD0-0x101B9E90
	}

	private class AngleComparer : IComparer<VertInfo> // TypeDefIndex: 5752
	{
		// Fields
		public static readonly AngleComparer Instance; // 0x00

		// Constructors
		public AngleComparer(); // 0x101A2CD0-0x101A2CE0
		static AngleComparer(); // 0x101A2C80-0x101A2CD0

		// Methods
		public int Compare(VertInfo x, VertInfo y); // 0x101A2C40-0x101A2C80
	}

	private class HitDepthComparer : IComparer<RaycastHit2D> // TypeDefIndex: 5753
	{
		// Fields
		public static readonly HitDepthComparer Instance; // 0x00

		// Constructors
		public HitDepthComparer(); // 0x101A2CD0-0x101A2CE0
		static HitDepthComparer(); // 0x101A2DB0-0x101A2E00

		// Methods
		public int Compare(RaycastHit2D x, RaycastHit2D y); // 0x101A2D70-0x101A2DB0
	}

	// Constructors
	public LightSource(); // 0x101AC450-0x101AC510
	static LightSource(); // 0x101AC3E0-0x101AC450

	// Methods
	private void Start(); // 0x101AB480-0x101AB6C0
	private void Update(); // 0x101AB810-0x101AC3E0
	private void TestBothSides(Vector2 myPos); // 0x101AB6C0-0x101AB810
	private void CreateVert(Vector2 myPos, ref Vector2 del); // 0x101AAF50-0x101AB3D0
	private VertInfo GetEmptyVert(); // 0x101AB3D0-0x101AB480
	private static float length(float x, float y); // 0x101AC510-0x101AC590
	public static float pseudoAngle(float dx, float dy); // 0x101AC590-0x101AC600
}

namespace InnerNet
{
	public enum LimboStates // TypeDefIndex: 5938
	{
		PreSpawn = 0,
		NotLimbo = 1,
		WaitingForHost = 2
	}
}

namespace Discord
{
	public struct Lobby // TypeDefIndex: 4888
	{
		// Fields
		public long Id; // 0x00
		public LobbyType Type; // 0x08
		public long OwnerId; // 0x10
		public string Secret; // 0x18
		public uint Capacity; // 0x1C
		public bool Locked; // 0x20
	}
}

public class LobbyBehaviour : InnerNetObject // TypeDefIndex: 5565
{
	// Fields
	public static LobbyBehaviour Instance; // 0x00
	public AudioClip SpawnSound; // 0x24
	public AnimationClip SpawnInClip; // 0x28
	public Vector2[] SpawnPositions; // 0x2C
	public AudioClip DropShipSound; // 0x30
	public SkeldShipRoom[] AllRooms; // 0x34
	private float timer; // 0x38

	// Constructors
	public LobbyBehaviour(); // 0x101A2FB0-0x101A2FD0

	// Methods
	public void Start(); // 0x101AC8C0-0x101ACA10
	public void FixedUpdate(); // 0x101AC600-0x101AC780
	public override void OnDestroy(); // 0x101AC780-0x101AC8C0
	public override void HandleRpc(byte callId, MessageReader reader); // 0x101A2F90-0x101A2FA0
	public override bool Serialize(MessageWriter writer, bool initialState); // 0x101A1190-0x101A1520
	public override void Deserialize(MessageReader reader, bool initialState); // 0x101A2F90-0x101A2FA0
}

namespace Steamworks
{
	[CallbackIdentity] // 0x10006B10-0x10006B30
	public struct LobbyChatMsg_t // TypeDefIndex: 4560
	{
		// Fields
		public const int k_iCallback = 507; // Metadata: 0x002422C3
		public ulong m_ulSteamIDLobby; // 0x00
		public ulong m_ulSteamIDUser; // 0x08
		public byte m_eChatEntryType; // 0x10
		public uint m_iChatID; // 0x14
	}

	[CallbackIdentity] // 0x10006A10-0x10006A30
	public struct LobbyChatUpdate_t // TypeDefIndex: 4559
	{
		// Fields
		public const int k_iCallback = 506; // Metadata: 0x002422BF
		public ulong m_ulSteamIDLobby; // 0x00
		public ulong m_ulSteamIDUserChanged; // 0x08
		public ulong m_ulSteamIDMakingChange; // 0x10
		public uint m_rgfChatMemberStateChange; // 0x18
	}

	[CallbackIdentity] // 0x10006BF0-0x10006C10
	public struct LobbyCreated_t // TypeDefIndex: 4564
	{
		// Fields
		public const int k_iCallback = 513; // Metadata: 0x002422D3
		public EResult m_eResult; // 0x00
		public ulong m_ulSteamIDLobby; // 0x08
	}

	[CallbackIdentity] // 0x100069F0-0x10006A10
	public struct LobbyDataUpdate_t // TypeDefIndex: 4558
	{
		// Fields
		public const int k_iCallback = 505; // Metadata: 0x002422BB
		public ulong m_ulSteamIDLobby; // 0x00
		public ulong m_ulSteamIDMember; // 0x08
		public byte m_bSuccess; // 0x10
	}

	[CallbackIdentity] // 0x100069D0-0x100069F0
	public struct LobbyEnter_t // TypeDefIndex: 4557
	{
		// Fields
		public const int k_iCallback = 504; // Metadata: 0x002422B7
		public ulong m_ulSteamIDLobby; // 0x00
		public uint m_rgfChatPermissions; // 0x08
		public bool m_bLocked; // 0x0C
		public uint m_EChatRoomEnterResponse; // 0x10
	}

	[CallbackIdentity] // 0x10006B30-0x10006B50
	public struct LobbyGameCreated_t // TypeDefIndex: 4561
	{
		// Fields
		public const int k_iCallback = 509; // Metadata: 0x002422C7
		public ulong m_ulSteamIDLobby; // 0x00
		public ulong m_ulSteamIDGameServer; // 0x08
		public uint m_unIP; // 0x10
		public ushort m_usPort; // 0x14
	}

	[CallbackIdentity] // 0x100069B0-0x100069D0
	public struct LobbyInvite_t // TypeDefIndex: 4556
	{
		// Fields
		public const int k_iCallback = 503; // Metadata: 0x002422B3
		public ulong m_ulSteamIDUser; // 0x00
		public ulong m_ulSteamIDLobby; // 0x08
		public ulong m_ulGameID; // 0x10
	}

	[CallbackIdentity] // 0x10006BD0-0x10006BF0
	public struct LobbyKicked_t // TypeDefIndex: 4563
	{
		// Fields
		public const int k_iCallback = 512; // Metadata: 0x002422CF
		public ulong m_ulSteamIDLobby; // 0x00
		public ulong m_ulSteamIDAdmin; // 0x08
		public byte m_bKickedDueToDisconnect; // 0x10
	}
}

namespace Discord
{
	public class LobbyManager // TypeDefIndex: 4982
	{
		// Fields
		private IntPtr MethodsPtr; // 0x08
		private object MethodsStructure; // 0x0C
		[CompilerGenerated] // 0x10002030-0x10002050
		private LobbyUpdateHandler OnLobbyUpdate; // 0x10
		[CompilerGenerated] // 0x10002030-0x10002050
		private LobbyDeleteHandler OnLobbyDelete; // 0x14
		[CompilerGenerated] // 0x10002030-0x10002050
		private MemberConnectHandler OnMemberConnect; // 0x18
		[CompilerGenerated] // 0x10002030-0x10002050
		private MemberUpdateHandler OnMemberUpdate; // 0x1C
		[CompilerGenerated] // 0x10002030-0x10002050
		private MemberDisconnectHandler OnMemberDisconnect; // 0x20
		[CompilerGenerated] // 0x10002030-0x10002050
		private LobbyMessageHandler OnLobbyMessage; // 0x24
		[CompilerGenerated] // 0x10002030-0x10002050
		private SpeakingHandler OnSpeaking; // 0x28
		[CompilerGenerated] // 0x10002030-0x10002050
		private NetworkMessageHandler OnNetworkMessage; // 0x2C
	
		// Properties
		private FFIMethods Methods { get; } // 0x10775000-0x107750D0 
	
		// Events
		public event LobbyUpdateHandler OnLobbyUpdate {
			add; // 0x10774CF0-0x10774D70
			remove; // 0x107751D0-0x10775250
		}
		public event LobbyDeleteHandler OnLobbyDelete {
			add; // 0x10774BF0-0x10774C70
			remove; // 0x107750D0-0x10775150
		}
		public event MemberConnectHandler OnMemberConnect {
			add; // 0x10774D70-0x10774DF0
			remove; // 0x10775250-0x107752D0
		}
		public event MemberUpdateHandler OnMemberUpdate {
			add; // 0x10774E70-0x10774EF0
			remove; // 0x10775350-0x107753D0
		}
		public event MemberDisconnectHandler OnMemberDisconnect {
			add; // 0x10774DF0-0x10774E70
			remove; // 0x107752D0-0x10775350
		}
		public event LobbyMessageHandler OnLobbyMessage {
			add; // 0x10774C70-0x10774CF0
			remove; // 0x10775150-0x107751D0
		}
		public event SpeakingHandler OnSpeaking {
			add; // 0x10774F70-0x10775000
			remove; // 0x10775450-0x107754D0
		}
		public event NetworkMessageHandler OnNetworkMessage {
			add; // 0x10774EF0-0x10774F70
			remove; // 0x107753D0-0x10775450
		}
	
		// Nested types
		internal struct FFIEvents // TypeDefIndex: 4983
		{
			// Fields
			internal LobbyUpdateHandler OnLobbyUpdate; // 0x00
			internal LobbyDeleteHandler OnLobbyDelete; // 0x04
			internal MemberConnectHandler OnMemberConnect; // 0x08
			internal MemberUpdateHandler OnMemberUpdate; // 0x0C
			internal MemberDisconnectHandler OnMemberDisconnect; // 0x10
			internal LobbyMessageHandler OnLobbyMessage; // 0x14
			internal SpeakingHandler OnSpeaking; // 0x18
			internal NetworkMessageHandler OnNetworkMessage; // 0x1C
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void LobbyUpdateHandler(IntPtr ptr, long lobbyId); // TypeDefIndex: 4984; 0x106D71D0-0x106D7460
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void LobbyDeleteHandler(IntPtr ptr, long lobbyId, uint reason); // TypeDefIndex: 4985; 0x10624E20-0x106250C0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void MemberConnectHandler(IntPtr ptr, long lobbyId, long userId); // TypeDefIndex: 4986; 0x10916A90-0x10916C40
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void MemberUpdateHandler(IntPtr ptr, long lobbyId, long userId); // TypeDefIndex: 4987; 0x10916A90-0x10916C40
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void MemberDisconnectHandler(IntPtr ptr, long lobbyId, long userId); // TypeDefIndex: 4988; 0x10916A90-0x10916C40
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void LobbyMessageHandler(IntPtr ptr, long lobbyId, long userId, IntPtr dataPtr, int dataLen); // TypeDefIndex: 4989; 0x109160E0-0x109163D0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void SpeakingHandler(IntPtr ptr, long lobbyId, long userId, bool speaking); // TypeDefIndex: 4990; 0x1091B020-0x1091B2F0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void NetworkMessageHandler(IntPtr ptr, long lobbyId, long userId, byte channelId, IntPtr dataPtr, int dataLen); // TypeDefIndex: 4991; 0x106245E0-0x106248F0
		}
	
		internal struct FFIMethods // TypeDefIndex: 4992
		{
			// Fields
			internal GetLobbyCreateTransactionMethod GetLobbyCreateTransaction; // 0x00
			internal GetLobbyUpdateTransactionMethod GetLobbyUpdateTransaction; // 0x04
			internal GetMemberUpdateTransactionMethod GetMemberUpdateTransaction; // 0x08
			internal CreateLobbyMethod CreateLobby; // 0x0C
			internal UpdateLobbyMethod UpdateLobby; // 0x10
			internal DeleteLobbyMethod DeleteLobby; // 0x14
			internal ConnectLobbyMethod ConnectLobby; // 0x18
			internal ConnectLobbyWithActivitySecretMethod ConnectLobbyWithActivitySecret; // 0x1C
			internal DisconnectLobbyMethod DisconnectLobby; // 0x20
			internal GetLobbyMethod GetLobby; // 0x24
			internal GetLobbyActivitySecretMethod GetLobbyActivitySecret; // 0x28
			internal GetLobbyMetadataValueMethod GetLobbyMetadataValue; // 0x2C
			internal GetLobbyMetadataKeyMethod GetLobbyMetadataKey; // 0x30
			internal LobbyMetadataCountMethod LobbyMetadataCount; // 0x34
			internal MemberCountMethod MemberCount; // 0x38
			internal GetMemberUserIdMethod GetMemberUserId; // 0x3C
			internal GetMemberUserMethod GetMemberUser; // 0x40
			internal GetMemberMetadataValueMethod GetMemberMetadataValue; // 0x44
			internal GetMemberMetadataKeyMethod GetMemberMetadataKey; // 0x48
			internal MemberMetadataCountMethod MemberMetadataCount; // 0x4C
			internal UpdateMemberMethod UpdateMember; // 0x50
			internal SendLobbyMessageMethod SendLobbyMessage; // 0x54
			internal GetSearchQueryMethod GetSearchQuery; // 0x58
			internal SearchMethod Search; // 0x5C
			internal LobbyCountMethod LobbyCount; // 0x60
			internal GetLobbyIdMethod GetLobbyId; // 0x64
			internal ConnectVoiceMethod ConnectVoice; // 0x68
			internal DisconnectVoiceMethod DisconnectVoice; // 0x6C
			internal ConnectNetworkMethod ConnectNetwork; // 0x70
			internal DisconnectNetworkMethod DisconnectNetwork; // 0x74
			internal FlushNetworkMethod FlushNetwork; // 0x78
			internal OpenNetworkChannelMethod OpenNetworkChannel; // 0x7C
			internal SendNetworkMessageMethod SendNetworkMessage; // 0x80
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetLobbyCreateTransactionMethod(IntPtr methodsPtr, ref IntPtr transaction); // TypeDefIndex: 4993; 0x10623C60-0x10623DE0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetLobbyUpdateTransactionMethod(IntPtr methodsPtr, long lobbyId, ref IntPtr transaction); // TypeDefIndex: 4994; 0x10621840-0x106219E0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetMemberUpdateTransactionMethod(IntPtr methodsPtr, long lobbyId, long userId, ref IntPtr transaction); // TypeDefIndex: 4995; 0x10915580-0x10915740
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void CreateLobbyCallback(IntPtr ptr, Discord.Result result, ref Lobby lobby); // TypeDefIndex: 4996; 0x10913CD0-0x10913E60
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void CreateLobbyMethod(IntPtr methodsPtr, IntPtr transaction, IntPtr callbackData, CreateLobbyCallback callback); // TypeDefIndex: 4997; 0x10624180-0x10624420
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void UpdateLobbyCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 4998; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void UpdateLobbyMethod(IntPtr methodsPtr, long lobbyId, IntPtr transaction, IntPtr callbackData, UpdateLobbyCallback callback); // TypeDefIndex: 4999; 0x10775BF0-0x10775EC0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void DeleteLobbyCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 5000; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void DeleteLobbyMethod(IntPtr methodsPtr, long lobbyId, IntPtr callbackData, DeleteLobbyCallback callback); // TypeDefIndex: 5001; 0x10621500-0x106217C0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void ConnectLobbyCallback(IntPtr ptr, Discord.Result result, ref Lobby lobby); // TypeDefIndex: 5002; 0x10913CD0-0x10913E60
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void ConnectLobbyMethod(IntPtr methodsPtr, long lobbyId, string secret, IntPtr callbackData, ConnectLobbyCallback callback); // TypeDefIndex: 5003; 0x10775BF0-0x10775EC0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void ConnectLobbyWithActivitySecretCallback(IntPtr ptr, Discord.Result result, ref Lobby lobby); // TypeDefIndex: 5004; 0x10913CD0-0x10913E60
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void ConnectLobbyWithActivitySecretMethod(IntPtr methodsPtr, string activitySecret, IntPtr callbackData, ConnectLobbyWithActivitySecretCallback callback); // TypeDefIndex: 5005; 0x10624180-0x10624420
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void DisconnectLobbyCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 5006; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void DisconnectLobbyMethod(IntPtr methodsPtr, long lobbyId, IntPtr callbackData, DisconnectLobbyCallback callback); // TypeDefIndex: 5007; 0x10621500-0x106217C0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetLobbyMethod(IntPtr methodsPtr, long lobbyId, ref Lobby lobby); // TypeDefIndex: 5008; 0x10620E00-0x106210A0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetLobbyActivitySecretMethod(IntPtr methodsPtr, long lobbyId, StringBuilder secret); // TypeDefIndex: 5009; 0x10620E00-0x106210A0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetLobbyMetadataValueMethod(IntPtr methodsPtr, long lobbyId, string key, StringBuilder value); // TypeDefIndex: 5010; 0x10914C70-0x10914F30
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetLobbyMetadataKeyMethod(IntPtr methodsPtr, long lobbyId, int index, StringBuilder key); // TypeDefIndex: 5011; 0x10914C70-0x10914F30
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result LobbyMetadataCountMethod(IntPtr methodsPtr, long lobbyId, ref int count); // TypeDefIndex: 5012; 0x10621840-0x106219E0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result MemberCountMethod(IntPtr methodsPtr, long lobbyId, ref int count); // TypeDefIndex: 5013; 0x10621840-0x106219E0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetMemberUserIdMethod(IntPtr methodsPtr, long lobbyId, int index, ref long userId); // TypeDefIndex: 5014; 0x10914C70-0x10914F30
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetMemberUserMethod(IntPtr methodsPtr, long lobbyId, long userId, ref User user); // TypeDefIndex: 5015; 0x10915880-0x10915B60
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetMemberMetadataValueMethod(IntPtr methodsPtr, long lobbyId, long userId, string key, StringBuilder value); // TypeDefIndex: 5016; 0x10915150-0x10915450
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetMemberMetadataKeyMethod(IntPtr methodsPtr, long lobbyId, long userId, int index, StringBuilder key); // TypeDefIndex: 5017; 0x10915150-0x10915450
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result MemberMetadataCountMethod(IntPtr methodsPtr, long lobbyId, long userId, ref int count); // TypeDefIndex: 5018; 0x10915580-0x10915740
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void UpdateMemberCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 5019; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void UpdateMemberMethod(IntPtr methodsPtr, long lobbyId, long userId, IntPtr transaction, IntPtr callbackData, UpdateMemberCallback callback); // TypeDefIndex: 5020; 0x106245E0-0x106248F0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void SendLobbyMessageCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 5021; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void SendLobbyMessageMethod(IntPtr methodsPtr, long lobbyId, byte[] data, int dataLen, IntPtr callbackData, SendLobbyMessageCallback callback); // TypeDefIndex: 5022; 0x10775790-0x10775A80
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetSearchQueryMethod(IntPtr methodsPtr, ref IntPtr query); // TypeDefIndex: 5023; 0x10623C60-0x10623DE0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void SearchCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 5024; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void SearchMethod(IntPtr methodsPtr, IntPtr query, IntPtr callbackData, SearchCallback callback); // TypeDefIndex: 5025; 0x10624180-0x10624420
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void LobbyCountMethod(IntPtr methodsPtr, ref int count); // TypeDefIndex: 5026; 0x1018BF80-0x1018C200
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetLobbyIdMethod(IntPtr methodsPtr, int index, ref long lobbyId); // TypeDefIndex: 5027; 0x104A0350-0x104A05E0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void ConnectVoiceCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 5028; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void ConnectVoiceMethod(IntPtr methodsPtr, long lobbyId, IntPtr callbackData, ConnectVoiceCallback callback); // TypeDefIndex: 5029; 0x10621500-0x106217C0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void DisconnectVoiceCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 5030; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void DisconnectVoiceMethod(IntPtr methodsPtr, long lobbyId, IntPtr callbackData, DisconnectVoiceCallback callback); // TypeDefIndex: 5031; 0x10621500-0x106217C0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result ConnectNetworkMethod(IntPtr methodsPtr, long lobbyId); // TypeDefIndex: 5032; 0x10914060-0x109141F0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result DisconnectNetworkMethod(IntPtr methodsPtr, long lobbyId); // TypeDefIndex: 5033; 0x10914060-0x109141F0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result FlushNetworkMethod(IntPtr methodsPtr); // TypeDefIndex: 5034; 0x10770520-0x10770680
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result OpenNetworkChannelMethod(IntPtr methodsPtr, long lobbyId, byte channelId, bool reliable); // TypeDefIndex: 5035; 0x10914C70-0x10914F30
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result SendNetworkMessageMethod(IntPtr methodsPtr, long lobbyId, long userId, byte channelId, byte[] data, int dataLen); // TypeDefIndex: 5036; 0x1091A5E0-0x1091A8F0
		}
	
		public delegate void CreateLobbyHandler(Discord.Result result, ref Lobby lobby); // TypeDefIndex: 5037; 0x101D4290-0x101D4410
	
		public delegate void UpdateLobbyHandler(Discord.Result result); // TypeDefIndex: 5038; 0x1061F960-0x1061FAD0
	
		public delegate void DeleteLobbyHandler(Discord.Result result); // TypeDefIndex: 5039; 0x1061F960-0x1061FAD0
	
		public delegate void ConnectLobbyHandler(Discord.Result result, ref Lobby lobby); // TypeDefIndex: 5040; 0x101D4290-0x101D4410
	
		public delegate void ConnectLobbyWithActivitySecretHandler(Discord.Result result, ref Lobby lobby); // TypeDefIndex: 5041; 0x101D4290-0x101D4410
	
		public delegate void DisconnectLobbyHandler(Discord.Result result); // TypeDefIndex: 5042; 0x1061F960-0x1061FAD0
	
		public delegate void UpdateMemberHandler(Discord.Result result); // TypeDefIndex: 5043; 0x1061F960-0x1061FAD0
	
		public delegate void SendLobbyMessageHandler(Discord.Result result); // TypeDefIndex: 5044; 0x1061F960-0x1061FAD0
	
		public delegate void SearchHandler(Discord.Result result); // TypeDefIndex: 5045; 0x1061F960-0x1061FAD0
	
		public delegate void ConnectVoiceHandler(Discord.Result result); // TypeDefIndex: 5046; 0x1061F960-0x1061FAD0
	
		public delegate void DisconnectVoiceHandler(Discord.Result result); // TypeDefIndex: 5047; 0x1061F960-0x1061FAD0
	
		public delegate void LobbyUpdateHandler(long lobbyId); // TypeDefIndex: 5048; 0x10533620-0x105338C0
	
		public delegate void LobbyDeleteHandler(long lobbyId, uint reason); // TypeDefIndex: 5049; 0x10873F40-0x108741F0
	
		public delegate void MemberConnectHandler(long lobbyId, long userId); // TypeDefIndex: 5050; 0x10916C40-0x10916DE0
	
		public delegate void MemberUpdateHandler(long lobbyId, long userId); // TypeDefIndex: 5051; 0x10916C40-0x10916DE0
	
		public delegate void MemberDisconnectHandler(long lobbyId, long userId); // TypeDefIndex: 5052; 0x10916C40-0x10916DE0
	
		public delegate void LobbyMessageHandler(long lobbyId, long userId, byte[] data); // TypeDefIndex: 5053; 0x109163D0-0x109166A0
	
		public delegate void SpeakingHandler(long lobbyId, long userId, bool speaking); // TypeDefIndex: 5054; 0x109163D0-0x109166A0
	
		public delegate void NetworkMessageHandler(long lobbyId, long userId, byte channelId, byte[] data); // TypeDefIndex: 5055; 0x109181A0-0x10918490
	
		// Constructors
		internal LobbyManager(IntPtr ptr, IntPtr eventsPtr, ref FFIEvents events); // 0x107749E0-0x10774BF0
	
		// Methods
		private void InitEvents(IntPtr eventsPtr, ref FFIEvents events); // 0x10773770-0x10773900
		public LobbyTransaction GetLobbyCreateTransaction(); // 0x10772B70-0x10772C20
		public LobbyTransaction GetLobbyUpdateTransaction(long lobbyId); // 0x10772E90-0x10772F50
		public LobbyMemberTransaction GetMemberUpdateTransaction(long lobbyId, long userId); // 0x107731F0-0x107732B0
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void CreateLobbyCallbackImpl(IntPtr ptr, Discord.Result result, ref Lobby lobby); // 0x10772440-0x107724D0
		public void CreateLobby(LobbyTransaction transaction, CreateLobbyHandler callback); // 0x107724D0-0x10772580
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void UpdateLobbyCallbackImpl(IntPtr ptr, Discord.Result result); // 0x10774740-0x107747D0
		public void UpdateLobby(long lobbyId, LobbyTransaction transaction, UpdateLobbyHandler callback); // 0x107747D0-0x10774890
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void DeleteLobbyCallbackImpl(IntPtr ptr, Discord.Result result); // 0x10772580-0x10772610
		public void DeleteLobby(long lobbyId, DeleteLobbyHandler callback); // 0x10772610-0x107726C0
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void ConnectLobbyCallbackImpl(IntPtr ptr, Discord.Result result, ref Lobby lobby); // 0x10771FC0-0x10772050
		public void ConnectLobby(long lobbyId, string secret, ConnectLobbyHandler callback); // 0x10772190-0x10772250
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void ConnectLobbyWithActivitySecretCallbackImpl(IntPtr ptr, Discord.Result result, ref Lobby lobby); // 0x10772050-0x107720E0
		public void ConnectLobbyWithActivitySecret(string activitySecret, ConnectLobbyWithActivitySecretHandler callback); // 0x107720E0-0x10772190
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void DisconnectLobbyCallbackImpl(IntPtr ptr, Discord.Result result); // 0x107726C0-0x10772750
		public void DisconnectLobby(long lobbyId, DisconnectLobbyHandler callback); // 0x10772750-0x10772800
		public Lobby GetLobby(long lobbyId); // 0x10772F50-0x10773030
		public string GetLobbyActivitySecret(long lobbyId); // 0x10772A90-0x10772B70
		public string GetLobbyMetadataValue(long lobbyId, string key); // 0x10772DB0-0x10772E90
		public string GetLobbyMetadataKey(long lobbyId, int index); // 0x10772CD0-0x10772DB0
		public int LobbyMetadataCount(long lobbyId); // 0x10773960-0x10773A10
		public int MemberCount(long lobbyId); // 0x10773A10-0x10773AC0
		public long GetMemberUserId(long lobbyId, int index); // 0x107732B0-0x10773370
		public User GetMemberUser(long lobbyId, long userId); // 0x10773370-0x10773440
		public string GetMemberMetadataValue(long lobbyId, long userId, string key); // 0x10773110-0x107731F0
		public string GetMemberMetadataKey(long lobbyId, long userId, int index); // 0x10773030-0x10773110
		public int MemberMetadataCount(long lobbyId, long userId); // 0x10773AC0-0x10773B80
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void UpdateMemberCallbackImpl(IntPtr ptr, Discord.Result result); // 0x10774890-0x10774920
		public void UpdateMember(long lobbyId, long userId, LobbyMemberTransaction transaction, UpdateMemberHandler callback); // 0x10774920-0x107749E0
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void SendLobbyMessageCallbackImpl(IntPtr ptr, Discord.Result result); // 0x10774430-0x107744C0
		public void SendLobbyMessage(long lobbyId, byte[] data, SendLobbyMessageHandler callback); // 0x107745B0-0x10774680
		public LobbySearchQuery GetSearchQuery(); // 0x107736C0-0x10773770
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void SearchCallbackImpl(IntPtr ptr, Discord.Result result); // 0x107742F0-0x10774380
		public void Search(LobbySearchQuery query, SearchHandler callback); // 0x10774380-0x10774430
		public int LobbyCount(); // 0x10773900-0x10773960
		public long GetLobbyId(int index); // 0x10772C20-0x10772CD0
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void ConnectVoiceCallbackImpl(IntPtr ptr, Discord.Result result); // 0x10772300-0x10772390
		public void ConnectVoice(long lobbyId, ConnectVoiceHandler callback); // 0x10772390-0x10772440
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void DisconnectVoiceCallbackImpl(IntPtr ptr, Discord.Result result); // 0x107728B0-0x10772940
		public void DisconnectVoice(long lobbyId, DisconnectVoiceHandler callback); // 0x10772940-0x107729F0
		public void ConnectNetwork(long lobbyId); // 0x10772250-0x10772300
		public void DisconnectNetwork(long lobbyId); // 0x10772800-0x107728B0
		public void FlushNetwork(); // 0x107729F0-0x10772A90
		public void OpenNetworkChannel(long lobbyId, byte channelId, bool reliable); // 0x10774240-0x107742F0
		public void SendNetworkMessage(long lobbyId, long userId, byte channelId, byte[] data); // 0x10774680-0x10774740
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OnLobbyUpdateImpl(IntPtr ptr, long lobbyId); // 0x10773D60-0x10773E20
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OnLobbyDeleteImpl(IntPtr ptr, long lobbyId, uint reason); // 0x10773B80-0x10773C40
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OnMemberConnectImpl(IntPtr ptr, long lobbyId, long userId); // 0x10773E20-0x10773EE0
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OnMemberUpdateImpl(IntPtr ptr, long lobbyId, long userId); // 0x10773FA0-0x10774060
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OnMemberDisconnectImpl(IntPtr ptr, long lobbyId, long userId); // 0x10773EE0-0x10773FA0
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OnLobbyMessageImpl(IntPtr ptr, long lobbyId, long userId, IntPtr dataPtr, int dataLen); // 0x10773C40-0x10773D60
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OnSpeakingImpl(IntPtr ptr, long lobbyId, long userId, bool speaking); // 0x10774180-0x10774240
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OnNetworkMessageImpl(IntPtr ptr, long lobbyId, long userId, byte channelId, IntPtr dataPtr, int dataLen); // 0x10774060-0x10774180
		public IEnumerable<User> GetMemberUsers(long lobbyID); // 0x10773440-0x107736C0
		public void SendLobbyMessage(long lobbyID, string data, SendLobbyMessageHandler handler); // 0x107744C0-0x107745B0
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x10006B80-0x10006BA0
	public struct LobbyMatchList_t // TypeDefIndex: 4562
	{
		// Fields
		public const int k_iCallback = 510; // Metadata: 0x002422CB
		public uint m_nLobbiesMatching; // 0x00
	}
}

namespace Discord
{
	public struct LobbyMemberTransaction // TypeDefIndex: 4903
	{
		// Fields
		internal IntPtr MethodsPtr; // 0x00
		internal object MethodsStructure; // 0x04
	
		// Properties
		private FFIMethods Methods { get; } // 0x100DAFD0-0x100DB060 
	
		// Nested types
		internal struct FFIMethods // TypeDefIndex: 4904
		{
			// Fields
			internal SetMetadataMethod SetMetadata; // 0x00
			internal DeleteMetadataMethod DeleteMetadata; // 0x04
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result SetMetadataMethod(IntPtr methodsPtr, string key, string value); // TypeDefIndex: 4905; 0x1091AC10-0x1091ADA0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result DeleteMetadataMethod(IntPtr methodsPtr, string key); // TypeDefIndex: 4906; 0x10623C60-0x10623DE0
		}
	
		// Methods
		public void SetMetadata(string key, string value); // 0x100DAF30-0x100DAFD0
		public void DeleteMetadata(string key); // 0x100DAE90-0x100DAF30
	}

	public enum LobbySearchCast // TypeDefIndex: 4871
	{
		String = 1,
		Number = 2
	}

	public enum LobbySearchComparison // TypeDefIndex: 4870
	{
		LessThanOrEqual = -2,
		LessThan = -1,
		Equal = 0,
		GreaterThan = 1,
		GreaterThanOrEqual = 2,
		NotEqual = 3
	}

	public enum LobbySearchDistance // TypeDefIndex: 4872
	{
		Local = 0,
		Default = 1,
		Extended = 2,
		Global = 3
	}

	public struct LobbySearchQuery // TypeDefIndex: 4907
	{
		// Fields
		internal IntPtr MethodsPtr; // 0x00
		internal object MethodsStructure; // 0x04
	
		// Properties
		private FFIMethods Methods { get; } // 0x100DB320-0x100DB3D0 
	
		// Nested types
		internal struct FFIMethods // TypeDefIndex: 4908
		{
			// Fields
			internal FilterMethod Filter; // 0x00
			internal SortMethod Sort; // 0x04
			internal LimitMethod Limit; // 0x08
			internal DistanceMethod Distance; // 0x0C
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result FilterMethod(IntPtr methodsPtr, string key, LobbySearchComparison comparison, LobbySearchCast cast, string value); // TypeDefIndex: 4909; 0x10624980-0x10624C40
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result SortMethod(IntPtr methodsPtr, string key, LobbySearchCast cast, string value); // TypeDefIndex: 4910; 0x10629070-0x10629310
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result LimitMethod(IntPtr methodsPtr, uint limit); // TypeDefIndex: 4911; 0x10623C60-0x10623DE0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result DistanceMethod(IntPtr methodsPtr, LobbySearchDistance distance); // TypeDefIndex: 4912; 0x10623C60-0x10623DE0
		}
	
		// Methods
		public void Filter(string key, LobbySearchComparison comparison, LobbySearchCast cast, string value); // 0x100DB110-0x100DB1C0
		public void Sort(string key, LobbySearchCast cast, string value); // 0x100DB270-0x100DB320
		public void Limit(uint limit); // 0x100DB1C0-0x100DB270
		public void Distance(LobbySearchDistance distance); // 0x100DB060-0x100DB110
	}

	public struct LobbyTransaction // TypeDefIndex: 4895
	{
		// Fields
		internal IntPtr MethodsPtr; // 0x00
		internal object MethodsStructure; // 0x04
	
		// Properties
		private FFIMethods Methods { get; } // 0x100DB810-0x100DC640 
	
		// Nested types
		internal struct FFIMethods // TypeDefIndex: 4896
		{
			// Fields
			internal SetTypeMethod SetType; // 0x00
			internal SetOwnerMethod SetOwner; // 0x04
			internal SetCapacityMethod SetCapacity; // 0x08
			internal SetMetadataMethod SetMetadata; // 0x0C
			internal DeleteMetadataMethod DeleteMetadata; // 0x10
			internal SetLockedMethod SetLocked; // 0x14
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result SetTypeMethod(IntPtr methodsPtr, LobbyType type); // TypeDefIndex: 4897; 0x10623C60-0x10623DE0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result SetOwnerMethod(IntPtr methodsPtr, long ownerId); // TypeDefIndex: 4898; 0x10914060-0x109141F0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result SetCapacityMethod(IntPtr methodsPtr, uint capacity); // TypeDefIndex: 4899; 0x10623C60-0x10623DE0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result SetMetadataMethod(IntPtr methodsPtr, string key, string value); // TypeDefIndex: 4900; 0x1091AC10-0x1091ADA0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result DeleteMetadataMethod(IntPtr methodsPtr, string key); // TypeDefIndex: 4901; 0x10623C60-0x10623DE0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result SetLockedMethod(IntPtr methodsPtr, bool locked); // TypeDefIndex: 4902; 0x1061FB40-0x1061FDD0
		}
	
		// Methods
		public void SetType(LobbyType type); // 0x100DB760-0x100DB810
		public void SetOwner(long ownerId); // 0x100DB6A0-0x100DB760
		public void SetCapacity(uint capacity); // 0x100DB480-0x100DB530
		public void SetMetadata(string key, string value); // 0x100DB5E0-0x100DB6A0
		public void DeleteMetadata(string key); // 0x100DB3D0-0x100DB480
		public void SetLocked(bool locked); // 0x100DB530-0x100DB5E0
	}

	public enum LobbyType // TypeDefIndex: 4869
	{
		Private = 1,
		Public = 2
	}
}

internal sealed class Locale // TypeDefIndex: 2
{
	// Methods
	public static string GetText(string msg); // 0x1018AFD0-0x1018AFE0
	public static string GetText(string fmt, params /* 0x10002030-0x10002050 */ object[] args); // 0x104C4AA0-0x104C4AB0
}

internal sealed class Locale // TypeDefIndex: 1665
{
	// Methods
	public static string GetText(string msg); // 0x1018AFD0-0x1018AFE0
}

public class LogEntryBubble : PoolableBehavior // TypeDefIndex: 5355
{
	// Fields
	public SpriteRenderer HeadImage; // 0x10
	public SpriteRenderer Background; // 0x14
	public TextRenderer Text; // 0x18

	// Constructors
	public LogEntryBubble(); // 0x101ACA10-0x101ACA20
}

namespace MS.Internal.Xml.XPath
{
	internal sealed class LogicalExpr : ValueQuery // TypeDefIndex: 1775
	{
		// Fields
		private Operator.Op op; // 0x0C
		private Query opnd1; // 0x10
		private Query opnd2; // 0x14
		private static readonly cmpXslt[][] CompXsltE; // 0x00
		private static readonly cmpXslt[][] CompXsltO; // 0x04
	
		// Properties
		public override XPathResultType StaticType { get; } // 0x102EC630-0x102EC640 
	
		// Nested types
		private delegate bool cmpXslt(Operator.Op op, object val1, object val2); // TypeDefIndex: 1776; 0x106CEA90-0x106CED20
	
		private struct NodeSet // TypeDefIndex: 1777
		{
			// Fields
			private Query opnd; // 0x00
			private XPathNavigator current; // 0x04
	
			// Properties
			public string Value { get; } // 0x100D0250-0x100D02A0 
	
			// Constructors
			public NodeSet(object opnd); // 0x100D0240-0x100D0250
	
			// Methods
			public bool MoveNext(); // 0x100D01D0-0x100D0210
			public void Reset(); // 0x100D0210-0x100D0240
		}
	
		// Constructors
		public LogicalExpr(Operator.Op op, Query opnd1, Query opnd2); // 0x106BF5E0-0x106BF610
		private LogicalExpr(LogicalExpr other); // 0x106BF590-0x106BF5E0
		static LogicalExpr(); // 0x106BE690-0x106BF590
	
		// Methods
		public override void SetXsltContext(XsltContext context); // 0x106BE640-0x106BE690
		public override object Evaluate(XPathNodeIterator nodeIterator); // 0x106BE340-0x106BE590
		private static bool cmpQueryQueryE(Operator.Op op, object val1, object val2); // 0x106C01A0-0x106C02C0
		private static bool cmpQueryQueryO(Operator.Op op, object val1, object val2); // 0x106C02C0-0x106C0530
		private static bool cmpQueryNumber(Operator.Op op, object val1, object val2); // 0x106C0030-0x106C01A0
		private static bool cmpQueryStringE(Operator.Op op, object val1, object val2); // 0x106C0530-0x106C0630
		private static bool cmpQueryStringO(Operator.Op op, object val1, object val2); // 0x106C0630-0x106C07D0
		private static bool cmpRtfQueryE(Operator.Op op, object val1, object val2); // 0x106C0AB0-0x106C0BB0
		private static bool cmpRtfQueryO(Operator.Op op, object val1, object val2); // 0x106C0BB0-0x106C0D50
		private static bool cmpQueryBoolE(Operator.Op op, object val1, object val2); // 0x106BFE20-0x106BFEF0
		private static bool cmpQueryBoolO(Operator.Op op, object val1, object val2); // 0x106BFEF0-0x106C0030
		private static bool cmpBoolBoolE(Operator.Op op, bool n1, bool n2); // 0x106BF610-0x106BF630
		private static bool cmpBoolBoolE(Operator.Op op, object val1, object val2); // 0x106BF630-0x106BF6E0
		private static bool cmpBoolBoolO(Operator.Op op, object val1, object val2); // 0x106BF6E0-0x106BF810
		private static bool cmpBoolNumberE(Operator.Op op, object val1, object val2); // 0x106BF810-0x106BF8E0
		private static bool cmpBoolNumberO(Operator.Op op, object val1, object val2); // 0x106BF8E0-0x106BFA10
		private static bool cmpBoolStringE(Operator.Op op, object val1, object val2); // 0x106BFA10-0x106BFAC0
		private static bool cmpRtfBoolE(Operator.Op op, object val1, object val2); // 0x106C07D0-0x106C0870
		private static bool cmpBoolStringO(Operator.Op op, object val1, object val2); // 0x106BFAC0-0x106BFC30
		private static bool cmpRtfBoolO(Operator.Op op, object val1, object val2); // 0x106C0870-0x106C09B0
		private static bool cmpNumberNumber(Operator.Op op, double n1, double n2); // 0x106BFD80-0x106BFE20
		private static bool cmpNumberNumberO(Operator.Op op, double n1, double n2); // 0x106BFC30-0x106BFCA0
		private static bool cmpNumberNumber(Operator.Op op, object val1, object val2); // 0x106BFCA0-0x106BFD80
		private static bool cmpStringNumber(Operator.Op op, object val1, object val2); // 0x106C1140-0x106C1260
		private static bool cmpRtfNumber(Operator.Op op, object val1, object val2); // 0x106C09B0-0x106C0AB0
		private static bool cmpStringStringE(Operator.Op op, string n1, string n2); // 0x106C1260-0x106C1280
		private static bool cmpStringStringE(Operator.Op op, object val1, object val2); // 0x106C1280-0x106C1320
		private static bool cmpRtfStringE(Operator.Op op, object val1, object val2); // 0x106C0F30-0x106C0FC0
		private static bool cmpRtfRtfE(Operator.Op op, object val1, object val2); // 0x106C0D50-0x106C0DD0
		private static bool cmpStringStringO(Operator.Op op, object val1, object val2); // 0x106C1320-0x106C14A0
		private static bool cmpRtfStringO(Operator.Op op, object val1, object val2); // 0x106C0FC0-0x106C1140
		private static bool cmpRtfRtfO(Operator.Op op, object val1, object val2); // 0x106C0DD0-0x106C0F30
		public override XPathNodeIterator Clone(); // 0x106BE2C0-0x106BE340
		private static string Rtf(object o); // 0x106BE590-0x106BE640
	}
}

namespace Discord
{
	public enum LogLevel // TypeDefIndex: 4860
	{
		Error = 1,
		Warn = 2,
		Info = 3,
		Debug = 4
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000BFA0-0x1000BFC0
	public struct LowBatteryPower_t // TypeDefIndex: 4658
	{
		// Fields
		public const int k_iCallback = 702; // Metadata: 0x0024244B
		public byte m_nMinutesBatteryLeft; // 0x00
	}
}

public class MainMenuManager : MonoBehaviour // TypeDefIndex: 5532
{
	// Fields
	public AdDataCollectScreen AdsPolicy; // 0x0C
	public AnnouncementPopUp Announcement; // 0x10

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _RunStartUp_d__3 : IEnumerator<object> // TypeDefIndex: 5533
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public MainMenuManager __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _RunStartUp_d__3(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101B8640-0x101B8910
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101B8910-0x101B8960
	}

	// Constructors
	public MainMenuManager(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Start(); // 0x101ACBD0-0x101ACCC0
	[IteratorStateMachine] // 0x1004A400-0x1004A450
	private IEnumerator RunStartUp(); // 0x101ACB80-0x101ACBD0
}

namespace Steamworks
{
	[Serializable]
	public struct ManifestId_t : IEquatable<ManifestId_t>, IComparable<ManifestId_t> // TypeDefIndex: 4822
	{
		// Fields
		public static readonly ManifestId_t Invalid; // 0x00
		public ulong m_ManifestId; // 0x00
	
		// Constructors
		public ManifestId_t(ulong value); // 0x10073670-0x10073690
		static ManifestId_t(); // 0x101D4D10-0x101D4D60
	
		// Methods
		public override string ToString(); // 0x10073650-0x10073670
		public override bool Equals(object other); // 0x10092570-0x10092A00
		public override int GetHashCode(); // 0x10073630-0x10073650
		public static bool operator ==(ManifestId_t x, ManifestId_t y); // 0x10187800-0x10187820
		public static bool operator !=(ManifestId_t x, ManifestId_t y); // 0x101D4D60-0x101D4DC0
		public static explicit operator ManifestId_t(ulong value); // 0x10187820-0x10187830
		public static explicit operator ulong(ManifestId_t that); // 0x10187820-0x10187830
		public bool Equals(ManifestId_t other); // 0x10073610-0x10073630
		public int CompareTo(ManifestId_t other); // 0x10073550-0x10073570
	}
}

public class ManualDoor : SomeKindaDoor // TypeDefIndex: 5766
{
	// Fields
	public bool Opening; // 0x0C
	public BoxCollider2D myCollider; // 0x10
	public SpriteRenderer image; // 0x14
	private float size; // 0x18
	public float OpenDuration; // 0x1C
	private float openTimer; // 0x20
	public AudioClip OpenSound; // 0x24
	public AudioClip CloseSound; // 0x28

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoCloseDoorway_d__12 : IEnumerator<object> // TypeDefIndex: 5767
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public ManualDoor __4__this; // 0x10
		public bool isHort; // 0x14
		private Vector2 _s_5__2; // 0x18
		private float _i_5__3; // 0x20

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoCloseDoorway_d__12(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101B5B70-0x101B5DF0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101B5DF0-0x101B5E40
	}

	// Constructors
	public ManualDoor(); // 0x101AD350-0x101AD370

	// Methods
	private void Awake(); // 0x101ACCC0-0x101ACD30
	private void Update(); // 0x101AD1F0-0x101AD350
	public override void SetDoorway(bool open); // 0x101AD010-0x101AD1F0
	private void DoorDynamics(AudioSource source, float dt); // 0x101ACDD0-0x101ACFE0
	[IteratorStateMachine] // 0x1001B480-0x1001B4D0
	private IEnumerator CoCloseDoorway(bool isHort); // 0x101ACD30-0x101ACD90
	public virtual void Serialize(MessageWriter writer); // 0x101ACFE0-0x101AD010
	public virtual void Deserialize(MessageReader reader); // 0x101ACD90-0x101ACDD0
}

public class MapBehaviour : MonoBehaviour // TypeDefIndex: 5427
{
	// Fields
	public static MapBehaviour Instance; // 0x00
	public AlphaPulse ColorControl; // 0x0C
	public SpriteRenderer HerePoint; // 0x10
	public MapCountOverlay countOverlay; // 0x14
	public InfectedOverlay infectedOverlay; // 0x18
	public MapTaskOverlay taskOverlay; // 0x1C

	// Properties
	public bool IsOpen { get; } // 0x101ADC90-0x101ADCA0 
	public bool IsOpenStopped { get; } // 0x101ADC50-0x101ADC90 

	// Constructors
	public MapBehaviour(); // 0x101A68C0-0x101A68D0

	// Methods
	private void Awake(); // 0x101AD370-0x101AD3A0
	private void GenericShow(); // 0x101AD670-0x101AD8C0
	public void ShowInfectedMap(); // 0x101AD960-0x101ADAE0
	public void ShowNormalMap(); // 0x101ADAE0-0x101ADC50
	public void ShowCountOverlay(); // 0x101AD8C0-0x101AD960
	public void FixedUpdate(); // 0x101AD480-0x101AD670
	public void Close(); // 0x101AD3A0-0x101AD480
}

[CreateAssetMenu] // 0x10002030-0x10002050
public class MapBuyable : ScriptableObject, IBuyable, ISteamBuyable // TypeDefIndex: 5344
{
	// Fields
	public string StoreName; // 0x0C
	[Multiline] // 0x10028850-0x10028870
	public string SubText; // 0x10
	public string productId; // 0x14
	public uint SteamId; // 0x18
	public Sprite StoreImage; // 0x1C

	// Properties
	public string ProdId { get; } // 0x101ADCB0-0x101ADCC0 
	public string SteamPrice { get; } // 0x101ADCD0-0x101ADD00 
	public uint SteamAppId { get; } // 0x101ADCC0-0x101ADCD0 

	// Constructors
	public MapBuyable(); // 0x101ADCA0-0x101ADCB0
}

public class MapConsole : MonoBehaviour, IUsable // TypeDefIndex: 5781
{
	// Fields
	public Sprite useIcon; // 0x0C
	public float usableDistance; // 0x10
	public SpriteRenderer Image; // 0x14

	// Properties
	public Sprite UseIcon { get; } // 0x101AE200-0x101AE210 
	public float UsableDistance { get; } // 0x101AE1F0-0x101AE200 
	public float PercentCool { get; } // 0x101AE1E0-0x101AE1F0 

	// Nested types
	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5782
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Action<MapBehaviour> __9__11_0; // 0x04

		// Constructors
		static __c(); // 0x101B9430-0x101B9480
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _Use_b__11_0(MapBehaviour m); // 0x101B8C50-0x101B8D00
	}

	// Constructors
	public MapConsole(); // 0x101AE1C0-0x101AE1E0

	// Methods
	public void SetOutline(bool on, bool mainTarget); // 0x101ADE30-0x101ADF70
	public float CanUse(GameData.PlayerInfo pc, out bool canUse, out bool couldUse); // 0x101ADD00-0x101ADE30
	public void Use(); // 0x101ADF70-0x101AE1C0
}

public class MapCountOverlay : MonoBehaviour // TypeDefIndex: 5428
{
	// Fields
	public AlphaPulse BackgroundColor; // 0x0C
	public TextRenderer SabotageText; // 0x10
	public CounterArea[] CountAreas; // 0x14
	private Collider2D[] buffer; // 0x18
	private ContactFilter2D filter; // 0x1C
	private float timer; // 0x38
	private bool isSab; // 0x3C

	// Constructors
	public MapCountOverlay(); // 0x101AE870-0x101AE8C0

	// Methods
	public void Awake(); // 0x101AE210-0x101AE280
	public void OnEnable(); // 0x101AE2F0-0x101AE3C0
	public void OnDisable(); // 0x101AE280-0x101AE2F0
	public void Update(); // 0x101AE3C0-0x101AE870
}

public class MapRoom : MonoBehaviour // TypeDefIndex: 5429
{
	// Fields
	[CompilerGenerated] // 0x10002030-0x10002050
	private InfectedOverlay _Parent_k__BackingField; // 0x0C
	public SystemTypes room; // 0x10
	public SpriteRenderer door; // 0x14
	public SpriteRenderer special; // 0x18

	// Properties
	public InfectedOverlay Parent { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101AE200-0x101AE210 0x101AEE90-0x101AEEA0

	// Constructors
	public MapRoom(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Start(); // 0x101AEDE0-0x101AEE90
	public void OOBUpdate(); // 0x101AE8C0-0x101AEA60
	internal void SetSpecialActive(float perc); // 0x101AED40-0x101AEDE0
	public void SabotageReactor(); // 0x101AEC80-0x101AECE0
	public void SabotageComms(); // 0x101AEA60-0x101AEAC0
	public void SabotageOxygen(); // 0x101AEC20-0x101AEC80
	public void SabotageLights(); // 0x101AEBC0-0x101AEC20
	public void SabotageSeismic(); // 0x101AECE0-0x101AED40
	public void SabotageDoors(); // 0x101AEAC0-0x101AEBC0
}

public class MapTaskOverlay : MonoBehaviour // TypeDefIndex: 5430
{
	// Fields
	public ObjectPoolBehavior icons; // 0x0C
	private Dictionary<PlayerTask, PooledMapIcon> data; // 0x10

	// Constructors
	public MapTaskOverlay(); // 0x101AF7D0-0x101AF830

	// Methods
	public void Show(); // 0x101AF200-0x101AF4D0
	public void Update(); // 0x101AF4D0-0x101AF7D0
	private static void SetIconLocation(PlayerTask task, PooledMapIcon mapIcon); // 0x101AF030-0x101AF200
	public void Hide(); // 0x101AEEA0-0x101AF030
}

public class MatchMaker : DestroyableSingleton<MatchMaker> // TypeDefIndex: 5576
{
	// Fields
	public TextBox NameText; // 0x10
	public TextBox GameIdText; // 0x14
	private MonoBehaviour Connecter; // 0x18

	// Constructors
	public MatchMaker(); // 0x101AFF20-0x101AFF60

	// Methods
	public void Start(); // 0x101AFE20-0x101AFF20
	public bool Connecting(MonoBehaviour button); // 0x101AFC60-0x101AFD70
	public void NotConnecting(); // 0x101AFD70-0x101AFE20
}

public class MatchMakerGameButton : PoolableBehavior, IConnectButton // TypeDefIndex: 5577
{
	// Fields
	public TextRenderer NameText; // 0x10
	public TextRenderer PlayerCountText; // 0x14
	public TextRenderer ImpostorCountText; // 0x18
	public SpriteRenderer MapIcon; // 0x1C
	public Sprite[] MapIcons; // 0x20
	public SpriteAnim connectIcon; // 0x24
	public AnimationClip connectClip; // 0x28
	public GameListing myListing; // 0x2C

	// Nested types
	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5578
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<bool> __9__9_0; // 0x04

		// Constructors
		static __c(); // 0x101B94D0-0x101B9520
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _ConnectForFindGame_b__9_0(); // 0x101B8A70-0x101B8AC0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _ConnectForFindGame_d__9 : IEnumerator<object> // TypeDefIndex: 5579
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _ConnectForFindGame_d__9(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101B7740-0x101B7850
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101B7850-0x101B78A0
	}

	// Constructors
	public MatchMakerGameButton(); // 0x101ACA10-0x101ACA20

	// Methods
	public void OnClick(); // 0x101AF880-0x101AFA90
	[IteratorStateMachine] // 0x100067B0-0x10006800
	private IEnumerator ConnectForFindGame(); // 0x101AF830-0x101AF880
	public void StartIcon(); // 0x101AFBC0-0x101AFBF0
	public void StopIcon(); // 0x101AFBF0-0x101AFC60
	public void SetGame(GameListing gameListing); // 0x101AFA90-0x101AFBC0
}

namespace InnerNet
{
	public enum MatchMakerModes // TypeDefIndex: 5932
	{
		None = 0,
		Client = 1,
		HostAndClient = 2
	}
}

namespace Steamworks
{
	public struct MatchMakingKeyValuePair_t // TypeDefIndex: 4757
	{
		// Fields
		public string m_szKey; // 0x00
		public string m_szValue; // 0x04
	
		// Constructors
		private MatchMakingKeyValuePair_t(string strKey, string strValue); // 0x10073670-0x10073690
	}
}

namespace GoogleMobileAds.Api.Mediation
{
	public abstract class MediationExtras // TypeDefIndex: 5985
	{
		// Fields
		[CompilerGenerated] // 0x10002030-0x10002050
		private Dictionary<string, string> _Extras_k__BackingField; // 0x08
	
		// Properties
		public Dictionary<string, string> Extras { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ protected set; } // 0x101B4FF0-0x101B5000 0x101D22D0-0x101D22E0
		public abstract string AndroidMediationExtraBuilderClassName { get; }
		public abstract string IOSMediationExtraBuilderClassName { get; }
	
		// Constructors
		public MediationExtras(); // 0x10280C30-0x10280C90
	}
}

public class MedScanMinigame : Minigame // TypeDefIndex: 5599
{
	// Fields
	private static readonly string[] ColorNames; // 0x00
	private static readonly string[] BloodTypes; // 0x04
	public TextRenderer text; // 0x28
	public TextRenderer charStats; // 0x2C
	public HorizontalGauge gauge; // 0x30
	private MedScanSystem medscan; // 0x34
	public float ScanDuration; // 0x38
	public float ScanTimer; // 0x3C
	private string completeString; // 0x40
	public AudioClip ScanSound; // 0x44
	public AudioClip TextSound; // 0x48
	private Coroutine walking; // 0x4C
	private PositionState state; // 0x50

	// Nested types
	private enum PositionState // TypeDefIndex: 5600
	{
		None = 0,
		WalkingToPad = 1,
		WalkingToOffset = 2
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _WalkToOffset_d__15 : IEnumerator<object> // TypeDefIndex: 5601
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public MedScanMinigame __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _WalkToOffset_d__15(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101B9800-0x101B9A80
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101B9A80-0x101B9AD0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _WalkToPad_d__16 : IEnumerator<object> // TypeDefIndex: 5602
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public MedScanMinigame __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _WalkToPad_d__16(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101B9AD0-0x101B9CC0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101B9CC0-0x101B9D10
	}

	// Constructors
	public MedScanMinigame(); // 0x101B1060-0x101B1080
	static MedScanMinigame(); // 0x101B09F0-0x101B1060

	// Methods
	public override void Begin(PlayerTask task); // 0x101AFF60-0x101B0350
	[IteratorStateMachine] // 0x100072C0-0x10007310
	private IEnumerator WalkToOffset(); // 0x101B0950-0x101B09A0
	[IteratorStateMachine] // 0x100084F0-0x10008540
	private IEnumerator WalkToPad(); // 0x101B09A0-0x101B09F0
	private void FixedUpdate(); // 0x101B0480-0x101B0950
	public override void Close(); // 0x101B0350-0x101B0480
}

public class MedScannerBehaviour : MonoBehaviour // TypeDefIndex: 5603
{
	// Fields
	public Vector3 Offset; // 0x0C

	// Properties
	public Vector3 Position { get; } // 0x101B1560-0x101B1630 

	// Constructors
	public MedScannerBehaviour(); // 0x101A68C0-0x101A68D0
}

public class MedScanSystem : ISystemType // TypeDefIndex: 5604
{
	// Fields
	public const byte Request = 128; // Metadata: 0x00243C89
	public const byte Release = 64; // Metadata: 0x00243C8A
	public const byte NumMask = 31; // Metadata: 0x00243C8B
	public const byte NoPlayer = 255; // Metadata: 0x00243C8C
	public List<byte> UsersList; // 0x08
	[CompilerGenerated] // 0x10002030-0x10002050
	private byte _CurrentUser_k__BackingField; // 0x0C

	// Properties
	public byte CurrentUser { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101B1540-0x101B1550 0x101B1550-0x101B1560

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass10_0 // TypeDefIndex: 5605
	{
		// Fields
		public byte playerId; // 0x08

		// Constructors
		public __c__DisplayClass10_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _RepairDamage_b__0(byte v); // 0x101B8F90-0x101B8FB0
	}

	// Constructors
	public MedScanSystem(); // 0x101B14E0-0x101B1540

	// Methods
	public bool Detoriorate(float deltaTime); // 0x101B1120-0x101B12B0
	public void RepairDamage(PlayerControl player, byte data); // 0x101B12B0-0x101B1440
	public void Serialize(MessageWriter writer, bool initialState); // 0x101B1440-0x101B14E0
	public void Deserialize(MessageReader reader, bool initialState); // 0x101B1080-0x101B1120
}

public class MeetingHud : InnerNetObject, IDisconnectHandler // TypeDefIndex: 5439
{
	// Fields
	private const float ResultsTime = 5f; // Metadata: 0x00243B92
	private const float Depth = -100f; // Metadata: 0x00243B96
	public static MeetingHud Instance; // 0x00
	public Transform ButtonParent; // 0x24
	public TextRenderer TitleText; // 0x28
	public Vector3 VoteOrigin; // 0x2C
	public Vector3 VoteButtonOffsets; // 0x38
	private Vector3 CounterOrigin; // 0x44
	private Vector3 CounterOffsets; // 0x50
	public PlayerVoteArea SkipVoteButton; // 0x5C
	private PlayerVoteArea[] playerStates; // 0x60
	public PlayerVoteArea PlayerButtonPrefab; // 0x64
	public SpriteRenderer PlayerVotePrefab; // 0x68
	public Sprite CrackedGlass; // 0x6C
	public SpriteRenderer Glass; // 0x70
	public PassiveButton ProceedButton; // 0x74
	public AudioClip VoteSound; // 0x78
	public AudioClip VoteLockinSound; // 0x7C
	public AudioClip VoteEndingSound; // 0x80
	private VoteStates state; // 0x84
	public SpriteRenderer SkippedVoting; // 0x88
	public SpriteRenderer HostIcon; // 0x8C
	public Sprite KillBackground; // 0x90
	private GameData.PlayerInfo exiledPlayer; // 0x94
	private bool wasTie; // 0x98
	public TextRenderer TimerText; // 0x9C
	public float discussionTimer; // 0xA0
	private byte reporterId; // 0xA4
	private bool amDead; // 0xA5
	private float resultsStartedAt; // 0xA8
	private int lastSecond; // 0xAC

	// Nested types
	public enum VoteStates // TypeDefIndex: 5440
	{
		Discussion = 0,
		NotVoted = 1,
		Voted = 2,
		Results = 3,
		Proceeding = 4
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoIntro_d__41 : IEnumerator<object> // TypeDefIndex: 5441
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public MeetingHud __4__this; // 0x10
		public GameData.PlayerInfo targetPlayer; // 0x14
		public GameData.PlayerInfo reporter; // 0x18
		private Vector3 _temp_5__2; // 0x1C
		private float _timer_5__3; // 0x28

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoIntro_d__41(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102161F0-0x102166C0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102166C0-0x10216710
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoStartCutscene_d__42 : IEnumerator<object> // TypeDefIndex: 5442
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public MeetingHud __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoStartCutscene_d__42(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10216830-0x10216A20
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10216A20-0x10216A70
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass48_0 // TypeDefIndex: 5443
	{
		// Fields
		public PlayerControl pc; // 0x08

		// Constructors
		public __c__DisplayClass48_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _HandleDisconnect_b__0(PlayerVoteArea pv); // 0x10218960-0x10218990
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass51_0 // TypeDefIndex: 5444
	{
		// Fields
		public byte srcPlayerId; // 0x08

		// Constructors
		public __c__DisplayClass51_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _CastVote_b__0(PlayerVoteArea pv); // 0x10218990-0x102189C0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass53_0 // TypeDefIndex: 5445
	{
		// Fields
		public int maxIdx; // 0x08

		// Constructors
		public __c__DisplayClass53_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _CheckForEndVoting_b__2(GameData.PlayerInfo v); // 0x102189C0-0x102189E0
	}

	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5446
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<PlayerVoteArea, bool> __9__53_0; // 0x04
		public static Func<byte, int> __9__53_1; // 0x08
		public static Func<PlayerVoteArea, int> __9__62_0; // 0x0C
		public static Func<PlayerVoteArea, sbyte> __9__62_1; // 0x10
		public static Func<PlayerVoteArea, bool> __9__65_0; // 0x14

		// Constructors
		static __c(); // 0x10218A50-0x10218AA0
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _CheckForEndVoting_b__53_0(PlayerVoteArea ps); // 0x10218440-0x10218460
		internal int _CheckForEndVoting_b__53_1(byte p); // 0x10218460-0x10218470
		internal int _SortButtons_b__62_0(PlayerVoteArea p); // 0x102184F0-0x10218510
		internal sbyte _SortButtons_b__62_1(PlayerVoteArea p); // 0x10218510-0x10218530
		internal bool _GetVotesRemaining_b__65_0(PlayerVoteArea ps); // 0x10218470-0x102184A0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass64_0 // TypeDefIndex: 5447
	{
		// Fields
		public byte playerId; // 0x08

		// Constructors
		public __c__DisplayClass64_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _DidVote_b__0(PlayerVoteArea p); // 0x10218990-0x102189C0
	}

	// Constructors
	public MeetingHud(); // 0x101B4D20-0x101B4EB0

	// Methods
	public void RpcClose(); // 0x101B3660-0x101B36E0
	public void CmdCastVote(byte playerId, sbyte suspectIdx); // 0x101B1F70-0x101B2030
	private void RpcVotingComplete(byte[] states, GameData.PlayerInfo exiled, bool tie); // 0x101B36E0-0x101B37B0
	private void RpcClearVote(int clientId); // 0x101B35D0-0x101B3660
	public override void HandleRpc(byte callId, MessageReader reader); // 0x101B2CC0-0x101B2DD0
	private void Awake(); // 0x101B1630-0x101B1710
	private void Start(); // 0x101B3EF0-0x101B40A0
	private void SetForegroundForDead(); // 0x101B3A80-0x101B3B00
	public void Update(); // 0x101B4290-0x101B4C30
	[IteratorStateMachine] // 0x100402C0-0x10040310
	public IEnumerator CoIntro(GameData.PlayerInfo reporter, GameData.PlayerInfo targetPlayer); // 0x101B2030-0x101B2090
	[IteratorStateMachine] // 0x10040360-0x100403B0
	private IEnumerator CoStartCutscene(); // 0x101B2090-0x101B20F0
	public void ServerStart(byte reporter); // 0x101B3A50-0x101B3A80
	public void Close(); // 0x101B1E60-0x101B1F70
	private void VotingComplete(byte[] states, GameData.PlayerInfo exiled, bool tie); // 0x101B4C30-0x101B4D20
	public bool Select(int suspectStateIdx); // 0x101B37B0-0x101B3960
	public void Confirm(sbyte suspectStateIdx); // 0x101B20F0-0x101B2340
	public void HandleDisconnect(PlayerControl pc, DisconnectReasons reason); // 0x101B28B0-0x101B2B90
	public void HandleDisconnect(); // 0x101A2F90-0x101A2FA0
	private void ForceSkipAll(); // 0x101B26D0-0x101B2760
	public void CastVote(byte srcPlayerId, sbyte suspectPlayerId); // 0x101B17D0-0x101B19C0
	public void ClearVote(); // 0x101B1DC0-0x101B1E60
	private void CheckForEndVoting(); // 0x101B19C0-0x101B1DC0
	private byte[] CalculateVotes(); // 0x101B1710-0x101B17D0
	public override bool Serialize(MessageWriter writer, bool initialState); // 0x101B3960-0x101B3A50
	public override void Deserialize(MessageReader reader, bool initialState); // 0x101B2500-0x101B2640
	public void HandleProceed(); // 0x101B2B90-0x101B2CC0
	private void SetupProceedButton(); // 0x101B3B00-0x101B3C40
	private void PopulateResults(byte[] states); // 0x101B2FA0-0x101B35D0
	private void UpdateButtons(); // 0x101B40A0-0x101B4290
	private void PopulateButtons(byte reporter); // 0x101B2DD0-0x101B2FA0
	private void SortButtons(); // 0x101B3C40-0x101B3EF0
	private PlayerVoteArea CreateButton(GameData.PlayerInfo playerInfo); // 0x101B2340-0x101B2500
	public bool DidVote(byte playerId); // 0x101B2640-0x101B26D0
	public int GetVotesRemaining(); // 0x101B2760-0x101B28B0
}

public class MeetingRoomManager : IDisconnectHandler // TypeDefIndex: 5448
{
	// Fields
	public static readonly MeetingRoomManager Instance; // 0x00
	private PlayerControl reporter; // 0x08
	private GameData.PlayerInfo target; // 0x0C

	// Constructors
	public MeetingRoomManager(); // 0x101A2CD0-0x101A2CE0
	static MeetingRoomManager(); // 0x10201E50-0x10201EA0

	// Methods
	public void AssignSelf(PlayerControl reporter, GameData.PlayerInfo target); // 0x10201C70-0x10201CF0
	public void RemoveSelf(); // 0x10201DF0-0x10201E50
	public void HandleDisconnect(PlayerControl pc, DisconnectReasons reason); // 0x10201CF0-0x10201DF0
	public void HandleDisconnect(); // 0x10201CF0-0x10201DF0
}

public static class MemSafeStringExtensions // TypeDefIndex: 5229
{
	// Extension methods
	public static void SafeSplit(this SubString subString, List<SubString> output, char delim); // 0x10201FC0-0x10201FE0
	public static void SafeSplit(this string source, List<SubString> output, char delim); // 0x10201FE0-0x10202010
	public static void SafeSplit(this string source, List<SubString> output, char delim, int start, int length); // 0x10201EA0-0x10201FC0
}

namespace MS.Internal.Xml.XPath
{
	internal sealed class MergeFilterQuery : CacheOutputQuery // TypeDefIndex: 1778
	{
		// Fields
		private Query child; // 0x14
	
		// Constructors
		public MergeFilterQuery(Query input, Query child); // 0x106C1630-0x106C1650
		private MergeFilterQuery(MergeFilterQuery other); // 0x106C15F0-0x106C1630
	
		// Methods
		public override void SetXsltContext(XsltContext xsltContext); // 0x106C15A0-0x106C15F0
		public override object Evaluate(XPathNodeIterator nodeIterator); // 0x106C1500-0x106C15A0
		public override XPathNodeIterator Clone(); // 0x106C14A0-0x106C1500
	}
}

public class MeshAnimator : MonoBehaviour // TypeDefIndex: 5614
{
	// Fields
	private MeshFilter filter; // 0x0C
	public Mesh[] Frames; // 0x10
	public float frameRate; // 0x14
	private float timer; // 0x18
	private int frameId; // 0x1C

	// Constructors
	public MeshAnimator(); // 0x101A68C0-0x101A68D0

	// Methods
	private void Start(); // 0x10202010-0x10202050
	private void Update(); // 0x10202050-0x102020F0
}

public static class MeshRendererExtensions // TypeDefIndex: 5230
{
	// Extension methods
	public static void SetSprite(this MeshRenderer self, Texture2D spr); // 0x10202170-0x10202240
	public static void SetCutout(this MeshRenderer self, Texture2D txt); // 0x102020F0-0x10202170
}

namespace InnerNet
{
	public static class MessageExtensions // TypeDefIndex: 5943
	{
		// Extension methods
		public static void WriteNetObject(this MessageWriter self, InnerNetObject obj); // 0x101B4EB0-0x101B4F50
		public static T ReadNetObject<T>(this MessageReader self)
			where T : InnerNetObject;
	}
}

namespace Hazel
{
	public class MessageReader : IRecyclable // TypeDefIndex: 4170
	{
		// Fields
		public static readonly Hazel.ObjectPool<MessageReader> ReaderPool; // 0x00
		public byte[] Buffer; // 0x08
		public byte Tag; // 0x0C
		public int Length; // 0x10
		public int Offset; // 0x14
		private int _position; // 0x18
		private int readHead; // 0x1C
	
		// Properties
		public int Position { get; set; } // 0x101ADCC0-0x101ADCD0 0x109C9F60-0x109C9F80
	
		// Nested types
		[Serializable]
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c // TypeDefIndex: 4171
		{
			// Fields
			public static readonly __c __9; // 0x00
	
			// Constructors
			static __c(); // 0x109CBEB0-0x109CBF00
			public __c(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal MessageReader _.cctor_b__33_0(); // 0x109CBC50-0x109CBC90
		}
	
		// Constructors
		public MessageReader(); // 0x101A2CD0-0x101A2CE0
		static MessageReader(); // 0x109C9EC0-0x109C9F60
	
		// Methods
		public static MessageReader GetSized(int minSize); // 0x109C97F0-0x109C9890
		public static MessageReader CopyMessageIntoParent(MessageReader source); // 0x109C9700-0x109C97B0
		public static MessageReader Get(MessageReader source); // 0x109C9890-0x109C9940
		public MessageReader ReadMessage(); // 0x109C9B40-0x109C9C80
		public void Recycle(); // 0x109C9E50-0x109C9EC0
		public bool ReadBoolean(); // 0x109C9940-0x109C9980
		public sbyte ReadSByte(); // 0x109C97B0-0x109C97F0
		public byte ReadByte(); // 0x109C97B0-0x109C97F0
		public ushort ReadUInt16(); // 0x109C9DD0-0x109C9E50
		public uint ReadUInt32(); // 0x109C9A70-0x109C9B40
		public int ReadInt32(); // 0x109C9A70-0x109C9B40
		public float ReadSingle(); // 0x109C9D10-0x109C9D70
		public string ReadString(); // 0x109C9D70-0x109C9DD0
		public byte[] ReadBytesAndSize(); // 0x109C9980-0x109C9A00
		public byte[] ReadBytes(int length); // 0x109C9A00-0x109C9A70
		public int ReadPackedInt32(); // 0x109C9C80-0x109C9D10
		public uint ReadPackedUInt32(); // 0x109C9C80-0x109C9D10
		private byte FastByte(); // 0x109C97B0-0x109C97F0
	}

	public class MessageWriter : IRecyclable // TypeDefIndex: 4175
	{
		// Fields
		public static int BufferSize; // 0x00
		public static readonly Hazel.ObjectPool<MessageWriter> WriterPool; // 0x04
		public byte[] Buffer; // 0x08
		public int Length; // 0x0C
		public int Position; // 0x10
		[CompilerGenerated] // 0x10002030-0x10002050
		private SendOption _SendOption_k__BackingField; // 0x14
		private Stack<int> messageStarts; // 0x18
	
		// Properties
		public SendOption SendOption { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101ED890-0x101ED8A0 0x101ED8A0-0x101ED8B0
	
		// Nested types
		[Serializable]
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c // TypeDefIndex: 4176
		{
			// Fields
			public static readonly __c __9; // 0x00
	
			// Constructors
			static __c(); // 0x109CBE10-0x109CBE60
			public __c(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal MessageWriter _.cctor_b__40_0(); // 0x109CBC90-0x109CBD40
		}
	
		// Constructors
		public MessageWriter(int bufferSize); // 0x109CA890-0x109CA900
		static MessageWriter(); // 0x109CA7E0-0x109CA890
	
		// Methods
		public byte[] ToByteArray(bool includeHeader); // 0x109CA370-0x109CA460
		public static MessageWriter Get(SendOption sendOption = SendOption.None /* Metadata: 0x00240152 */); // 0x109CA160-0x109CA240
		public bool HasBytes(int expected); // 0x109CA240-0x109CA270
		public void StartMessage(byte typeFlag); // 0x109CA2F0-0x109CA370
		public void EndMessage(); // 0x109CA0D0-0x109CA160
		public void CancelMessage(); // 0x109C9F80-0x109C9FE0
		public void Clear(SendOption sendOption); // 0x109C9FE0-0x109CA070
		public void Recycle(); // 0x109CA270-0x109CA2F0
		public void CopyFrom(MessageReader target); // 0x109CA070-0x109CA0D0
		public void Write(bool value); // 0x109CA600-0x109CA650
		public void Write(sbyte value); // 0x109CA600-0x109CA650
		public void Write(byte value); // 0x109CA600-0x109CA650
		public void Write(ushort value); // 0x109CA530-0x109CA5A0
		public void Write(int value); // 0x109CA650-0x109CA720
		public void Write(float value); // 0x109CA5A0-0x109CA600
		public void Write(string value); // 0x109CA760-0x109CA7E0
		public void WriteBytesAndSize(byte[] bytes); // 0x109CA460-0x109CA4B0
		public void Write(byte[] bytes); // 0x109CA720-0x109CA760
		public void WritePacked(int value); // 0x109CA520-0x109CA530
		public void WritePacked(uint value); // 0x109CA4B0-0x109CA520
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000A770-0x1000A790
	public struct MicroTxnAuthorizationResponse_t // TypeDefIndex: 4640
	{
		// Fields
		public const int k_iCallback = 152; // Metadata: 0x00242403
		public uint m_unAppID; // 0x00
		public ulong m_ulOrderID; // 0x08
		public byte m_bAuthorized; // 0x10
	}
}

public abstract class Minigame : MonoBehaviour // TypeDefIndex: 5784
{
	// Fields
	public static Minigame Instance; // 0x00
	public const float Depth = -50f; // Metadata: 0x00243D65
	public TransitionType TransType; // 0x0C
	protected PlayerTask MyTask; // 0x10
	protected NormalPlayerTask MyNormTask; // 0x14
	[CompilerGenerated] // 0x10002030-0x10002050
	private Console _Console_k__BackingField; // 0x18
	protected CloseState amClosing; // 0x1C
	public AudioClip OpenSound; // 0x20
	public AudioClip CloseSound; // 0x24

	// Properties
	public Console Console { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101ADCC0-0x101ADCD0 0x102026F0-0x10202700
	protected int ConsoleId { get; } // 0x10202680-0x102026F0 

	// Nested types
	protected enum CloseState // TypeDefIndex: 5785
	{
		None = 0,
		Waiting = 1,
		Closing = 2
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoStartClose_d__16 : IEnumerator<object> // TypeDefIndex: 5786
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public Minigame __4__this; // 0x10
		public float duration; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoStartClose_d__16(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10216710-0x102167E0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102167E0-0x10216830
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoAnimateOpen_d__20 : IEnumerator<object> // TypeDefIndex: 5787
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public Minigame __4__this; // 0x10
		private float _timer_5__2; // 0x14
		private SpriteRenderer[] _rends_5__3; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoAnimateOpen_d__20(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10215090-0x10215530
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10215530-0x10215580
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoDestroySelf_d__21 : IEnumerator<object> // TypeDefIndex: 5788
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public Minigame __4__this; // 0x10
		private float _timer_5__2; // 0x14
		private SpriteRenderer[] _rends_5__3; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoDestroySelf_d__21(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10215D10-0x10216060
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10216060-0x102160B0
	}

	// Constructors
	protected Minigame(); // 0x101A68C0-0x101A68D0

	// Methods
	public virtual void Begin(PlayerTask task); // 0x10202240-0x102023C0
	[IteratorStateMachine] // 0x1001BF80-0x1001BFD0
	protected IEnumerator CoStartClose(float duration = 0.75f /* Metadata: 0x00243D61 */); // 0x102025B0-0x10202610
	[Obsolete] // 0x1001C080-0x1001C0B0
	public void Close(bool allowMovement); // 0x102023C0-0x102023E0
	public void ForceClose(); // 0x10202610-0x10202680
	public virtual void Close(); // 0x102023E0-0x10202510
	[IteratorStateMachine] // 0x1001C0E0-0x1001C130
	protected virtual IEnumerator CoAnimateOpen(); // 0x10202510-0x10202560
	[IteratorStateMachine] // 0x1001C210-0x1001C260
	protected virtual IEnumerator CoDestroySelf(); // 0x10202560-0x102025B0
}

public class MiraExileController : ExileController // TypeDefIndex: 5277
{
	// Fields
	public Transform BackgroundClouds; // 0x34
	public Transform ForegroundClouds; // 0x38

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Animate_d__2 : IEnumerator<object> // TypeDefIndex: 5278
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public MiraExileController __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Animate_d__2(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10214310-0x102148A0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102148A0-0x102148F0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _HandleText_d__3 : IEnumerator<object> // TypeDefIndex: 5279
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public MiraExileController __4__this; // 0x10
		private float _newDur_5__2; // 0x14
		private float _t_5__3; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _HandleText_d__3(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10216FC0-0x10217200
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10217200-0x10217250
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _PlayerSpin_d__4 : IEnumerator<object> // TypeDefIndex: 5280
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public MiraExileController __4__this; // 0x10
		private Vector2 _top_5__2; // 0x14
		private Vector2 _bottom_5__3; // 0x1C
		private float _t_5__4; // 0x24

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _PlayerSpin_d__4(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10217F40-0x10218270
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10218270-0x102182C0
	}

	// Constructors
	public MiraExileController(); // 0x102027F0-0x10202800

	// Methods
	[IteratorStateMachine] // 0x1002B850-0x1002B8A0
	protected override IEnumerator Animate(); // 0x10202700-0x10202750
	[IteratorStateMachine] // 0x1002B920-0x1002B970
	private IEnumerator HandleText(); // 0x10202750-0x102027A0
	[IteratorStateMachine] // 0x1002BA50-0x1002BAA0
	private IEnumerator PlayerSpin(); // 0x102027A0-0x102027F0
}

namespace Steamworks
{
	public class MMKVPMarshaller // TypeDefIndex: 4294
	{
		// Fields
		private IntPtr m_pNativeArray; // 0x08
		private IntPtr m_pArrayEntries; // 0x0C
	
		// Constructors
		public MMKVPMarshaller(MatchMakingKeyValuePair_t[] filters); // 0x101D4B20-0x101D4CF0
	
		// Methods
		~MMKVPMarshaller(); // 0x101D49D0-0x101D4B20
		public static implicit operator IntPtr(MMKVPMarshaller that); // 0x101D4CF0-0x101D4D10
	}
}

public class MMOnlineManager : DestroyableSingleton<MMOnlineManager> // TypeDefIndex: 5574
{
	// Fields
	public GameObject HelpMenu; // 0x10

	// Constructors
	public MMOnlineManager(); // 0x101ACB40-0x101ACB80

	// Methods
	public void Start(); // 0x101ACA20-0x101ACB00
	private void Update(); // 0x101ACB00-0x101ACB40
}

namespace GoogleMobileAds.Api
{
	public class MobileAds // TypeDefIndex: 5978
	{
		// Fields
		private static readonly IMobileAdsClient client; // 0x00
	
		// Nested types
		public static class Utils // TypeDefIndex: 5979
		{
			// Methods
			public static float GetDeviceScale(); // 0x10285E60-0x10285F20
			public static int GetDeviceSafeWidth(); // 0x10285DA0-0x10285E60
		}
	
		// Constructors
		public MobileAds(); // 0x101A2CD0-0x101A2CE0
		static MobileAds(); // 0x10281640-0x102816B0
	
		// Methods
		public static void Initialize(string appId); // 0x10281330-0x102813C0
		public static void Initialize(Action<InitializationStatus> initCompleteAction); // 0x102813C0-0x102814A0
		public static void SetApplicationMuted(bool muted); // 0x102814A0-0x10281510
		public static void SetApplicationVolume(float volume); // 0x10281510-0x102815D0
		public static void SetiOSAppPauseOnBackground(bool pause); // 0x102815D0-0x10281640
		private static IMobileAdsClient GetMobileAdsClient(); // 0x10274470-0x102744B0
	}
}

namespace GoogleMobileAds.Common
{
	public class MobileAdsEventExecutor : MonoBehaviour // TypeDefIndex: 5956
	{
		// Fields
		public static MobileAdsEventExecutor instance; // 0x00
		private static List<Action> adEventsQueue; // 0x04
		private static bool adEventsQueueEmpty; // 0x08
	
		// Constructors
		public MobileAdsEventExecutor(); // 0x101A68C0-0x101A68D0
		static MobileAdsEventExecutor(); // 0x102812C0-0x10281330
	
		// Methods
		public static void Initialize(); // 0x10280E50-0x10280F40
		public static bool IsActive(); // 0x10280F40-0x10280FC0
		public void Awake(); // 0x10280C90-0x10280CF0
		public static void ExecuteInUpdate(Action action); // 0x10280CF0-0x10280E50
		public void Update(); // 0x10281010-0x102812C0
		public void OnDisable(); // 0x10280FC0-0x10281010
	}
}

public class MonitorOxyMinigame : Minigame // TypeDefIndex: 5642
{
	// Fields
	public SpriteRenderer[] Targets; // 0x28
	public BoxCollider2D[] Sliders; // 0x2C
	public VerticalSpriteGauge[] Fills; // 0x30
	public FloatRange YRange; // 0x34
	public FloatRange[] RandomRanges; // 0x38
	private Controller controller; // 0x3C
	public AudioClip[] DragSounds; // 0x40
	private AudioSource ActiveSound; // 0x44

	// Nested types
	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5643
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<BoxCollider2D, bool> __9__9_0; // 0x04

		// Constructors
		static __c(); // 0x10218AA0-0x10218AF0
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _Update_b__9_0(BoxCollider2D s); // 0x102185F0-0x10218620
	}

	// Constructors
	public MonitorOxyMinigame(); // 0x10202F90-0x10202FF0

	// Methods
	public override void Begin(PlayerTask task); // 0x10202800-0x10202950
	public void Update(); // 0x102029D0-0x10202F90
	public override void Close(); // 0x10202950-0x102029D0
}

namespace Discord
{
	internal class MonoPInvokeCallbackAttribute : Attribute // TypeDefIndex: 4935
	{
		// Constructors
		public MonoPInvokeCallbackAttribute(); // 0x10263DC0-0x10263DD0
	}
}

public sealed class MonoPInvokeCallbackAttribute : Attribute // TypeDefIndex: 5337
{
	// Constructors
	public MonoPInvokeCallbackAttribute(Type type); // 0x10202FF0-0x10203010
}

public class MultistageMinigame : Minigame // TypeDefIndex: 5322
{
	// Fields
	public Minigame[] Stages; // 0x28
	private Minigame stage; // 0x2C

	// Constructors
	public MultistageMinigame(); // 0x101A68C0-0x101A68D0

	// Methods
	public override void Begin(PlayerTask task); // 0x10203010-0x10203120
	public override void Close(); // 0x10203120-0x10203180
}

namespace Steamworks
{
	[CallbackIdentity] // 0x10006E60-0x10006E80
	public struct MusicPlayerRemoteToFront_t // TypeDefIndex: 4570
	{
		// Fields
		public const int k_iCallback = 4103; // Metadata: 0x002422EB
	}

	[CallbackIdentity] // 0x10006D90-0x10006DB0
	public struct MusicPlayerRemoteWillActivate_t // TypeDefIndex: 4568
	{
		// Fields
		public const int k_iCallback = 4101; // Metadata: 0x002422E3
	}

	[CallbackIdentity] // 0x10006DF0-0x10006E10
	public struct MusicPlayerRemoteWillDeactivate_t // TypeDefIndex: 4569
	{
		// Fields
		public const int k_iCallback = 4102; // Metadata: 0x002422E7
	}

	[CallbackIdentity] // 0x10007210-0x10007230
	public struct MusicPlayerSelectsPlaylistEntry_t // TypeDefIndex: 4580
	{
		// Fields
		public const int k_iCallback = 4013; // Metadata: 0x00242313
		public int nID; // 0x00
	}

	[CallbackIdentity] // 0x100071B0-0x100071D0
	public struct MusicPlayerSelectsQueueEntry_t // TypeDefIndex: 4579
	{
		// Fields
		public const int k_iCallback = 4012; // Metadata: 0x0024230F
		public int nID; // 0x00
	}

	[CallbackIdentity] // 0x100070F0-0x10007110
	public struct MusicPlayerWantsLooped_t // TypeDefIndex: 4577
	{
		// Fields
		public const int k_iCallback = 4110; // Metadata: 0x00242307
		public bool m_bLooped; // 0x00
	}

	[CallbackIdentity] // 0x10006F40-0x10006F60
	public struct MusicPlayerWantsPause_t // TypeDefIndex: 4573
	{
		// Fields
		public const int k_iCallback = 4106; // Metadata: 0x002422F7
	}

	[CallbackIdentity] // 0x10006EE0-0x10006F00
	public struct MusicPlayerWantsPlay_t // TypeDefIndex: 4572
	{
		// Fields
		public const int k_iCallback = 4105; // Metadata: 0x002422F3
	}

	[CallbackIdentity] // 0x100072A0-0x100072C0
	public struct MusicPlayerWantsPlayingRepeatStatus_t // TypeDefIndex: 4581
	{
		// Fields
		public const int k_iCallback = 4114; // Metadata: 0x00242317
		public int m_nPlayingRepeatStatus; // 0x00
	}

	[CallbackIdentity] // 0x10007020-0x10007040
	public struct MusicPlayerWantsPlayNext_t // TypeDefIndex: 4575
	{
		// Fields
		public const int k_iCallback = 4108; // Metadata: 0x002422FF
	}

	[CallbackIdentity] // 0x10007000-0x10007020
	public struct MusicPlayerWantsPlayPrevious_t // TypeDefIndex: 4574
	{
		// Fields
		public const int k_iCallback = 4107; // Metadata: 0x002422FB
	}

	[CallbackIdentity] // 0x100070D0-0x100070F0
	public struct MusicPlayerWantsShuffled_t // TypeDefIndex: 4576
	{
		// Fields
		public const int k_iCallback = 4109; // Metadata: 0x00242303
		public bool m_bShuffled; // 0x00
	}

	[CallbackIdentity] // 0x10007150-0x10007170
	public struct MusicPlayerWantsVolume_t // TypeDefIndex: 4578
	{
		// Fields
		public const int k_iCallback = 4011; // Metadata: 0x0024230B
		public float m_flNewVolume; // 0x00
	}

	[CallbackIdentity] // 0x10006EC0-0x10006EE0
	public struct MusicPlayerWillQuit_t // TypeDefIndex: 4571
	{
		// Fields
		public const int k_iCallback = 4104; // Metadata: 0x002422EF
	}
}

namespace MS.Internal.Xml.XPath
{
	internal sealed class NamespaceQuery : BaseAxisQuery // TypeDefIndex: 1779
	{
		// Fields
		private bool onNamespace; // 0x2C
	
		// Constructors
		public NamespaceQuery(Query qyParent, string Name, string Prefix, XPathNodeType Type); // 0x1054EA60-0x1054EA70
		private NamespaceQuery(NamespaceQuery other); // 0x106B93C0-0x106B93F0
	
		// Methods
		public override void Reset(); // 0x106B9380-0x106B93C0
		public override XPathNavigator Advance(); // 0x106C1650-0x106C1710
		public override bool matches(XPathNavigator e); // 0x106C1770-0x106C17E0
		public override XPathNodeIterator Clone(); // 0x106C1710-0x106C1770
	}
}

public class NameTextBehaviour : MonoBehaviour // TypeDefIndex: 5451
{
	// Fields
	public static NameTextBehaviour Instance; // 0x00
	public TextBox nameSource; // 0x0C

	// Constructors
	public NameTextBehaviour(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Start(); // 0x102033F0-0x102034B0
	public void UpdateName(); // 0x102034B0-0x10203520
	public static bool IsValidName(string text); // 0x10203180-0x10203270
	public bool ShakeIfInvalid(); // 0x10203270-0x102033F0
}

namespace GoogleMobileAds.Api
{
	public enum NativeAdType // TypeDefIndex: 5961
	{
		CustomTemplate = 0
	}
}

namespace Steamworks
{
	[SuppressUnmanagedCodeSecurity] // 0x10002030-0x10002050
	internal static class NativeMethods // TypeDefIndex: 4482
	{
		// Fields
		internal const string NativeLibraryName = "steam_api"; // Metadata: 0x00242169
		internal const string NativeLibrary_SDKEncryptedAppTicket = "sdkencryptedappticket"; // Metadata: 0x00242176
	
		// Methods
		public static extern bool SteamAPI_Init(); // 0x101EB830-0x101EB890
		public static extern void SteamAPI_Shutdown(); // 0x101EBC70-0x101EBCD0
		public static extern bool SteamAPI_RestartAppIfNecessary(AppId_t unOwnAppID); // 0x101EBA30-0x101EBAA0
		public static extern void SteamAPI_ReleaseCurrentThreadMemory(); // 0x101EB9D0-0x101EBA30
		public static extern void SteamAPI_WriteMiniDump(uint uStructuredExceptionCode, IntPtr pvExceptionInfo, uint uBuildID); // 0x101EBEF0-0x101EBF60
		public static extern void SteamAPI_SetMiniDumpComment(InteropHelp.UTF8StringHandle pchMsg); // 0x101EBB60-0x101EBC10
		public static extern void SteamAPI_RunCallbacks(); // 0x101EBAA0-0x101EBB00
		public static extern void SteamAPI_RegisterCallback(IntPtr pCallback, int iCallback); // 0x101EB960-0x101EB9D0
		public static extern void SteamAPI_UnregisterCallback(IntPtr pCallback); // 0x101EBD40-0x101EBDA0
		public static extern void SteamAPI_RegisterCallResult(IntPtr pCallback, ulong hAPICall); // 0x101EB8F0-0x101EB960
		public static extern void SteamAPI_UnregisterCallResult(IntPtr pCallback, ulong hAPICall); // 0x101EBCD0-0x101EBD40
		public static extern bool SteamAPI_IsSteamRunning(); // 0x101EB890-0x101EB8F0
		public static extern void Steam_RunCallbacks(HSteamPipe hSteamPipe, bool bGameServerCallbacks); // 0x101EC830-0x101EC8A0
		public static extern void Steam_RegisterInterfaceFuncs(IntPtr hModule); // 0x101EC7D0-0x101EC830
		public static extern int Steam_GetHSteamUserCurrent(); // 0x101EC770-0x101EC7D0
		public static extern int SteamAPI_GetSteamInstallPath(); // 0x101EB7D0-0x101EB830
		public static extern int SteamAPI_GetHSteamPipe(); // 0x101EB710-0x101EB770
		public static extern void SteamAPI_SetTryCatchCallbacks(bool bTryCatchCallbacks); // 0x101EBC10-0x101EBC70
		public static extern int SteamAPI_GetHSteamUser(); // 0x101EB770-0x101EB7D0
		public static extern IntPtr SteamInternal_ContextInit(IntPtr pContextInitData); // 0x101EC5A0-0x101EC600
		public static extern IntPtr SteamInternal_CreateInterface(InteropHelp.UTF8StringHandle ver); // 0x101EC600-0x101EC6B0
		public static extern void SteamAPI_UseBreakpadCrashHandler(InteropHelp.UTF8StringHandle pchVersion, InteropHelp.UTF8StringHandle pchDate, InteropHelp.UTF8StringHandle pchTime, bool bFullMemoryDumps, IntPtr pvContext, IntPtr m_pfnPreMinidumpCallback); // 0x101EBDA0-0x101EBEF0
		public static extern void SteamAPI_SetBreakpadAppID(uint unAppID); // 0x101EBB00-0x101EBB60
		public static extern bool SteamGameServer_Init(uint unIP, ushort usSteamPort, ushort usGamePort, ushort usQueryPort, EServerMode eServerMode, InteropHelp.UTF8StringHandle pchVersionString); // 0x101EC480-0x101EC540
		public static extern void SteamGameServer_Shutdown(); // 0x101EC540-0x101EC5A0
		public static extern void SteamGameServer_RunCallbacks(); // 0x101D2A00-0x101D2A60
		public static extern void SteamGameServer_ReleaseCurrentThreadMemory(); // 0x101D29A0-0x101D2A00
		public static extern bool SteamGameServer_BSecure(); // 0x101D2540-0x101D25A0
		public static extern ulong SteamGameServer_GetSteamID(); // 0x101EC420-0x101EC480
		public static extern int SteamGameServer_GetHSteamPipe(); // 0x101D25A0-0x101D2600
		public static extern int SteamGameServer_GetHSteamUser(); // 0x101D2600-0x101D2660
		public static extern bool SteamInternal_GameServer_Init(uint unIP, ushort usPort, ushort usGamePort, ushort usQueryPort, EServerMode eServerMode, InteropHelp.UTF8StringHandle pchVersionString); // 0x101EC6B0-0x101EC770
		public static extern IntPtr SteamClient(); // 0x101EBF60-0x101EBFC0
		public static extern IntPtr SteamGameServerClient(); // 0x101EC3C0-0x101EC420
		public static extern bool SteamEncryptedAppTicket_BDecryptTicket(byte[] rgubTicketEncrypted, uint cubTicketEncrypted, byte[] rgubTicketDecrypted, ref uint pcubTicketDecrypted, byte[] rgubKey, int cubKey); // 0x101EBFC0-0x101EC060
		public static extern bool SteamEncryptedAppTicket_BIsTicketForApp(byte[] rgubTicketDecrypted, uint cubTicketDecrypted, AppId_t nAppID); // 0x101EC060-0x101EC0E0
		public static extern uint SteamEncryptedAppTicket_GetTicketIssueTime(byte[] rgubTicketDecrypted, uint cubTicketDecrypted); // 0x101EC250-0x101EC2C0
		public static extern void SteamEncryptedAppTicket_GetTicketSteamID(byte[] rgubTicketDecrypted, uint cubTicketDecrypted, out CSteamID psteamID); // 0x101EC2C0-0x101EC340
		public static extern uint SteamEncryptedAppTicket_GetTicketAppID(byte[] rgubTicketDecrypted, uint cubTicketDecrypted); // 0x101EC1E0-0x101EC250
		public static extern bool SteamEncryptedAppTicket_BUserOwnsAppInTicket(byte[] rgubTicketDecrypted, uint cubTicketDecrypted, AppId_t nAppID); // 0x101EC160-0x101EC1E0
		public static extern bool SteamEncryptedAppTicket_BUserIsVacBanned(byte[] rgubTicketDecrypted, uint cubTicketDecrypted); // 0x101EC0E0-0x101EC160
		public static extern IntPtr SteamEncryptedAppTicket_GetUserVariableData(byte[] rgubTicketDecrypted, uint cubTicketDecrypted, out uint pcubUserData); // 0x101EC340-0x101EC3C0
		public static extern uint ISteamAppList_GetNumInstalledApps(IntPtr instancePtr); // 0x101D4F80-0x101D4FE0
		public static extern uint ISteamAppList_GetInstalledApps(IntPtr instancePtr, [In, Out] AppId_t[] pvecAppID, uint unMaxAppIDs); // 0x101D4F10-0x101D4F80
		public static extern int ISteamAppList_GetAppName(IntPtr instancePtr, AppId_t nAppID, IntPtr pchName, int cchNameMax); // 0x101D4EA0-0x101D4F10
		public static extern int ISteamAppList_GetAppInstallDir(IntPtr instancePtr, AppId_t nAppID, IntPtr pchDirectory, int cchNameMax); // 0x101D4E30-0x101D4EA0
		public static extern int ISteamAppList_GetAppBuildId(IntPtr instancePtr, AppId_t nAppID); // 0x101D4DC0-0x101D4E30
		public static extern bool ISteamApps_BIsSubscribed(IntPtr instancePtr); // 0x101D5310-0x101D5380
		public static extern bool ISteamApps_BIsLowViolence(IntPtr instancePtr); // 0x101D51C0-0x101D5230
		public static extern bool ISteamApps_BIsCybercafe(IntPtr instancePtr); // 0x101D50E0-0x101D5150
		public static extern bool ISteamApps_BIsVACBanned(IntPtr instancePtr); // 0x101D5380-0x101D53F0
		public static extern IntPtr ISteamApps_GetCurrentGameLanguage(IntPtr instancePtr); // 0x101D55F0-0x101D5650
		public static extern IntPtr ISteamApps_GetAvailableGameLanguages(IntPtr instancePtr); // 0x101D5520-0x101D5580
		public static extern bool ISteamApps_BIsSubscribedApp(IntPtr instancePtr, AppId_t appID); // 0x101D5230-0x101D52A0
		public static extern bool ISteamApps_BIsDlcInstalled(IntPtr instancePtr, AppId_t appID); // 0x101D5150-0x101D51C0
		public static extern uint ISteamApps_GetEarliestPurchaseUnixTime(IntPtr instancePtr, AppId_t nAppID); // 0x101D5720-0x101D5790
		public static extern bool ISteamApps_BIsSubscribedFromFreeWeekend(IntPtr instancePtr); // 0x101D52A0-0x101D5310
		public static extern int ISteamApps_GetDLCCount(IntPtr instancePtr); // 0x101D5650-0x101D56B0
		public static extern bool ISteamApps_BGetDLCDataByIndex(IntPtr instancePtr, int iDLC, out AppId_t pAppID, out bool pbAvailable, IntPtr pchName, int cchNameBufferSize); // 0x101D4FE0-0x101D5070
		public static extern void ISteamApps_InstallDLC(IntPtr instancePtr, AppId_t nAppID); // 0x101D5980-0x101D59F0
		public static extern void ISteamApps_UninstallDLC(IntPtr instancePtr, AppId_t nAppID); // 0x101D5B30-0x101D5BA0
		public static extern void ISteamApps_RequestAppProofOfPurchaseKey(IntPtr instancePtr, AppId_t nAppID); // 0x101D5AC0-0x101D5B30
		public static extern bool ISteamApps_GetCurrentBetaName(IntPtr instancePtr, IntPtr pchName, int cchNameBufferSize); // 0x101D5580-0x101D55F0
		public static extern bool ISteamApps_MarkContentCorrupt(IntPtr instancePtr, bool bMissingFilesOnly); // 0x101D59F0-0x101D5A60
		public static extern uint ISteamApps_GetInstalledDepots(IntPtr instancePtr, AppId_t appID, [In, Out] DepotId_t[] pvecDepots, uint cMaxDepots); // 0x101D5850-0x101D58D0
		public static extern uint ISteamApps_GetAppInstallDir(IntPtr instancePtr, AppId_t appID, IntPtr pchFolder, uint cchFolderBufferSize); // 0x101D5450-0x101D54C0
		public static extern bool ISteamApps_BIsAppInstalled(IntPtr instancePtr, AppId_t appID); // 0x101D5070-0x101D50E0
		public static extern ulong ISteamApps_GetAppOwner(IntPtr instancePtr); // 0x101D54C0-0x101D5520
		public static extern IntPtr ISteamApps_GetLaunchQueryParam(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchKey); // 0x101D58D0-0x101D5980
		public static extern bool ISteamApps_GetDlcDownloadProgress(IntPtr instancePtr, AppId_t nAppID, out ulong punBytesDownloaded, out ulong punBytesTotal); // 0x101D56B0-0x101D5720
		public static extern int ISteamApps_GetAppBuildId(IntPtr instancePtr); // 0x101D53F0-0x101D5450
		public static extern void ISteamApps_RequestAllProofOfPurchaseKeys(IntPtr instancePtr); // 0x101D5A60-0x101D5AC0
		public static extern ulong ISteamApps_GetFileDetails(IntPtr instancePtr, InteropHelp.UTF8StringHandle pszFileName); // 0x101D5790-0x101D5850
		public static extern int ISteamClient_CreateSteamPipe(IntPtr instancePtr); // 0x101D5D60-0x101D5DC0
		public static extern bool ISteamClient_BReleaseSteamPipe(IntPtr instancePtr, HSteamPipe hSteamPipe); // 0x101D5BA0-0x101D5C10
		public static extern int ISteamClient_ConnectToGlobalUser(IntPtr instancePtr, HSteamPipe hSteamPipe); // 0x101D5C80-0x101D5CF0
		public static extern int ISteamClient_CreateLocalUser(IntPtr instancePtr, out HSteamPipe phSteamPipe, EAccountType eAccountType); // 0x101D5CF0-0x101D5D60
		public static extern void ISteamClient_ReleaseUser(IntPtr instancePtr, HSteamPipe hSteamPipe, HSteamUser hUser); // 0x101D6F50-0x101D6FC0
		public static extern IntPtr ISteamClient_GetISteamUser(IntPtr instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D6D20-0x101D6DE0
		public static extern IntPtr ISteamClient_GetISteamGameServer(IntPtr instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D61E0-0x101D62A0
		public static extern void ISteamClient_SetLocalIPBinding(IntPtr instancePtr, uint unIP, ushort usPort); // 0x101D6FC0-0x101D7030
		public static extern IntPtr ISteamClient_GetISteamFriends(IntPtr instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D6060-0x101D6120
		public static extern IntPtr ISteamClient_GetISteamUtils(IntPtr instancePtr, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D6DE0-0x101D6E90
		public static extern IntPtr ISteamClient_GetISteamMatchmaking(IntPtr instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D6660-0x101D6720
		public static extern IntPtr ISteamClient_GetISteamMatchmakingServers(IntPtr instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D65A0-0x101D6660
		public static extern IntPtr ISteamClient_GetISteamGenericInterface(IntPtr instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D62A0-0x101D6360
		public static extern IntPtr ISteamClient_GetISteamUserStats(IntPtr instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D6C60-0x101D6D20
		public static extern IntPtr ISteamClient_GetISteamGameServerStats(IntPtr instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D6120-0x101D61E0
		public static extern IntPtr ISteamClient_GetISteamApps(IntPtr instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D5EE0-0x101D5FA0
		public static extern IntPtr ISteamClient_GetISteamNetworking(IntPtr instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D68A0-0x101D6960
		public static extern IntPtr ISteamClient_GetISteamRemoteStorage(IntPtr instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D6A20-0x101D6AE0
		public static extern IntPtr ISteamClient_GetISteamScreenshots(IntPtr instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D6AE0-0x101D6BA0
		public static extern uint ISteamClient_GetIPCCallCount(IntPtr instancePtr); // 0x101D5DC0-0x101D5E20
		public static extern void ISteamClient_SetWarningMessageHook(IntPtr instancePtr, SteamAPIWarningMessageHook_t pFunction); // 0x101D7030-0x101D70A0
		public static extern bool ISteamClient_BShutdownIfAllPipesClosed(IntPtr instancePtr); // 0x101D5C10-0x101D5C80
		public static extern IntPtr ISteamClient_GetISteamHTTP(IntPtr instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D6420-0x101D64E0
		public static extern IntPtr ISteamClient_GetISteamController(IntPtr instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D5FA0-0x101D6060
		public static extern IntPtr ISteamClient_GetISteamUGC(IntPtr instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D6BA0-0x101D6C60
		public static extern IntPtr ISteamClient_GetISteamAppList(IntPtr instancePtr, HSteamUser hSteamUser, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D5E20-0x101D5EE0
		public static extern IntPtr ISteamClient_GetISteamMusic(IntPtr instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D67E0-0x101D68A0
		public static extern IntPtr ISteamClient_GetISteamMusicRemote(IntPtr instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D6720-0x101D67E0
		public static extern IntPtr ISteamClient_GetISteamHTMLSurface(IntPtr instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D6360-0x101D6420
		public static extern IntPtr ISteamClient_GetISteamInventory(IntPtr instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D64E0-0x101D65A0
		public static extern IntPtr ISteamClient_GetISteamVideo(IntPtr instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D6E90-0x101D6F50
		public static extern IntPtr ISteamClient_GetISteamParentalSettings(IntPtr instancePtr, HSteamUser hSteamuser, HSteamPipe hSteamPipe, InteropHelp.UTF8StringHandle pchVersion); // 0x101D6960-0x101D6A20
		public static extern bool ISteamController_Init(IntPtr instancePtr); // 0x101D7AB0-0x101D7B20
		public static extern bool ISteamController_Shutdown(IntPtr instancePtr); // 0x101D7DB0-0x101D7E20
		public static extern void ISteamController_RunFrame(IntPtr instancePtr); // 0x101D7B20-0x101D7B80
		public static extern int ISteamController_GetConnectedControllers(IntPtr instancePtr, [In, Out] ControllerHandle_t[] handlesOut); // 0x101D7560-0x101D75D0
		public static extern bool ISteamController_ShowBindingPanel(IntPtr instancePtr, ControllerHandle_t controllerHandle); // 0x101D7CA0-0x101D7D10
		public static extern ulong ISteamController_GetActionSetHandle(IntPtr instancePtr, InteropHelp.UTF8StringHandle pszActionSetName); // 0x101D7260-0x101D7320
		public static extern void ISteamController_ActivateActionSet(IntPtr instancePtr, ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetHandle); // 0x101D7110-0x101D7180
		public static extern ulong ISteamController_GetCurrentActionSet(IntPtr instancePtr, ControllerHandle_t controllerHandle); // 0x101D7640-0x101D76B0
		public static extern void ISteamController_ActivateActionSetLayer(IntPtr instancePtr, ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetLayerHandle); // 0x101D70A0-0x101D7110
		public static extern void ISteamController_DeactivateActionSetLayer(IntPtr instancePtr, ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetLayerHandle); // 0x101D7180-0x101D71F0
		public static extern void ISteamController_DeactivateAllActionSetLayers(IntPtr instancePtr, ControllerHandle_t controllerHandle); // 0x101D71F0-0x101D7260
		public static extern int ISteamController_GetActiveActionSetLayers(IntPtr instancePtr, ControllerHandle_t controllerHandle, out ControllerActionSetHandle_t handlesOut); // 0x101D7320-0x101D7390
		public static extern ulong ISteamController_GetDigitalActionHandle(IntPtr instancePtr, InteropHelp.UTF8StringHandle pszActionName); // 0x101D7720-0x101D77E0
		public static extern ControllerDigitalActionData_t ISteamController_GetDigitalActionData(IntPtr instancePtr, ControllerHandle_t controllerHandle, ControllerDigitalActionHandle_t digitalActionHandle); // 0x101D76B0-0x101D7720
		public static extern int ISteamController_GetDigitalActionOrigins(IntPtr instancePtr, ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetHandle, ControllerDigitalActionHandle_t digitalActionHandle, [In, Out] EControllerActionOrigin[] originsOut); // 0x101D77E0-0x101D7860
		public static extern ulong ISteamController_GetAnalogActionHandle(IntPtr instancePtr, InteropHelp.UTF8StringHandle pszActionName); // 0x101D7420-0x101D74E0
		public static extern ControllerAnalogActionData_t ISteamController_GetAnalogActionData(IntPtr instancePtr, ControllerHandle_t controllerHandle, ControllerAnalogActionHandle_t analogActionHandle); // 0x101D7390-0x101D7420
		public static extern int ISteamController_GetAnalogActionOrigins(IntPtr instancePtr, ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetHandle, ControllerAnalogActionHandle_t analogActionHandle, [In, Out] EControllerActionOrigin[] originsOut); // 0x101D74E0-0x101D7560
		public static extern void ISteamController_StopAnalogActionMomentum(IntPtr instancePtr, ControllerHandle_t controllerHandle, ControllerAnalogActionHandle_t eAction); // 0x101D7E20-0x101D7E90
		public static extern void ISteamController_TriggerHapticPulse(IntPtr instancePtr, ControllerHandle_t controllerHandle, ESteamControllerPad eTargetPad, ushort usDurationMicroSec); // 0x101D7E90-0x101D7F00
		public static extern void ISteamController_TriggerRepeatedHapticPulse(IntPtr instancePtr, ControllerHandle_t controllerHandle, ESteamControllerPad eTargetPad, ushort usDurationMicroSec, ushort usOffMicroSec, ushort unRepeat, uint nFlags); // 0x101D7F00-0x101D7F80
		public static extern void ISteamController_TriggerVibration(IntPtr instancePtr, ControllerHandle_t controllerHandle, ushort usLeftSpeed, ushort usRightSpeed); // 0x101D7F80-0x101D7FF0
		public static extern void ISteamController_SetLEDColor(IntPtr instancePtr, ControllerHandle_t controllerHandle, byte nColorR, byte nColorG, byte nColorB, uint nFlags); // 0x101D7B80-0x101D7C00
		public static extern int ISteamController_GetGamepadIndexForController(IntPtr instancePtr, ControllerHandle_t ulControllerHandle); // 0x101D7860-0x101D78D0
		public static extern ulong ISteamController_GetControllerForGamepadIndex(IntPtr instancePtr, int nIndex); // 0x101D75D0-0x101D7640
		public static extern ControllerMotionData_t ISteamController_GetMotionData(IntPtr instancePtr, ControllerHandle_t controllerHandle); // 0x101D79B0-0x101D7A40
		public static extern bool ISteamController_ShowDigitalActionOrigins(IntPtr instancePtr, ControllerHandle_t controllerHandle, ControllerDigitalActionHandle_t digitalActionHandle, float flScale, float flXPosition, float flYPosition); // 0x101D7D10-0x101D7DB0
		public static extern bool ISteamController_ShowAnalogActionOrigins(IntPtr instancePtr, ControllerHandle_t controllerHandle, ControllerAnalogActionHandle_t analogActionHandle, float flScale, float flXPosition, float flYPosition); // 0x101D7C00-0x101D7CA0
		public static extern IntPtr ISteamController_GetStringForActionOrigin(IntPtr instancePtr, EControllerActionOrigin eOrigin); // 0x101D7A40-0x101D7AB0
		public static extern IntPtr ISteamController_GetGlyphForActionOrigin(IntPtr instancePtr, EControllerActionOrigin eOrigin); // 0x101D78D0-0x101D7940
		public static extern ESteamInputType ISteamController_GetInputTypeForHandle(IntPtr instancePtr, ControllerHandle_t controllerHandle); // 0x101D7940-0x101D79B0
		public static extern IntPtr ISteamFriends_GetPersonaName(IntPtr instancePtr); // 0x101D9520-0x101D9580
		public static extern ulong ISteamFriends_SetPersonaName(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchPersonaName); // 0x101DA010-0x101DA0D0
		public static extern EPersonaState ISteamFriends_GetPersonaState(IntPtr instancePtr); // 0x101D9580-0x101D95E0
		public static extern int ISteamFriends_GetFriendCount(IntPtr instancePtr, EFriendFlags iFriendFlags); // 0x101D8C70-0x101D8CE0
		public static extern ulong ISteamFriends_GetFriendByIndex(IntPtr instancePtr, int iFriend, EFriendFlags iFriendFlags); // 0x101D8AB0-0x101D8B20
		public static extern EFriendRelationship ISteamFriends_GetFriendRelationship(IntPtr instancePtr, CSteamID steamIDFriend); // 0x101D8F90-0x101D9000
		public static extern EPersonaState ISteamFriends_GetFriendPersonaState(IntPtr instancePtr, CSteamID steamIDFriend); // 0x101D8F20-0x101D8F90
		public static extern IntPtr ISteamFriends_GetFriendPersonaName(IntPtr instancePtr, CSteamID steamIDFriend); // 0x101D8EB0-0x101D8F20
		public static extern bool ISteamFriends_GetFriendGamePlayed(IntPtr instancePtr, CSteamID steamIDFriend, out FriendGameInfo_t pFriendGameInfo); // 0x101D8D50-0x101D8DC0
		public static extern IntPtr ISteamFriends_GetFriendPersonaNameHistory(IntPtr instancePtr, CSteamID steamIDFriend, int iPersonaName); // 0x101D8E40-0x101D8EB0
		public static extern int ISteamFriends_GetFriendSteamLevel(IntPtr instancePtr, CSteamID steamIDFriend); // 0x101D91A0-0x101D9210
		public static extern IntPtr ISteamFriends_GetPlayerNickname(IntPtr instancePtr, CSteamID steamIDPlayer); // 0x101D95E0-0x101D9650
		public static extern int ISteamFriends_GetFriendsGroupCount(IntPtr instancePtr); // 0x101D9210-0x101D9270
		public static extern short ISteamFriends_GetFriendsGroupIDByIndex(IntPtr instancePtr, int iFG); // 0x101D9270-0x101D92E0
		public static extern IntPtr ISteamFriends_GetFriendsGroupName(IntPtr instancePtr, FriendsGroupID_t friendsGroupID); // 0x101D93D0-0x101D9440
		public static extern int ISteamFriends_GetFriendsGroupMembersCount(IntPtr instancePtr, FriendsGroupID_t friendsGroupID); // 0x101D92E0-0x101D9350
		public static extern void ISteamFriends_GetFriendsGroupMembersList(IntPtr instancePtr, FriendsGroupID_t friendsGroupID, [In, Out] CSteamID[] pOutSteamIDMembers, int nMembersCount); // 0x101D9350-0x101D93D0
		public static extern bool ISteamFriends_HasFriend(IntPtr instancePtr, CSteamID steamIDFriend, EFriendFlags iFriendFlags); // 0x101D9720-0x101D9790
		public static extern int ISteamFriends_GetClanCount(IntPtr instancePtr); // 0x101D86E0-0x101D8740
		public static extern ulong ISteamFriends_GetClanByIndex(IntPtr instancePtr, int iClan); // 0x101D8580-0x101D85F0
		public static extern IntPtr ISteamFriends_GetClanName(IntPtr instancePtr, CSteamID steamIDClan); // 0x101D8740-0x101D87B0
		public static extern IntPtr ISteamFriends_GetClanTag(IntPtr instancePtr, CSteamID steamIDClan); // 0x101D8900-0x101D8970
		public static extern bool ISteamFriends_GetClanActivityCounts(IntPtr instancePtr, CSteamID steamIDClan, out int pnOnline, out int pnInGame, out int pnChatting); // 0x101D8500-0x101D8580
		public static extern ulong ISteamFriends_DownloadClanActivityCounts(IntPtr instancePtr, [In, Out] CSteamID[] psteamIDClans, int cClansToRequest); // 0x101D83B0-0x101D8420
		public static extern int ISteamFriends_GetFriendCountFromSource(IntPtr instancePtr, CSteamID steamIDSource); // 0x101D8C00-0x101D8C70
		public static extern ulong ISteamFriends_GetFriendFromSourceByIndex(IntPtr instancePtr, CSteamID steamIDSource, int iFriend); // 0x101D8CE0-0x101D8D50
		public static extern bool ISteamFriends_IsUserInSource(IntPtr instancePtr, CSteamID steamIDUser, CSteamID steamIDSource); // 0x101D9A90-0x101D9B10
		public static extern void ISteamFriends_SetInGameVoiceSpeaking(IntPtr instancePtr, CSteamID steamIDUser, bool bSpeaking); // 0x101D9F30-0x101D9FA0
		public static extern void ISteamFriends_ActivateGameOverlay(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchDialog); // 0x101D8230-0x101D82E0
		public static extern void ISteamFriends_ActivateGameOverlayToUser(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchDialog, CSteamID steamID); // 0x101D80D0-0x101D8180
		public static extern void ISteamFriends_ActivateGameOverlayToWebPage(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchURL); // 0x101D8180-0x101D8230
		public static extern void ISteamFriends_ActivateGameOverlayToStore(IntPtr instancePtr, AppId_t nAppID, EOverlayToStoreFlag eFlag); // 0x101D8060-0x101D80D0
		public static extern void ISteamFriends_SetPlayedWith(IntPtr instancePtr, CSteamID steamIDUserPlayedWith); // 0x101DA0D0-0x101DA140
		public static extern void ISteamFriends_ActivateGameOverlayInviteDialog(IntPtr instancePtr, CSteamID steamIDLobby); // 0x101D7FF0-0x101D8060
		public static extern int ISteamFriends_GetSmallFriendAvatar(IntPtr instancePtr, CSteamID steamIDFriend); // 0x101D9650-0x101D96C0
		public static extern int ISteamFriends_GetMediumFriendAvatar(IntPtr instancePtr, CSteamID steamIDFriend); // 0x101D94B0-0x101D9520
		public static extern int ISteamFriends_GetLargeFriendAvatar(IntPtr instancePtr, CSteamID steamIDFriend); // 0x101D9440-0x101D94B0
		public static extern bool ISteamFriends_RequestUserInformation(IntPtr instancePtr, CSteamID steamIDUser, bool bRequireNameOnly); // 0x101D9E00-0x101D9E70
		public static extern ulong ISteamFriends_RequestClanOfficerList(IntPtr instancePtr, CSteamID steamIDClan); // 0x101D9D20-0x101D9D90
		public static extern ulong ISteamFriends_GetClanOwner(IntPtr instancePtr, CSteamID steamIDClan); // 0x101D8890-0x101D8900
		public static extern int ISteamFriends_GetClanOfficerCount(IntPtr instancePtr, CSteamID steamIDClan); // 0x101D8820-0x101D8890
		public static extern ulong ISteamFriends_GetClanOfficerByIndex(IntPtr instancePtr, CSteamID steamIDClan, int iOfficer); // 0x101D87B0-0x101D8820
		public static extern uint ISteamFriends_GetUserRestrictions(IntPtr instancePtr); // 0x101D96C0-0x101D9720
		public static extern bool ISteamFriends_SetRichPresence(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchKey, InteropHelp.UTF8StringHandle pchValue); // 0x101DA140-0x101DA240
		public static extern void ISteamFriends_ClearRichPresence(IntPtr instancePtr); // 0x101D82E0-0x101D8340
		public static extern IntPtr ISteamFriends_GetFriendRichPresence(IntPtr instancePtr, CSteamID steamIDFriend, InteropHelp.UTF8StringHandle pchKey); // 0x101D90E0-0x101D91A0
		public static extern int ISteamFriends_GetFriendRichPresenceKeyCount(IntPtr instancePtr, CSteamID steamIDFriend); // 0x101D9070-0x101D90E0
		public static extern IntPtr ISteamFriends_GetFriendRichPresenceKeyByIndex(IntPtr instancePtr, CSteamID steamIDFriend, int iKey); // 0x101D9000-0x101D9070
		public static extern void ISteamFriends_RequestFriendRichPresence(IntPtr instancePtr, CSteamID steamIDFriend); // 0x101D9D90-0x101D9E00
		public static extern bool ISteamFriends_InviteUserToGame(IntPtr instancePtr, CSteamID steamIDFriend, InteropHelp.UTF8StringHandle pchConnectString); // 0x101D9790-0x101D9850
		public static extern int ISteamFriends_GetCoplayFriendCount(IntPtr instancePtr); // 0x101D8970-0x101D89D0
		public static extern ulong ISteamFriends_GetCoplayFriend(IntPtr instancePtr, int iCoplayFriend); // 0x101D89D0-0x101D8A40
		public static extern int ISteamFriends_GetFriendCoplayTime(IntPtr instancePtr, CSteamID steamIDFriend); // 0x101D8B90-0x101D8C00
		public static extern uint ISteamFriends_GetFriendCoplayGame(IntPtr instancePtr, CSteamID steamIDFriend); // 0x101D8B20-0x101D8B90
		public static extern ulong ISteamFriends_JoinClanChatRoom(IntPtr instancePtr, CSteamID steamIDClan); // 0x101D9B10-0x101D9B80
		public static extern bool ISteamFriends_LeaveClanChatRoom(IntPtr instancePtr, CSteamID steamIDClan); // 0x101D9B80-0x101D9BF0
		public static extern int ISteamFriends_GetClanChatMemberCount(IntPtr instancePtr, CSteamID steamIDClan); // 0x101D85F0-0x101D8660
		public static extern ulong ISteamFriends_GetChatMemberByIndex(IntPtr instancePtr, CSteamID steamIDClan, int iUser); // 0x101D8490-0x101D8500
		public static extern bool ISteamFriends_SendClanChatMessage(IntPtr instancePtr, CSteamID steamIDClanChat, InteropHelp.UTF8StringHandle pchText); // 0x101D9E70-0x101D9F30
		public static extern int ISteamFriends_GetClanChatMessage(IntPtr instancePtr, CSteamID steamIDClanChat, int iMessage, IntPtr prgchText, int cchTextMax, out EChatEntryType peChatEntryType, out CSteamID psteamidChatter); // 0x101D8660-0x101D86E0
		public static extern bool ISteamFriends_IsClanChatAdmin(IntPtr instancePtr, CSteamID steamIDClanChat, CSteamID steamIDUser); // 0x101D9850-0x101D98D0
		public static extern bool ISteamFriends_IsClanChatWindowOpenInSteam(IntPtr instancePtr, CSteamID steamIDClanChat); // 0x101D98D0-0x101D9940
		public static extern bool ISteamFriends_OpenClanChatWindowInSteam(IntPtr instancePtr, CSteamID steamIDClanChat); // 0x101D9BF0-0x101D9C60
		public static extern bool ISteamFriends_CloseClanChatWindowInSteam(IntPtr instancePtr, CSteamID steamIDClanChat); // 0x101D8340-0x101D83B0
		public static extern bool ISteamFriends_SetListenForFriendsMessages(IntPtr instancePtr, bool bInterceptEnabled); // 0x101D9FA0-0x101DA010
		public static extern bool ISteamFriends_ReplyToFriendMessage(IntPtr instancePtr, CSteamID steamIDFriend, InteropHelp.UTF8StringHandle pchMsgToSend); // 0x101D9C60-0x101D9D20
		public static extern int ISteamFriends_GetFriendMessage(IntPtr instancePtr, CSteamID steamIDFriend, int iMessageID, IntPtr pvData, int cubData, out EChatEntryType peChatEntryType); // 0x101D8DC0-0x101D8E40
		public static extern ulong ISteamFriends_GetFollowerCount(IntPtr instancePtr, CSteamID steamID); // 0x101D8A40-0x101D8AB0
		public static extern ulong ISteamFriends_IsFollowing(IntPtr instancePtr, CSteamID steamID); // 0x101D9A20-0x101D9A90
		public static extern ulong ISteamFriends_EnumerateFollowingList(IntPtr instancePtr, uint unStartIndex); // 0x101D8420-0x101D8490
		public static extern bool ISteamFriends_IsClanPublic(IntPtr instancePtr, CSteamID steamIDClan); // 0x101D99B0-0x101D9A20
		public static extern bool ISteamFriends_IsClanOfficialGameGroup(IntPtr instancePtr, CSteamID steamIDClan); // 0x101D9940-0x101D99B0
		public static extern bool ISteamGameServer_InitGameServer(IntPtr instancePtr, uint unIP, ushort usGamePort, ushort usQueryPort, uint unFlags, AppId_t nGameAppId, InteropHelp.UTF8StringHandle pchVersionString); // 0x101DB1C0-0x101DB280
		public static extern void ISteamGameServer_SetProduct(IntPtr instancePtr, InteropHelp.UTF8StringHandle pszProduct); // 0x101DBBF0-0x101DBCA0
		public static extern void ISteamGameServer_SetGameDescription(IntPtr instancePtr, InteropHelp.UTF8StringHandle pszGameDescription); // 0x101DB6F0-0x101DB7A0
		public static extern void ISteamGameServer_SetModDir(IntPtr instancePtr, InteropHelp.UTF8StringHandle pszModDir); // 0x101DBAD0-0x101DBB80
		public static extern void ISteamGameServer_SetDedicatedServer(IntPtr instancePtr, bool bDedicated); // 0x101DB5D0-0x101DB640
		public static extern void ISteamGameServer_LogOn(IntPtr instancePtr, InteropHelp.UTF8StringHandle pszToken); // 0x101DB340-0x101DB3F0
		public static extern void ISteamGameServer_LogOnAnonymous(IntPtr instancePtr); // 0x101DB2E0-0x101DB340
		public static extern void ISteamGameServer_LogOff(IntPtr instancePtr); // 0x101DB280-0x101DB2E0
		public static extern bool ISteamGameServer_BLoggedOn(IntPtr instancePtr); // 0x101DA9C0-0x101DAA30
		public static extern bool ISteamGameServer_BSecure(IntPtr instancePtr); // 0x101DAA30-0x101DAAA0
		public static extern ulong ISteamGameServer_GetSteamID(IntPtr instancePtr); // 0x101DB0E0-0x101DB140
		public static extern bool ISteamGameServer_WasRestartRequested(IntPtr instancePtr); // 0x101DBF90-0x101DC000
		public static extern void ISteamGameServer_SetMaxPlayerCount(IntPtr instancePtr, int cPlayersMax); // 0x101DBA60-0x101DBAD0
		public static extern void ISteamGameServer_SetBotPlayerCount(IntPtr instancePtr, int cBotplayers); // 0x101DB560-0x101DB5D0
		public static extern void ISteamGameServer_SetServerName(IntPtr instancePtr, InteropHelp.UTF8StringHandle pszServerName); // 0x101DBD50-0x101DBE00
		public static extern void ISteamGameServer_SetMapName(IntPtr instancePtr, InteropHelp.UTF8StringHandle pszMapName); // 0x101DB9B0-0x101DBA60
		public static extern void ISteamGameServer_SetPasswordProtected(IntPtr instancePtr, bool bPasswordProtected); // 0x101DBB80-0x101DBBF0
		public static extern void ISteamGameServer_SetSpectatorPort(IntPtr instancePtr, ushort unSpectatorPort); // 0x101DBE00-0x101DBE70
		public static extern void ISteamGameServer_SetSpectatorServerName(IntPtr instancePtr, InteropHelp.UTF8StringHandle pszSpectatorServerName); // 0x101DBE70-0x101DBF20
		public static extern void ISteamGameServer_ClearAllKeyValues(IntPtr instancePtr); // 0x101DAC50-0x101DACB0
		public static extern void ISteamGameServer_SetKeyValue(IntPtr instancePtr, InteropHelp.UTF8StringHandle pKey, InteropHelp.UTF8StringHandle pValue); // 0x101DB8C0-0x101DB9B0
		public static extern void ISteamGameServer_SetGameTags(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchGameTags); // 0x101DB7A0-0x101DB850
		public static extern void ISteamGameServer_SetGameData(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchGameData); // 0x101DB640-0x101DB6F0
		public static extern void ISteamGameServer_SetRegion(IntPtr instancePtr, InteropHelp.UTF8StringHandle pszRegion); // 0x101DBCA0-0x101DBD50
		public static extern bool ISteamGameServer_SendUserConnectAndAuthenticate(IntPtr instancePtr, uint unIPClient, byte[] pvAuthBlob, uint cubAuthBlobSize, out CSteamID pSteamIDUser); // 0x101DB470-0x101DB4F0
		public static extern ulong ISteamGameServer_CreateUnauthenticatedUserConnection(IntPtr instancePtr); // 0x101DAD20-0x101DAD80
		public static extern void ISteamGameServer_SendUserDisconnect(IntPtr instancePtr, CSteamID steamIDUser); // 0x101DB4F0-0x101DB560
		public static extern bool ISteamGameServer_BUpdateUserData(IntPtr instancePtr, CSteamID steamIDUser, InteropHelp.UTF8StringHandle pchPlayerName, uint uScore); // 0x101DAAA0-0x101DAB60
		public static extern uint ISteamGameServer_GetAuthSessionTicket(IntPtr instancePtr, byte[] pTicket, int cbMaxTicket, out uint pcbTicket); // 0x101DAEC0-0x101DAF40
		public static extern EBeginAuthSessionResult ISteamGameServer_BeginAuthSession(IntPtr instancePtr, byte[] pAuthTicket, int cbAuthTicket, CSteamID steamID); // 0x101DAB60-0x101DABE0
		public static extern void ISteamGameServer_EndAuthSession(IntPtr instancePtr, CSteamID steamID); // 0x101DADF0-0x101DAE60
		public static extern void ISteamGameServer_CancelAuthTicket(IntPtr instancePtr, HAuthTicket hAuthTicket); // 0x101DABE0-0x101DAC50
		public static extern EUserHasLicenseForAppResult ISteamGameServer_UserHasLicenseForApp(IntPtr instancePtr, CSteamID steamID, AppId_t appID); // 0x101DBF20-0x101DBF90
		public static extern bool ISteamGameServer_RequestUserGroupStatus(IntPtr instancePtr, CSteamID steamIDUser, CSteamID steamIDGroup); // 0x101DB3F0-0x101DB470
		public static extern void ISteamGameServer_GetGameplayStats(IntPtr instancePtr); // 0x101DAF40-0x101DAFA0
		public static extern ulong ISteamGameServer_GetServerReputation(IntPtr instancePtr); // 0x101DB080-0x101DB0E0
		public static extern uint ISteamGameServer_GetPublicIP(IntPtr instancePtr); // 0x101DB020-0x101DB080
		public static extern bool ISteamGameServer_HandleIncomingPacket(IntPtr instancePtr, byte[] pData, int cbData, uint srcIP, ushort srcPort); // 0x101DB140-0x101DB1C0
		public static extern int ISteamGameServer_GetNextOutgoingPacket(IntPtr instancePtr, byte[] pOut, int cbMaxOut, out uint pNetAdr, out ushort pPort); // 0x101DAFA0-0x101DB020
		public static extern void ISteamGameServer_EnableHeartbeats(IntPtr instancePtr, bool bActive); // 0x101DAD80-0x101DADF0
		public static extern void ISteamGameServer_SetHeartbeatInterval(IntPtr instancePtr, int iHeartbeatInterval); // 0x101DB850-0x101DB8C0
		public static extern void ISteamGameServer_ForceHeartbeat(IntPtr instancePtr); // 0x101DAE60-0x101DAEC0
		public static extern ulong ISteamGameServer_AssociateWithClan(IntPtr instancePtr, CSteamID steamIDClan); // 0x101DA950-0x101DA9C0
		public static extern ulong ISteamGameServer_ComputeNewPlayerCompatibility(IntPtr instancePtr, CSteamID steamIDNewPlayer); // 0x101DACB0-0x101DAD20
		public static extern ulong ISteamGameServerStats_RequestUserStats(IntPtr instancePtr, CSteamID steamIDUser); // 0x101DA550-0x101DA5C0
		public static extern bool ISteamGameServerStats_GetUserStat(IntPtr instancePtr, CSteamID steamIDUser, InteropHelp.UTF8StringHandle pchName, out int pData); // 0x101DA490-0x101DA550
		public static extern bool ISteamGameServerStats_GetUserStat0(IntPtr instancePtr, CSteamID steamIDUser, InteropHelp.UTF8StringHandle pchName, out float pData); // 0x101DA3D0-0x101DA490
		public static extern bool ISteamGameServerStats_GetUserAchievement(IntPtr instancePtr, CSteamID steamIDUser, InteropHelp.UTF8StringHandle pchName, out bool pbAchieved); // 0x101DA300-0x101DA3D0
		public static extern bool ISteamGameServerStats_SetUserStat(IntPtr instancePtr, CSteamID steamIDUser, InteropHelp.UTF8StringHandle pchName, int nData); // 0x101DA750-0x101DA810
		public static extern bool ISteamGameServerStats_SetUserStat0(IntPtr instancePtr, CSteamID steamIDUser, InteropHelp.UTF8StringHandle pchName, float fData); // 0x101DA680-0x101DA750
		public static extern bool ISteamGameServerStats_UpdateUserAvgRateStat(IntPtr instancePtr, CSteamID steamIDUser, InteropHelp.UTF8StringHandle pchName, float flCountThisSession, double dSessionLength); // 0x101DA880-0x101DA950
		public static extern bool ISteamGameServerStats_SetUserAchievement(IntPtr instancePtr, CSteamID steamIDUser, InteropHelp.UTF8StringHandle pchName); // 0x101DA5C0-0x101DA680
		public static extern bool ISteamGameServerStats_ClearUserAchievement(IntPtr instancePtr, CSteamID steamIDUser, InteropHelp.UTF8StringHandle pchName); // 0x101DA240-0x101DA300
		public static extern ulong ISteamGameServerStats_StoreUserStats(IntPtr instancePtr, CSteamID steamIDUser); // 0x101DA810-0x101DA880
		public static extern bool ISteamHTMLSurface_Init(IntPtr instancePtr); // 0x101DC600-0x101DC670
		public static extern bool ISteamHTMLSurface_Shutdown(IntPtr instancePtr); // 0x101DD170-0x101DD1E0
		public static extern ulong ISteamHTMLSurface_CreateBrowser(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchUserAgent, InteropHelp.UTF8StringHandle pchUserCSS); // 0x101DC1E0-0x101DC2E0
		public static extern void ISteamHTMLSurface_RemoveBrowser(IntPtr instancePtr, HHTMLBrowser unBrowserHandle); // 0x101DCC40-0x101DCCB0
		public static extern void ISteamHTMLSurface_LoadURL(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, InteropHelp.UTF8StringHandle pchURL, InteropHelp.UTF8StringHandle pchPostData); // 0x101DC830-0x101DC930
		public static extern void ISteamHTMLSurface_SetSize(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, uint unWidth, uint unHeight); // 0x101DD090-0x101DD100
		public static extern void ISteamHTMLSurface_StopLoad(IntPtr instancePtr, HHTMLBrowser unBrowserHandle); // 0x101DD250-0x101DD2C0
		public static extern void ISteamHTMLSurface_Reload(IntPtr instancePtr, HHTMLBrowser unBrowserHandle); // 0x101DCBD0-0x101DCC40
		public static extern void ISteamHTMLSurface_GoBack(IntPtr instancePtr, HHTMLBrowser unBrowserHandle); // 0x101DC520-0x101DC590
		public static extern void ISteamHTMLSurface_GoForward(IntPtr instancePtr, HHTMLBrowser unBrowserHandle); // 0x101DC590-0x101DC600
		public static extern void ISteamHTMLSurface_AddHeader(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, InteropHelp.UTF8StringHandle pchKey, InteropHelp.UTF8StringHandle pchValue); // 0x101DC000-0x101DC100
		public static extern void ISteamHTMLSurface_ExecuteJavascript(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, InteropHelp.UTF8StringHandle pchScript); // 0x101DC2E0-0x101DC390
		public static extern void ISteamHTMLSurface_MouseUp(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, EHTMLMouseButton eMouseButton); // 0x101DCA80-0x101DCAF0
		public static extern void ISteamHTMLSurface_MouseDown(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, EHTMLMouseButton eMouseButton); // 0x101DC9A0-0x101DCA10
		public static extern void ISteamHTMLSurface_MouseDoubleClick(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, EHTMLMouseButton eMouseButton); // 0x101DC930-0x101DC9A0
		public static extern void ISteamHTMLSurface_MouseMove(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, int x, int y); // 0x101DCA10-0x101DCA80
		public static extern void ISteamHTMLSurface_MouseWheel(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, int nDelta); // 0x101DCAF0-0x101DCB60
		public static extern void ISteamHTMLSurface_KeyDown(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, uint nNativeKeyCode, EHTMLKeyModifiers eHTMLKeyModifiers); // 0x101DC750-0x101DC7C0
		public static extern void ISteamHTMLSurface_KeyUp(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, uint nNativeKeyCode, EHTMLKeyModifiers eHTMLKeyModifiers); // 0x101DC7C0-0x101DC830
		public static extern void ISteamHTMLSurface_KeyChar(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, uint cUnicodeChar, EHTMLKeyModifiers eHTMLKeyModifiers); // 0x101DC6E0-0x101DC750
		public static extern void ISteamHTMLSurface_SetHorizontalScroll(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, uint nAbsolutePixelScroll); // 0x101DCF30-0x101DCFA0
		public static extern void ISteamHTMLSurface_SetVerticalScroll(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, uint nAbsolutePixelScroll); // 0x101DD100-0x101DD170
		public static extern void ISteamHTMLSurface_SetKeyFocus(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, bool bHasKeyFocus); // 0x101DCFA0-0x101DD010
		public static extern void ISteamHTMLSurface_ViewSource(IntPtr instancePtr, HHTMLBrowser unBrowserHandle); // 0x101DD2C0-0x101DD330
		public static extern void ISteamHTMLSurface_CopyToClipboard(IntPtr instancePtr, HHTMLBrowser unBrowserHandle); // 0x101DC170-0x101DC1E0
		public static extern void ISteamHTMLSurface_PasteFromClipboard(IntPtr instancePtr, HHTMLBrowser unBrowserHandle); // 0x101DCB60-0x101DCBD0
		public static extern void ISteamHTMLSurface_Find(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, InteropHelp.UTF8StringHandle pchSearchStr, bool bCurrentlyInFind, bool bReverse); // 0x101DC400-0x101DC4B0
		public static extern void ISteamHTMLSurface_StopFind(IntPtr instancePtr, HHTMLBrowser unBrowserHandle); // 0x101DD1E0-0x101DD250
		public static extern void ISteamHTMLSurface_GetLinkAtPosition(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, int x, int y); // 0x101DC4B0-0x101DC520
		public static extern void ISteamHTMLSurface_SetCookie(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchHostname, InteropHelp.UTF8StringHandle pchKey, InteropHelp.UTF8StringHandle pchValue, InteropHelp.UTF8StringHandle pchPath, uint nExpires, bool bSecure, bool bHTTPOnly); // 0x101DCD20-0x101DCEC0
		public static extern void ISteamHTMLSurface_SetPageScaleFactor(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, float flZoom, int nPointX, int nPointY); // 0x101DD010-0x101DD090
		public static extern void ISteamHTMLSurface_SetBackgroundMode(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, bool bBackgroundMode); // 0x101DCCB0-0x101DCD20
		public static extern void ISteamHTMLSurface_SetDPIScalingFactor(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, float flDPIScaling); // 0x101DCEC0-0x101DCF30
		public static extern void ISteamHTMLSurface_AllowStartRequest(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, bool bAllowed); // 0x101DC100-0x101DC170
		public static extern void ISteamHTMLSurface_JSDialogResponse(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, bool bResult); // 0x101DC670-0x101DC6E0
		public static extern void ISteamHTMLSurface_FileLoadDialogResponse(IntPtr instancePtr, HHTMLBrowser unBrowserHandle, IntPtr pchSelectedFiles); // 0x101DC390-0x101DC400
		public static extern uint ISteamHTTP_CreateHTTPRequest(IntPtr instancePtr, EHTTPMethod eHTTPRequestMethod, InteropHelp.UTF8StringHandle pchAbsoluteURL); // 0x101DD3A0-0x101DD450
		public static extern bool ISteamHTTP_SetHTTPRequestContextValue(IntPtr instancePtr, HTTPRequestHandle hRequest, ulong ulContextValue); // 0x101DDCB0-0x101DDD20
		public static extern bool ISteamHTTP_SetHTTPRequestNetworkActivityTimeout(IntPtr instancePtr, HTTPRequestHandle hRequest, uint unTimeoutSeconds); // 0x101DDF90-0x101DE000
		public static extern bool ISteamHTTP_SetHTTPRequestHeaderValue(IntPtr instancePtr, HTTPRequestHandle hRequest, InteropHelp.UTF8StringHandle pchHeaderName, InteropHelp.UTF8StringHandle pchHeaderValue); // 0x101DDE90-0x101DDF90
		public static extern bool ISteamHTTP_SetHTTPRequestGetOrPostParameter(IntPtr instancePtr, HTTPRequestHandle hRequest, InteropHelp.UTF8StringHandle pchParamName, InteropHelp.UTF8StringHandle pchParamValue); // 0x101DDD90-0x101DDE90
		public static extern bool ISteamHTTP_SendHTTPRequest(IntPtr instancePtr, HTTPRequestHandle hRequest, out SteamAPICall_t pCallHandle); // 0x101DDA70-0x101DDAE0
		public static extern bool ISteamHTTP_SendHTTPRequestAndStreamResponse(IntPtr instancePtr, HTTPRequestHandle hRequest, out SteamAPICall_t pCallHandle); // 0x101DDA00-0x101DDA70
		public static extern bool ISteamHTTP_DeferHTTPRequest(IntPtr instancePtr, HTTPRequestHandle hRequest); // 0x101DD450-0x101DD4C0
		public static extern bool ISteamHTTP_PrioritizeHTTPRequest(IntPtr instancePtr, HTTPRequestHandle hRequest); // 0x101DD8B0-0x101DD920
		public static extern bool ISteamHTTP_GetHTTPResponseHeaderSize(IntPtr instancePtr, HTTPRequestHandle hRequest, InteropHelp.UTF8StringHandle pchHeaderName, out uint unResponseHeaderSize); // 0x101DD6A0-0x101DD760
		public static extern bool ISteamHTTP_GetHTTPResponseHeaderValue(IntPtr instancePtr, HTTPRequestHandle hRequest, InteropHelp.UTF8StringHandle pchHeaderName, byte[] pHeaderValueBuffer, uint unBufferSize); // 0x101DD760-0x101DD830
		public static extern bool ISteamHTTP_GetHTTPResponseBodySize(IntPtr instancePtr, HTTPRequestHandle hRequest, out uint unBodySize); // 0x101DD630-0x101DD6A0
		public static extern bool ISteamHTTP_GetHTTPResponseBodyData(IntPtr instancePtr, HTTPRequestHandle hRequest, byte[] pBodyDataBuffer, uint unBufferSize); // 0x101DD5B0-0x101DD630
		public static extern bool ISteamHTTP_GetHTTPStreamingResponseBodyData(IntPtr instancePtr, HTTPRequestHandle hRequest, uint cOffset, byte[] pBodyDataBuffer, uint unBufferSize); // 0x101DD830-0x101DD8B0
		public static extern bool ISteamHTTP_ReleaseHTTPRequest(IntPtr instancePtr, HTTPRequestHandle hRequest); // 0x101DD990-0x101DDA00
		public static extern bool ISteamHTTP_GetHTTPDownloadProgressPct(IntPtr instancePtr, HTTPRequestHandle hRequest, out float pflPercentOut); // 0x101DD4C0-0x101DD530
		public static extern bool ISteamHTTP_SetHTTPRequestRawPostBody(IntPtr instancePtr, HTTPRequestHandle hRequest, InteropHelp.UTF8StringHandle pchContentType, byte[] pubBody, uint unBodyLen); // 0x101DE000-0x101DE0D0
		public static extern uint ISteamHTTP_CreateCookieContainer(IntPtr instancePtr, bool bAllowResponsesToModify); // 0x101DD330-0x101DD3A0
		public static extern bool ISteamHTTP_ReleaseCookieContainer(IntPtr instancePtr, HTTPCookieContainerHandle hCookieContainer); // 0x101DD920-0x101DD990
		public static extern bool ISteamHTTP_SetCookie(IntPtr instancePtr, HTTPCookieContainerHandle hCookieContainer, InteropHelp.UTF8StringHandle pchHost, InteropHelp.UTF8StringHandle pchUrl, InteropHelp.UTF8StringHandle pchCookie); // 0x101DDAE0-0x101DDC40
		public static extern bool ISteamHTTP_SetHTTPRequestCookieContainer(IntPtr instancePtr, HTTPRequestHandle hRequest, HTTPCookieContainerHandle hCookieContainer); // 0x101DDD20-0x101DDD90
		public static extern bool ISteamHTTP_SetHTTPRequestUserAgentInfo(IntPtr instancePtr, HTTPRequestHandle hRequest, InteropHelp.UTF8StringHandle pchUserAgentInfo); // 0x101DE140-0x101DE200
		public static extern bool ISteamHTTP_SetHTTPRequestRequiresVerifiedCertificate(IntPtr instancePtr, HTTPRequestHandle hRequest, bool bRequireVerifiedCertificate); // 0x101DE0D0-0x101DE140
		public static extern bool ISteamHTTP_SetHTTPRequestAbsoluteTimeoutMS(IntPtr instancePtr, HTTPRequestHandle hRequest, uint unMilliseconds); // 0x101DDC40-0x101DDCB0
		public static extern bool ISteamHTTP_GetHTTPRequestWasTimedOut(IntPtr instancePtr, HTTPRequestHandle hRequest, out bool pbWasTimedOut); // 0x101DD530-0x101DD5B0
		public static extern EResult ISteamInventory_GetResultStatus(IntPtr instancePtr, SteamInventoryResult_t resultHandle); // 0x101DEB60-0x101DEBD0
		public static extern bool ISteamInventory_GetResultItems(IntPtr instancePtr, SteamInventoryResult_t resultHandle, [In, Out] SteamItemDetails_t[] pOutItemsArray, ref uint punOutItemsArraySize); // 0x101DEAE0-0x101DEB60
		public static extern bool ISteamInventory_GetResultItemProperty(IntPtr instancePtr, SteamInventoryResult_t resultHandle, uint unItemIndex, InteropHelp.UTF8StringHandle pchPropertyName, IntPtr pchValueBuffer, ref uint punValueBufferSizeOut); // 0x101DEA20-0x101DEAE0
		public static extern uint ISteamInventory_GetResultTimestamp(IntPtr instancePtr, SteamInventoryResult_t resultHandle); // 0x101DEBD0-0x101DEC40
		public static extern bool ISteamInventory_CheckResultSteamID(IntPtr instancePtr, SteamInventoryResult_t resultHandle, CSteamID steamIDExpected); // 0x101DE2F0-0x101DE360
		public static extern void ISteamInventory_DestroyResult(IntPtr instancePtr, SteamInventoryResult_t resultHandle); // 0x101DE460-0x101DE4D0
		public static extern bool ISteamInventory_GetAllItems(IntPtr instancePtr, out SteamInventoryResult_t pResultHandle); // 0x101DE610-0x101DE680
		public static extern bool ISteamInventory_GetItemsByID(IntPtr instancePtr, out SteamInventoryResult_t pResultHandle, [In, Out] SteamItemInstanceID_t[] pInstanceIDs, uint unCountInstanceIDs); // 0x101DE8B0-0x101DE930
		public static extern bool ISteamInventory_SerializeResult(IntPtr instancePtr, SteamInventoryResult_t resultHandle, byte[] pOutBuffer, out uint punOutBufferSize); // 0x101DEF10-0x101DEF90
		public static extern bool ISteamInventory_DeserializeResult(IntPtr instancePtr, out SteamInventoryResult_t pOutResultHandle, byte[] pBuffer, uint unBufferSize, bool bRESERVED_MUST_BE_FALSE); // 0x101DE3E0-0x101DE460
		public static extern bool ISteamInventory_GenerateItems(IntPtr instancePtr, out SteamInventoryResult_t pResultHandle, [In, Out] SteamItemDef_t[] pArrayItemDefs, [In, Out] uint[] punArrayQuantity, uint unArrayLength); // 0x101DE580-0x101DE610
		public static extern bool ISteamInventory_GrantPromoItems(IntPtr instancePtr, out SteamInventoryResult_t pResultHandle); // 0x101DEC40-0x101DECB0
		public static extern bool ISteamInventory_AddPromoItem(IntPtr instancePtr, out SteamInventoryResult_t pResultHandle, SteamItemDef_t itemDef); // 0x101DE200-0x101DE270
		public static extern bool ISteamInventory_AddPromoItems(IntPtr instancePtr, out SteamInventoryResult_t pResultHandle, [In, Out] SteamItemDef_t[] pArrayItemDefs, uint unArrayLength); // 0x101DE270-0x101DE2F0
		public static extern bool ISteamInventory_ConsumeItem(IntPtr instancePtr, out SteamInventoryResult_t pResultHandle, SteamItemInstanceID_t itemConsume, uint unQuantity); // 0x101DE360-0x101DE3E0
		public static extern bool ISteamInventory_ExchangeItems(IntPtr instancePtr, out SteamInventoryResult_t pResultHandle, [In, Out] SteamItemDef_t[] pArrayGenerate, [In, Out] uint[] punArrayGenerateQuantity, uint unArrayGenerateLength, [In, Out] SteamItemInstanceID_t[] pArrayDestroy, [In, Out] uint[] punArrayDestroyQuantity, uint unArrayDestroyLength); // 0x101DE4D0-0x101DE580
		public static extern bool ISteamInventory_TransferItemQuantity(IntPtr instancePtr, out SteamInventoryResult_t pResultHandle, SteamItemInstanceID_t itemIdSource, uint unQuantity, SteamItemInstanceID_t itemIdDest); // 0x101DF500-0x101DF580
		public static extern void ISteamInventory_SendItemDropHeartbeat(IntPtr instancePtr); // 0x101DEEB0-0x101DEF10
		public static extern bool ISteamInventory_TriggerItemDrop(IntPtr instancePtr, out SteamInventoryResult_t pResultHandle, SteamItemDef_t dropListDefinition); // 0x101DF580-0x101DF5F0
		public static extern bool ISteamInventory_TradeItems(IntPtr instancePtr, out SteamInventoryResult_t pResultHandle, CSteamID steamIDTradePartner, [In, Out] SteamItemInstanceID_t[] pArrayGive, [In, Out] uint[] pArrayGiveQuantity, uint nArrayGiveLength, [In, Out] SteamItemInstanceID_t[] pArrayGet, [In, Out] uint[] pArrayGetQuantity, uint nArrayGetLength); // 0x101DF450-0x101DF500
		public static extern bool ISteamInventory_LoadItemDefinitions(IntPtr instancePtr); // 0x101DECB0-0x101DED20
		public static extern bool ISteamInventory_GetItemDefinitionIDs(IntPtr instancePtr, [In, Out] SteamItemDef_t[] pItemDefIDs, out uint punItemDefIDsArraySize); // 0x101DE700-0x101DE780
		public static extern bool ISteamInventory_GetItemDefinitionProperty(IntPtr instancePtr, SteamItemDef_t iDefinition, InteropHelp.UTF8StringHandle pchPropertyName, IntPtr pchValueBuffer, ref uint punValueBufferSizeOut); // 0x101DE780-0x101DE840
		public static extern ulong ISteamInventory_RequestEligiblePromoItemDefinitionsIDs(IntPtr instancePtr, CSteamID steamID); // 0x101DEDE0-0x101DEE50
		public static extern bool ISteamInventory_GetEligiblePromoItemDefinitionIDs(IntPtr instancePtr, CSteamID steamID, [In, Out] SteamItemDef_t[] pItemDefIDs, ref uint punItemDefIDsArraySize); // 0x101DE680-0x101DE700
		public static extern ulong ISteamInventory_StartPurchase(IntPtr instancePtr, [In, Out] SteamItemDef_t[] pArrayItemDefs, [In, Out] uint[] punArrayQuantity, uint unArrayLength); // 0x101DF2F0-0x101DF380
		public static extern ulong ISteamInventory_RequestPrices(IntPtr instancePtr); // 0x101DEE50-0x101DEEB0
		public static extern uint ISteamInventory_GetNumItemsWithPrices(IntPtr instancePtr); // 0x101DE9C0-0x101DEA20
		public static extern bool ISteamInventory_GetItemsWithPrices(IntPtr instancePtr, [In, Out] SteamItemDef_t[] pArrayItemDefs, [In, Out] ulong[] pPrices, uint unArrayLength); // 0x101DE930-0x101DE9C0
		public static extern bool ISteamInventory_GetItemPrice(IntPtr instancePtr, SteamItemDef_t iDefinition, out ulong pPrice); // 0x101DE840-0x101DE8B0
		public static extern ulong ISteamInventory_StartUpdateProperties(IntPtr instancePtr); // 0x101DF380-0x101DF3E0
		public static extern bool ISteamInventory_RemoveProperty(IntPtr instancePtr, SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, InteropHelp.UTF8StringHandle pchPropertyName); // 0x101DED20-0x101DEDE0
		public static extern bool ISteamInventory_SetProperty(IntPtr instancePtr, SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, InteropHelp.UTF8StringHandle pchPropertyName, InteropHelp.UTF8StringHandle pchPropertyValue); // 0x101DF1F0-0x101DF2F0
		public static extern bool ISteamInventory_SetProperty0(IntPtr instancePtr, SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, InteropHelp.UTF8StringHandle pchPropertyName, bool bValue); // 0x101DEF90-0x101DF050
		public static extern bool ISteamInventory_SetProperty1(IntPtr instancePtr, SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, InteropHelp.UTF8StringHandle pchPropertyName, long nValue); // 0x101DF050-0x101DF120
		public static extern bool ISteamInventory_SetProperty2(IntPtr instancePtr, SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, InteropHelp.UTF8StringHandle pchPropertyName, float flValue); // 0x101DF120-0x101DF1F0
		public static extern bool ISteamInventory_SubmitUpdateProperties(IntPtr instancePtr, SteamInventoryUpdateHandle_t handle, out SteamInventoryResult_t pResultHandle); // 0x101DF3E0-0x101DF450
		public static extern int ISteamMatchmaking_GetFavoriteGameCount(IntPtr instancePtr); // 0x101E0330-0x101E0390
		public static extern bool ISteamMatchmaking_GetFavoriteGame(IntPtr instancePtr, int iGame, out AppId_t pnAppID, out uint pnIP, out ushort pnConnPort, out ushort pnQueryPort, out uint punFlags, out uint pRTime32LastPlayedOnServer); // 0x101E0390-0x101E0410
		public static extern int ISteamMatchmaking_AddFavoriteGame(IntPtr instancePtr, AppId_t nAppID, uint nIP, ushort nConnPort, ushort nQueryPort, uint unFlags, uint rTime32LastPlayedOnServer); // 0x101DFD60-0x101DFDE0
		public static extern bool ISteamMatchmaking_RemoveFavoriteGame(IntPtr instancePtr, AppId_t nAppID, uint nIP, ushort nConnPort, ushort nQueryPort, uint unFlags); // 0x101E0B20-0x101E0BA0
		public static extern ulong ISteamMatchmaking_RequestLobbyList(IntPtr instancePtr); // 0x101E0C10-0x101E0C70
		public static extern void ISteamMatchmaking_AddRequestLobbyListStringFilter(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchKeyToMatch, InteropHelp.UTF8StringHandle pchValueToMatch, ELobbyComparison eComparisonType); // 0x101E0100-0x101E0200
		public static extern void ISteamMatchmaking_AddRequestLobbyListNumericalFilter(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchKeyToMatch, int nValueToMatch, ELobbyComparison eComparisonType); // 0x101DFFE0-0x101E0090
		public static extern void ISteamMatchmaking_AddRequestLobbyListNearValueFilter(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchKeyToMatch, int nValueToBeCloseTo); // 0x101DFF30-0x101DFFE0
		public static extern void ISteamMatchmaking_AddRequestLobbyListFilterSlotsAvailable(IntPtr instancePtr, int nSlotsAvailable); // 0x101DFEC0-0x101DFF30
		public static extern void ISteamMatchmaking_AddRequestLobbyListDistanceFilter(IntPtr instancePtr, ELobbyDistanceFilter eLobbyDistanceFilter); // 0x101DFE50-0x101DFEC0
		public static extern void ISteamMatchmaking_AddRequestLobbyListResultCountFilter(IntPtr instancePtr, int cMaxResults); // 0x101E0090-0x101E0100
		public static extern void ISteamMatchmaking_AddRequestLobbyListCompatibleMembersFilter(IntPtr instancePtr, CSteamID steamIDLobby); // 0x101DFDE0-0x101DFE50
		public static extern ulong ISteamMatchmaking_GetLobbyByIndex(IntPtr instancePtr, int iLobby); // 0x101E0410-0x101E0480
		public static extern ulong ISteamMatchmaking_CreateLobby(IntPtr instancePtr, ELobbyType eLobbyType, int cMaxMembers); // 0x101E0200-0x101E0270
		public static extern ulong ISteamMatchmaking_JoinLobby(IntPtr instancePtr, CSteamID steamIDLobby); // 0x101E0A40-0x101E0AB0
		public static extern void ISteamMatchmaking_LeaveLobby(IntPtr instancePtr, CSteamID steamIDLobby); // 0x101E0AB0-0x101E0B20
		public static extern bool ISteamMatchmaking_InviteUserToLobby(IntPtr instancePtr, CSteamID steamIDLobby, CSteamID steamIDInvitee); // 0x101E09C0-0x101E0A40
		public static extern int ISteamMatchmaking_GetNumLobbyMembers(IntPtr instancePtr, CSteamID steamIDLobby); // 0x101E0950-0x101E09C0
		public static extern ulong ISteamMatchmaking_GetLobbyMemberByIndex(IntPtr instancePtr, CSteamID steamIDLobby, int iMember); // 0x101E0740-0x101E07B0
		public static extern IntPtr ISteamMatchmaking_GetLobbyData(IntPtr instancePtr, CSteamID steamIDLobby, InteropHelp.UTF8StringHandle pchKey); // 0x101E0600-0x101E06C0
		public static extern bool ISteamMatchmaking_SetLobbyData(IntPtr instancePtr, CSteamID steamIDLobby, InteropHelp.UTF8StringHandle pchKey, InteropHelp.UTF8StringHandle pchValue); // 0x101E0D70-0x101E0E70
		public static extern int ISteamMatchmaking_GetLobbyDataCount(IntPtr instancePtr, CSteamID steamIDLobby); // 0x101E0590-0x101E0600
		public static extern bool ISteamMatchmaking_GetLobbyDataByIndex(IntPtr instancePtr, CSteamID steamIDLobby, int iLobbyData, IntPtr pchKey, int cchKeyBufferSize, IntPtr pchValue, int cchValueBufferSize); // 0x101E0510-0x101E0590
		public static extern bool ISteamMatchmaking_DeleteLobbyData(IntPtr instancePtr, CSteamID steamIDLobby, InteropHelp.UTF8StringHandle pchKey); // 0x101E0270-0x101E0330
		public static extern IntPtr ISteamMatchmaking_GetLobbyMemberData(IntPtr instancePtr, CSteamID steamIDLobby, CSteamID steamIDUser, InteropHelp.UTF8StringHandle pchKey); // 0x101E07B0-0x101E0870
		public static extern void ISteamMatchmaking_SetLobbyMemberData(IntPtr instancePtr, CSteamID steamIDLobby, InteropHelp.UTF8StringHandle pchKey, InteropHelp.UTF8StringHandle pchValue); // 0x101E0F60-0x101E1060
		public static extern bool ISteamMatchmaking_SendLobbyChatMsg(IntPtr instancePtr, CSteamID steamIDLobby, byte[] pvMsgBody, int cubMsgBody); // 0x101E0C70-0x101E0CF0
		public static extern int ISteamMatchmaking_GetLobbyChatEntry(IntPtr instancePtr, CSteamID steamIDLobby, int iChatID, out CSteamID pSteamIDUser, byte[] pvData, int cubData, out EChatEntryType peChatEntryType); // 0x101E0480-0x101E0510
		public static extern bool ISteamMatchmaking_RequestLobbyData(IntPtr instancePtr, CSteamID steamIDLobby); // 0x101E0BA0-0x101E0C10
		public static extern void ISteamMatchmaking_SetLobbyGameServer(IntPtr instancePtr, CSteamID steamIDLobby, uint unGameServerIP, ushort unGameServerPort, CSteamID steamIDGameServer); // 0x101E0E70-0x101E0EF0
		public static extern bool ISteamMatchmaking_GetLobbyGameServer(IntPtr instancePtr, CSteamID steamIDLobby, out uint punGameServerIP, out ushort punGameServerPort, out CSteamID psteamIDGameServer); // 0x101E06C0-0x101E0740
		public static extern bool ISteamMatchmaking_SetLobbyMemberLimit(IntPtr instancePtr, CSteamID steamIDLobby, int cMaxMembers); // 0x101E1060-0x101E10D0
		public static extern int ISteamMatchmaking_GetLobbyMemberLimit(IntPtr instancePtr, CSteamID steamIDLobby); // 0x101E0870-0x101E08E0
		public static extern bool ISteamMatchmaking_SetLobbyType(IntPtr instancePtr, CSteamID steamIDLobby, ELobbyType eLobbyType); // 0x101E1150-0x101E11C0
		public static extern bool ISteamMatchmaking_SetLobbyJoinable(IntPtr instancePtr, CSteamID steamIDLobby, bool bLobbyJoinable); // 0x101E0EF0-0x101E0F60
		public static extern ulong ISteamMatchmaking_GetLobbyOwner(IntPtr instancePtr, CSteamID steamIDLobby); // 0x101E08E0-0x101E0950
		public static extern bool ISteamMatchmaking_SetLobbyOwner(IntPtr instancePtr, CSteamID steamIDLobby, CSteamID steamIDNewOwner); // 0x101E10D0-0x101E1150
		public static extern bool ISteamMatchmaking_SetLinkedLobby(IntPtr instancePtr, CSteamID steamIDLobby, CSteamID steamIDLobbyDependent); // 0x101E0CF0-0x101E0D70
		public static extern IntPtr ISteamMatchmakingServers_RequestInternetServerList(IntPtr instancePtr, AppId_t iApp, IntPtr ppchFilters, uint nFilters, IntPtr pRequestServersResponse); // 0x101DFBA0-0x101DFC10
		public static extern IntPtr ISteamMatchmakingServers_RequestLANServerList(IntPtr instancePtr, AppId_t iApp, IntPtr pRequestServersResponse); // 0x101DFC10-0x101DFC80
		public static extern IntPtr ISteamMatchmakingServers_RequestFriendsServerList(IntPtr instancePtr, AppId_t iApp, IntPtr ppchFilters, uint nFilters, IntPtr pRequestServersResponse); // 0x101DFAC0-0x101DFB30
		public static extern IntPtr ISteamMatchmakingServers_RequestFavoritesServerList(IntPtr instancePtr, AppId_t iApp, IntPtr ppchFilters, uint nFilters, IntPtr pRequestServersResponse); // 0x101DFA50-0x101DFAC0
		public static extern IntPtr ISteamMatchmakingServers_RequestHistoryServerList(IntPtr instancePtr, AppId_t iApp, IntPtr ppchFilters, uint nFilters, IntPtr pRequestServersResponse); // 0x101DFB30-0x101DFBA0
		public static extern IntPtr ISteamMatchmakingServers_RequestSpectatorServerList(IntPtr instancePtr, AppId_t iApp, IntPtr ppchFilters, uint nFilters, IntPtr pRequestServersResponse); // 0x101DFC80-0x101DFCF0
		public static extern void ISteamMatchmakingServers_ReleaseRequest(IntPtr instancePtr, HServerListRequest hServerListRequest); // 0x101DF9E0-0x101DFA50
		public static extern IntPtr ISteamMatchmakingServers_GetServerDetails(IntPtr instancePtr, HServerListRequest hRequest, int iServer); // 0x101DF740-0x101DF7B0
		public static extern void ISteamMatchmakingServers_CancelQuery(IntPtr instancePtr, HServerListRequest hRequest); // 0x101DF5F0-0x101DF660
		public static extern void ISteamMatchmakingServers_RefreshQuery(IntPtr instancePtr, HServerListRequest hRequest); // 0x101DF900-0x101DF970
		public static extern bool ISteamMatchmakingServers_IsRefreshing(IntPtr instancePtr, HServerListRequest hRequest); // 0x101DF7B0-0x101DF820
		public static extern int ISteamMatchmakingServers_GetServerCount(IntPtr instancePtr, HServerListRequest hRequest); // 0x101DF6D0-0x101DF740
		public static extern void ISteamMatchmakingServers_RefreshServer(IntPtr instancePtr, HServerListRequest hRequest, int iServer); // 0x101DF970-0x101DF9E0
		public static extern int ISteamMatchmakingServers_PingServer(IntPtr instancePtr, uint unIP, ushort usPort, IntPtr pRequestServersResponse); // 0x101DF820-0x101DF890
		public static extern int ISteamMatchmakingServers_PlayerDetails(IntPtr instancePtr, uint unIP, ushort usPort, IntPtr pRequestServersResponse); // 0x101DF890-0x101DF900
		public static extern int ISteamMatchmakingServers_ServerRules(IntPtr instancePtr, uint unIP, ushort usPort, IntPtr pRequestServersResponse); // 0x101DFCF0-0x101DFD60
		public static extern void ISteamMatchmakingServers_CancelServerQuery(IntPtr instancePtr, HServerQuery hServerQuery); // 0x101DF660-0x101DF6D0
		public static extern bool ISteamMusic_BIsEnabled(IntPtr instancePtr); // 0x101E2140-0x101E21B0
		public static extern bool ISteamMusic_BIsPlaying(IntPtr instancePtr); // 0x101E21B0-0x101E2220
		public static extern AudioPlayback_Status ISteamMusic_GetPlaybackStatus(IntPtr instancePtr); // 0x101E2220-0x101E2280
		public static extern void ISteamMusic_Play(IntPtr instancePtr); // 0x101E2410-0x101E2470
		public static extern void ISteamMusic_Pause(IntPtr instancePtr); // 0x101E22F0-0x101E2350
		public static extern void ISteamMusic_PlayPrevious(IntPtr instancePtr); // 0x101E23B0-0x101E2410
		public static extern void ISteamMusic_PlayNext(IntPtr instancePtr); // 0x101E2350-0x101E23B0
		public static extern void ISteamMusic_SetVolume(IntPtr instancePtr, float flVolume); // 0x101E2470-0x101E24E0
		public static extern float ISteamMusic_GetVolume(IntPtr instancePtr); // 0x101E2280-0x101E22F0
		public static extern bool ISteamMusicRemote_RegisterSteamMusicRemote(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchName); // 0x101E18C0-0x101E1970
		public static extern bool ISteamMusicRemote_DeregisterSteamMusicRemote(IntPtr instancePtr); // 0x101E13F0-0x101E1460
		public static extern bool ISteamMusicRemote_BIsCurrentMusicRemote(IntPtr instancePtr); // 0x101E1230-0x101E12A0
		public static extern bool ISteamMusicRemote_BActivationSuccess(IntPtr instancePtr, bool bValue); // 0x101E11C0-0x101E1230
		public static extern bool ISteamMusicRemote_SetDisplayName(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchDisplayName); // 0x101E1B30-0x101E1BE0
		public static extern bool ISteamMusicRemote_SetPNGIcon_64x64(IntPtr instancePtr, byte[] pvBuffer, uint cbBufferLength); // 0x101E1BE0-0x101E1C60
		public static extern bool ISteamMusicRemote_EnablePlayPrevious(IntPtr instancePtr, bool bValue); // 0x101E1540-0x101E15B0
		public static extern bool ISteamMusicRemote_EnablePlayNext(IntPtr instancePtr, bool bValue); // 0x101E14D0-0x101E1540
		public static extern bool ISteamMusicRemote_EnableShuffled(IntPtr instancePtr, bool bValue); // 0x101E1690-0x101E1700
		public static extern bool ISteamMusicRemote_EnableLooped(IntPtr instancePtr, bool bValue); // 0x101E1460-0x101E14D0
		public static extern bool ISteamMusicRemote_EnableQueue(IntPtr instancePtr, bool bValue); // 0x101E1620-0x101E1690
		public static extern bool ISteamMusicRemote_EnablePlaylists(IntPtr instancePtr, bool bValue); // 0x101E15B0-0x101E1620
		public static extern bool ISteamMusicRemote_UpdatePlaybackStatus(IntPtr instancePtr, AudioPlayback_Status nStatus); // 0x101E1FF0-0x101E2060
		public static extern bool ISteamMusicRemote_UpdateShuffled(IntPtr instancePtr, bool bValue); // 0x101E2060-0x101E20D0
		public static extern bool ISteamMusicRemote_UpdateLooped(IntPtr instancePtr, bool bValue); // 0x101E1F80-0x101E1FF0
		public static extern bool ISteamMusicRemote_UpdateVolume(IntPtr instancePtr, float flValue); // 0x101E20D0-0x101E2140
		public static extern bool ISteamMusicRemote_CurrentEntryWillChange(IntPtr instancePtr); // 0x101E1380-0x101E13F0
		public static extern bool ISteamMusicRemote_CurrentEntryIsAvailable(IntPtr instancePtr, bool bAvailable); // 0x101E1310-0x101E1380
		public static extern bool ISteamMusicRemote_UpdateCurrentEntryText(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchText); // 0x101E1ED0-0x101E1F80
		public static extern bool ISteamMusicRemote_UpdateCurrentEntryElapsedSeconds(IntPtr instancePtr, int nValue); // 0x101E1E60-0x101E1ED0
		public static extern bool ISteamMusicRemote_UpdateCurrentEntryCoverArt(IntPtr instancePtr, byte[] pvBuffer, uint cbBufferLength); // 0x101E1DE0-0x101E1E60
		public static extern bool ISteamMusicRemote_CurrentEntryDidChange(IntPtr instancePtr); // 0x101E12A0-0x101E1310
		public static extern bool ISteamMusicRemote_QueueWillChange(IntPtr instancePtr); // 0x101E1850-0x101E18C0
		public static extern bool ISteamMusicRemote_ResetQueueEntries(IntPtr instancePtr); // 0x101E19E0-0x101E1A50
		public static extern bool ISteamMusicRemote_SetQueueEntry(IntPtr instancePtr, int nID, int nPosition, InteropHelp.UTF8StringHandle pchEntryText); // 0x101E1D20-0x101E1DE0
		public static extern bool ISteamMusicRemote_SetCurrentQueueEntry(IntPtr instancePtr, int nID); // 0x101E1AC0-0x101E1B30
		public static extern bool ISteamMusicRemote_QueueDidChange(IntPtr instancePtr); // 0x101E17E0-0x101E1850
		public static extern bool ISteamMusicRemote_PlaylistWillChange(IntPtr instancePtr); // 0x101E1770-0x101E17E0
		public static extern bool ISteamMusicRemote_ResetPlaylistEntries(IntPtr instancePtr); // 0x101E1970-0x101E19E0
		public static extern bool ISteamMusicRemote_SetPlaylistEntry(IntPtr instancePtr, int nID, int nPosition, InteropHelp.UTF8StringHandle pchEntryText); // 0x101E1C60-0x101E1D20
		public static extern bool ISteamMusicRemote_SetCurrentPlaylistEntry(IntPtr instancePtr, int nID); // 0x101E1A50-0x101E1AC0
		public static extern bool ISteamMusicRemote_PlaylistDidChange(IntPtr instancePtr); // 0x101E1700-0x101E1770
		public static extern bool ISteamNetworking_SendP2PPacket(IntPtr instancePtr, CSteamID steamIDRemote, byte[] pubData, uint cubData, EP2PSend eP2PSendType, int nChannel); // 0x101E2E80-0x101E2F10
		public static extern bool ISteamNetworking_IsP2PPacketAvailable(IntPtr instancePtr, out uint pcubMsgSize, int nChannel); // 0x101E2BF0-0x101E2C60
		public static extern bool ISteamNetworking_ReadP2PPacket(IntPtr instancePtr, byte[] pubDest, uint cubDest, out uint pcubMsgSize, out CSteamID psteamIDRemote, int nChannel); // 0x101E2C60-0x101E2CF0
		public static extern bool ISteamNetworking_AcceptP2PSessionWithUser(IntPtr instancePtr, CSteamID steamIDRemote); // 0x101E24E0-0x101E2550
		public static extern bool ISteamNetworking_CloseP2PSessionWithUser(IntPtr instancePtr, CSteamID steamIDRemote); // 0x101E2630-0x101E26A0
		public static extern bool ISteamNetworking_CloseP2PChannelWithUser(IntPtr instancePtr, CSteamID steamIDRemote, int nChannel); // 0x101E25C0-0x101E2630
		public static extern bool ISteamNetworking_GetP2PSessionState(IntPtr instancePtr, CSteamID steamIDRemote, out P2PSessionState_t pConnectionState); // 0x101E29B0-0x101E2A20
		public static extern bool ISteamNetworking_AllowP2PPacketRelay(IntPtr instancePtr, bool bAllow); // 0x101E2550-0x101E25C0
		public static extern uint ISteamNetworking_CreateListenSocket(IntPtr instancePtr, int nVirtualP2PPort, uint nIP, ushort nPort, bool bAllowUseOfPacketRelay); // 0x101E2710-0x101E2780
		public static extern uint ISteamNetworking_CreateP2PConnectionSocket(IntPtr instancePtr, CSteamID steamIDTarget, int nVirtualPort, int nTimeoutSec, bool bAllowUseOfPacketRelay); // 0x101E2780-0x101E27F0
		public static extern uint ISteamNetworking_CreateConnectionSocket(IntPtr instancePtr, uint nIP, ushort nPort, int nTimeoutSec); // 0x101E26A0-0x101E2710
		public static extern bool ISteamNetworking_DestroySocket(IntPtr instancePtr, SNetSocket_t hSocket, bool bNotifyRemoteEnd); // 0x101E2860-0x101E28D0
		public static extern bool ISteamNetworking_DestroyListenSocket(IntPtr instancePtr, SNetListenSocket_t hSocket, bool bNotifyRemoteEnd); // 0x101E27F0-0x101E2860
		public static extern bool ISteamNetworking_SendDataOnSocket(IntPtr instancePtr, SNetSocket_t hSocket, byte[] pubData, uint cubData, bool bReliable); // 0x101E2E00-0x101E2E80
		public static extern bool ISteamNetworking_IsDataAvailableOnSocket(IntPtr instancePtr, SNetSocket_t hSocket, out uint pcubMsgSize); // 0x101E2B10-0x101E2B80
		public static extern bool ISteamNetworking_RetrieveDataFromSocket(IntPtr instancePtr, SNetSocket_t hSocket, byte[] pubDest, uint cubDest, out uint pcubMsgSize); // 0x101E2CF0-0x101E2D70
		public static extern bool ISteamNetworking_IsDataAvailable(IntPtr instancePtr, SNetListenSocket_t hListenSocket, out uint pcubMsgSize, out SNetSocket_t phSocket); // 0x101E2B80-0x101E2BF0
		public static extern bool ISteamNetworking_RetrieveData(IntPtr instancePtr, SNetListenSocket_t hListenSocket, byte[] pubDest, uint cubDest, out uint pcubMsgSize, out SNetSocket_t phSocket); // 0x101E2D70-0x101E2E00
		public static extern bool ISteamNetworking_GetSocketInfo(IntPtr instancePtr, SNetSocket_t hSocket, out CSteamID pSteamIDRemote, out int peSocketStatus, out uint punIPRemote, out ushort punPortRemote); // 0x101E2A90-0x101E2B10
		public static extern bool ISteamNetworking_GetListenSocketInfo(IntPtr instancePtr, SNetListenSocket_t hListenSocket, out uint pnIP, out ushort pnPort); // 0x101E28D0-0x101E2940
		public static extern ESNetSocketConnectionType ISteamNetworking_GetSocketConnectionType(IntPtr instancePtr, SNetSocket_t hSocket); // 0x101E2A20-0x101E2A90
		public static extern int ISteamNetworking_GetMaxPacketSize(IntPtr instancePtr, SNetSocket_t hSocket); // 0x101E2940-0x101E29B0
		public static extern bool ISteamParentalSettings_BIsParentalLockEnabled(IntPtr instancePtr); // 0x101E30D0-0x101E3140
		public static extern bool ISteamParentalSettings_BIsParentalLockLocked(IntPtr instancePtr); // 0x101E3140-0x101E31B0
		public static extern bool ISteamParentalSettings_BIsAppBlocked(IntPtr instancePtr, AppId_t nAppID); // 0x101E2F10-0x101E2F80
		public static extern bool ISteamParentalSettings_BIsAppInBlockList(IntPtr instancePtr, AppId_t nAppID); // 0x101E2F80-0x101E2FF0
		public static extern bool ISteamParentalSettings_BIsFeatureBlocked(IntPtr instancePtr, EParentalFeature eFeature); // 0x101E2FF0-0x101E3060
		public static extern bool ISteamParentalSettings_BIsFeatureInBlockList(IntPtr instancePtr, EParentalFeature eFeature); // 0x101E3060-0x101E30D0
		public static extern bool ISteamRemoteStorage_FileWrite(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchFile, byte[] pvData, int cubData); // 0x101E3DB0-0x101E3E70
		public static extern int ISteamRemoteStorage_FileRead(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchFile, byte[] pvData, int cubDataToRead); // 0x101E3940-0x101E3A00
		public static extern ulong ISteamRemoteStorage_FileWriteAsync(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchFile, byte[] pvData, uint cubData); // 0x101E3AC0-0x101E3B90
		public static extern ulong ISteamRemoteStorage_FileReadAsync(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchFile, uint nOffset, uint cubToRead); // 0x101E3880-0x101E3940
		public static extern bool ISteamRemoteStorage_FileReadAsyncComplete(IntPtr instancePtr, SteamAPICall_t hReadCall, byte[] pvBuffer, uint cubToRead); // 0x101E3800-0x101E3880
		public static extern bool ISteamRemoteStorage_FileForget(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchFile); // 0x101E36A0-0x101E3750
		public static extern bool ISteamRemoteStorage_FileDelete(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchFile); // 0x101E3540-0x101E35F0
		public static extern ulong ISteamRemoteStorage_FileShare(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchFile); // 0x101E3A00-0x101E3AC0
		public static extern bool ISteamRemoteStorage_SetSyncPlatforms(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchFile, ERemoteStoragePlatform eRemoteStoragePlatform); // 0x101E49F0-0x101E4AB0
		public static extern ulong ISteamRemoteStorage_FileWriteStreamOpen(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchFile); // 0x101E3C70-0x101E3D30
		public static extern bool ISteamRemoteStorage_FileWriteStreamWriteChunk(IntPtr instancePtr, UGCFileWriteStreamHandle_t writeHandle, byte[] pvData, int cubData); // 0x101E3D30-0x101E3DB0
		public static extern bool ISteamRemoteStorage_FileWriteStreamClose(IntPtr instancePtr, UGCFileWriteStreamHandle_t writeHandle); // 0x101E3C00-0x101E3C70
		public static extern bool ISteamRemoteStorage_FileWriteStreamCancel(IntPtr instancePtr, UGCFileWriteStreamHandle_t writeHandle); // 0x101E3B90-0x101E3C00
		public static extern bool ISteamRemoteStorage_FileExists(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchFile); // 0x101E35F0-0x101E36A0
		public static extern bool ISteamRemoteStorage_FilePersisted(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchFile); // 0x101E3750-0x101E3800
		public static extern int ISteamRemoteStorage_GetFileSize(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchFile); // 0x101E4010-0x101E40C0
		public static extern long ISteamRemoteStorage_GetFileTimestamp(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchFile); // 0x101E40C0-0x101E4180
		public static extern ERemoteStoragePlatform ISteamRemoteStorage_GetSyncPlatforms(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchFile); // 0x101E42D0-0x101E4380
		public static extern int ISteamRemoteStorage_GetFileCount(IntPtr instancePtr); // 0x101E3F40-0x101E3FA0
		public static extern IntPtr ISteamRemoteStorage_GetFileNameAndSize(IntPtr instancePtr, int iFile, out int pnFileSizeInBytes); // 0x101E3FA0-0x101E4010
		public static extern bool ISteamRemoteStorage_GetQuota(IntPtr instancePtr, out ulong pnTotalBytes, out ulong puAvailableBytes); // 0x101E4260-0x101E42D0
		public static extern bool ISteamRemoteStorage_IsCloudEnabledForAccount(IntPtr instancePtr); // 0x101E44F0-0x101E4560
		public static extern bool ISteamRemoteStorage_IsCloudEnabledForApp(IntPtr instancePtr); // 0x101E4560-0x101E45D0
		public static extern void ISteamRemoteStorage_SetCloudEnabledForApp(IntPtr instancePtr, bool bEnabled); // 0x101E4980-0x101E49F0
		public static extern ulong ISteamRemoteStorage_UGCDownload(IntPtr instancePtr, UGCHandle_t hContent, uint unPriority); // 0x101E4C50-0x101E4CC0
		public static extern bool ISteamRemoteStorage_GetUGCDownloadProgress(IntPtr instancePtr, UGCHandle_t hContent, out int pnBytesDownloaded, out int pnBytesExpected); // 0x101E4400-0x101E4480
		public static extern bool ISteamRemoteStorage_GetUGCDetails(IntPtr instancePtr, UGCHandle_t hContent, out AppId_t pnAppID, out IntPtr ppchName, out int pnFileSizeInBytes, out CSteamID pSteamIDOwner); // 0x101E4380-0x101E4400
		public static extern int ISteamRemoteStorage_UGCRead(IntPtr instancePtr, UGCHandle_t hContent, byte[] pvData, int cubDataToRead, uint cOffset, EUGCReadAction eAction); // 0x101E4CC0-0x101E4D40
		public static extern int ISteamRemoteStorage_GetCachedUGCCount(IntPtr instancePtr); // 0x101E3E70-0x101E3ED0
		public static extern ulong ISteamRemoteStorage_GetCachedUGCHandle(IntPtr instancePtr, int iCachedContent); // 0x101E3ED0-0x101E3F40
		public static extern ulong ISteamRemoteStorage_PublishWorkshopFile(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchFile, InteropHelp.UTF8StringHandle pchPreviewFile, AppId_t nConsumerAppId, InteropHelp.UTF8StringHandle pchTitle, InteropHelp.UTF8StringHandle pchDescription, ERemoteStoragePublishedFileVisibility eVisibility, IntPtr pTags, EWorkshopFileType eWorkshopFileType); // 0x101E47D0-0x101E4980
		public static extern ulong ISteamRemoteStorage_CreatePublishedFileUpdateRequest(IntPtr instancePtr, PublishedFileId_t unPublishedFileId); // 0x101E3220-0x101E3290
		public static extern bool ISteamRemoteStorage_UpdatePublishedFileFile(IntPtr instancePtr, PublishedFileUpdateHandle_t updateHandle, InteropHelp.UTF8StringHandle pchFile); // 0x101E4E70-0x101E4F30
		public static extern bool ISteamRemoteStorage_UpdatePublishedFilePreviewFile(IntPtr instancePtr, PublishedFileUpdateHandle_t updateHandle, InteropHelp.UTF8StringHandle pchPreviewFile); // 0x101E4F30-0x101E4FF0
		public static extern bool ISteamRemoteStorage_UpdatePublishedFileTitle(IntPtr instancePtr, PublishedFileUpdateHandle_t updateHandle, InteropHelp.UTF8StringHandle pchTitle); // 0x101E5120-0x101E51E0
		public static extern bool ISteamRemoteStorage_UpdatePublishedFileDescription(IntPtr instancePtr, PublishedFileUpdateHandle_t updateHandle, InteropHelp.UTF8StringHandle pchDescription); // 0x101E4DB0-0x101E4E70
		public static extern bool ISteamRemoteStorage_UpdatePublishedFileVisibility(IntPtr instancePtr, PublishedFileUpdateHandle_t updateHandle, ERemoteStoragePublishedFileVisibility eVisibility); // 0x101E51E0-0x101E5250
		public static extern bool ISteamRemoteStorage_UpdatePublishedFileTags(IntPtr instancePtr, PublishedFileUpdateHandle_t updateHandle, IntPtr pTags); // 0x101E50B0-0x101E5120
		public static extern ulong ISteamRemoteStorage_CommitPublishedFileUpdate(IntPtr instancePtr, PublishedFileUpdateHandle_t updateHandle); // 0x101E31B0-0x101E3220
		public static extern ulong ISteamRemoteStorage_GetPublishedFileDetails(IntPtr instancePtr, PublishedFileId_t unPublishedFileId, uint unMaxSecondsOld); // 0x101E4180-0x101E41F0
		public static extern ulong ISteamRemoteStorage_DeletePublishedFile(IntPtr instancePtr, PublishedFileId_t unPublishedFileId); // 0x101E3290-0x101E3300
		public static extern ulong ISteamRemoteStorage_EnumerateUserPublishedFiles(IntPtr instancePtr, uint unStartIndex); // 0x101E33F0-0x101E3460
		public static extern ulong ISteamRemoteStorage_SubscribePublishedFile(IntPtr instancePtr, PublishedFileId_t unPublishedFileId); // 0x101E4B20-0x101E4B90
		public static extern ulong ISteamRemoteStorage_EnumerateUserSubscribedFiles(IntPtr instancePtr, uint unStartIndex); // 0x101E34D0-0x101E3540
		public static extern ulong ISteamRemoteStorage_UnsubscribePublishedFile(IntPtr instancePtr, PublishedFileId_t unPublishedFileId); // 0x101E4D40-0x101E4DB0
		public static extern bool ISteamRemoteStorage_UpdatePublishedFileSetChangeDescription(IntPtr instancePtr, PublishedFileUpdateHandle_t updateHandle, InteropHelp.UTF8StringHandle pchChangeDescription); // 0x101E4FF0-0x101E50B0
		public static extern ulong ISteamRemoteStorage_GetPublishedItemVoteDetails(IntPtr instancePtr, PublishedFileId_t unPublishedFileId); // 0x101E41F0-0x101E4260
		public static extern ulong ISteamRemoteStorage_UpdateUserPublishedItemVote(IntPtr instancePtr, PublishedFileId_t unPublishedFileId, bool bVoteUp); // 0x101E5250-0x101E52C0
		public static extern ulong ISteamRemoteStorage_GetUserPublishedItemVoteDetails(IntPtr instancePtr, PublishedFileId_t unPublishedFileId); // 0x101E4480-0x101E44F0
		public static extern ulong ISteamRemoteStorage_EnumerateUserSharedWorkshopFiles(IntPtr instancePtr, CSteamID steamId, uint unStartIndex, IntPtr pRequiredTags, IntPtr pExcludedTags); // 0x101E3460-0x101E34D0
		public static extern ulong ISteamRemoteStorage_PublishVideo(IntPtr instancePtr, EWorkshopVideoProvider eVideoProvider, InteropHelp.UTF8StringHandle pchVideoAccount, InteropHelp.UTF8StringHandle pchVideoIdentifier, InteropHelp.UTF8StringHandle pchPreviewFile, AppId_t nConsumerAppId, InteropHelp.UTF8StringHandle pchTitle, InteropHelp.UTF8StringHandle pchDescription, ERemoteStoragePublishedFileVisibility eVisibility, IntPtr pTags); // 0x101E45D0-0x101E47D0
		public static extern ulong ISteamRemoteStorage_SetUserPublishedFileAction(IntPtr instancePtr, PublishedFileId_t unPublishedFileId, EWorkshopFileAction eAction); // 0x101E4AB0-0x101E4B20
		public static extern ulong ISteamRemoteStorage_EnumeratePublishedFilesByUserAction(IntPtr instancePtr, EWorkshopFileAction eAction, uint unStartIndex); // 0x101E3300-0x101E3370
		public static extern ulong ISteamRemoteStorage_EnumeratePublishedWorkshopFiles(IntPtr instancePtr, EWorkshopEnumerationType eEnumerationType, uint unStartIndex, uint unCount, uint unDays, IntPtr pTags, IntPtr pUserTags); // 0x101E3370-0x101E33F0
		public static extern ulong ISteamRemoteStorage_UGCDownloadToLocation(IntPtr instancePtr, UGCHandle_t hContent, InteropHelp.UTF8StringHandle pchLocation, uint unPriority); // 0x101E4B90-0x101E4C50
		public static extern uint ISteamScreenshots_WriteScreenshot(IntPtr instancePtr, byte[] pubRGB, uint cubRGB, int nWidth, int nHeight); // 0x101E57A0-0x101E5820
		public static extern uint ISteamScreenshots_AddScreenshotToLibrary(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchFilename, InteropHelp.UTF8StringHandle pchThumbnailFilename, int nWidth, int nHeight); // 0x101E52C0-0x101E53C0
		public static extern void ISteamScreenshots_TriggerScreenshot(IntPtr instancePtr); // 0x101E5740-0x101E57A0
		public static extern void ISteamScreenshots_HookScreenshots(IntPtr instancePtr, bool bHook); // 0x101E54C0-0x101E5530
		public static extern bool ISteamScreenshots_SetLocation(IntPtr instancePtr, ScreenshotHandle hScreenshot, InteropHelp.UTF8StringHandle pchLocation); // 0x101E55A0-0x101E5660
		public static extern bool ISteamScreenshots_TagUser(IntPtr instancePtr, ScreenshotHandle hScreenshot, CSteamID steamID); // 0x101E56D0-0x101E5740
		public static extern bool ISteamScreenshots_TagPublishedFile(IntPtr instancePtr, ScreenshotHandle hScreenshot, PublishedFileId_t unPublishedFileID); // 0x101E5660-0x101E56D0
		public static extern bool ISteamScreenshots_IsScreenshotsHooked(IntPtr instancePtr); // 0x101E5530-0x101E55A0
		public static extern uint ISteamScreenshots_AddVRScreenshotToLibrary(IntPtr instancePtr, EVRScreenshotType eType, InteropHelp.UTF8StringHandle pchFilename, InteropHelp.UTF8StringHandle pchVRFilename); // 0x101E53C0-0x101E54C0
		public static extern ulong ISteamUGC_CreateQueryUserUGCRequest(IntPtr instancePtr, AccountID_t unAccountID, EUserUGCList eListType, EUGCMatchingUGCType eMatchingUGCType, EUserUGCListSortOrder eSortOrder, AppId_t nCreatorAppID, AppId_t nConsumerAppID, uint unPage); // 0x101E6080-0x101E6100
		public static extern ulong ISteamUGC_CreateQueryAllUGCRequest(IntPtr instancePtr, EUGCQuery eQueryType, EUGCMatchingUGCType eMatchingeMatchingUGCTypeFileType, AppId_t nCreatorAppID, AppId_t nConsumerAppID, uint unPage); // 0x101E5FA0-0x101E6010
		public static extern ulong ISteamUGC_CreateQueryUGCDetailsRequest(IntPtr instancePtr, [In, Out] PublishedFileId_t[] pvecPublishedFileID, uint unNumPublishedFileIDs); // 0x101E6010-0x101E6080
		public static extern ulong ISteamUGC_SendQueryUGCRequest(IntPtr instancePtr, UGCQueryHandle_t handle); // 0x101E6D90-0x101E6E00
		public static extern bool ISteamUGC_GetQueryUGCResult(IntPtr instancePtr, UGCQueryHandle_t handle, uint index, out SteamUGCDetails_t pDetails); // 0x101E67F0-0x101E68D0
		public static extern bool ISteamUGC_GetQueryUGCPreviewURL(IntPtr instancePtr, UGCQueryHandle_t handle, uint index, IntPtr pchURL, uint cchURLSize); // 0x101E6770-0x101E67F0
		public static extern bool ISteamUGC_GetQueryUGCMetadata(IntPtr instancePtr, UGCQueryHandle_t handle, uint index, IntPtr pchMetadata, uint cchMetadatasize); // 0x101E6610-0x101E6690
		public static extern bool ISteamUGC_GetQueryUGCChildren(IntPtr instancePtr, UGCQueryHandle_t handle, uint index, [In, Out] PublishedFileId_t[] pvecPublishedFileID, uint cMaxEntries); // 0x101E6510-0x101E6590
		public static extern bool ISteamUGC_GetQueryUGCStatistic(IntPtr instancePtr, UGCQueryHandle_t handle, uint index, EItemStatistic eStatType, out ulong pStatValue); // 0x101E68D0-0x101E6950
		public static extern uint ISteamUGC_GetQueryUGCNumAdditionalPreviews(IntPtr instancePtr, UGCQueryHandle_t handle, uint index); // 0x101E6690-0x101E6700
		public static extern bool ISteamUGC_GetQueryUGCAdditionalPreview(IntPtr instancePtr, UGCQueryHandle_t handle, uint index, uint previewIndex, IntPtr pchURLOrVideoID, uint cchURLSize, IntPtr pchOriginalFileName, uint cchOriginalFileNameSize, out EItemPreviewType pPreviewType); // 0x101E6490-0x101E6510
		public static extern uint ISteamUGC_GetQueryUGCNumKeyValueTags(IntPtr instancePtr, UGCQueryHandle_t handle, uint index); // 0x101E6700-0x101E6770
		public static extern bool ISteamUGC_GetQueryUGCKeyValueTag(IntPtr instancePtr, UGCQueryHandle_t handle, uint index, uint keyValueTagIndex, IntPtr pchKey, uint cchKeySize, IntPtr pchValue, uint cchValueSize); // 0x101E6590-0x101E6610
		public static extern bool ISteamUGC_ReleaseQueryUGCRequest(IntPtr instancePtr, UGCQueryHandle_t handle); // 0x101E6A30-0x101E6AA0
		public static extern bool ISteamUGC_AddRequiredTag(IntPtr instancePtr, UGCQueryHandle_t handle, InteropHelp.UTF8StringHandle pTagName); // 0x101E5DB0-0x101E5E70
		public static extern bool ISteamUGC_AddExcludedTag(IntPtr instancePtr, UGCQueryHandle_t handle, InteropHelp.UTF8StringHandle pTagName); // 0x101E5900-0x101E59C0
		public static extern bool ISteamUGC_SetReturnOnlyIDs(IntPtr instancePtr, UGCQueryHandle_t handle, bool bReturnOnlyIDs); // 0x101E7860-0x101E78D0
		public static extern bool ISteamUGC_SetReturnKeyValueTags(IntPtr instancePtr, UGCQueryHandle_t handle, bool bReturnKeyValueTags); // 0x101E7710-0x101E7780
		public static extern bool ISteamUGC_SetReturnLongDescription(IntPtr instancePtr, UGCQueryHandle_t handle, bool bReturnLongDescription); // 0x101E7780-0x101E77F0
		public static extern bool ISteamUGC_SetReturnMetadata(IntPtr instancePtr, UGCQueryHandle_t handle, bool bReturnMetadata); // 0x101E77F0-0x101E7860
		public static extern bool ISteamUGC_SetReturnChildren(IntPtr instancePtr, UGCQueryHandle_t handle, bool bReturnChildren); // 0x101E76A0-0x101E7710
		public static extern bool ISteamUGC_SetReturnAdditionalPreviews(IntPtr instancePtr, UGCQueryHandle_t handle, bool bReturnAdditionalPreviews); // 0x101E7630-0x101E76A0
		public static extern bool ISteamUGC_SetReturnTotalOnly(IntPtr instancePtr, UGCQueryHandle_t handle, bool bReturnTotalOnly); // 0x101E7940-0x101E79B0
		public static extern bool ISteamUGC_SetReturnPlaytimeStats(IntPtr instancePtr, UGCQueryHandle_t handle, uint unDays); // 0x101E78D0-0x101E7940
		public static extern bool ISteamUGC_SetLanguage(IntPtr instancePtr, UGCQueryHandle_t handle, InteropHelp.UTF8StringHandle pchLanguage); // 0x101E7490-0x101E7550
		public static extern bool ISteamUGC_SetAllowCachedResponse(IntPtr instancePtr, UGCQueryHandle_t handle, uint unMaxAgeSeconds); // 0x101E6E00-0x101E6E70
		public static extern bool ISteamUGC_SetCloudFileNameFilter(IntPtr instancePtr, UGCQueryHandle_t handle, InteropHelp.UTF8StringHandle pMatchCloudFileName); // 0x101E6E70-0x101E6F30
		public static extern bool ISteamUGC_SetMatchAnyTag(IntPtr instancePtr, UGCQueryHandle_t handle, bool bMatchAnyTag); // 0x101E7550-0x101E75C0
		public static extern bool ISteamUGC_SetSearchText(IntPtr instancePtr, UGCQueryHandle_t handle, InteropHelp.UTF8StringHandle pSearchText); // 0x101E79B0-0x101E7A70
		public static extern bool ISteamUGC_SetRankedByTrendDays(IntPtr instancePtr, UGCQueryHandle_t handle, uint unDays); // 0x101E75C0-0x101E7630
		public static extern bool ISteamUGC_AddRequiredKeyValueTag(IntPtr instancePtr, UGCQueryHandle_t handle, InteropHelp.UTF8StringHandle pKey, InteropHelp.UTF8StringHandle pValue); // 0x101E5CB0-0x101E5DB0
		public static extern ulong ISteamUGC_RequestUGCDetails(IntPtr instancePtr, PublishedFileId_t nPublishedFileID, uint unMaxAgeSeconds); // 0x101E6D20-0x101E6D90
		public static extern ulong ISteamUGC_CreateItem(IntPtr instancePtr, AppId_t nConsumerAppId, EWorkshopFileType eFileType); // 0x101E5F30-0x101E5FA0
		public static extern ulong ISteamUGC_StartItemUpdate(IntPtr instancePtr, AppId_t nConsumerAppId, PublishedFileId_t nPublishedFileID); // 0x101E7AE0-0x101E7B50
		public static extern bool ISteamUGC_SetItemTitle(IntPtr instancePtr, UGCUpdateHandle_t handle, InteropHelp.UTF8StringHandle pchTitle); // 0x101E72A0-0x101E7360
		public static extern bool ISteamUGC_SetItemDescription(IntPtr instancePtr, UGCUpdateHandle_t handle, InteropHelp.UTF8StringHandle pchDescription); // 0x101E6FF0-0x101E70B0
		public static extern bool ISteamUGC_SetItemUpdateLanguage(IntPtr instancePtr, UGCUpdateHandle_t handle, InteropHelp.UTF8StringHandle pchLanguage); // 0x101E7360-0x101E7420
		public static extern bool ISteamUGC_SetItemMetadata(IntPtr instancePtr, UGCUpdateHandle_t handle, InteropHelp.UTF8StringHandle pchMetaData); // 0x101E70B0-0x101E7170
		public static extern bool ISteamUGC_SetItemVisibility(IntPtr instancePtr, UGCUpdateHandle_t handle, ERemoteStoragePublishedFileVisibility eVisibility); // 0x101E7420-0x101E7490
		public static extern bool ISteamUGC_SetItemTags(IntPtr instancePtr, UGCUpdateHandle_t updateHandle, IntPtr pTags); // 0x101E7230-0x101E72A0
		public static extern bool ISteamUGC_SetItemContent(IntPtr instancePtr, UGCUpdateHandle_t handle, InteropHelp.UTF8StringHandle pszContentFolder); // 0x101E6F30-0x101E6FF0
		public static extern bool ISteamUGC_SetItemPreview(IntPtr instancePtr, UGCUpdateHandle_t handle, InteropHelp.UTF8StringHandle pszPreviewFile); // 0x101E7170-0x101E7230
		public static extern bool ISteamUGC_RemoveItemKeyValueTags(IntPtr instancePtr, UGCUpdateHandle_t handle, InteropHelp.UTF8StringHandle pchKey); // 0x101E6BF0-0x101E6CB0
		public static extern bool ISteamUGC_AddItemKeyValueTag(IntPtr instancePtr, UGCUpdateHandle_t handle, InteropHelp.UTF8StringHandle pchKey, InteropHelp.UTF8StringHandle pchValue); // 0x101E59C0-0x101E5AC0
		public static extern bool ISteamUGC_AddItemPreviewFile(IntPtr instancePtr, UGCUpdateHandle_t handle, InteropHelp.UTF8StringHandle pszPreviewFile, EItemPreviewType type); // 0x101E5AC0-0x101E5B80
		public static extern bool ISteamUGC_AddItemPreviewVideo(IntPtr instancePtr, UGCUpdateHandle_t handle, InteropHelp.UTF8StringHandle pszVideoID); // 0x101E5B80-0x101E5C40
		public static extern bool ISteamUGC_UpdateItemPreviewFile(IntPtr instancePtr, UGCUpdateHandle_t handle, uint index, InteropHelp.UTF8StringHandle pszPreviewFile); // 0x101E7EA0-0x101E7F60
		public static extern bool ISteamUGC_UpdateItemPreviewVideo(IntPtr instancePtr, UGCUpdateHandle_t handle, uint index, InteropHelp.UTF8StringHandle pszVideoID); // 0x101E7F60-0x101E8020
		public static extern bool ISteamUGC_RemoveItemPreview(IntPtr instancePtr, UGCUpdateHandle_t handle, uint index); // 0x101E6CB0-0x101E6D20
		public static extern ulong ISteamUGC_SubmitItemUpdate(IntPtr instancePtr, UGCUpdateHandle_t handle, InteropHelp.UTF8StringHandle pchChangeNote); // 0x101E7C90-0x101E7D50
		public static extern EItemUpdateStatus ISteamUGC_GetItemUpdateProgress(IntPtr instancePtr, UGCUpdateHandle_t handle, out ulong punBytesProcessed, out ulong punBytesTotal); // 0x101E63C0-0x101E6430
		public static extern ulong ISteamUGC_SetUserItemVote(IntPtr instancePtr, PublishedFileId_t nPublishedFileID, bool bVoteUp); // 0x101E7A70-0x101E7AE0
		public static extern ulong ISteamUGC_GetUserItemVote(IntPtr instancePtr, PublishedFileId_t nPublishedFileID); // 0x101E69C0-0x101E6A30
		public static extern ulong ISteamUGC_AddItemToFavorites(IntPtr instancePtr, AppId_t nAppId, PublishedFileId_t nPublishedFileID); // 0x101E5C40-0x101E5CB0
		public static extern ulong ISteamUGC_RemoveItemFromFavorites(IntPtr instancePtr, AppId_t nAppId, PublishedFileId_t nPublishedFileID); // 0x101E6B80-0x101E6BF0
		public static extern ulong ISteamUGC_SubscribeItem(IntPtr instancePtr, PublishedFileId_t nPublishedFileID); // 0x101E7D50-0x101E7DC0
		public static extern ulong ISteamUGC_UnsubscribeItem(IntPtr instancePtr, PublishedFileId_t nPublishedFileID); // 0x101E7E30-0x101E7EA0
		public static extern uint ISteamUGC_GetNumSubscribedItems(IntPtr instancePtr); // 0x101E6430-0x101E6490
		public static extern uint ISteamUGC_GetSubscribedItems(IntPtr instancePtr, [In, Out] PublishedFileId_t[] pvecPublishedFileID, uint cMaxEntries); // 0x101E6950-0x101E69C0
		public static extern uint ISteamUGC_GetItemState(IntPtr instancePtr, PublishedFileId_t nPublishedFileID); // 0x101E6350-0x101E63C0
		public static extern bool ISteamUGC_GetItemInstallInfo(IntPtr instancePtr, PublishedFileId_t nPublishedFileID, out ulong punSizeOnDisk, IntPtr pchFolder, uint cchFolderSize, out uint punTimeStamp); // 0x101E62D0-0x101E6350
		public static extern bool ISteamUGC_GetItemDownloadInfo(IntPtr instancePtr, PublishedFileId_t nPublishedFileID, out ulong punBytesDownloaded, out ulong punBytesTotal); // 0x101E6250-0x101E62D0
		public static extern bool ISteamUGC_DownloadItem(IntPtr instancePtr, PublishedFileId_t nPublishedFileID, bool bHighPriority); // 0x101E6170-0x101E61E0
		public static extern bool ISteamUGC_BInitWorkshopForGameServer(IntPtr instancePtr, DepotId_t unWorkshopDepotID, InteropHelp.UTF8StringHandle pszFolder); // 0x101E5E70-0x101E5F30
		public static extern void ISteamUGC_SuspendDownloads(IntPtr instancePtr, bool bSuspend); // 0x101E7DC0-0x101E7E30
		public static extern ulong ISteamUGC_StartPlaytimeTracking(IntPtr instancePtr, [In, Out] PublishedFileId_t[] pvecPublishedFileID, uint unNumPublishedFileIDs); // 0x101E7B50-0x101E7BC0
		public static extern ulong ISteamUGC_StopPlaytimeTracking(IntPtr instancePtr, [In, Out] PublishedFileId_t[] pvecPublishedFileID, uint unNumPublishedFileIDs); // 0x101E7C20-0x101E7C90
		public static extern ulong ISteamUGC_StopPlaytimeTrackingForAllItems(IntPtr instancePtr); // 0x101E7BC0-0x101E7C20
		public static extern ulong ISteamUGC_AddDependency(IntPtr instancePtr, PublishedFileId_t nParentPublishedFileID, PublishedFileId_t nChildPublishedFileID); // 0x101E5890-0x101E5900
		public static extern ulong ISteamUGC_RemoveDependency(IntPtr instancePtr, PublishedFileId_t nParentPublishedFileID, PublishedFileId_t nChildPublishedFileID); // 0x101E6B10-0x101E6B80
		public static extern ulong ISteamUGC_AddAppDependency(IntPtr instancePtr, PublishedFileId_t nPublishedFileID, AppId_t nAppID); // 0x101E5820-0x101E5890
		public static extern ulong ISteamUGC_RemoveAppDependency(IntPtr instancePtr, PublishedFileId_t nPublishedFileID, AppId_t nAppID); // 0x101E6AA0-0x101E6B10
		public static extern ulong ISteamUGC_GetAppDependencies(IntPtr instancePtr, PublishedFileId_t nPublishedFileID); // 0x101E61E0-0x101E6250
		public static extern ulong ISteamUGC_DeleteItem(IntPtr instancePtr, PublishedFileId_t nPublishedFileID); // 0x101E6100-0x101E6170
		public static extern int ISteamUser_GetHSteamUser(IntPtr instancePtr); // 0x101EA190-0x101EA1F0
		public static extern bool ISteamUser_BLoggedOn(IntPtr instancePtr); // 0x101E9D50-0x101E9DC0
		public static extern ulong ISteamUser_GetSteamID(IntPtr instancePtr); // 0x101EA250-0x101EA2B0
		public static extern int ISteamUser_InitiateGameConnection(IntPtr instancePtr, byte[] pAuthBlob, int cbMaxAuthBlob, CSteamID steamIDGameServer, uint unIPServer, ushort usPortServer, bool bSecure); // 0x101EA410-0x101EA4A0
		public static extern void ISteamUser_TerminateGameConnection(IntPtr instancePtr, uint unIPServer, ushort usPortServer); // 0x101EA690-0x101EA700
		public static extern void ISteamUser_TrackAppUsageEvent(IntPtr instancePtr, CGameID gameID, int eAppUsageEvent, InteropHelp.UTF8StringHandle pchExtraInfo); // 0x101EA700-0x101EA7B0
		public static extern bool ISteamUser_GetUserDataFolder(IntPtr instancePtr, IntPtr pchBuffer, int cubBuffer); // 0x101EA2B0-0x101EA320
		public static extern void ISteamUser_StartVoiceRecording(IntPtr instancePtr); // 0x101EA5D0-0x101EA630
		public static extern void ISteamUser_StopVoiceRecording(IntPtr instancePtr); // 0x101EA630-0x101EA690
		public static extern EVoiceResult ISteamUser_GetAvailableVoice(IntPtr instancePtr, out uint pcbCompressed, IntPtr pcbUncompressed_Deprecated, uint nUncompressedVoiceDesiredSampleRate_Deprecated); // 0x101EA030-0x101EA0A0
		public static extern EVoiceResult ISteamUser_GetVoice(IntPtr instancePtr, bool bWantCompressed, byte[] pDestBuffer, uint cbDestBufferSize, out uint nBytesWritten, bool bWantUncompressed_Deprecated, IntPtr pUncompressedDestBuffer_Deprecated, uint cbUncompressedDestBufferSize_Deprecated, IntPtr nUncompressBytesWritten_Deprecated, uint nUncompressedVoiceDesiredSampleRate_Deprecated); // 0x101EA380-0x101EA410
		public static extern EVoiceResult ISteamUser_DecompressVoice(IntPtr instancePtr, byte[] pCompressed, uint cbCompressed, byte[] pDestBuffer, uint cbDestBufferSize, out uint nBytesWritten, uint nDesiredSampleRate); // 0x101E9EB0-0x101E9F40
		public static extern uint ISteamUser_GetVoiceOptimalSampleRate(IntPtr instancePtr); // 0x101EA320-0x101EA380
		public static extern uint ISteamUser_GetAuthSessionTicket(IntPtr instancePtr, byte[] pTicket, int cbMaxTicket, out uint pcbTicket); // 0x101E9FB0-0x101EA030
		public static extern EBeginAuthSessionResult ISteamUser_BeginAuthSession(IntPtr instancePtr, byte[] pAuthTicket, int cbAuthTicket, CSteamID steamID); // 0x101E9DC0-0x101E9E40
		public static extern void ISteamUser_EndAuthSession(IntPtr instancePtr, CSteamID steamID); // 0x101E9F40-0x101E9FB0
		public static extern void ISteamUser_CancelAuthTicket(IntPtr instancePtr, HAuthTicket hAuthTicket); // 0x101E9E40-0x101E9EB0
		public static extern EUserHasLicenseForAppResult ISteamUser_UserHasLicenseForApp(IntPtr instancePtr, CSteamID steamID, AppId_t appID); // 0x101EA7B0-0x101EA820
		public static extern bool ISteamUser_BIsBehindNAT(IntPtr instancePtr); // 0x101E9B20-0x101E9B90
		public static extern void ISteamUser_AdvertiseGame(IntPtr instancePtr, CSteamID steamIDGameServer, uint unIPServer, ushort usPortServer); // 0x101E9AB0-0x101E9B20
		public static extern ulong ISteamUser_RequestEncryptedAppTicket(IntPtr instancePtr, byte[] pDataToInclude, int cbDataToInclude); // 0x101EA4A0-0x101EA510
		public static extern bool ISteamUser_GetEncryptedAppTicket(IntPtr instancePtr, byte[] pTicket, int cbMaxTicket, out uint pcbTicket); // 0x101EA0A0-0x101EA120
		public static extern int ISteamUser_GetGameBadgeLevel(IntPtr instancePtr, int nSeries, bool bFoil); // 0x101EA120-0x101EA190
		public static extern int ISteamUser_GetPlayerSteamLevel(IntPtr instancePtr); // 0x101EA1F0-0x101EA250
		public static extern ulong ISteamUser_RequestStoreAuthURL(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchRedirectURL); // 0x101EA510-0x101EA5D0
		public static extern bool ISteamUser_BIsPhoneVerified(IntPtr instancePtr); // 0x101E9C70-0x101E9CE0
		public static extern bool ISteamUser_BIsTwoFactorEnabled(IntPtr instancePtr); // 0x101E9CE0-0x101E9D50
		public static extern bool ISteamUser_BIsPhoneIdentifying(IntPtr instancePtr); // 0x101E9B90-0x101E9C00
		public static extern bool ISteamUser_BIsPhoneRequiringVerification(IntPtr instancePtr); // 0x101E9C00-0x101E9C70
		public static extern bool ISteamUserStats_RequestCurrentStats(IntPtr instancePtr); // 0x101E94A0-0x101E9510
		public static extern bool ISteamUserStats_GetStat(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchName, out int pData); // 0x101E9000-0x101E90C0
		public static extern bool ISteamUserStats_GetStat0(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchName, out float pData); // 0x101E8F40-0x101E9000
		public static extern bool ISteamUserStats_SetStat(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchName, int nData); // 0x101E9830-0x101E98F0
		public static extern bool ISteamUserStats_SetStat0(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchName, float fData); // 0x101E9770-0x101E9830
		public static extern bool ISteamUserStats_UpdateAvgRateStat(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchName, float flCountThisSession, double dSessionLength); // 0x101E9960-0x101E9A30
		public static extern bool ISteamUserStats_GetAchievement(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchName, out bool pbAchieved); // 0x101E8750-0x101E8820
		public static extern bool ISteamUserStats_SetAchievement(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchName); // 0x101E96C0-0x101E9770
		public static extern bool ISteamUserStats_ClearAchievement(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchName); // 0x101E8090-0x101E8140
		public static extern bool ISteamUserStats_GetAchievementAndUnlockTime(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchName, out bool pbAchieved, out uint punUnlockTime); // 0x101E8470-0x101E8540
		public static extern bool ISteamUserStats_StoreStats(IntPtr instancePtr); // 0x101E98F0-0x101E9960
		public static extern int ISteamUserStats_GetAchievementIcon(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchName); // 0x101E8630-0x101E86E0
		public static extern IntPtr ISteamUserStats_GetAchievementDisplayAttribute(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchName, InteropHelp.UTF8StringHandle pchKey); // 0x101E8540-0x101E8630
		public static extern bool ISteamUserStats_IndicateAchievementProgress(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchName, uint nCurProgress, uint nMaxProgress); // 0x101E93E0-0x101E94A0
		public static extern uint ISteamUserStats_GetNumAchievements(IntPtr instancePtr); // 0x101E8E80-0x101E8EE0
		public static extern IntPtr ISteamUserStats_GetAchievementName(IntPtr instancePtr, uint iAchievement); // 0x101E86E0-0x101E8750
		public static extern ulong ISteamUserStats_RequestUserStats(IntPtr instancePtr, CSteamID steamIDUser); // 0x101E95E0-0x101E9650
		public static extern bool ISteamUserStats_GetUserStat(IntPtr instancePtr, CSteamID steamIDUser, InteropHelp.UTF8StringHandle pchName, out int pData); // 0x101E9320-0x101E93E0
		public static extern bool ISteamUserStats_GetUserStat0(IntPtr instancePtr, CSteamID steamIDUser, InteropHelp.UTF8StringHandle pchName, out float pData); // 0x101E9260-0x101E9320
		public static extern bool ISteamUserStats_GetUserAchievement(IntPtr instancePtr, CSteamID steamIDUser, InteropHelp.UTF8StringHandle pchName, out bool pbAchieved); // 0x101E9190-0x101E9260
		public static extern bool ISteamUserStats_GetUserAchievementAndUnlockTime(IntPtr instancePtr, CSteamID steamIDUser, InteropHelp.UTF8StringHandle pchName, out bool pbAchieved, out uint punUnlockTime); // 0x101E90C0-0x101E9190
		public static extern bool ISteamUserStats_ResetAllStats(IntPtr instancePtr, bool bAchievementsToo); // 0x101E9650-0x101E96C0
		public static extern ulong ISteamUserStats_FindOrCreateLeaderboard(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod, ELeaderboardDisplayType eLeaderboardDisplayType); // 0x101E82F0-0x101E83B0
		public static extern ulong ISteamUserStats_FindLeaderboard(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchLeaderboardName); // 0x101E8230-0x101E82F0
		public static extern IntPtr ISteamUserStats_GetLeaderboardName(IntPtr instancePtr, SteamLeaderboard_t hSteamLeaderboard); // 0x101E8C90-0x101E8D00
		public static extern int ISteamUserStats_GetLeaderboardEntryCount(IntPtr instancePtr, SteamLeaderboard_t hSteamLeaderboard); // 0x101E8C20-0x101E8C90
		public static extern ELeaderboardSortMethod ISteamUserStats_GetLeaderboardSortMethod(IntPtr instancePtr, SteamLeaderboard_t hSteamLeaderboard); // 0x101E8D00-0x101E8D70
		public static extern ELeaderboardDisplayType ISteamUserStats_GetLeaderboardDisplayType(IntPtr instancePtr, SteamLeaderboard_t hSteamLeaderboard); // 0x101E8BB0-0x101E8C20
		public static extern ulong ISteamUserStats_DownloadLeaderboardEntries(IntPtr instancePtr, SteamLeaderboard_t hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest, int nRangeStart, int nRangeEnd); // 0x101E81C0-0x101E8230
		public static extern ulong ISteamUserStats_DownloadLeaderboardEntriesForUsers(IntPtr instancePtr, SteamLeaderboard_t hSteamLeaderboard, [In, Out] CSteamID[] prgUsers, int cUsers); // 0x101E8140-0x101E81C0
		public static extern bool ISteamUserStats_GetDownloadedLeaderboardEntry(IntPtr instancePtr, SteamLeaderboardEntries_t hSteamLeaderboardEntries, int index, out LeaderboardEntry_t pLeaderboardEntry, [In, Out] int[] pDetails, int cDetailsMax); // 0x101E8820-0x101E88B0
		public static extern ulong ISteamUserStats_UploadLeaderboardScore(IntPtr instancePtr, SteamLeaderboard_t hSteamLeaderboard, ELeaderboardUploadScoreMethod eLeaderboardUploadScoreMethod, int nScore, [In, Out] int[] pScoreDetails, int cScoreDetailsCount); // 0x101E9A30-0x101E9AB0
		public static extern ulong ISteamUserStats_AttachLeaderboardUGC(IntPtr instancePtr, SteamLeaderboard_t hSteamLeaderboard, UGCHandle_t hUGC); // 0x101E8020-0x101E8090
		public static extern ulong ISteamUserStats_GetNumberOfCurrentPlayers(IntPtr instancePtr); // 0x101E8EE0-0x101E8F40
		public static extern ulong ISteamUserStats_RequestGlobalAchievementPercentages(IntPtr instancePtr); // 0x101E9510-0x101E9570
		public static extern int ISteamUserStats_GetMostAchievedAchievementInfo(IntPtr instancePtr, IntPtr pchName, uint unNameBufLen, out float pflPercent, out bool pbAchieved); // 0x101E8D70-0x101E8DF0
		public static extern int ISteamUserStats_GetNextMostAchievedAchievementInfo(IntPtr instancePtr, int iIteratorPrevious, IntPtr pchName, uint unNameBufLen, out float pflPercent, out bool pbAchieved); // 0x101E8DF0-0x101E8E80
		public static extern bool ISteamUserStats_GetAchievementAchievedPercent(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchName, out float pflPercent); // 0x101E83B0-0x101E8470
		public static extern ulong ISteamUserStats_RequestGlobalStats(IntPtr instancePtr, int nHistoryDays); // 0x101E9570-0x101E95E0
		public static extern bool ISteamUserStats_GetGlobalStat(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchStatName, out long pData); // 0x101E8AF0-0x101E8BB0
		public static extern bool ISteamUserStats_GetGlobalStat0(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchStatName, out double pData); // 0x101E88B0-0x101E8970
		public static extern int ISteamUserStats_GetGlobalStatHistory(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchStatName, [In, Out] long[] pData, uint cubData); // 0x101E8A30-0x101E8AF0
		public static extern int ISteamUserStats_GetGlobalStatHistory0(IntPtr instancePtr, InteropHelp.UTF8StringHandle pchStatName, [In, Out] double[] pData, uint cubData); // 0x101E8970-0x101E8A30
		public static extern uint ISteamUtils_GetSecondsSinceAppActive(IntPtr instancePtr); // 0x101EAE60-0x101EAEC0
		public static extern uint ISteamUtils_GetSecondsSinceComputerActive(IntPtr instancePtr); // 0x101EAEC0-0x101EAF20
		public static extern EUniverse ISteamUtils_GetConnectedUniverse(IntPtr instancePtr); // 0x101EAB20-0x101EAB80
		public static extern uint ISteamUtils_GetServerRealTime(IntPtr instancePtr); // 0x101EAF20-0x101EAF80
		public static extern IntPtr ISteamUtils_GetIPCountry(IntPtr instancePtr); // 0x101EAD10-0x101EAD70
		public static extern bool ISteamUtils_GetImageSize(IntPtr instancePtr, int iImage, out uint pnWidth, out uint pnHeight); // 0x101EADF0-0x101EAE60
		public static extern bool ISteamUtils_GetImageRGBA(IntPtr instancePtr, int iImage, byte[] pubDest, int nDestBufferSize); // 0x101EAD70-0x101EADF0
		public static extern bool ISteamUtils_GetCSERIPPort(IntPtr instancePtr, out uint unIP, out ushort usPort); // 0x101EAAB0-0x101EAB20
		public static extern byte ISteamUtils_GetCurrentBatteryPower(IntPtr instancePtr); // 0x101EAB80-0x101EABE0
		public static extern uint ISteamUtils_GetAppID(IntPtr instancePtr); // 0x101EAA50-0x101EAAB0
		public static extern void ISteamUtils_SetOverlayNotificationPosition(IntPtr instancePtr, ENotificationPosition eNotificationPosition); // 0x101EB2A0-0x101EB310
		public static extern bool ISteamUtils_IsAPICallCompleted(IntPtr instancePtr, SteamAPICall_t hSteamAPICall, out bool pbFailed); // 0x101EAFE0-0x101EB070
		public static extern ESteamAPICallFailure ISteamUtils_GetAPICallFailureReason(IntPtr instancePtr, SteamAPICall_t hSteamAPICall); // 0x101EA950-0x101EA9C0
		public static extern bool ISteamUtils_GetAPICallResult(IntPtr instancePtr, SteamAPICall_t hSteamAPICall, IntPtr pCallback, int cubCallback, int iCallbackExpected, out bool pbFailed); // 0x101EA9C0-0x101EAA50
		public static extern uint ISteamUtils_GetIPCCallCount(IntPtr instancePtr); // 0x101EACB0-0x101EAD10
		public static extern void ISteamUtils_SetWarningMessageHook(IntPtr instancePtr, SteamAPIWarningMessageHook_t pFunction); // 0x101EB380-0x101EB3F0
		public static extern bool ISteamUtils_IsOverlayEnabled(IntPtr instancePtr); // 0x101EB070-0x101EB0E0
		public static extern bool ISteamUtils_BOverlayNeedsPresent(IntPtr instancePtr); // 0x101EA820-0x101EA890
		public static extern ulong ISteamUtils_CheckFileSignature(IntPtr instancePtr, InteropHelp.UTF8StringHandle szFileName); // 0x101EA890-0x101EA950
		public static extern bool ISteamUtils_ShowGamepadTextInput(IntPtr instancePtr, EGamepadTextInputMode eInputMode, EGamepadTextInputLineMode eLineInputMode, InteropHelp.UTF8StringHandle pchDescription, uint unCharMax, InteropHelp.UTF8StringHandle pchExistingText); // 0x101EB3F0-0x101EB4F0
		public static extern uint ISteamUtils_GetEnteredGamepadTextLength(IntPtr instancePtr); // 0x101EAC50-0x101EACB0
		public static extern bool ISteamUtils_GetEnteredGamepadTextInput(IntPtr instancePtr, IntPtr pchText, uint cchText); // 0x101EABE0-0x101EAC50
		public static extern IntPtr ISteamUtils_GetSteamUILanguage(IntPtr instancePtr); // 0x101EAF80-0x101EAFE0
		public static extern bool ISteamUtils_IsSteamRunningInVR(IntPtr instancePtr); // 0x101EB150-0x101EB1C0
		public static extern void ISteamUtils_SetOverlayNotificationInset(IntPtr instancePtr, int nHorizontalInset, int nVerticalInset); // 0x101EB230-0x101EB2A0
		public static extern bool ISteamUtils_IsSteamInBigPictureMode(IntPtr instancePtr); // 0x101EB0E0-0x101EB150
		public static extern void ISteamUtils_StartVRDashboard(IntPtr instancePtr); // 0x101EB4F0-0x101EB550
		public static extern bool ISteamUtils_IsVRHeadsetStreamingEnabled(IntPtr instancePtr); // 0x101EB1C0-0x101EB230
		public static extern void ISteamUtils_SetVRHeadsetStreamingEnabled(IntPtr instancePtr, bool bEnabled); // 0x101EB310-0x101EB380
		public static extern void ISteamVideo_GetVideoURL(IntPtr instancePtr, AppId_t unVideoAppID); // 0x101EB630-0x101EB6A0
		public static extern bool ISteamVideo_IsBroadcasting(IntPtr instancePtr, out int pnNumViewers); // 0x101EB6A0-0x101EB710
		public static extern void ISteamVideo_GetOPFSettings(IntPtr instancePtr, AppId_t unVideoAppID); // 0x101EB550-0x101EB5C0
		public static extern bool ISteamVideo_GetOPFStringForApp(IntPtr instancePtr, AppId_t unVideoAppID, IntPtr pchBuffer, ref int pnBufferSize); // 0x101EB5C0-0x101EB630
	}
}

public class NavigationMinigame : Minigame // TypeDefIndex: 5618
{
	// Fields
	public MeshRenderer TwoAxisImage; // 0x28
	public SpriteRenderer CrossHairImage; // 0x2C
	public Collider2D hitbox; // 0x30
	private Controller myController; // 0x34
	private Vector2 crossHair; // 0x38
	private Vector2 half; // 0x40

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CompleteGame_d__8 : IEnumerator<object> // TypeDefIndex: 5619
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public NavigationMinigame __4__this; // 0x10
		private WaitForSeconds _wait_5__2; // 0x14
		private Color _green_5__3; // 0x18
		private Color32 _yellow_5__4; // 0x28

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CompleteGame_d__8(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10216A70-0x10216F70
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10216F70-0x10216FC0
	}

	// Constructors
	public NavigationMinigame(); // 0x10203DB0-0x10203E40

	// Methods
	public override void Begin(PlayerTask task); // 0x10203520-0x102037C0
	public void FixedUpdate(); // 0x10203810-0x10203DB0
	[IteratorStateMachine] // 0x1000A8A0-0x1000A8F0
	private IEnumerator CompleteGame(); // 0x102037C0-0x10203810
}

namespace Hazel.UPnP
{
	internal class NetUtility // TypeDefIndex: 4183
	{
		// Methods
		private static NetworkInterface GetNetworkInterface(); // 0x109CAC30-0x109CAF00
		public static IPAddress GetBroadcastAddress(); // 0x109CA900-0x109CAC30
	}
}

namespace Hazel
{
	public abstract class NetworkConnection : Connection // TypeDefIndex: 4173
	{
		// Fields
		public Func<HazelInternalErrors, MessageWriter> OnInternalDisconnect; // 0x2C
		[CompilerGenerated] // 0x10002030-0x10002050
		private EndPoint _RemoteEndPoint_k__BackingField; // 0x30
	
		// Properties
		public EndPoint RemoteEndPoint { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ protected set; } // 0x101F0180-0x101F0190 0x102196F0-0x10219700
	
		// Constructors
		protected NetworkConnection(); // 0x109C9360-0x109C93D0
	
		// Methods
		protected abstract bool SendDisconnect(MessageWriter writer);
		protected void DisconnectRemote(string reason, MessageReader reader); // 0x109CB0A0-0x109CB190
		internal void DisconnectInternal(HazelInternalErrors error, string reason); // 0x109CAF00-0x109CB0A0
		public override void Disconnect(string reason, MessageWriter writer = null); // 0x109CB190-0x109CB280
	}

	public abstract class NetworkConnectionListener : ConnectionListener // TypeDefIndex: 4174
	{
		// Fields
		[CompilerGenerated] // 0x10002030-0x10002050
		private IPEndPoint _EndPoint_k__BackingField; // 0x0C
		[CompilerGenerated] // 0x10002030-0x10002050
		private IPMode _IPMode_k__BackingField; // 0x10
	
		// Properties
		public IPEndPoint EndPoint { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ protected set; } // 0x101AE200-0x101AE210 0x101AEE90-0x101AEEA0
		public IPMode IPMode { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ protected set; } // 0x101BCD80-0x101BCD90 0x101BCF20-0x101BCF30
	
		// Constructors
		protected NetworkConnectionListener(); // 0x101A2CD0-0x101A2CE0
	}
}

namespace Discord
{
	public class NetworkManager // TypeDefIndex: 5056
	{
		// Fields
		private IntPtr MethodsPtr; // 0x08
		private object MethodsStructure; // 0x0C
		[CompilerGenerated] // 0x10002030-0x10002050
		private MessageHandler OnMessage; // 0x10
		[CompilerGenerated] // 0x10002030-0x10002050
		private RouteUpdateHandler OnRouteUpdate; // 0x14
	
		// Properties
		private FFIMethods Methods { get; } // 0x10917E60-0x10917F40 
	
		// Events
		public event MessageHandler OnMessage {
			add; // 0x10917D60-0x10917DE0
			remove; // 0x10917F40-0x10917FD0
		}
		public event RouteUpdateHandler OnRouteUpdate {
			add; // 0x10917DE0-0x10917E60
			remove; // 0x10917FD0-0x10918050
		}
	
		// Nested types
		internal struct FFIEvents // TypeDefIndex: 5057
		{
			// Fields
			internal MessageHandler OnMessage; // 0x00
			internal RouteUpdateHandler OnRouteUpdate; // 0x04
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void MessageHandler(IntPtr ptr, ulong peerId, byte channelId, IntPtr dataPtr, int dataLen); // TypeDefIndex: 5058; 0x10775BF0-0x10775EC0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void RouteUpdateHandler(IntPtr ptr, string routeData); // TypeDefIndex: 5059; 0x1018BF80-0x1018C200
		}
	
		internal struct FFIMethods // TypeDefIndex: 5060
		{
			// Fields
			internal GetPeerIdMethod GetPeerId; // 0x00
			internal FlushMethod Flush; // 0x04
			internal OpenPeerMethod OpenPeer; // 0x08
			internal UpdatePeerMethod UpdatePeer; // 0x0C
			internal ClosePeerMethod ClosePeer; // 0x10
			internal OpenChannelMethod OpenChannel; // 0x14
			internal CloseChannelMethod CloseChannel; // 0x18
			internal SendMessageMethod SendMessage; // 0x1C
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void GetPeerIdMethod(IntPtr methodsPtr, ref ulong peerId); // TypeDefIndex: 5061; 0x1018BF80-0x1018C200
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result FlushMethod(IntPtr methodsPtr); // TypeDefIndex: 5062; 0x10770520-0x10770680
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result OpenPeerMethod(IntPtr methodsPtr, ulong peerId, string routeData); // TypeDefIndex: 5063; 0x10621840-0x106219E0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result UpdatePeerMethod(IntPtr methodsPtr, ulong peerId, string routeData); // TypeDefIndex: 5064; 0x10621840-0x106219E0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result ClosePeerMethod(IntPtr methodsPtr, ulong peerId); // TypeDefIndex: 5065; 0x10834AE0-0x10834D70
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result OpenChannelMethod(IntPtr methodsPtr, ulong peerId, byte channelId, bool reliable); // TypeDefIndex: 5066; 0x10914C70-0x10914F30
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result CloseChannelMethod(IntPtr methodsPtr, ulong peerId, byte channelId); // TypeDefIndex: 5067; 0x10620E00-0x106210A0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result SendMessageMethod(IntPtr methodsPtr, ulong peerId, byte channelId, byte[] data, int dataLen); // TypeDefIndex: 5068; 0x1091A250-0x1091A530
		}
	
		public delegate void MessageHandler(ulong peerId, byte channelId, byte[] data); // TypeDefIndex: 5069; 0x10917200-0x109174C0
	
		public delegate void RouteUpdateHandler(string routeData); // TypeDefIndex: 5070; 0x108DFBD0-0x108DFF90
	
		// Constructors
		internal NetworkManager(IntPtr ptr, IntPtr eventsPtr, ref FFIEvents events); // 0x10917C30-0x10917D60
	
		// Methods
		private void InitEvents(IntPtr eventsPtr, ref FFIEvents events); // 0x10917700-0x109177B0
		public ulong GetPeerId(); // 0x109176A0-0x10917700
		public void Flush(); // 0x10917600-0x109176A0
		public void OpenPeer(ulong peerId, string routeData); // 0x10917A40-0x10917AE0
		public void UpdatePeer(ulong peerId, string routeData); // 0x10917B90-0x10917C30
		public void ClosePeer(ulong peerId); // 0x10917560-0x10917600
		public void OpenChannel(ulong peerId, byte channelId, bool reliable); // 0x10917990-0x10917A40
		public void CloseChannel(ulong peerId, byte channelId); // 0x109174C0-0x10917560
		public void SendMessage(ulong peerId, byte channelId, byte[] data); // 0x10917AE0-0x10917B90
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OnMessageImpl(IntPtr ptr, ulong peerId, byte channelId, IntPtr dataPtr, int dataLen); // 0x109177B0-0x109178D0
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OnRouteUpdateImpl(IntPtr ptr, string routeData); // 0x109178D0-0x10917990
	}
}

namespace Hazel
{
	public struct NewConnectionEventArgs // TypeDefIndex: 4177
	{
		// Fields
		public readonly MessageReader HandshakeData; // 0x00
		public readonly Connection Connection; // 0x04
	
		// Constructors
		public NewConnectionEventArgs(MessageReader handshakeData, Connection connection); // 0x10073670-0x10073690
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1004BFA0-0x1004BFC0
	public struct NewLaunchQueryParameters_t // TypeDefIndex: 4487
	{
		// Fields
		public const int k_iCallback = 1014; // Metadata: 0x0024219F
	}
}

namespace MS.Internal.Xml.XPath
{
	internal sealed class NodeFunctions : ValueQuery // TypeDefIndex: 1780
	{
		// Fields
		private Query arg; // 0x0C
		private Function.FunctionType funcType; // 0x10
		private XsltContext xsltContext; // 0x14
	
		// Properties
		public override XPathResultType StaticType { get; } // 0x106C1B70-0x106C1C60 
	
		// Constructors
		public NodeFunctions(Function.FunctionType funcType, Query arg); // 0x106C1B40-0x106C1B70
	
		// Methods
		public override void SetXsltContext(XsltContext context); // 0x106C1AE0-0x106C1B40
		private XPathNavigator EvaluateArg(XPathNodeIterator context); // 0x106C1850-0x106C18C0
		public override object Evaluate(XPathNodeIterator context); // 0x106C18C0-0x106C1AE0
		public override XPathNodeIterator Clone(); // 0x106C17E0-0x106C1850
	}
}

public class NoOxyTask : SabotageTask // TypeDefIndex: 5850
{
	// Fields
	private bool isComplete; // 0x30
	private LifeSuppSystemType reactor; // 0x34
	private bool even; // 0x38
	public int targetNumber; // 0x3C

	// Properties
	public override int TaskStep { get; } // 0x102044D0-0x10204500 
	public override bool IsComplete { get; } // 0x101C2370-0x101C2380 

	// Constructors
	public NoOxyTask(); // 0x102044C0-0x102044D0

	// Methods
	public override void Initialize(); // 0x10204370-0x10204450
	private void FixedUpdate(); // 0x10204290-0x10204370
	public override bool ValidConsole(Console console); // 0x10204450-0x102044C0
	public override void OnRemove(); // 0x101A2F90-0x101A2FA0
	public override void Complete(); // 0x10204110-0x10204290
	public override void AppendTaskText(StringBuilder sb); // 0x10203E40-0x10204110
}

public class NormalPlayerTask : PlayerTask // TypeDefIndex: 5851
{
	// Fields
	public int taskStep; // 0x28
	public int MaxStep; // 0x2C
	public bool ShowTaskStep; // 0x30
	public bool ShowTaskTimer; // 0x31
	public TimerState TimerStarted; // 0x34
	public float TaskTimer; // 0x38
	public byte[] Data; // 0x3C
	public ArrowBehaviour Arrow; // 0x40

	// Properties
	public override int TaskStep { get; } // 0x101CB980-0x101CB990 
	public override bool IsComplete { get; } // 0x10205960-0x10205980 

	// Nested types
	public enum TimerState // TypeDefIndex: 5852
	{
		NotStarted = 0,
		Started = 1,
		Finished = 2
	}

	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5853
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<Console, bool> __9__13_0; // 0x04
		public static Func<Console, bool> __9__15_0; // 0x08
		public static Func<Console, bool> __9__15_1; // 0x0C

		// Constructors
		static __c(); // 0x10218AF0-0x10218B40
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _Initialize_b__13_0(Console t); // 0x102184A0-0x102184F0
		internal bool _UpdateArrow_b__15_0(Console c); // 0x10218530-0x10218590
		internal bool _UpdateArrow_b__15_1(Console console); // 0x10218590-0x102185F0
	}

	// Constructors
	public NormalPlayerTask(); // 0x10205940-0x10205960

	// Methods
	public override void Initialize(); // 0x10204A70-0x10204F40
	public void NextStep(); // 0x10204F40-0x10205220
	public void UpdateArrow(); // 0x102053F0-0x10205770
	private void FixedUpdate(); // 0x10204A20-0x10204A70
	public override bool ValidConsole(Console console); // 0x10205770-0x10205940
	public override void Complete(); // 0x10204A10-0x10204A20
	public override void AppendTaskText(StringBuilder sb); // 0x10204840-0x10204A10
	private bool ShouldYellowText(); // 0x10205220-0x10205270
	[CompilerGenerated] // 0x10002030-0x10002050
	private bool _Initialize_b__13_1(Console v); // 0x10205270-0x102052B0
	[CompilerGenerated] // 0x10002030-0x10002050
	private bool _UpdateArrow_b__15_2(Console c); // 0x102052B0-0x10205330
	[CompilerGenerated] // 0x10002030-0x10002050
	private bool _ValidConsole_b__17_0(TaskSet set); // 0x10205330-0x10205390
	[CompilerGenerated] // 0x10002030-0x10002050
	private bool _ValidConsole_b__17_1(TaskTypes tt); // 0x10205390-0x102053B0
	[CompilerGenerated] // 0x10002030-0x10002050
	private bool _ValidConsole_b__17_2(TaskTypes tt); // 0x10205390-0x102053B0
	[CompilerGenerated] // 0x10002030-0x10002050
	private bool _ValidConsole_b__17_3(TaskSet set); // 0x102053B0-0x102053F0
}

public class NoShadowBehaviour : MonoBehaviour // TypeDefIndex: 5620
{
	// Fields
	public Renderer rend; // 0x0C
	public bool didHit; // 0x10
	public Renderer shadowChild; // 0x14

	// Constructors
	public NoShadowBehaviour(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Start(); // 0x102047C0-0x10204840
	public void OnDestroy(); // 0x10204680-0x10204700
	private void LateUpdate(); // 0x10204500-0x10204680
	private void SetMaskFunction(int func); // 0x10204700-0x102047C0
}

public class NotificationPopper : MonoBehaviour // TypeDefIndex: 5452
{
	// Fields
	public TextRenderer TextArea; // 0x0C
	public float zPos; // 0x10
	private float alphaTimer; // 0x14
	public float ShowDuration; // 0x18
	public float FadeDuration; // 0x1C
	public Color textColor; // 0x20
	private StringBuilder builder; // 0x30
	public AudioClip NotificationSound; // 0x34

	// Constructors
	public NotificationPopper(); // 0x10205DC0-0x10205E40

	// Methods
	public void Update(); // 0x10205A40-0x10205DC0
	public void AddItem(string item); // 0x10205980-0x10205A40
}

namespace Hazel
{
	public class NullLogger : Hazel.ILogger // TypeDefIndex: 4182
	{
		// Fields
		public static readonly NullLogger Instance; // 0x00
	
		// Constructors
		public NullLogger(); // 0x101A2CD0-0x101A2CE0
		static NullLogger(); // 0x109CB280-0x109CB2D0
	
		// Methods
		public void WriteError(string msg); // 0x101A2F90-0x101A2FA0
		public void WriteInfo(string msg); // 0x101A2F90-0x101A2FA0
	}
}

namespace MS.Internal.Xml.XPath
{
	internal sealed class NumberFunctions : ValueQuery // TypeDefIndex: 1781
	{
		// Fields
		private Query arg; // 0x0C
		private Function.FunctionType ftype; // 0x10
	
		// Properties
		public override XPathResultType StaticType { get; } // 0x101D1BE0-0x101D1BF0 
	
		// Constructors
		public NumberFunctions(Function.FunctionType ftype, Query arg); // 0x106BA040-0x106BA070
		private NumberFunctions(NumberFunctions other); // 0x106BA000-0x106BA040
	
		// Methods
		public override void SetXsltContext(XsltContext context); // 0x106B9FD0-0x106BA000
		internal static double Number(bool arg); // 0x106C2330-0x106C2350
		internal static double Number(string arg); // 0x106C2350-0x106C23A0
		public override object Evaluate(XPathNodeIterator nodeIterator); // 0x106C1D70-0x106C20B0
		private double Number(XPathNodeIterator nodeIterator); // 0x106C2150-0x106C2330
		private double Sum(XPathNodeIterator nodeIterator); // 0x106C2440-0x106C2530
		private double Floor(XPathNodeIterator nodeIterator); // 0x106C20B0-0x106C2150
		private double Ceiling(XPathNodeIterator nodeIterator); // 0x106C1C60-0x106C1D00
		private double Round(XPathNodeIterator nodeIterator); // 0x106C23A0-0x106C2440
		public override XPathNodeIterator Clone(); // 0x106C1D00-0x106C1D70
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000AAA0-0x1000AAC0
	public struct NumberOfCurrentPlayers_t // TypeDefIndex: 4651
	{
		// Fields
		public const int k_iCallback = 1107; // Metadata: 0x0024242F
		public byte m_bSuccess; // 0x00
		public int m_cPlayers; // 0x04
	}
}

public class NumberOption : OptionBehaviour // TypeDefIndex: 5742
{
	// Fields
	public TextRenderer TitleText; // 0x14
	public TextRenderer ValueText; // 0x18
	public float Value; // 0x1C
	private float oldValue; // 0x20
	public float Increment; // 0x24
	public FloatRange ValidRange; // 0x28
	public string FormatString; // 0x2C
	public bool ZeroIsInfinity; // 0x30

	// Constructors
	public NumberOption(); // 0x102062F0-0x10206370

	// Methods
	public void OnEnable(); // 0x10206040-0x102062F0
	private void FixedUpdate(); // 0x10205EB0-0x10205FB0
	public void Increase(); // 0x10205FD0-0x10206040
	public void Decrease(); // 0x10205E40-0x10205EB0
	public override float GetFloat(); // 0x10205FB0-0x10205FC0
	public override int GetInt(); // 0x10205FC0-0x10205FD0
}

namespace MS.Internal.Xml.XPath
{
	internal sealed class NumericExpr : ValueQuery // TypeDefIndex: 1782
	{
		// Fields
		private Operator.Op op; // 0x0C
		private Query opnd1; // 0x10
		private Query opnd2; // 0x14
	
		// Properties
		public override XPathResultType StaticType { get; } // 0x101D1BE0-0x101D1BF0 
	
		// Constructors
		public NumericExpr(Operator.Op op, Query opnd1, Query opnd2); // 0x106C2750-0x106C2840
		private NumericExpr(NumericExpr other); // 0x106BF590-0x106BF5E0
	
		// Methods
		public override void SetXsltContext(XsltContext context); // 0x106BE640-0x106BE690
		public override object Evaluate(XPathNodeIterator nodeIterator); // 0x106C25B0-0x106C26F0
		private static double GetValue(Operator.Op op, double n1, double n2); // 0x106C26F0-0x106C2750
		public override XPathNodeIterator Clone(); // 0x106C2530-0x106C25B0
	}
}

namespace Discord
{
	public struct OAuth2Token // TypeDefIndex: 4877
	{
		// Fields
		public string AccessToken; // 0x00
		public string Scopes; // 0x04
		public long Expires; // 0x08
	}
}

namespace Hazel
{
	public sealed class ObjectPool<T> // TypeDefIndex: 4178
		where T : IRecyclable
	{
		// Fields
		private int numberCreated;
		private readonly List<T> pool;
		private readonly ConcurrentDictionary<T, bool> inuse;
		private readonly Func<T> objectFactory;
	
		// Constructors
		internal ObjectPool(Func<T> objectFactory);
	
		// Methods
		internal T GetObject();
		internal void PutObject(T item);
	}
}

public class ObjectPoolBehavior : IObjectPool // TypeDefIndex: 5231
{
	// Fields
	public int poolSize; // 0x0C
	[SerializeField] // 0x10002030-0x10002050
	private List<PoolableBehavior> inactiveChildren; // 0x10
	[SerializeField] // 0x10002030-0x10002050
	public List<PoolableBehavior> activeChildren; // 0x14
	public PoolableBehavior Prefab; // 0x18
	public bool AutoInit; // 0x1C
	public bool DetachOnGet; // 0x1D

	// Properties
	public override int InUse { get; } // 0x102069A0-0x102069E0 
	public override int NotInUse { get; } // 0x102069E0-0x10206A20 

	// Constructors
	public ObjectPoolBehavior(); // 0x10206920-0x102069A0

	// Methods
	public virtual void Awake(); // 0x10206370-0x10206390
	public void InitPool(PoolableBehavior prefab); // 0x10206450-0x10206540
	private void CreateOneInactive(PoolableBehavior prefab); // 0x10206390-0x10206450
	public void ReclaimOldest(); // 0x102065E0-0x10206660
	public void ReclaimAll(); // 0x10206540-0x102065E0
	public override T Get<T>();
	public override void Reclaim(PoolableBehavior obj); // 0x10206660-0x10206920
}

[Serializable]
public class OffsetAdjustment // TypeDefIndex: 5254
{
	// Fields
	public char Char; // 0x08
	public int OffsetX; // 0x0C
	public int OffsetY; // 0x10

	// Constructors
	public OffsetAdjustment(); // 0x101A2CD0-0x101A2CE0
}

namespace LipingShare.LCLib.Asn1Processor
{
	internal class Oid // TypeDefIndex: 3797
	{
		// Fields
		private static StringDictionary oidDictionary; // 0x00
	
		// Constructors
		public Oid(); // 0x101A2CD0-0x101A2CE0
		static Oid(); // 0x109F47F0-0x109F4820
	
		// Methods
		public string GetOidName(string inOidStr); // 0x109F4710-0x109F47F0
		public string Decode(byte[] data); // 0x109F4480-0x109F4510
		public virtual string Decode(Stream bt); // 0x109F4510-0x109F4710
		protected int DecodeValue(Stream bt, ref ulong v); // 0x109F4410-0x109F4480
	}
}

public class OneWayShadows : MonoBehaviour // TypeDefIndex: 5754
{
	// Fields
	public Collider2D RoomCollider; // 0x0C

	// Constructors
	public OneWayShadows(); // 0x101A68C0-0x101A68D0

	// Methods
	public void OnEnable(); // 0x10206B60-0x10206BE0
	public void OnDisable(); // 0x10206AE0-0x10206B60
	public bool IsIgnored(LightSource lightSource); // 0x10206A20-0x10206AE0
}

namespace MS.Internal.Xml.XPath
{
	internal class Operand : AstNode // TypeDefIndex: 1783
	{
		// Fields
		private XPathResultType type; // 0x08
		private object val; // 0x0C
	
		// Properties
		public override AstType Type { get; } // 0x1045B170-0x1045B180 
		public override XPathResultType ReturnType { get; } // 0x101B4FF0-0x101B5000 
		public object OperandValue { get; } // 0x101AE200-0x101AE210 
	
		// Constructors
		public Operand(string val); // 0x106C2890-0x106C28C0
		public Operand(double val); // 0x106C28C0-0x106C2920
	}

	internal sealed class OperandQuery : ValueQuery // TypeDefIndex: 1784
	{
		// Fields
		internal object val; // 0x0C
	
		// Properties
		public override XPathResultType StaticType { get; } // 0x106C2870-0x106C2890 
	
		// Constructors
		public OperandQuery(object val); // 0x106C2840-0x106C2870
	
		// Methods
		public override object Evaluate(XPathNodeIterator nodeIterator); // 0x101AE200-0x101AE210
		public override XPathNodeIterator Clone(); // 0x1018AFD0-0x1018AFE0
	}

	internal class Operator : AstNode // TypeDefIndex: 1785
	{
		// Fields
		private static Op[] invertOp; // 0x00
		private Op opType; // 0x08
		private AstNode opnd1; // 0x0C
		private AstNode opnd2; // 0x10
	
		// Properties
		public override AstType Type { get; } // 0x102F68B0-0x102F68C0 
		public override XPathResultType ReturnType { get; } // 0x106C29E0-0x106C2A10 
		public Op OperatorType { get; } // 0x101B4FF0-0x101B5000 
		public AstNode Operand1 { get; } // 0x101AE200-0x101AE210 
		public AstNode Operand2 { get; } // 0x101BCD80-0x101BCD90 
	
		// Nested types
		public enum Op // TypeDefIndex: 1786
		{
			INVALID = 0,
			OR = 1,
			AND = 2,
			EQ = 3,
			NE = 4,
			LT = 5,
			LE = 6,
			GT = 7,
			GE = 8,
			PLUS = 9,
			MINUS = 10,
			MUL = 11,
			DIV = 12,
			MOD = 13,
			UNION = 14
		}
	
		// Constructors
		public Operator(Op op, AstNode opnd1, AstNode opnd2); // 0x10219D20-0x10219D50
		static Operator(); // 0x106C2990-0x106C29E0
	
		// Methods
		public static Op InvertOperator(Op op); // 0x106C2920-0x106C2990
	}
}

public abstract class OptionBehaviour : MonoBehaviour // TypeDefIndex: 5743
{
	// Fields
	public StringNames Title; // 0x0C
	public Action<OptionBehaviour> OnValueChanged; // 0x10

	// Constructors
	protected OptionBehaviour(); // 0x101A68C0-0x101A68D0

	// Methods
	public virtual float GetFloat(); // 0x10206C30-0x10206C80
	public virtual int GetInt(); // 0x10206C80-0x10206CD0
	public virtual bool GetBool(); // 0x10206BE0-0x10206C30
	public void SetAsPlayer(); // 0x10206CD0-0x10206D60
}

public class OptionsConsole : MonoBehaviour, IUsable // TypeDefIndex: 5566
{
	// Fields
	public CustomPlayerMenu MenuPrefab; // 0x0C
	public SpriteRenderer Outline; // 0x10

	// Properties
	public Sprite UseIcon { get; } // 0x101D1BE0-0x101D1BF0 
	public float UsableDistance { get; } // 0x10207240-0x10207250 
	public float PercentCool { get; } // 0x101AE1E0-0x101AE1F0 

	// Constructors
	public OptionsConsole(); // 0x101A68C0-0x101A68D0

	// Methods
	public float CanUse(GameData.PlayerInfo pc, out bool canUse, out bool couldUse); // 0x10206D60-0x10206E80
	public void SetOutline(bool on, bool mainTarget); // 0x10206E80-0x10206FC0
	public void Use(); // 0x10206FC0-0x10207240
}

public class OptionsMenuBehaviour : MonoBehaviour, ITranslatedText // TypeDefIndex: 5744
{
	// Fields
	public SpriteRenderer Background; // 0x0C
	public SpriteRenderer JoystickButton; // 0x10
	public SpriteRenderer TouchButton; // 0x14
	public SlideBar JoystickSizeSlider; // 0x18
	public FloatRange JoystickSizes; // 0x1C
	public SlideBar SoundSlider; // 0x20
	public SlideBar MusicSlider; // 0x24
	public ToggleButtonBehaviour PersonalizedAdsButton; // 0x28
	public ToggleButtonBehaviour CensorChatButton; // 0x2C
	public bool Toggle; // 0x30
	public TabGroup[] Tabs; // 0x34

	// Properties
	public bool IsOpen { get; } // 0x101ADC90-0x101ADCA0 

	// Constructors
	public OptionsMenuBehaviour(); // 0x10208090-0x10208100

	// Methods
	public void OpenTabGroup(TabGroup selected); // 0x102072C0-0x10207390
	private void Update(); // 0x10208050-0x10208090
	public void Start(); // 0x10207830-0x10207890
	public void OnDestroy(); // 0x10207250-0x102072C0
	public void ResetText(); // 0x10207660-0x102077A0
	public void Open(); // 0x10207390-0x10207660
	public void SetControlType(int i); // 0x102077A0-0x10207830
	public void UpdateJoystickSize(SlideBar slider); // 0x10207DD0-0x10207ED0
	public void UpdateSfxVolume(SlideBar button); // 0x10207F90-0x10208050
	public void UpdateMusicVolume(SlideBar button); // 0x10207ED0-0x10207F90
	public void TogglePersonalizedAd(); // 0x10207900-0x102079B0
	public void ToggleCensorChat(); // 0x10207890-0x10207900
	public void UpdateButtons(); // 0x102079B0-0x10207DD0
	public void Close(); // 0x101C3010-0x101C3040
}

namespace GoogleMobileAds.Api
{
	internal enum Orientation // TypeDefIndex: 5967
	{
		Current = 0,
		Landscape = 1,
		Portrait = 2
	}
}

public class OverlayKillAnimation : MonoBehaviour // TypeDefIndex: 5675
{
	// Fields
	public KillAnimType KillType; // 0x0C
	public PoolablePlayer killerParts; // 0x10
	public PoolablePlayer victimParts; // 0x14
	private uint victimHat; // 0x18
	public AudioClip Stinger; // 0x1C
	public AudioClip Sfx; // 0x20
	public float StingerVolume; // 0x24

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass7_0 // TypeDefIndex: 5676
	{
		// Fields
		public GameData.PlayerInfo kInfo; // 0x08

		// Constructors
		public __c__DisplayClass7_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _Begin_b__0(SpriteRenderer b); // 0x102189E0-0x10218A50
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _WaitForFinish_d__10 : IEnumerator<object> // TypeDefIndex: 5677
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public OverlayKillAnimation __4__this; // 0x10
		private SpriteAnim[] _anims_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _WaitForFinish_d__10(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10218B40-0x10218C80
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10218C80-0x10218CD0
	}

	// Constructors
	public OverlayKillAnimation(); // 0x10208B80-0x10208BA0

	// Methods
	public void Begin(GameData.PlayerInfo kInfo, GameData.PlayerInfo vInfo); // 0x10208100-0x102089E0
	public void SetHatFloor(); // 0x10208A90-0x10208B30
	public void PlayKillSound(); // 0x102089E0-0x10208A90
	[IteratorStateMachine] // 0x10012490-0x100124E0
	public IEnumerator WaitForFinish(); // 0x10208B30-0x10208B80
}

namespace Discord
{
	public class OverlayManager // TypeDefIndex: 5071
	{
		// Fields
		private IntPtr MethodsPtr; // 0x08
		private object MethodsStructure; // 0x0C
		[CompilerGenerated] // 0x10002030-0x10002050
		private ToggleHandler OnToggle; // 0x10
	
		// Properties
		private FFIMethods Methods { get; } // 0x109192C0-0x109193A0 
	
		// Events
		public event ToggleHandler OnToggle {
			add; // 0x10919240-0x109192C0
			remove; // 0x109193A0-0x10919420
		}
	
		// Nested types
		internal struct FFIEvents // TypeDefIndex: 5072
		{
			// Fields
			internal ToggleHandler OnToggle; // 0x00
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void ToggleHandler(IntPtr ptr, bool locked); // TypeDefIndex: 5073; 0x1018BF80-0x1018C200
		}
	
		internal struct FFIMethods // TypeDefIndex: 5074
		{
			// Fields
			internal IsEnabledMethod IsEnabled; // 0x00
			internal IsLockedMethod IsLocked; // 0x04
			internal SetLockedMethod SetLocked; // 0x08
			internal OpenActivityInviteMethod OpenActivityInvite; // 0x0C
			internal OpenGuildInviteMethod OpenGuildInvite; // 0x10
			internal OpenVoiceSettingsMethod OpenVoiceSettings; // 0x14
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void IsEnabledMethod(IntPtr methodsPtr, ref bool enabled); // TypeDefIndex: 5075; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void IsLockedMethod(IntPtr methodsPtr, ref bool locked); // TypeDefIndex: 5076; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void SetLockedCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 5077; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void SetLockedMethod(IntPtr methodsPtr, bool locked, IntPtr callbackData, SetLockedCallback callback); // TypeDefIndex: 5078; 0x10624180-0x10624420
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void OpenActivityInviteCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 5079; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void OpenActivityInviteMethod(IntPtr methodsPtr, ActivityActionType type, IntPtr callbackData, OpenActivityInviteCallback callback); // TypeDefIndex: 5080; 0x10624180-0x10624420
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void OpenGuildInviteCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 5081; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void OpenGuildInviteMethod(IntPtr methodsPtr, string code, IntPtr callbackData, OpenGuildInviteCallback callback); // TypeDefIndex: 5082; 0x10624180-0x10624420
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void OpenVoiceSettingsCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 5083; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void OpenVoiceSettingsMethod(IntPtr methodsPtr, IntPtr callbackData, OpenVoiceSettingsCallback callback); // TypeDefIndex: 5084; 0x10344040-0x103442D0
		}
	
		public delegate void SetLockedHandler(Discord.Result result); // TypeDefIndex: 5085; 0x1061F960-0x1061FAD0
	
		public delegate void OpenActivityInviteHandler(Discord.Result result); // TypeDefIndex: 5086; 0x1061F960-0x1061FAD0
	
		public delegate void OpenGuildInviteHandler(Discord.Result result); // TypeDefIndex: 5087; 0x1061F960-0x1061FAD0
	
		public delegate void OpenVoiceSettingsHandler(Discord.Result result); // TypeDefIndex: 5088; 0x1061F960-0x1061FAD0
	
		public delegate void ToggleHandler(bool locked); // TypeDefIndex: 5089; 0x10740B50-0x10740DC0
	
		// Constructors
		internal OverlayManager(IntPtr ptr, IntPtr eventsPtr, ref FFIEvents events); // 0x10919140-0x10919240
	
		// Methods
		private void InitEvents(IntPtr eventsPtr, ref FFIEvents events); // 0x10918A30-0x10918AB0
		public bool IsEnabled(); // 0x10918AB0-0x10918B00
		public bool IsLocked(); // 0x10918B00-0x10918B60
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void SetLockedCallbackImpl(IntPtr ptr, Discord.Result result); // 0x10919000-0x10919090
		public void SetLocked(bool locked, SetLockedHandler callback); // 0x10919090-0x10919140
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OpenActivityInviteCallbackImpl(IntPtr ptr, Discord.Result result); // 0x10918C20-0x10918CB0
		public void OpenActivityInvite(ActivityActionType type, OpenActivityInviteHandler callback); // 0x10918CB0-0x10918D60
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OpenGuildInviteCallbackImpl(IntPtr ptr, Discord.Result result); // 0x10918D60-0x10918DF0
		public void OpenGuildInvite(string code, OpenGuildInviteHandler callback); // 0x10918DF0-0x10918EA0
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OpenVoiceSettingsCallbackImpl(IntPtr ptr, Discord.Result result); // 0x10918EA0-0x10918F30
		public void OpenVoiceSettings(OpenVoiceSettingsHandler callback); // 0x10918F30-0x10919000
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OnToggleImpl(IntPtr ptr, bool locked); // 0x10918B60-0x10918C20
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x10008540-0x10008560
	public struct P2PSessionConnectFail_t // TypeDefIndex: 4583
	{
		// Fields
		public const int k_iCallback = 1203; // Metadata: 0x0024231F
		public CSteamID m_steamIDRemote; // 0x00
		public byte m_eP2PSessionError; // 0x08
	}

	[CallbackIdentity] // 0x10008430-0x10008450
	public struct P2PSessionRequest_t // TypeDefIndex: 4582
	{
		// Fields
		public const int k_iCallback = 1202; // Metadata: 0x0024231B
		public CSteamID m_steamIDRemote; // 0x00
	}

	public struct P2PSessionState_t // TypeDefIndex: 4752
	{
		// Fields
		public byte m_bConnectionActive; // 0x00
		public byte m_bConnecting; // 0x01
		public byte m_eP2PSessionError; // 0x02
		public byte m_bUsingRelay; // 0x03
		public int m_nBytesQueuedForSend; // 0x04
		public int m_nPacketsQueuedForSend; // 0x08
		public uint m_nRemoteIP; // 0x0C
		public ushort m_nRemotePort; // 0x10
	}

	public static class Packsize // TypeDefIndex: 4296
	{
		// Fields
		public const int value = 8; // Metadata: 0x0024213C
	
		// Nested types
		private struct ValvePackingSentinel_t // TypeDefIndex: 4297
		{
			// Fields
			private uint m_u32; // 0x00
			private ulong m_u64; // 0x08
			private ushort m_u16; // 0x10
			private double m_d; // 0x18
		}
	
		// Methods
		public static bool Test(); // 0x101872A0-0x10187350
	}
}

public static class Palette // TypeDefIndex: 5232
{
	// Fields
	public static readonly Color DisabledGrey; // 0x00
	public static readonly Color DisabledColor; // 0x10
	public static readonly Color EnabledColor; // 0x20
	public static readonly Color Black; // 0x30
	public static readonly Color ClearWhite; // 0x40
	public static readonly Color HalfWhite; // 0x50
	public static readonly Color White; // 0x60
	public static readonly Color LightBlue; // 0x70
	public static readonly Color Blue; // 0x80
	public static readonly Color Orange; // 0x90
	public static readonly Color Purple; // 0xA0
	public static readonly Color Brown; // 0xB0
	public static readonly Color CrewmateBlue; // 0xC0
	public static readonly Color ImpostorRed; // 0xD0
	public static readonly string[] ShortColorNames; // 0xE0
	public static readonly Color32[] PlayerColors; // 0xE4
	public static readonly Color32[] ShadowColors; // 0xE8
	public static readonly Color32 VisorColor; // 0xEC

	// Constructors
	static Palette(); // 0x10208BA0-0x10209A20
}

public class ParallaxChild : MonoBehaviour // TypeDefIndex: 5621
{
	// Fields
	[HideInInspector] // 0x10002030-0x10002050
	public Vector3 BasePosition; // 0x0C

	// Constructors
	public ParallaxChild(); // 0x101A68C0-0x101A68D0

	// Methods
	public void OnEnable(); // 0x10209A20-0x10209A70
}

public class ParallaxController : MonoBehaviour // TypeDefIndex: 5622
{
	// Fields
	public ParallaxChild[] Children; // 0x0C
	public float Scale; // 0x10

	// Constructors
	public ParallaxController(); // 0x101AE1C0-0x101AE1E0

	// Methods
	public void Start(); // 0x10209BB0-0x10209BF0
	public void SetParallax(float x); // 0x10209A70-0x10209BB0
}

namespace MS.Internal.Xml.XPath
{
	internal sealed class ParentQuery : CacheAxisQuery // TypeDefIndex: 1787
	{
		// Constructors
		public ParentQuery(Query qyInput, string Name, string Prefix, XPathNodeType Type); // 0x106C2B00-0x106C2B10
		private ParentQuery(ParentQuery other); // 0x106C2B10-0x106C2B20
	
		// Methods
		public override object Evaluate(XPathNodeIterator context); // 0x106C2A60-0x106C2B00
		public override XPathNodeIterator Clone(); // 0x106C2A10-0x106C2A60
	}
}

[Serializable]
public struct ParticleInfo // TypeDefIndex: 5247
{
	// Fields
	public Vector3 Position; // 0x00
	public float Scale; // 0x0C
	public float Timer; // 0x10
}

namespace Discord
{
	public struct PartySize // TypeDefIndex: 4882
	{
		// Fields
		public int CurrentSize; // 0x00
		public int MaxSize; // 0x04
	}
}

public class PassiveButton : PassiveUiElement // TypeDefIndex: 5456
{
	// Fields
	public Button.ButtonClickedEvent OnClick; // 0x10
	public AudioClip ClickSound; // 0x14
	public bool OnUp; // 0x18
	public bool OnDown; // 0x19
	public bool OnRepeat; // 0x1A
	public float RepeatDuration; // 0x1C
	public UnityEvent OnMouseOver; // 0x20
	public UnityEvent OnMouseOut; // 0x24
	private float repeatTimer; // 0x28

	// Properties
	public override bool HandleUp { get; } // 0x1020AD90-0x1020ADA0 
	public override bool HandleDown { get; } // 0x1020AD70-0x1020AD80 
	public override bool HandleRepeat { get; } // 0x1020AD80-0x1020AD90 

	// Constructors
	public PassiveButton(); // 0x1020AD10-0x1020AD70

	// Methods
	public override void ReceiveClickDown(); // 0x1020AAD0-0x1020AB90
	public override void ReceiveRepeatDown(); // 0x1020AC10-0x1020AD10
	public override void ReceiveClickUp(); // 0x1020AB90-0x1020ABB0
	public override void ReceiveMouseOut(); // 0x1020ABB0-0x1020ABE0
	public override void ReceiveMouseOver(); // 0x1020ABE0-0x1020AC10
}

public class PassiveButtonManager : DestroyableSingleton<PassiveButtonManager> // TypeDefIndex: 5457
{
	// Fields
	public List<PassiveUiElement> Buttons; // 0x10
	private List<IFocusHolder> FocusHolders; // 0x14
	private PassiveUiElement currentOver; // 0x18
	public Controller controller; // 0x1C
	private ButtonStates currentState; // 0x20
	private Collider2D[] results; // 0x24

	// Nested types
	private enum ButtonStates // TypeDefIndex: 5458
	{
		Up = 0,
		Down = 1,
		Drag = 2
	}

	private class DepthComparer : IComparer<MonoBehaviour> // TypeDefIndex: 5459
	{
		// Fields
		public static readonly DepthComparer Instance; // 0x00

		// Constructors
		public DepthComparer(); // 0x101A2CD0-0x101A2CE0
		static DepthComparer(); // 0x10201C20-0x10201C70

		// Methods
		public int Compare(MonoBehaviour x, MonoBehaviour y); // 0x10201AD0-0x10201C20
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass11_0 // TypeDefIndex: 5460
	{
		// Fields
		public Collider2D col; // 0x08

		// Constructors
		public __c__DisplayClass11_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _Update_b__0(PassiveUiElement b2); // 0x10218740-0x10218800
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass12_0 // TypeDefIndex: 5461
	{
		// Fields
		public Vector2 pt; // 0x08
		public Func<Collider2D, bool> __9__1; // 0x10

		// Constructors
		public __c__DisplayClass12_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _HandleFocus_b__1(Collider2D c); // 0x10218800-0x10218840
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass12_1 // TypeDefIndex: 5462
	{
		// Fields
		public float depth; // 0x08
		public __c__DisplayClass12_0 CS___8__locals1; // 0x0C

		// Constructors
		public __c__DisplayClass12_1(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _HandleFocus_b__0(PassiveUiElement top); // 0x10218840-0x10218920
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass13_0 // TypeDefIndex: 5463
	{
		// Fields
		public Controller.TouchState pt; // 0x08

		// Constructors
		public __c__DisplayClass13_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _HandleMouseOut_b__0(Collider2D c); // 0x10218920-0x10218960
	}

	// Constructors
	public PassiveButtonManager(); // 0x1020AA30-0x1020AAD0

	// Methods
	public void RegisterOne(PassiveUiElement button); // 0x1020A390-0x1020A3E0
	public void RemoveOne(PassiveUiElement passiveButton); // 0x1020A430-0x1020A480
	public void RegisterOne(IFocusHolder focusHolder); // 0x1020A340-0x1020A390
	public void RemoveOne(IFocusHolder focusHolder); // 0x1020A3E0-0x1020A430
	public void Update(); // 0x1020A480-0x1020AA30
	private void HandleFocus(Vector2 pt); // 0x10209CD0-0x1020A040
	private void HandleMouseOut(); // 0x1020A040-0x1020A150
	private void HandleMouseOver(PassiveUiElement button, Collider2D col); // 0x1020A150-0x1020A340
	private Vector2 GetTouch(bool getDownTouch); // 0x10209BF0-0x10209CD0
}

public abstract class PassiveUiElement : MonoBehaviour // TypeDefIndex: 5464
{
	// Fields
	public Collider2D[] Colliders; // 0x0C

	// Properties
	public virtual bool HandleUp { get; } // 0x101A1190-0x101A1520 
	public virtual bool HandleDown { get; } // 0x101A1190-0x101A1520 
	public virtual bool HandleRepeat { get; } // 0x101A1190-0x101A1520 
	public virtual bool HandleDrag { get; } // 0x101A1190-0x101A1520 
	public virtual bool HandleOverOut { get; } // 0x101D2490-0x101D24A0 

	// Constructors
	protected PassiveUiElement(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Start(); // 0x1020AE30-0x1020AED0
	public void OnDestroy(); // 0x1020ADA0-0x1020AE30
	public virtual void ReceiveClickDown(); // 0x101A2F90-0x101A2FA0
	public virtual void ReceiveRepeatDown(); // 0x101A2F90-0x101A2FA0
	public virtual void ReceiveClickUp(); // 0x101A2F90-0x101A2FA0
	public virtual void ReceiveClickDrag(Vector2 dragDelta); // 0x101A2F90-0x101A2FA0
	public virtual void ReceiveMouseOver(); // 0x101A2F90-0x101A2FA0
	public virtual void ReceiveMouseOut(); // 0x101A2F90-0x101A2FA0
}

public class PbExileController : ExileController // TypeDefIndex: 5281
{
	// Fields
	public SpriteRenderer HandSlot; // 0x34
	public Sprite BadHand; // 0x38
	public Sprite GoodHand; // 0x3C
	public AudioClip SplashSound; // 0x40
	public SpriteAnim Sploosher; // 0x44
	public AnimationClip Sploosh; // 0x48

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Animate_d__7 : IEnumerator<object> // TypeDefIndex: 5282
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public PbExileController __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Animate_d__7(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102148F0-0x10214D60
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10214D60-0x10214DB0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _HandleText_d__8 : IEnumerator<object> // TypeDefIndex: 5283
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public PbExileController __4__this; // 0x10
		private float _newDur_5__2; // 0x14
		private float _t_5__3; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _HandleText_d__8(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10217250-0x10217490
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10217490-0x102174E0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _PlayerFall_d__9 : IEnumerator<object> // TypeDefIndex: 5284
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public PbExileController __4__this; // 0x10
		private Vector2 _top_5__2; // 0x14
		private Vector2 _bottom_5__3; // 0x1C
		private bool _started_5__4; // 0x24
		private float _d1_5__5; // 0x28
		private float _t_5__6; // 0x2C

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _PlayerFall_d__9(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102174E0-0x102177D0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102177D0-0x10217820
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass10_0 // TypeDefIndex: 5285
	{
		// Fields
		public PbExileController __4__this; // 0x08
		public Vector2 bottom; // 0x0C
		public Vector2 top; // 0x14

		// Constructors
		public __c__DisplayClass10_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _PlayerSpin_b__0(float p); // 0x10218620-0x10218710
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _PlayerSpin_d__10 : IEnumerator<object> // TypeDefIndex: 5286
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public PbExileController __4__this; // 0x10
		private __c__DisplayClass10_0 __8__1; // 0x14
		private float _d1_5__2; // 0x18
		private float _d3_5__3; // 0x1C
		private float _t_5__4; // 0x20

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _PlayerSpin_d__10(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10217820-0x10217EF0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10217EF0-0x10217F40
	}

	// Constructors
	public PbExileController(); // 0x102027F0-0x10202800

	// Methods
	public void OnEnable(); // 0x1020AF70-0x1020AFA0
	[IteratorStateMachine] // 0x1002C2F0-0x1002C340
	protected override IEnumerator Animate(); // 0x1020AED0-0x1020AF20
	[IteratorStateMachine] // 0x1002C460-0x1002C4B0
	private IEnumerator HandleText(); // 0x1020AF20-0x1020AF70
	[IteratorStateMachine] // 0x1002C500-0x1002C550
	private IEnumerator PlayerFall(); // 0x1020AFA0-0x1020B000
	[IteratorStateMachine] // 0x1002C6B0-0x1002C700
	private IEnumerator PlayerSpin(); // 0x1020B000-0x1020B050
}

namespace Steamworks
{
	[CallbackIdentity] // 0x100020E0-0x10002100
	public struct PersonaStateChange_t // TypeDefIndex: 4490
	{
		// Fields
		public const int k_iCallback = 304; // Metadata: 0x002421AB
		public ulong m_ulSteamID; // 0x00
		public EPersonaChange m_nChangeFlags; // 0x08
	}
}

public class PetBehaviour : MonoBehaviour, IBuyable, ISteamBuyable // TypeDefIndex: 5678
{
	// Fields
	private const float SnapDistance = 2f; // Metadata: 0x00243CC1
	public bool Free; // 0x0C
	public string ProductId; // 0x10
	public string StoreName; // 0x14
	public uint SteamId; // 0x18
	public int ItchId; // 0x1C
	public string ItchUrl; // 0x20
	public PlayerControl Source; // 0x24
	public const float MinDistance = 0.2f; // Metadata: 0x00243CC5
	public const float damping = 0.7f; // Metadata: 0x00243CC9
	public const float Easing = 0.2f; // Metadata: 0x00243CCD
	public const float Speed = 5f; // Metadata: 0x00243CD1
	public float YOffset; // 0x28
	public SpriteAnim animator; // 0x2C
	public SpriteRenderer rend; // 0x30
	public SpriteRenderer shadowRend; // 0x34
	public Rigidbody2D body; // 0x38
	public Collider2D Collider; // 0x3C
	public AnimationClip idleClip; // 0x40
	public AnimationClip sadClip; // 0x44
	public AnimationClip scaredClip; // 0x48
	public AnimationClip walkClip; // 0x4C

	// Properties
	public string ProdId { get; } // 0x101BCD80-0x101BCD90 
	public string SteamPrice { get; } // 0x1020B7B0-0x1020B7E0 
	public uint SteamAppId { get; } // 0x101ADCC0-0x101ADCD0 
	public bool Visible { set; } // 0x1020B7E0-0x1020B8A0

	// Constructors
	public PetBehaviour(); // 0x1020B790-0x1020B7B0

	// Methods
	private Vector2 GetTruePosition(); // 0x1020B590-0x1020B670
	public void FixedUpdate(); // 0x1020B050-0x1020B590
	private void LateUpdate(); // 0x1020B670-0x1020B700
	public void SetMourning(); // 0x1020B700-0x1020B790
}

public class PetsTab : MonoBehaviour // TypeDefIndex: 5567
{
	// Fields
	public ColorChip ColorTabPrefab; // 0x0C
	public SpriteRenderer DemoImage; // 0x10
	public HatParent HatImage; // 0x14
	public SpriteRenderer SkinImage; // 0x18
	public SpriteRenderer PetImage; // 0x1C
	public FloatRange XRange; // 0x20
	public float YStart; // 0x24
	public float YOffset; // 0x28
	public int NumPerRow; // 0x2C
	public Scroller scroller; // 0x30
	private List<ColorChip> ColorChips; // 0x34

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass11_0 // TypeDefIndex: 5568
	{
		// Fields
		public ColorChip chip; // 0x08
		public PetBehaviour pet; // 0x0C
		public PetsTab __4__this; // 0x10

		// Constructors
		public __c__DisplayClass11_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _OnEnable_b__0(); // 0x10218710-0x10218740
	}

	// Constructors
	public PetsTab(); // 0x1020C0B0-0x1020C150

	// Methods
	public void OnEnable(); // 0x1020B970-0x1020BEC0
	public void OnDisable(); // 0x1020B8A0-0x1020B970
	private void SelectPet(ColorChip sender, PetBehaviour pet); // 0x1020BEC0-0x1020C0B0
}

public static class PhysicsHelpers // TypeDefIndex: 5233
{
	// Fields
	private static Collider2D[] colliderHits; // 0x00
	private static RaycastHit2D[] castHits; // 0x04
	private static Vector2 temp; // 0x08
	private static ContactFilter2D filter; // 0x10

	// Constructors
	static PhysicsHelpers(); // 0x1020C420-0x1020C4C0

	// Methods
	public static bool CircleContains(Vector2 source, float radius, int layerMask); // 0x1020C390-0x1020C420
	public static bool AnythingBetween(Vector2 source, Vector2 target, int layerMask, bool useTriggers); // 0x1020C260-0x1020C390
	public static bool AnyNonTriggersBetween(Vector2 source, Vector2 dirNorm, float mag, int layerMask); // 0x1020C150-0x1020C260
}

public class PingTracker : MonoBehaviour // TypeDefIndex: 5623
{
	// Fields
	public TextRenderer text; // 0x0C

	// Constructors
	public PingTracker(); // 0x101A68C0-0x101A68D0

	// Methods
	private void Update(); // 0x1020C4C0-0x1020C5A0
}

public class PlainDoor : SomeKindaDoor // TypeDefIndex: 5768
{
	// Fields
	public SystemTypes Room; // 0x0C
	public int Id; // 0x10
	public bool Open; // 0x14
	public BoxCollider2D myCollider; // 0x18
	public SpriteAnim animator; // 0x1C
	public AnimationClip OpenDoorAnim; // 0x20
	public AnimationClip CloseDoorAnim; // 0x24
	public AudioClip OpenSound; // 0x28
	public AudioClip CloseSound; // 0x2C
	private float size; // 0x30

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoCloseDoorway_d__12 : IEnumerator<object> // TypeDefIndex: 5769
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public PlainDoor __4__this; // 0x10
		public bool isHort; // 0x14
		private Vector2 _s_5__2; // 0x18
		private float _i_5__3; // 0x20

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoCloseDoorway_d__12(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10215A40-0x10215CC0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10215CC0-0x10215D10
	}

	// Constructors
	public PlainDoor(); // 0x101ACA10-0x101ACA20

	// Methods
	private void Start(); // 0x1020CA50-0x1020CAD0
	public override void SetDoorway(bool open); // 0x1020C840-0x1020CA50
	[IteratorStateMachine] // 0x1001B7D0-0x1001B820
	private IEnumerator CoCloseDoorway(bool isHort); // 0x1020C5A0-0x1020C600
	private void DoorDynamics(AudioSource source, float dt); // 0x1020C600-0x1020C810
	public virtual void Serialize(MessageWriter writer); // 0x1020C810-0x1020C840
	public virtual void Deserialize(MessageReader reader); // 0x101ACD90-0x101ACDD0
	public virtual bool DoUpdate(float dt); // 0x101A1190-0x101A1520
}

public class PlainShipRoom : MonoBehaviour // TypeDefIndex: 5789
{
	// Fields
	public SystemTypes RoomId; // 0x0C
	public SurvCamera survCamera; // 0x10
	public Collider2D roomArea; // 0x14

	// Constructors
	public PlainShipRoom(); // 0x101A68C0-0x101A68D0
}

public class PlanetSurveillanceMinigame : Minigame // TypeDefIndex: 5644
{
	// Fields
	public Camera Camera; // 0x28
	public GameObject Viewables; // 0x2C
	public MeshRenderer ViewPort; // 0x30
	public TextRenderer LocationName; // 0x34
	public TextRenderer SabText; // 0x38
	private RenderTexture texture; // 0x3C
	public MeshRenderer FillQuad; // 0x40
	public Material DefaultMaterial; // 0x44
	public Material StaticMaterial; // 0x48
	private bool isStatic; // 0x4C
	private SurvCamera[] survCameras; // 0x50
	public Transform DotParent; // 0x54
	private SpriteRenderer[] Dots; // 0x58
	public Sprite DotEnabled; // 0x5C
	public Sprite DotDisabled; // 0x60
	private int currentCamera; // 0x64
	public AudioClip ChangeSound; // 0x68

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _PulseStatic_d__20 : IEnumerator<object> // TypeDefIndex: 5645
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public PlanetSurveillanceMinigame __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _PulseStatic_d__20(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102182C0-0x102183F0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102183F0-0x10218440
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoAnimateOpen_d__21 : IEnumerator<object> // TypeDefIndex: 5646
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public PlanetSurveillanceMinigame __4__this; // 0x10
		private float _timer_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoAnimateOpen_d__21(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10215580-0x102159F0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102159F0-0x10215A40
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoAnimateClose_d__22 : IEnumerator<object> // TypeDefIndex: 5647
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public PlanetSurveillanceMinigame __4__this; // 0x10
		private float _timer_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoAnimateClose_d__22(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10214DB0-0x10215040
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10215040-0x10215090
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoDestroySelf_d__23 : IEnumerator<object> // TypeDefIndex: 5648
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public PlanetSurveillanceMinigame __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoDestroySelf_d__23(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102160B0-0x102161A0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102161A0-0x102161F0
	}

	// Constructors
	public PlanetSurveillanceMinigame(); // 0x101A68C0-0x101A68D0

	// Methods
	public override void Begin(PlayerTask task); // 0x1020CAD0-0x1020CD90
	public void Update(); // 0x1020D290-0x1020D400
	public void NextCamera(int direction); // 0x1020CED0-0x1020D210
	[IteratorStateMachine] // 0x1000F040-0x1000F090
	private IEnumerator PulseStatic(); // 0x1020D240-0x1020D290
	[IteratorStateMachine] // 0x1000F0F0-0x1000F140
	protected override IEnumerator CoAnimateOpen(); // 0x1020CE30-0x1020CE80
	[IteratorStateMachine] // 0x1000F180-0x1000F1D0
	private IEnumerator CoAnimateClose(); // 0x1020CDE0-0x1020CE30
	[IteratorStateMachine] // 0x1000F230-0x1000F280
	protected override IEnumerator CoDestroySelf(); // 0x1020CE80-0x1020CED0
	public override void Close(); // 0x1020CD90-0x1020CDE0
	public void OnDestroy(); // 0x1020D210-0x1020D240
}

namespace Steamworks
{
	[CallbackIdentity] // 0x10006D10-0x10006D30
	public struct PlaybackStatusHasChanged_t // TypeDefIndex: 4566
	{
		// Fields
		public const int k_iCallback = 4001; // Metadata: 0x002422DB
	}
}

public class PlayerAnimator : MonoBehaviour // TypeDefIndex: 5373
{
	// Fields
	public float Speed; // 0x0C
	public VirtualJoystick joystick; // 0x10
	public SpriteRenderer UseButton; // 0x14
	public FingerBehaviour finger; // 0x18
	public AnimationClip RunAnim; // 0x1C
	public AnimationClip IdleAnim; // 0x20
	private Vector2 velocity; // 0x24
	[HideInInspector] // 0x10002030-0x10002050
	private SpriteAnim Animator; // 0x2C
	[HideInInspector] // 0x10002030-0x10002050
	private SpriteRenderer rend; // 0x30
	public int NearbyConsoles; // 0x34

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _WalkPlayerTo_d__13 : IEnumerator<object> // TypeDefIndex: 5374
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public Vector2 worldPos; // 0x10
		public PlayerAnimator __4__this; // 0x18
		public float tolerance; // 0x1C
		public bool relax; // 0x20

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _WalkPlayerTo_d__13(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10218CD0-0x10219020
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10219020-0x10219070
	}

	// Constructors
	public PlayerAnimator(); // 0x1020D840-0x1020D860

	// Methods
	private void Start(); // 0x1020D620-0x1020D7D0
	public void FixedUpdate(); // 0x1020D400-0x1020D4F0
	public void LateUpdate(); // 0x1020D4F0-0x1020D620
	[IteratorStateMachine] // 0x10037EC0-0x10037F10
	public IEnumerator WalkPlayerTo(Vector2 worldPos, bool relax, float tolerance = 0.01f /* Metadata: 0x00243B4D */); // 0x1020D7D0-0x1020D840
}

public class PlayerControl : InnerNetObject // TypeDefIndex: 5679
{
	// Fields
	private int LastStartCounter; // 0x24
	public byte PlayerId; // 0x28
	public float MaxReportDistance; // 0x2C
	public bool moveable; // 0x30
	public bool inVent; // 0x31
	public static PlayerControl LocalPlayer; // 0x00
	private GameData.PlayerInfo _cachedData; // 0x34
	public AudioSource FootSteps; // 0x38
	public AudioClip KillSfx; // 0x3C
	public KillAnimation[] KillAnimations; // 0x40
	[SerializeField] // 0x10002030-0x10002050
	private float killTimer; // 0x44
	public int RemainingEmergencies; // 0x48
	public TextRenderer nameText; // 0x4C
	public LightSource LightPrefab; // 0x50
	private LightSource myLight; // 0x54
	[HideInInspector] // 0x10002030-0x10002050
	public Collider2D Collider; // 0x58
	[HideInInspector] // 0x10002030-0x10002050
	public PlayerPhysics MyPhysics; // 0x5C
	[HideInInspector] // 0x10002030-0x10002050
	public CustomNetworkTransform NetTransform; // 0x60
	public PetBehaviour CurrentPet; // 0x64
	public HatParent HatRenderer; // 0x68
	private SpriteRenderer myRend; // 0x6C
	private Collider2D[] hitBuffer; // 0x70
	public static GameOptionsData GameOptions; // 0x04
	public List<PlayerTask> myTasks; // 0x74
	public SpriteAnim[] ScannerAnims; // 0x78
	public SpriteRenderer[] ScannersImages; // 0x7C
	private IUsable closest; // 0x80
	private bool isNew; // 0x84
	public static List<PlayerControl> AllPlayerControls; // 0x08
	private Dictionary<Collider2D, IUsable> cache; // 0x88
	private List<IUsable> itemsInRange; // 0x8C
	private List<IUsable> newItemsInRange; // 0x90
	private byte scannerCount; // 0x94
	private bool infectedSet; // 0x95

	// Properties
	public bool CanMove { get; } // 0x10213E20-0x10214090 
	public GameData.PlayerInfo Data { get; } // 0x10214090-0x10214130 
	public bool Visible { get; set; } // 0x10214130-0x10214160 0x10214160-0x10214310

	// Nested types
	public class ColliderComparer : IEqualityComparer<Collider2D> // TypeDefIndex: 5680
	{
		// Fields
		public static readonly ColliderComparer Instance; // 0x00

		// Constructors
		public ColliderComparer(); // 0x101A2CD0-0x101A2CE0
		static ColliderComparer(); // 0x101B9F00-0x101B9F50

		// Methods
		public bool Equals(Collider2D x, Collider2D y); // 0x101B9E90-0x101B9EE0
		public int GetHashCode(Collider2D obj); // 0x101B9EE0-0x101B9F00
	}

	public class UsableComparer : IEqualityComparer<IUsable> // TypeDefIndex: 5681
	{
		// Fields
		public static readonly UsableComparer Instance; // 0x00

		// Constructors
		public UsableComparer(); // 0x101A2CD0-0x101A2CE0
		static UsableComparer(); // 0x101D1980-0x101D19D0

		// Methods
		public bool Equals(IUsable x, IUsable y); // 0x101D1940-0x101D1950
		public int GetHashCode(IUsable obj); // 0x101D1950-0x101D1980
	}

	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5682
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<GameData.PlayerInfo, byte> __9__6_0; // 0x04
		public static Func<GameData.PlayerInfo, bool> __9__82_0; // 0x08
		public static Func<GameData.PlayerInfo, bool> __9__82_1; // 0x0C
		public static Func<GameData.PlayerInfo, PlayerControl> __9__82_2; // 0x10
		public static Func<PlayerControl, int> __9__82_3; // 0x14
		public static Func<GameData.PlayerInfo, bool> __9__82_4; // 0x18
		public static Func<GameData.PlayerInfo, PlayerControl> __9__82_5; // 0x1C
		public static Func<PlayerControl, int> __9__82_6; // 0x20

		// Constructors
		static __c(); // 0x101D1520-0x101D1570
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal byte _RpcSetInfected_b__6_0(GameData.PlayerInfo p); // 0x101D0E90-0x101D0EB0
		internal bool _SetInfected_b__82_0(GameData.PlayerInfo pcd); // 0x101D0EB0-0x101D0ED0
		internal bool _SetInfected_b__82_1(GameData.PlayerInfo pcd); // 0x101D0ED0-0x101D0EF0
		internal PlayerControl _SetInfected_b__82_2(GameData.PlayerInfo pcd); // 0x101D0EF0-0x101D0F10
		internal int _SetInfected_b__82_3(PlayerControl pc); // 0x101D0F10-0x101D0F90
		internal bool _SetInfected_b__82_4(GameData.PlayerInfo pcd); // 0x101D0EB0-0x101D0ED0
		internal PlayerControl _SetInfected_b__82_5(GameData.PlayerInfo pcd); // 0x101D0EF0-0x101D0F10
		internal int _SetInfected_b__82_6(PlayerControl pc); // 0x101D0F90-0x101D1010
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _ClientInitialize_d__57 : IEnumerator<object> // TypeDefIndex: 5683
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public PlayerControl __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _ClientInitialize_d__57(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101CD000-0x101CD1F0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101CD1F0-0x101CD240
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass63_0 // TypeDefIndex: 5684
	{
		// Fields
		public IUsable item; // 0x08

		// Constructors
		public __c__DisplayClass63_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _FixedUpdate_b__0(IUsable j); // 0x101D1360-0x101D1380
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoSetTasks_d__72 : IEnumerator<object> // TypeDefIndex: 5685
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public PlayerControl __4__this; // 0x10
		public List<GameData.TaskInfo> tasks; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoSetTasks_d__72(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101CE950-0x101CF030
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101CF030-0x101CF080
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass80_0 // TypeDefIndex: 5686
	{
		// Fields
		public uint idx; // 0x08

		// Constructors
		public __c__DisplayClass80_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _CompleteTask_b__0(PlayerTask p); // 0x101D1380-0x101D13A0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass84_0 // TypeDefIndex: 5687
	{
		// Fields
		public PlayerControl __4__this; // 0x08
		public string name; // 0x0C

		// Constructors
		public __c__DisplayClass84_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _CheckName_b__0(GameData.PlayerInfo i); // 0x101D13A0-0x101D13F0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass86_0 // TypeDefIndex: 5688
	{
		// Fields
		public PlayerControl __4__this; // 0x08
		public byte bodyColor; // 0x0C

		// Constructors
		public __c__DisplayClass86_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _CheckColor_b__0(GameData.PlayerInfo p); // 0x101D13F0-0x101D1430
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoStartMeeting_d__97 : IEnumerator<object> // TypeDefIndex: 5689
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public GameData.PlayerInfo target; // 0x10
		public PlayerControl __4__this; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoStartMeeting_d__97(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101CF910-0x101CFD90
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101CFD90-0x101CFDE0
	}

	// Constructors
	public PlayerControl(); // 0x10213D10-0x10213E20
	static PlayerControl(); // 0x10213CA0-0x10213D10

	// Methods
	public void RpcSetScanner(bool value); // 0x10211A70-0x10211B60
	public void RpcPlayAnimation(byte animType); // 0x102113A0-0x10211470
	public void RpcSetStartCounter(int secondsLeft); // 0x10211C00-0x10211C80
	public void RpcCompleteTask(uint idx); // 0x10211250-0x102112F0
	public void RpcSyncSettings(GameOptionsData gameOptions); // 0x10211D50-0x10211E60
	public void RpcSetInfected(GameData.PlayerInfo[] infected); // 0x102117F0-0x10211930
	public void CmdCheckName(string name); // 0x1020E0E0-0x1020E190
	public void RpcSetSkin(uint skinId); // 0x10211B60-0x10211C00
	public void RpcSetHat(uint hatId); // 0x10211740-0x102117F0
	public void RpcSetPet(uint petId); // 0x102119D0-0x10211A70
	public void RpcSetName(string name); // 0x10211930-0x102119D0
	public void CmdCheckColor(byte bodyColor); // 0x1020E030-0x1020E0E0
	public void RpcSetColor(byte bodyColor); // 0x102116A0-0x10211740
	public bool RpcSendChat(string chatText); // 0x10211550-0x102116A0
	public void RpcSendChatNote(byte srcPlayerId, ChatNoteTypes noteType); // 0x10211470-0x10211550
	public void CmdReportDeadBody(GameData.PlayerInfo target); // 0x1020E190-0x1020E250
	public void RpcStartMeeting(GameData.PlayerInfo info); // 0x10211C80-0x10211D50
	public void RpcMurderPlayer(PlayerControl target); // 0x102112F0-0x102113A0
	public override void HandleRpc(byte callId, MessageReader reader); // 0x1020F7A0-0x1020FCC0
	public void SetKillTimer(float time); // 0x10212B70-0x10212CD0
	private void Awake(); // 0x1020DA70-0x1020DB20
	private void Start(); // 0x102136D0-0x10213C20
	[IteratorStateMachine] // 0x10012940-0x10012990
	private IEnumerator ClientInitialize(); // 0x1020DFD0-0x1020E030
	public override void OnDestroy(); // 0x102104C0-0x102105A0
	private void FixedUpdate(); // 0x1020ECF0-0x1020F6E0
	public void UseClosest(); // 0x10213C20-0x10213CA0
	public void ReportClosest(); // 0x10210BA0-0x10210D80
	public void PlayStepSound(); // 0x10210630-0x102109C0
	private void SetScanner(bool on, byte cnt); // 0x10213390-0x102134F0
	public Vector2 GetTruePosition(); // 0x1020F6E0-0x1020F7A0
	private PlayerControl FindClosestTarget(); // 0x1020E9D0-0x1020ECF0
	public void SetTasks(List<GameData.TaskInfo> tasks); // 0x10213660-0x102136D0
	[IteratorStateMachine] // 0x10013B20-0x10013B70
	private IEnumerator CoSetTasks(List<GameData.TaskInfo> tasks); // 0x1020E250-0x1020E2B0
	public void AddSystemTask(SystemTypes system); // 0x1020D860-0x1020DA70
	public void RemoveTask(PlayerTask task); // 0x10210AB0-0x10210BA0
	private void ClearTasks(); // 0x1020DEE0-0x1020DFD0
	public void RemoveInfected(); // 0x102109C0-0x10210AB0
	public void Die(DeathReason reason); // 0x1020E500-0x1020E790
	public void Revive(); // 0x10211060-0x10211250
	public void PlayAnimation(byte animType); // 0x102105A0-0x10210630
	public void CompleteTask(uint idx); // 0x1020E310-0x1020E4B0
	public void SetInfected(byte[] infected); // 0x102121B0-0x10212B70
	public void Exiled(); // 0x1020E790-0x1020E9D0
	public void CheckName(string name); // 0x1020DCC0-0x1020DEE0
	public void SetName(string name); // 0x10212CD0-0x10212DC0
	public void CheckColor(byte bodyColor); // 0x1020DB20-0x1020DCC0
	public void SetHatAlpha(float a); // 0x10212000-0x10212070
	public void SetColor(byte bodyColor); // 0x10211EB0-0x10212000
	public void SetSkin(uint skinId); // 0x102135C0-0x10213660
	public void SetHat(uint hatId, int colorId); // 0x10212070-0x102121B0
	public void SetPet(uint petId); // 0x10212F50-0x10213150
	public static void SetPetImage(uint petId, int colorId, SpriteRenderer target); // 0x10212EC0-0x10212F50
	public static void SetPetImage(PetBehaviour pet, int colorId, SpriteRenderer target); // 0x10212DC0-0x10212EC0
	public static void SetSkinImage(uint skinId, SpriteRenderer target); // 0x10213520-0x102135C0
	public static void SetSkinImage(SkinData skin, SpriteRenderer target); // 0x102134F0-0x10213520
	private void ReportDeadBody(GameData.PlayerInfo target); // 0x10210D80-0x10211060
	[IteratorStateMachine] // 0x10013BD0-0x10013C20
	public IEnumerator CoStartMeeting(GameData.PlayerInfo target); // 0x1020E2B0-0x1020E310
	public void MurderPlayer(PlayerControl target); // 0x1020FCC0-0x102104C0
	public override bool Serialize(MessageWriter writer, bool initialState); // 0x10211E60-0x10211EB0
	public override void Deserialize(MessageReader reader, bool initialState); // 0x1020E4B0-0x1020E500
	public void SetPlayerMaterialColors(Renderer rend); // 0x10213300-0x10213390
	public static void SetPlayerMaterialColors(int colorId, Renderer rend); // 0x10213150-0x10213300
}

public class PlayerParticle : PoolableBehavior // TypeDefIndex: 5580
{
	// Fields
	public SpriteRenderer myRend; // 0x10
	public float maxDistance; // 0x14
	public Vector2 velocity; // 0x18
	public float angularVelocity; // 0x20
	[CompilerGenerated] // 0x10002030-0x10002050
	private Camera _FollowCamera_k__BackingField; // 0x24
	private Vector3 lastCamera; // 0x28

	// Properties
	public Camera FollowCamera { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101BA650-0x101BA660 0x101BA660-0x101BA670

	// Constructors
	public PlayerParticle(); // 0x101BA630-0x101BA650

	// Methods
	public void Update(); // 0x101BA200-0x101BA630
}

[Serializable]
public class PlayerParticleInfo // TypeDefIndex: 5581
{
	// Fields
	public Sprite image; // 0x08
	public FloatRange angularVel; // 0x0C
	public bool alignToVel; // 0x10

	// Constructors
	public PlayerParticleInfo(); // 0x101A2CD0-0x101A2CE0
}

public class PlayerParticles : MonoBehaviour // TypeDefIndex: 5582
{
	// Fields
	public PlayerParticleInfo[] Sprites; // 0x0C
	public FloatRange velocity; // 0x10
	public FloatRange scale; // 0x14
	public ObjectPoolBehavior pool; // 0x18
	public float StartRadius; // 0x1C
	public Camera FollowCamera; // 0x20
	private RandomFill<PlayerParticleInfo> fill; // 0x24

	// Constructors
	public PlayerParticles(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Start(); // 0x101BAC00-0x101BAD20
	public void Update(); // 0x101BAD20-0x101BADB0
	private void PlacePlayer(PlayerParticle part, bool initial); // 0x101BA670-0x101BAC00
}

public class PlayerPhysics : InnerNetObject // TypeDefIndex: 5691
{
	// Fields
	public float Speed; // 0x24
	public float GhostSpeed; // 0x28
	[HideInInspector] // 0x10002030-0x10002050
	private Rigidbody2D body; // 0x2C
	[HideInInspector] // 0x10002030-0x10002050
	private SpriteAnim Animator; // 0x30
	[HideInInspector] // 0x10002030-0x10002050
	private SpriteRenderer rend; // 0x34
	[HideInInspector] // 0x10002030-0x10002050
	private PlayerControl myPlayer; // 0x38
	public AnimationClip RunAnim; // 0x3C
	public AnimationClip IdleAnim; // 0x40
	public AnimationClip GhostIdleAnim; // 0x44
	public AnimationClip EnterVentAnim; // 0x48
	public AnimationClip ExitVentAnim; // 0x4C
	public AnimationClip SpawnAnim; // 0x50
	public SkinLayer Skin; // 0x54

	// Properties
	public float TrueSpeed { get; } // 0x101BBC60-0x101BBCD0 
	public float TrueGhostSpeed { get; } // 0x101BBBF0-0x101BBC60 

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoSpawnPlayer_d__27 : IEnumerator<object> // TypeDefIndex: 5692
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public LobbyBehaviour lobby; // 0x10
		public PlayerPhysics __4__this; // 0x14
		private Vector3 _spawnPos_5__2; // 0x18
		private bool _amFlipped_5__3; // 0x24

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoSpawnPlayer_d__27(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101CF330-0x101CF8C0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101CF8C0-0x101CF910
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass29_0 // TypeDefIndex: 5693
	{
		// Fields
		public int id; // 0x08

		// Constructors
		public __c__DisplayClass29_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _CoEnterVent_b__0(Vent v); // 0x101D12B0-0x101D12D0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoEnterVent_d__29 : IEnumerator<object> // TypeDefIndex: 5694
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public int id; // 0x10
		public PlayerPhysics __4__this; // 0x14
		private Vent _vent_5__2; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoEnterVent_d__29(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101CDD20-0x101CE000
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101CE000-0x101CE050
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass30_0 // TypeDefIndex: 5695
	{
		// Fields
		public int id; // 0x08

		// Constructors
		public __c__DisplayClass30_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _CoExitVent_b__0(Vent v); // 0x101D12B0-0x101D12D0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoExitVent_d__30 : IEnumerator<object> // TypeDefIndex: 5696
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public int id; // 0x10
		public PlayerPhysics __4__this; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoExitVent_d__30(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101CE050-0x101CE1F0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101CE1F0-0x101CE240
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _WalkPlayerTo_d__31 : IEnumerator<object> // TypeDefIndex: 5697
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public Vector2 worldPos; // 0x10
		public PlayerPhysics __4__this; // 0x18
		public float tolerance; // 0x1C
		private Rigidbody2D _body_5__2; // 0x20

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _WalkPlayerTo_d__31(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101D15C0-0x101D18F0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101D18F0-0x101D1940
	}

	// Constructors
	public PlayerPhysics(); // 0x101BBBC0-0x101BBBF0

	// Methods
	public void RpcEnterVent(int id); // 0x101BB800-0x101BB8E0
	public void RpcExitVent(int id); // 0x101BB8E0-0x101BB9C0
	public override void HandleRpc(byte callId, MessageReader reader); // 0x101BB580-0x101BB630
	public void Awake(); // 0x101BADB0-0x101BAE20
	private void FixedUpdate(); // 0x101BAFF0-0x101BB230
	private void LateUpdate(); // 0x101BB630-0x101BB6C0
	public Vector3 Vec2ToPosition(Vector2 pos); // 0x101BBB00-0x101BBB50
	public void SetSkin(uint skinId); // 0x101BB9C0-0x101BBB00
	public void ResetAnim(bool stopCoroutines = true /* Metadata: 0x00243CE1 */); // 0x101BB6C0-0x101BB800
	private void HandleAnimation(bool amDead); // 0x101BB230-0x101BB580
	[IteratorStateMachine] // 0x100153B0-0x10015400
	public IEnumerator CoSpawnPlayer(LobbyBehaviour lobby); // 0x101BAEE0-0x101BAF40
	public void ExitAllVents(); // 0x101BAF40-0x101BAFF0
	[IteratorStateMachine] // 0x10015400-0x10015450
	private IEnumerator CoEnterVent(int id); // 0x101BAE20-0x101BAE80
	[IteratorStateMachine] // 0x100154B0-0x10015500
	private IEnumerator CoExitVent(int id); // 0x101BAE80-0x101BAEE0
	[IteratorStateMachine] // 0x10015500-0x10015550
	public IEnumerator WalkPlayerTo(Vector2 worldPos, float tolerance = 0.01f /* Metadata: 0x00243CE2 */); // 0x101BBB50-0x101BBBC0
	public override bool Serialize(MessageWriter writer, bool initialState); // 0x101A1190-0x101A1520
	public override void Deserialize(MessageReader reader, bool initialState); // 0x101A2F90-0x101A2FA0
}

public class PlayerTab : MonoBehaviour // TypeDefIndex: 5569
{
	// Fields
	public ColorChip ColorTabPrefab; // 0x0C
	public SpriteRenderer DemoImage; // 0x10
	public HatParent HatImage; // 0x14
	public SpriteRenderer SkinImage; // 0x18
	public SpriteRenderer PetImage; // 0x1C
	public FloatRange XRange; // 0x20
	public FloatRange YRange; // 0x24
	private HashSet<int> AvailableColors; // 0x28
	private List<ColorChip> ColorChips; // 0x2C
	private const int Columns = 3; // Metadata: 0x00243C46

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass10_0 // TypeDefIndex: 5570
	{
		// Fields
		public int j; // 0x08
		public PlayerTab __4__this; // 0x0C

		// Constructors
		public __c__DisplayClass10_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _OnEnable_b__0(); // 0x101D10F0-0x101D1270
	}

	// Constructors
	public PlayerTab(); // 0x101BC730-0x101BC800

	// Methods
	public void OnEnable(); // 0x101BBDA0-0x101BC2B0
	public void OnDisable(); // 0x101BBCD0-0x101BBDA0
	public void Update(); // 0x101BC670-0x101BC730
	private void SelectColor(int colorId); // 0x101BC2B0-0x101BC430
	public void UpdateAvailableColors(); // 0x101BC430-0x101BC670
}

public abstract class PlayerTask : MonoBehaviour // TypeDefIndex: 5854
{
	// Fields
	[CompilerGenerated] // 0x10002030-0x10002050
	private int _Index_k__BackingField; // 0x0C
	[CompilerGenerated] // 0x10002030-0x10002050
	private uint _Id_k__BackingField; // 0x10
	[CompilerGenerated] // 0x10002030-0x10002050
	private PlayerControl _Owner_k__BackingField; // 0x14
	public SystemTypes StartAt; // 0x18
	public TaskTypes TaskType; // 0x1C
	public Minigame MinigamePrefab; // 0x20
	public bool HasLocation; // 0x24
	public bool LocationDirty; // 0x25

	// Properties
	public int Index { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ internal set; } // 0x101AE200-0x101AE210 0x101AEE90-0x101AEEA0
	public uint Id { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ internal set; } // 0x101BCD80-0x101BCD90 0x101BCF20-0x101BCF30
	public PlayerControl Owner { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ internal set; } // 0x101ADCB0-0x101ADCC0 0x101BCF30-0x101BCF40
	public abstract int TaskStep { get; }
	public abstract bool IsComplete { get; }
	public Vector2 Location { get; } // 0x101BCD90-0x101BCF20 

	// Constructors
	protected PlayerTask(); // 0x101BCD60-0x101BCD80

	// Methods
	public abstract void Initialize();
	public virtual void OnRemove(); // 0x101A2F90-0x101A2FA0
	public abstract bool ValidConsole(Console console);
	public abstract void Complete();
	public abstract void AppendTaskText(StringBuilder sb);
	internal static bool TaskIsEmergency(PlayerTask arg); // 0x101BCCC0-0x101BCD60
	protected List<Console> FindConsoles(); // 0x101BC8D0-0x101BC9A0
	public static bool PlayerHasTaskOfType<T>(PlayerControl localPlayer);
	protected List<Vector2> FindObjectsPos(); // 0x101BCAA0-0x101BCC00
	protected Console FindSpecialConsole(Func<Console, bool> func); // 0x101BCC00-0x101BCCB0
	protected Console FindObjectPos(); // 0x101BC9A0-0x101BCAA0
	public virtual Minigame GetMinigamePrefab(); // 0x101BCCB0-0x101BCCC0
	protected static bool AllTasksCompleted(PlayerControl player); // 0x101BC800-0x101BC8D0
}

public class PlayerVoteArea : MonoBehaviour // TypeDefIndex: 5449
{
	// Fields
	[CompilerGenerated] // 0x10002030-0x10002050
	private MeetingHud _Parent_k__BackingField; // 0x0C
	public sbyte TargetPlayerId; // 0x10
	public const byte DeadBit = 128; // Metadata: 0x00243BAE
	public const byte VotedBit = 64; // Metadata: 0x00243BAF
	public const byte ReportedBit = 32; // Metadata: 0x00243BB0
	public const byte VoteMask = 15; // Metadata: 0x00243BB1
	public GameObject Buttons; // 0x14
	public SpriteRenderer PlayerIcon; // 0x18
	public SpriteRenderer Flag; // 0x1C
	public SpriteRenderer Megaphone; // 0x20
	public SpriteRenderer Overlay; // 0x24
	public TextRenderer NameText; // 0x28
	public bool isDead; // 0x2C
	public bool didVote; // 0x2D
	public bool didReport; // 0x2E
	public sbyte votedFor; // 0x2F
	public bool voteComplete; // 0x30
	public bool resultsShowing; // 0x31

	// Properties
	public MeetingHud Parent { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101AE200-0x101AE210 0x101AEE90-0x101AEEA0

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoAnimateOverlay_d__24 : IEnumerator<object> // TypeDefIndex: 5450
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public PlayerVoteArea __4__this; // 0x10
		private Transform _xMark_5__2; // 0x14
		private float _fadeDuration_5__3; // 0x18
		private float _scaleDuration_5__4; // 0x1C
		private float _t_5__5; // 0x20

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoAnimateOverlay_d__24(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101CD240-0x101CD980
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101CD980-0x101CD9D0
	}

	// Constructors
	public PlayerVoteArea(); // 0x101A68C0-0x101A68D0

	// Methods
	public void SetDead(bool isMe, bool didReport, bool isDead); // 0x101BD200-0x101BD2A0
	public void SetDisabled(); // 0x101BD2A0-0x101BD390
	public void SetEnabled(); // 0x101BD390-0x101BD440
	[IteratorStateMachine] // 0x10040B20-0x10040B70
	public IEnumerator CoAnimateOverlay(); // 0x101BCFA0-0x101BCFF0
	private static float TriangleWave(float t); // 0x101BD480-0x101BD4D0
	internal void SetVote(sbyte suspectIdx); // 0x101BD440-0x101BD480
	public void UnsetVote(); // 0x101BD4D0-0x101BD500
	public void ClearButtons(); // 0x101BCF40-0x101BCF70
	public void ClearForResults(); // 0x101BCF70-0x101BCFA0
	public void VoteForMe(); // 0x101BD500-0x101BD530
	public void Select(); // 0x101BD0F0-0x101BD1A0
	public void Cancel(); // 0x101BCF40-0x101BCF70
	public void Serialize(MessageWriter writer); // 0x101BD1A0-0x101BD200
	public void Deserialize(MessageReader reader); // 0x101BCFF0-0x101BD0A0
	public static sbyte GetVotedFor(byte state); // 0x101BD0E0-0x101BD0F0
	public byte GetState(); // 0x101BD0A0-0x101BD0E0
}

public class PoolableBehavior : MonoBehaviour // TypeDefIndex: 5234
{
	// Fields
	[HideInInspector] // 0x10002030-0x10002050
	public IObjectPool OwnerPool; // 0x0C

	// Constructors
	public PoolableBehavior(); // 0x101A68C0-0x101A68D0

	// Methods
	public virtual void Reset(); // 0x101A2F90-0x101A2FA0
	public void Awake(); // 0x101BD530-0x101BD580
}

public class PoolablePlayer : MonoBehaviour // TypeDefIndex: 5701
{
	// Fields
	public SpriteRenderer Body; // 0x0C
	public SpriteRenderer[] Hands; // 0x10
	public HatParent HatSlot; // 0x14
	public SpriteRenderer SkinSlot; // 0x18
	public SpriteRenderer PetSlot; // 0x1C
	public TextRenderer NameText; // 0x20

	// Constructors
	public PoolablePlayer(); // 0x101A68C0-0x101A68D0

	// Methods
	public void SetFlipX(bool flipped); // 0x101BD680-0x101BD800
	public void SetDeadFlipX(bool flipped); // 0x101BD580-0x101BD680
}

public class PooledMapIcon : PoolableBehavior // TypeDefIndex: 5431
{
	// Fields
	public float NormalSize; // 0x10
	public int lastMapTaskStep; // 0x14
	public SpriteRenderer rend; // 0x18
	public AlphaPulse alphaPulse; // 0x1C

	// Constructors
	public PooledMapIcon(); // 0x101BD9E0-0x101BDA10

	// Methods
	public void Update(); // 0x101BD880-0x101BD9E0
	public override void Reset(); // 0x101BD800-0x101BD880
}

namespace MS.Internal.Xml.XPath
{
	internal sealed class PrecedingQuery : BaseAxisQuery // TypeDefIndex: 1788
	{
		// Fields
		private XPathNodeIterator workIterator; // 0x2C
		private ClonableStack<XPathNavigator> ancestorStk; // 0x30
	
		// Properties
		public override QueryProps Properties { get; } // 0x1038A710-0x1038A720 
	
		// Constructors
		public PrecedingQuery(Query qyInput, string name, string prefix, XPathNodeType typeTest); // 0x106C3220-0x106C3280
		private PrecedingQuery(PrecedingQuery other); // 0x106C31A0-0x106C3220
	
		// Methods
		public override void Reset(); // 0x106C3120-0x106C31A0
		public override XPathNavigator Advance(); // 0x106C2E20-0x106C3070
		public override XPathNodeIterator Clone(); // 0x106C3070-0x106C3120
	}
}

namespace Discord
{
	public enum PremiumType // TypeDefIndex: 4862
	{
		None = 0,
		Tier1 = 1,
		Tier2 = 2
	}

	public struct Presence // TypeDefIndex: 4886
	{
		// Fields
		public Status Status; // 0x00
		public Activity Activity; // 0x08
	}
}

namespace MS.Internal.Xml.XPath
{
	internal class PreSiblingQuery : CacheAxisQuery // TypeDefIndex: 1789
	{
		// Properties
		public override QueryProps Properties { get; } // 0x1038D2F0-0x1038D300 
	
		// Constructors
		public PreSiblingQuery(Query qyInput, string name, string prefix, XPathNodeType typeTest); // 0x106C2B00-0x106C2B10
		protected PreSiblingQuery(PreSiblingQuery other); // 0x106C2B10-0x106C2B20
	
		// Methods
		private bool NotVisited(XPathNavigator nav, List<XPathNavigator> parentStk); // 0x106C2D40-0x106C2E20
		public override object Evaluate(XPathNodeIterator context); // 0x106C2B70-0x106C2D40
		public override XPathNodeIterator Clone(); // 0x106C2B20-0x106C2B70
	}
}

public class ProcessDataMinigame : Minigame // TypeDefIndex: 5170
{
	// Fields
	private string[] DocTopics; // 0x28
	private string[] DocTypes; // 0x2C
	private string[] DocExtensions; // 0x30
	public float Duration; // 0x34
	public ParallaxController scenery; // 0x38
	public PassiveButton StartButton; // 0x3C
	public TextRenderer EstimatedText; // 0x40
	public TextRenderer PercentText; // 0x44
	public SpriteAnim LeftFolder; // 0x48
	public SpriteAnim RightFolder; // 0x4C
	public AnimationClip OpenFolderClip; // 0x50
	public AnimationClip CloseFolderClip; // 0x54
	public GameObject Status; // 0x58
	public SpriteRenderer Runner; // 0x5C
	public HorizontalGauge Gauge; // 0x60
	private bool running; // 0x64
	public FloatRange SceneRange; // 0x68

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoDoAnimation_d__19 : IEnumerator<object> // TypeDefIndex: 5171
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public ProcessDataMinigame __4__this; // 0x10
		private float _timer_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoDoAnimation_d__19(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101CD9D0-0x101CDCD0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101CDCD0-0x101CDD20
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Transition_d__20 : IEnumerator<object> // TypeDefIndex: 5172
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public ProcessDataMinigame __4__this; // 0x10
		private float _t_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Transition_d__20(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101D0AB0-0x101D0D00
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101D0D00-0x101D0D50
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _DoText_d__21 : IEnumerator<object> // TypeDefIndex: 5173
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public ProcessDataMinigame __4__this; // 0x10
		private StringBuilder _txt_5__2; // 0x14
		private int _len_5__3; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _DoText_d__21(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101CFF90-0x101D0180
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101D0180-0x101D01D0
	}

	// Constructors
	public ProcessDataMinigame(); // 0x101BDBF0-0x101BE870

	// Methods
	public override void Begin(PlayerTask task); // 0x101BDA10-0x101BDA90
	public void StartStopFill(); // 0x101BDB30-0x101BDBA0
	[IteratorStateMachine] // 0x1001C870-0x1001C8C0
	private IEnumerator CoDoAnimation(); // 0x101BDA90-0x101BDAE0
	[IteratorStateMachine] // 0x1001C8F0-0x1001C940
	private IEnumerator Transition(); // 0x101BDBA0-0x101BDBF0
	[IteratorStateMachine] // 0x1001CA40-0x1001CA90
	private IEnumerator DoText(); // 0x101BDAE0-0x101BDB30
}

public class ProgressTracker : MonoBehaviour // TypeDefIndex: 5466
{
	// Fields
	public MeshRenderer TileParent; // 0x0C
	private float curValue; // 0x10

	// Nested types
	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5467
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<GameData.PlayerInfo, bool> __9__3_0; // 0x04

		// Constructors
		static __c(); // 0x101D14D0-0x101D1520
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _FixedUpdate_b__3_0(GameData.PlayerInfo p); // 0x101D0D50-0x101D0D70
	}

	// Constructors
	public ProgressTracker(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Start(); // 0x101BEB70-0x101BEC00
	public void FixedUpdate(); // 0x101BE870-0x101BEB70
}

namespace Steamworks
{
	[Serializable]
	public struct PublishedFileId_t : IEquatable<PublishedFileId_t>, IComparable<PublishedFileId_t> // TypeDefIndex: 4814
	{
		// Fields
		public static readonly PublishedFileId_t Invalid; // 0x00
		public ulong m_PublishedFileId; // 0x00
	
		// Constructors
		public PublishedFileId_t(ulong value); // 0x10073670-0x10073690
		static PublishedFileId_t(); // 0x101877B0-0x10187800
	
		// Methods
		public override string ToString(); // 0x10073650-0x10073670
		public override bool Equals(object other); // 0x10073570-0x10073610
		public override int GetHashCode(); // 0x10073630-0x10073650
		public static bool operator ==(PublishedFileId_t x, PublishedFileId_t y); // 0x10187800-0x10187820
		public static bool operator !=(PublishedFileId_t x, PublishedFileId_t y); // 0x10187830-0x10187890
		public static explicit operator PublishedFileId_t(ulong value); // 0x10187820-0x10187830
		public static explicit operator ulong(PublishedFileId_t that); // 0x10187820-0x10187830
		public bool Equals(PublishedFileId_t other); // 0x10073610-0x10073630
		public int CompareTo(PublishedFileId_t other); // 0x10073550-0x10073570
	}

	[Serializable]
	public struct PublishedFileUpdateHandle_t : IEquatable<PublishedFileUpdateHandle_t>, IComparable<PublishedFileUpdateHandle_t> // TypeDefIndex: 4815
	{
		// Fields
		public static readonly PublishedFileUpdateHandle_t Invalid; // 0x00
		public ulong m_PublishedFileUpdateHandle; // 0x00
	
		// Constructors
		public PublishedFileUpdateHandle_t(ulong value); // 0x10073670-0x10073690
		static PublishedFileUpdateHandle_t(); // 0x10187890-0x101878D0
	
		// Methods
		public override string ToString(); // 0x10073650-0x10073670
		public override bool Equals(object other); // 0x10073690-0x100737D0
		public override int GetHashCode(); // 0x10073630-0x10073650
		public static bool operator ==(PublishedFileUpdateHandle_t x, PublishedFileUpdateHandle_t y); // 0x10187800-0x10187820
		public static bool operator !=(PublishedFileUpdateHandle_t x, PublishedFileUpdateHandle_t y); // 0x101878D0-0x10187930
		public static explicit operator PublishedFileUpdateHandle_t(ulong value); // 0x10187820-0x10187830
		public static explicit operator ulong(PublishedFileUpdateHandle_t that); // 0x10187820-0x10187830
		public bool Equals(PublishedFileUpdateHandle_t other); // 0x10073610-0x10073630
		public int CompareTo(PublishedFileUpdateHandle_t other); // 0x10073550-0x10073570
	}
}

public class PurchaseButton : MonoBehaviour // TypeDefIndex: 5583
{
	// Fields
	private const float BorderSize = 0.7f; // Metadata: 0x00243C4A
	[CompilerGenerated] // 0x10002030-0x10002050
	private StoreMenu _Parent_k__BackingField; // 0x0C
	public SpriteRenderer PurchasedIcon; // 0x10
	public TextRenderer NameText; // 0x14
	public SpriteRenderer CrewHeadImage; // 0x18
	public HatParent HatImage; // 0x1C
	public Sprite MannequinFrame; // 0x20
	public SpriteRenderer Background; // 0x24
	public IBuyable Product; // 0x28
	public bool Purchased; // 0x2C
	public string Name; // 0x30
	public string Price; // 0x34
	public string ProductId; // 0x38

	// Properties
	public StoreMenu Parent { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101AE200-0x101AE210 0x101AEE90-0x101AEEA0

	// Constructors
	public PurchaseButton(); // 0x101A68C0-0x101A68D0

	// Methods
	public void SetItem(IBuyable product, string productId, string name, string price, bool purchased); // 0x101BED70-0x101BF610
	private void SetBig(); // 0x101BEC20-0x101BED70
	private void SetSquare(); // 0x101BF640-0x101BF790
	internal void SetPurchased(); // 0x101BF610-0x101BF640
	public void DoPurchase(); // 0x101BEC00-0x101BEC20
}

public enum PurchaseStates // TypeDefIndex: 5591
{
	NotStarted = 0,
	Started = 1,
	Success = 2,
	Fail = 3
}

namespace QRCoder
{
	public class QRCodeData : IDisposable // TypeDefIndex: 4202
	{
		// Fields
		[CompilerGenerated] // 0x10002030-0x10002050
		private List<BitArray> _ModuleMatrix_k__BackingField; // 0x08
		[CompilerGenerated] // 0x10002030-0x10002050
		private int _Version_k__BackingField; // 0x0C
	
		// Properties
		public List<BitArray> ModuleMatrix { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101B4FF0-0x101B5000 0x101D22D0-0x101D22E0
		private int Version { [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101AEE90-0x101AEEA0
	
		// Constructors
		public QRCodeData(int version); // 0x109C27A0-0x109C2860
	
		// Methods
		private static int ModulesPerSideFromVersion(int version); // 0x109C2790-0x109C27A0
		public void Dispose(); // 0x10567250-0x10567270
	}

	public class QRCodeGenerator : IDisposable // TypeDefIndex: 4203
	{
		// Fields
		private static readonly char[] numTable; // 0x00
		private static readonly char[] alphanumEncTable; // 0x04
		private static readonly int[] capacityBaseValues; // 0x08
		private static readonly int[] capacityECCBaseValues; // 0x0C
		private static readonly int[] alignmentPatternBaseValues; // 0x10
		private static readonly int[] remainderBits; // 0x14
		private static readonly List<AlignmentPattern> alignmentPatternTable; // 0x18
		private static readonly List<ECCInfo> capacityECCTable; // 0x1C
		private static readonly List<VersionInfo> capacityTable; // 0x20
		private static readonly List<Antilog> galoisField; // 0x24
		private static readonly Dictionary<char, int> alphanumEncDict; // 0x28
	
		// Nested types
		public enum EciMode // TypeDefIndex: 4204
		{
			Default = 0,
			Iso8859_1 = 3,
			Iso8859_2 = 4,
			Utf8 = 26
		}
	
		private static class ModulePlacer // TypeDefIndex: 4205
		{
			// Nested types
			private static class MaskPattern // TypeDefIndex: 4206
			{
				// Fields
				public static readonly Func<int, int, bool>[] Patterns; // 0x00
	
				// Constructors
				static MaskPattern(); // 0x109BFD00-0x109C0080
	
				// Methods
				public static bool Pattern1(int x, int y); // 0x109BE7A0-0x109BE7B0
				public static bool Pattern2(int x, int y); // 0x109BE7B0-0x109BE7C0
				public static bool Pattern3(int x, int y); // 0x109BE7C0-0x109BE7E0
				public static bool Pattern4(int x, int y); // 0x109BE7E0-0x109BE800
				public static bool Pattern5(int x, int y); // 0x109BE800-0x109BE8B0
				public static bool Pattern6(int x, int y); // 0x109BE8B0-0x109BE8E0
				public static bool Pattern7(int x, int y); // 0x109BE8E0-0x109BE910
				public static bool Pattern8(int x, int y); // 0x109BE910-0x109BE950
				public static int Score(ref QRCodeData qrCode); // 0x109BE950-0x109BFD00
			}
	
			// Methods
			public static void AddQuietZone(ref QRCodeData qrCode); // 0x109C0080-0x109C02F0
			private static string ReverseString(string inp); // 0x109C22E0-0x109C2370
			public static void PlaceVersion(ref QRCodeData qrCode, string versionStr); // 0x109C1A40-0x109C1BB0
			public static void PlaceFormat(ref QRCodeData qrCode, string formatStr); // 0x109C1290-0x109C1850
			public static int MaskCode(ref QRCodeData qrCode, int version, ref List<Rectangle> blockedModules, ECCLevel eccLevel); // 0x109C04C0-0x109C0910
			public static void PlaceDataWords(ref QRCodeData qrCode, string data, ref List<Rectangle> blockedModules); // 0x109C0D40-0x109C10D0
			public static void ReserveSeperatorAreas(int size, ref List<Rectangle> blockedModules); // 0x109C1BB0-0x109C1EC0
			public static void ReserveVersionAreas(int size, int version, ref List<Rectangle> blockedModules); // 0x109C1EC0-0x109C22E0
			public static void PlaceDarkModule(ref QRCodeData qrCode, int version, ref List<Rectangle> blockedModules); // 0x109C0C80-0x109C0D40
			public static void PlaceFinderPatterns(ref QRCodeData qrCode, ref List<Rectangle> blockedModules); // 0x109C10D0-0x109C1290
			public static void PlaceAlignmentPatterns(ref QRCodeData qrCode, List<Point> alignmentPatternLocations, ref List<Rectangle> blockedModules); // 0x109C0910-0x109C0C80
			public static void PlaceTimingPatterns(ref QRCodeData qrCode, ref List<Rectangle> blockedModules); // 0x109C1850-0x109C1A40
			private static bool Intersects(Rectangle r1, Rectangle r2); // 0x109C02F0-0x109C0350
			private static bool IsBlocked(Rectangle r1, List<Rectangle> blockedModules); // 0x109C0350-0x109C04C0
		}
	
		public enum ECCLevel // TypeDefIndex: 4207
		{
			L = 0,
			M = 1,
			Q = 2,
			H = 3
		}
	
		private enum EncodingMode // TypeDefIndex: 4208
		{
			Numeric = 1,
			Alphanumeric = 2,
			Byte = 4,
			ECI = 7,
			Kanji = 8
		}
	
		private struct AlignmentPattern // TypeDefIndex: 4209
		{
			// Fields
			public int Version; // 0x00
			public List<Point> PatternPositions; // 0x04
		}
	
		private struct CodewordBlock // TypeDefIndex: 4210
		{
			// Fields
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly int _GroupNumber_k__BackingField; // 0x00
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly int _BlockNumber_k__BackingField; // 0x04
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly string _BitString_k__BackingField; // 0x08
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly List<string> _CodeWords_k__BackingField; // 0x0C
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly List<int> _CodeWordsInt_k__BackingField; // 0x10
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly List<string> _ECCWords_k__BackingField; // 0x14
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly List<int> _ECCWordsInt_k__BackingField; // 0x18
	
			// Properties
			public List<string> CodeWords { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x100A9C10-0x100A9C20 
			public List<string> ECCWords { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x100C17C0-0x100C17D0 
	
			// Constructors
			public CodewordBlock(int groupNumber, int blockNumber, string bitString, List<string> codeWords, List<string> eccWords, List<int> codeWordsInt, List<int> eccWordsInt); // 0x100DFE70-0x100DFED0
		}
	
		private struct ECCInfo // TypeDefIndex: 4211
		{
			// Fields
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly int _Version_k__BackingField; // 0x00
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly ECCLevel _ErrorCorrectionLevel_k__BackingField; // 0x04
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly int _TotalDataCodewords_k__BackingField; // 0x08
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly int _ECCPerBlock_k__BackingField; // 0x0C
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly int _BlocksInGroup1_k__BackingField; // 0x10
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly int _CodewordsInGroup1_k__BackingField; // 0x14
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly int _BlocksInGroup2_k__BackingField; // 0x18
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly int _CodewordsInGroup2_k__BackingField; // 0x1C
	
			// Properties
			public int Version { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x10093240-0x10093250 
			public ECCLevel ErrorCorrectionLevel { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x10093000-0x10093010 
			public int TotalDataCodewords { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x10093860-0x10093870 
			public int ECCPerBlock { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x100A9C10-0x100A9C20 
			public int BlocksInGroup1 { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x100A4DA0-0x100A4E00 
			public int CodewordsInGroup1 { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x100C17C0-0x100C17D0 
			public int BlocksInGroup2 { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x100DFF10-0x100DFF20 
			public int CodewordsInGroup2 { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x100DFF20-0x100DFF70 
	
			// Constructors
			public ECCInfo(int version, ECCLevel errorCorrectionLevel, int totalDataCodewords, int eccPerBlock, int blocksInGroup1, int codewordsInGroup1, int blocksInGroup2, int codewordsInGroup2); // 0x100DFED0-0x100DFF10
		}
	
		private struct VersionInfo // TypeDefIndex: 4212
		{
			// Fields
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly int _Version_k__BackingField; // 0x00
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly List<VersionInfoDetails> _Details_k__BackingField; // 0x04
	
			// Properties
			public int Version { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x10093240-0x10093250 
			public List<VersionInfoDetails> Details { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x10093000-0x10093010 
	
			// Constructors
			public VersionInfo(int version, List<VersionInfoDetails> versionInfoDetails); // 0x10073670-0x10073690
		}
	
		private struct VersionInfoDetails // TypeDefIndex: 4213
		{
			// Fields
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly ECCLevel _ErrorCorrectionLevel_k__BackingField; // 0x00
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly Dictionary<EncodingMode, int> _CapacityDict_k__BackingField; // 0x04
	
			// Properties
			public ECCLevel ErrorCorrectionLevel { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x10093240-0x10093250 
			public Dictionary<EncodingMode, int> CapacityDict { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x10093000-0x10093010 
	
			// Constructors
			public VersionInfoDetails(ECCLevel errorCorrectionLevel, Dictionary<EncodingMode, int> capacityDict); // 0x10073670-0x10073690
		}
	
		private struct Antilog // TypeDefIndex: 4214
		{
			// Fields
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly int _ExponentAlpha_k__BackingField; // 0x00
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly int _IntegerValue_k__BackingField; // 0x04
	
			// Properties
			public int ExponentAlpha { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x10093240-0x10093250 
			public int IntegerValue { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x10093000-0x10093010 
	
			// Constructors
			public Antilog(int exponentAlpha, int integerValue); // 0x10073670-0x10073690
		}
	
		private struct PolynomItem // TypeDefIndex: 4215
		{
			// Fields
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly int _Coefficient_k__BackingField; // 0x00
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly int _Exponent_k__BackingField; // 0x04
	
			// Properties
			public int Coefficient { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x10093240-0x10093250 
			public int Exponent { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x10093000-0x10093010 
	
			// Constructors
			public PolynomItem(int coefficient, int exponent); // 0x10073670-0x10073690
		}
	
		private class Polynom // TypeDefIndex: 4216
		{
			// Fields
			[CompilerGenerated] // 0x10002030-0x10002050
			private List<PolynomItem> _PolyItems_k__BackingField; // 0x08
	
			// Properties
			public List<PolynomItem> PolyItems { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101B4FF0-0x101B5000 0x101D22D0-0x101D22E0
	
			// Constructors
			public Polynom(); // 0x109C2730-0x109C2790
	
			// Methods
			public override string ToString(); // 0x109C2370-0x109C2730
		}
	
		private class Point // TypeDefIndex: 4217
		{
			// Fields
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly int _X_k__BackingField; // 0x08
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly int _Y_k__BackingField; // 0x0C
	
			// Properties
			public int X { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x101B4FF0-0x101B5000 
			public int Y { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
	
			// Constructors
			public Point(int x, int y); // 0x101A5800-0x101A5830
		}
	
		private class Rectangle // TypeDefIndex: 4218
		{
			// Fields
			[CompilerGenerated] // 0x10002030-0x10002050
			private int _X_k__BackingField; // 0x08
			[CompilerGenerated] // 0x10002030-0x10002050
			private int _Y_k__BackingField; // 0x0C
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly int _Width_k__BackingField; // 0x10
			[CompilerGenerated] // 0x10002030-0x10002050
			private readonly int _Height_k__BackingField; // 0x14
	
			// Properties
			public int X { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101B4FF0-0x101B5000 0x101D22D0-0x101D22E0
			public int Y { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101AE200-0x101AE210 0x101AEE90-0x101AEEA0
			public int Width { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x101BCD80-0x101BCD90 
			public int Height { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x101ADCB0-0x101ADCC0 
	
			// Constructors
			public Rectangle(int x, int y, int w, int h); // 0x1026C3A0-0x1026C3D0
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c__DisplayClass17_0 // TypeDefIndex: 4219
		{
			// Fields
			public int version; // 0x08
			public ECCLevel eccLevel; // 0x0C
	
			// Constructors
			public __c__DisplayClass17_0(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal bool _GenerateQrCode_b__0(ECCInfo x); // 0x109C8000-0x109C80A0
			internal bool _GenerateQrCode_b__1(AlignmentPattern x); // 0x101D1360-0x101D1380
		}
	
		[Serializable]
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c // TypeDefIndex: 4220
		{
			// Fields
			public static readonly __c __9; // 0x00
			public static Func<AlignmentPattern, List<Point>> __9__17_2; // 0x04
			public static Func<PolynomItem, string> __9__21_0; // 0x08
			public static Func<__f__AnonymousType0<int, int>, int> __9__24_2; // 0x0C
			public static Func<char, int, __f__AnonymousType1<int, char>> __9__28_0; // 0x10
			public static Func<__f__AnonymousType1<int, char>, int> __9__28_1; // 0x14
			public static Func<__f__AnonymousType1<int, char>, string> __9__28_3; // 0x18
			public static Func<IGrouping<int, __f__AnonymousType1<int, char>>, string> __9__28_2; // 0x1C
			public static Func<string, int> __9__29_0; // 0x20
			public static Func<PolynomItem, int> __9__45_0; // 0x24
			public static Func<IGrouping<int, PolynomItem>, bool> __9__45_1; // 0x28
			public static Func<IGrouping<int, PolynomItem>, int> __9__45_2; // 0x2C
			public static Func<int, PolynomItem, int> __9__45_6; // 0x30
			public static Func<PolynomItem, int> __9__45_4; // 0x34
			public static Func<Antilog, int> __9__46_1; // 0x38
			public static Func<Antilog, int> __9__47_1; // 0x3C
	
			// Constructors
			static __c(); // 0x109C8420-0x109C8470
			public __c(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal List<Point> _GenerateQrCode_b__17_2(AlignmentPattern x); // 0x105DA290-0x105DA2A0
			internal string _CalculateECCWords_b__21_0(PolynomItem x); // 0x109C7E90-0x109C7EE0
			internal int _GetVersion_b__24_2(__f__AnonymousType0<int, int> x); // 0x109C7EE0-0x109C7F20
			internal __f__AnonymousType1<int, char> _BinaryStringToBitBlockList_b__28_0(char x, int i); // 0x109C7CD0-0x109C7D20
			internal int _BinaryStringToBitBlockList_b__28_1(__f__AnonymousType1<int, char> x); // 0x109C7D20-0x109C7D60
			internal string _BinaryStringToBitBlockList_b__28_2(IGrouping<int, __f__AnonymousType1<int, char>> x); // 0x109C7D60-0x109C7E40
			internal string _BinaryStringToBitBlockList_b__28_3(__f__AnonymousType1<int, char> v); // 0x109C7E40-0x109C7E90
			internal int _BinaryStringListToDecList_b__29_0(string binaryString); // 0x109C7C40-0x109C7CD0
			internal int _MultiplyAlphaPolynoms_b__45_0(PolynomItem x); // 0x105DA290-0x105DA2A0
			internal bool _MultiplyAlphaPolynoms_b__45_1(IGrouping<int, PolynomItem> x); // 0x109C7F20-0x109C7F60
			internal int _MultiplyAlphaPolynoms_b__45_2(IGrouping<int, PolynomItem> x); // 0x109C7F60-0x109C7FA0
			internal int _MultiplyAlphaPolynoms_b__45_6(int current, PolynomItem polynomOld); // 0x109C7FA0-0x109C8000
			internal int _MultiplyAlphaPolynoms_b__45_4(PolynomItem x); // 0x105DA290-0x105DA2A0
			internal int _GetIntValFromAlphaExp_b__46_1(Antilog alog); // 0x105DA290-0x105DA2A0
			internal int _GetAlphaExpFromIntVal_b__47_1(Antilog alog); // 0x10265B60-0x10265B70
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c__DisplayClass24_0 // TypeDefIndex: 4221
		{
			// Fields
			public ECCLevel eccLevel; // 0x08
			public EncodingMode encMode; // 0x0C
			public int length; // 0x10
			public Func<VersionInfoDetails, bool> __9__5; // 0x14
			public Func<VersionInfoDetails, bool> __9__6; // 0x18
			public Func<VersionInfoDetails, bool> __9__7; // 0x1C
			public Func<VersionInfoDetails, bool> __9__8; // 0x20
	
			// Constructors
			public __c__DisplayClass24_0(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal bool _GetVersion_b__0(VersionInfo x); // 0x109C80A0-0x109C8110
			internal bool _GetVersion_b__5(VersionInfoDetails y); // 0x109C82C0-0x109C8350
			internal __f__AnonymousType0<int, int> _GetVersion_b__1(VersionInfo x); // 0x109C8110-0x109C81C0
			internal bool _GetVersion_b__6(VersionInfoDetails y); // 0x101D1360-0x101D1380
			internal bool _GetVersion_b__3(VersionInfo x); // 0x109C81C0-0x109C8230
			internal bool _GetVersion_b__7(VersionInfoDetails y); // 0x101D1360-0x101D1380
			internal int _GetVersion_b__4(VersionInfo x); // 0x109C8230-0x109C82C0
			internal bool _GetVersion_b__8(VersionInfoDetails y); // 0x101D1360-0x101D1380
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c__DisplayClass45_0 // TypeDefIndex: 4222
		{
			// Fields
			public IList<int> toGlue; // 0x08
	
			// Constructors
			public __c__DisplayClass45_0(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal bool _MultiplyAlphaPolynoms_b__3(PolynomItem x); // 0x109C8350-0x109C8400
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c__DisplayClass45_1 // TypeDefIndex: 4223
		{
			// Fields
			public int exponent; // 0x08
	
			// Constructors
			public __c__DisplayClass45_1(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal bool _MultiplyAlphaPolynoms_b__5(PolynomItem x); // 0x109C8400-0x109C8420
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c__DisplayClass46_0 // TypeDefIndex: 4224
		{
			// Fields
			public int exp; // 0x08
	
			// Constructors
			public __c__DisplayClass46_0(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal bool _GetIntValFromAlphaExp_b__0(Antilog alog); // 0x101D1360-0x101D1380
		}
	
		[CompilerGenerated] // 0x10002030-0x10002050
		private sealed class __c__DisplayClass47_0 // TypeDefIndex: 4225
		{
			// Fields
			public int intVal; // 0x08
	
			// Constructors
			public __c__DisplayClass47_0(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			internal bool _GetAlphaExpFromIntVal_b__0(Antilog alog); // 0x109C8400-0x109C8420
		}
	
		// Constructors
		public QRCodeGenerator(); // 0x101A2CD0-0x101A2CE0
		static QRCodeGenerator(); // 0x109C7990-0x109C7C40
	
		// Methods
		public QRCodeData CreateQrCode(string plainText, ECCLevel eccLevel, bool forceUtf8 = false /* Metadata: 0x00240179 */, bool utf8BOM = false /* Metadata: 0x0024017A */, EciMode eciMode = EciMode.Default /* Metadata: 0x0024017B */, int requestedVersion = -1 /* Metadata: 0x0024017F */); // 0x109C43D0-0x109C4430
		public static QRCodeData GenerateQrCode(string plainText, ECCLevel eccLevel, bool forceUtf8 = false /* Metadata: 0x00240183 */, bool utf8BOM = false /* Metadata: 0x00240184 */, EciMode eciMode = EciMode.Default /* Metadata: 0x00240185 */, int requestedVersion = -1 /* Metadata: 0x00240189 */); // 0x109C4530-0x109C4930
		private static QRCodeData GenerateQrCode(string bitString, ECCLevel eccLevel, int version); // 0x109C4930-0x109C54A0
		private static string GetFormatString(ECCLevel level, int maskVersion); // 0x109C5B10-0x109C5E50
		private static string GetVersionString(int version); // 0x109C5FA0-0x109C61C0
		private static List<string> CalculateECCWords(string bitString, ECCInfo eccInfo); // 0x109C2BA0-0x109C3070
		private static Polynom ConvertToAlphaNotation(Polynom poly); // 0x109C3390-0x109C3510
		private static Polynom ConvertToDecNotation(Polynom poly); // 0x109C3510-0x109C3660
		private static int GetVersion(int length, EncodingMode encMode, ECCLevel eccLevel); // 0x109C61C0-0x109C64A0
		private static EncodingMode GetEncodingFromPlaintext(string plainText, bool forceUtf8); // 0x109C5A00-0x109C5B10
		private static Polynom CalculateMessagePolynom(string bitString); // 0x109C3270-0x109C3390
		private static Polynom CalculateGeneratorPolynom(int numEccWords); // 0x109C3070-0x109C3270
		private static List<string> BinaryStringToBitBlockList(string bitString); // 0x109C2980-0x109C2BA0
		private static List<int> BinaryStringListToDecList(List<string> binaryStringList); // 0x109C28B0-0x109C2980
		private static int BinToDec(string binStr); // 0x109C2860-0x109C28B0
		private static string DecToBin(int decNum); // 0x109C4430-0x109C4480
		private static string DecToBin(int decNum, int padLeftUpTo); // 0x109C4480-0x109C4530
		private static int GetCountIndicatorLength(int version, EncodingMode encMode); // 0x109C55F0-0x109C5930
		private static int GetDataLength(EncodingMode encoding, string plainText, string codedText, bool forceUtf8); // 0x109C5930-0x109C5A00
		private static bool IsUtf8(EncodingMode encoding, string plainText); // 0x109C64A0-0x109C6500
		private static bool IsValidISO(string input); // 0x109C6500-0x109C65A0
		private static string PlainTextToBinary(string plainText, EncodingMode encMode, EciMode eciMode, bool utf8BOM, bool forceUtf8); // 0x109C7630-0x109C7720
		private static string PlainTextToBinaryNumeric(string plainText); // 0x109C7490-0x109C7630
		private static string PlainTextToBinaryAlphanumeric(string plainText); // 0x109C70A0-0x109C7240
		private static string ConvertToIso8859(string value, string Iso = "ISO-8859-2" /* Metadata: 0x0024018D */); // 0x109C3660-0x109C36D0
		private static string PlainTextToBinaryByte(string plainText, EciMode eciMode, bool utf8BOM, bool forceUtf8); // 0x109C7240-0x109C7490
		private static Polynom XORPolynoms(Polynom messagePolynom, Polynom resPolynom); // 0x109C77C0-0x109C7990
		private static Polynom MultiplyGeneratorPolynomByLeadterm(Polynom genPolynom, PolynomItem leadTerm, int lowerExponentBy); // 0x109C6ED0-0x109C70A0
		private static Polynom MultiplyAlphaPolynoms(Polynom polynomBase, Polynom polynomMultiplier); // 0x109C65A0-0x109C6ED0
		private static int GetIntValFromAlphaExp(int exp); // 0x109C5E50-0x109C5FA0
		private static int GetAlphaExpFromIntVal(int intVal); // 0x109C54A0-0x109C55F0
		private static int ShrinkAlphaExp(int alphaExp); // 0x109C7720-0x109C77C0
		private static Dictionary<char, int> CreateAlphanumEncDict(); // 0x109C3900-0x109C39D0
		private static List<AlignmentPattern> CreateAlignmentPatternTable(); // 0x109C36D0-0x109C3900
		private static List<ECCInfo> CreateCapacityECCTable(); // 0x109C3A60-0x109C3F50
		private static List<VersionInfo> CreateCapacityTable(); // 0x109C3F50-0x109C43D0
		private static List<Antilog> CreateAntilogTable(); // 0x109C39D0-0x109C3A60
		public void Dispose(); // 0x101A2F90-0x101A2FA0
	}
}

public class QuadGen : MonoBehaviour // TypeDefIndex: 5702
{
	// Fields
	public float Width; // 0x0C
	public float Height; // 0x10
	public int WidthSubdivisions; // 0x14
	public int HeightSubdivisions; // 0x18
	public float PerlinFreqX; // 0x1C

	// Constructors
	public QuadGen(); // 0x101BFB00-0x101BFB30

	// Methods
	[ContextMenu] // 0x10016190-0x100161C0
	public void Generate(); // 0x101BF790-0x101BFB00
}

namespace MS.Internal.Xml.XPath
{
	[DebuggerDisplay] // 0x10036A70-0x10036AA0
	internal abstract class Query : ResetableIterator // TypeDefIndex: 1791
	{
		// Properties
		public override int Count { get; } // 0x106C5130-0x106C5210 
		public abstract XPathResultType StaticType { get; }
		public virtual QueryProps Properties { get; } // 0x1038B1F0-0x1038B200 
	
		// Constructors
		public Query(); // 0x106BB920-0x106BB940
		protected Query(Query other); // 0x106C5100-0x106C5130
	
		// Methods
		public override bool MoveNext(); // 0x106C50D0-0x106C5100
		public virtual void SetXsltContext(XsltContext context); // 0x101A2F90-0x101A2FA0
		public abstract object Evaluate(XPathNodeIterator nodeIterator);
		public abstract XPathNavigator Advance();
		public static Query Clone(Query input); // 0x106C4CE0-0x106C4D70
		protected static XPathNodeIterator Clone(XPathNodeIterator input); // 0x106C4D70-0x106C4DA0
		protected static XPathNavigator Clone(XPathNavigator input); // 0x106C4DA0-0x106C4DD0
		public bool Insert(List<XPathNavigator> buffer, XPathNavigator nav); // 0x106C4F90-0x106C50D0
		private static int GetMedian(int l, int r); // 0x106C4ED0-0x106C4EE0
		public static XmlNodeOrder CompareNodes(XPathNavigator l, XPathNavigator r); // 0x106C4DD0-0x106C4ED0
		protected XPathResultType GetXPathType(object value); // 0x106C4EE0-0x106C4F90
	}

	internal sealed class QueryBuilder // TypeDefIndex: 1792
	{
		// Fields
		private string query; // 0x08
		private bool allowVar; // 0x0C
		private bool allowKey; // 0x00
		private bool allowCurrent; // 0x00
		private bool needContext; // 0x00
		private BaseAxisQuery firstInput; // 0x00
		private int parseDepth; // 0x14
	
		// Nested types
		private enum Flags // TypeDefIndex: 1793
		{
			None = 0,
			SmartDesc = 1,
			PosFilter = 2,
			Filter = 4
		}
	
		private enum Props // TypeDefIndex: 1794
		{
			None = 0,
			PosFilter = 1,
			HasPosition = 2,
			HasLast = 4,
			NonFlat = 8
		}
	
		// Constructors
		public QueryBuilder(); // 0x101A2CD0-0x101A2CE0
	
		// Methods
		private void Reset(); // 0x106C4CC0-0x106C4CE0
		private Query ProcessAxis(Axis root, Flags flags, out Props props); // 0x106C3690-0x106C3E40
		private bool CanBeNumber(Query q); // 0x106C3500-0x106C3550
		private Query ProcessFilter(Filter root, Flags flags, out Props props); // 0x106C3E40-0x106C4250
		private Query ProcessOperator(Operator root, out Props props); // 0x106C49D0-0x106C4C20
		private Query ProcessVariable(Variable root); // 0x106C4C20-0x106C4CC0
		private Query ProcessFunction(Function root, out Props props); // 0x106C4250-0x106C4710
		private List<Query> ProcessArguments(ArrayList args, out Props props); // 0x106C3550-0x106C3690
		private Query ProcessNode(AstNode root, Flags flags, out Props props); // 0x106C4710-0x106C49D0
		private Query Build(AstNode root, string query); // 0x106C34C0-0x106C3500
		internal Query Build(string query, bool allowVar, bool allowKey); // 0x106C33A0-0x106C34C0
		internal Query Build(string query, out bool needContext); // 0x106C3280-0x106C33A0
	}

	internal enum QueryProps // TypeDefIndex: 1790
	{
		None = 0,
		Position = 1,
		Count = 2,
		Cached = 4,
		Reverse = 8,
		Merge = 16
	}
}

[RequireComponent] // 0x1001E3B0-0x1001E420
[RequireComponent] // 0x1001E3B0-0x1001E420
public class RadioWaveBehaviour : MonoBehaviour // TypeDefIndex: 5192
{
	// Fields
	public int NumPoints; // 0x0C
	public FloatRange Width; // 0x10
	public FloatRange Height; // 0x14
	private Mesh mesh; // 0x18
	private Vector3[] vecs; // 0x1C
	public float TickRate; // 0x20
	private float timer; // 0x24
	public int Skip; // 0x28
	public float Frequency; // 0x2C
	private int Tick; // 0x30
	public bool Random; // 0x34
	[Range] // 0x1001D290-0x1001D2C0
	public float NoiseLevel; // 0x38

	// Constructors
	public RadioWaveBehaviour(); // 0x101BFF40-0x101BFF80

	// Methods
	public void Start(); // 0x101BFB30-0x101BFD00
	public void Update(); // 0x101BFD00-0x101BFF40
}

public class RandomFill<T> // TypeDefIndex: 5235
{
	// Fields
	private T[] values;
	private int idx;

	// Constructors
	public RandomFill();
	public RandomFill(IEnumerable<T> set);

	// Methods
	public void Set(IEnumerable<T> values);
	public T Get();
}

public class RaycastAmbientSoundPlayer : MonoBehaviour // TypeDefIndex: 5819
{
	// Fields
	public AudioClip AmbientSound; // 0x0C
	public float AmbientVolume; // 0x10
	public float AmbientMaxDist; // 0x14
	public float HitModifier; // 0x18
	private RaycastHit2D[] volumeBuffer; // 0x1C

	// Constructors
	public RaycastAmbientSoundPlayer(); // 0x101C03B0-0x101C0410

	// Methods
	public void Start(); // 0x101C0270-0x101C0390
	private void GetAmbientSoundVolume(AudioSource player, float dt); // 0x101BFF80-0x101C0270
	[CompilerGenerated] // 0x10002030-0x10002050
	private void _Start_b__4_0(AudioSource player, float dt); // 0x101C0390-0x101C03B0
}

public class ReactorMinigame : Minigame // TypeDefIndex: 5704
{
	// Fields
	private Color bad; // 0x28
	private Color good; // 0x38
	private ReactorSystemType reactor; // 0x48
	public TextRenderer statusText; // 0x4C
	public SpriteRenderer hand; // 0x50
	private FloatRange YSweep; // 0x54
	public SpriteRenderer sweeper; // 0x58
	public AudioClip HandSound; // 0x5C
	private bool isButtonDown; // 0x60

	// Constructors
	public ReactorMinigame(); // 0x101C0B70-0x101C0C50

	// Methods
	public override void Begin(PlayerTask task); // 0x101C0410-0x101C04E0
	public void ButtonDown(); // 0x101C04E0-0x101C0770
	public void FixedUpdate(); // 0x101C0860-0x101C0B70
	public override void Close(); // 0x101C0770-0x101C0860
}

public class ReactorRoomWire : MonoBehaviour // TypeDefIndex: 5790
{
	// Fields
	public Console myConsole; // 0x0C
	public SpriteAnim Image; // 0x10
	public AnimationClip Normal; // 0x14
	public AnimationClip MeltdownNeed; // 0x18
	public AnimationClip MeltdownReady; // 0x1C
	private ReactorSystemType reactor; // 0x20

	// Constructors
	public ReactorRoomWire(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Update(); // 0x101C0C50-0x101C0E90
}

public class ReactorShipRoom : SkeldShipRoom // TypeDefIndex: 5791
{
	// Fields
	public Sprite normalManifolds; // 0x38
	public Sprite meltdownManifolds; // 0x3C
	public SpriteRenderer Manifolds; // 0x40
	public AnimationClip normalReactor; // 0x44
	public AnimationClip meltdownReactor; // 0x48
	public SpriteAnim Reactor; // 0x4C
	public AnimationClip normalHighFloor; // 0x50
	public AnimationClip meltdownHighFloor; // 0x54
	public SpriteAnim HighFloor; // 0x58
	public AnimationClip normalMidFloor; // 0x5C
	public AnimationClip meltdownMidFloor; // 0x60
	public SpriteAnim MidFloor1; // 0x64
	public SpriteAnim MidFloor2; // 0x68
	public AnimationClip normalLowFloor; // 0x6C
	public AnimationClip meltdownLowFloor; // 0x70
	public SpriteAnim LowFloor; // 0x74
	public AnimationClip[] normalPipes; // 0x78
	public AnimationClip[] meltdownPipes; // 0x7C
	public SpriteAnim[] Pipes; // 0x80
	public SupressorBehaviour[] Supressors; // 0x84
	public MeshRenderer Orb; // 0x88
	public Rotater OrbGlass; // 0x8C
	public ChainBehaviour[] Arms; // 0x90

	// Constructors
	public ReactorShipRoom(); // 0x101C1730-0x101C1740

	// Methods
	public void StartMeltdown(); // 0x101C0E90-0x101C12E0
	public void StopMeltdown(); // 0x101C12E0-0x101C1730
}

public class ReactorSystemType : ISystemType, IActivatable // TypeDefIndex: 5705
{
	// Fields
	private const float SyncRate = 2f; // Metadata: 0x00243CF7
	private float timer; // 0x08
	public const byte StartCountdown = 128; // Metadata: 0x00243CFB
	public const byte AddUserOp = 64; // Metadata: 0x00243CFC
	public const byte RemoveUserOp = 32; // Metadata: 0x00243CFD
	public const byte ClearCountdown = 16; // Metadata: 0x00243CFE
	public const float CountdownStopped = 10000f; // Metadata: 0x00243CFF
	public readonly float ReactorDuration; // 0x0C
	public const byte ConsoleIdMask = 3; // Metadata: 0x00243D03
	public const byte RequiredUserCount = 2; // Metadata: 0x00243D04
	public float Countdown; // 0x10
	private HashSet<Tuple<byte, byte>> UserConsolePairs; // 0x14
	private SystemTypes system; // 0x18

	// Properties
	public int UserCount { get; } // 0x101C1D50-0x101C1EA0 
	public bool IsActive { get; } // 0x101AAEF0-0x101AAF10 

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass16_0 // TypeDefIndex: 5706
	{
		// Fields
		public int consoleId; // 0x08

		// Constructors
		public __c__DisplayClass16_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _GetConsoleComplete_b__0(Tuple<byte, byte> kvp); // 0x101D1270-0x101D12B0
	}

	// Constructors
	public ReactorSystemType(float duration, SystemTypes system); // 0x101C1CE0-0x101C1D50

	// Methods
	public bool GetConsoleComplete(int consoleId); // 0x101C1930-0x101C19C0
	public void RepairDamage(PlayerControl player, byte opCode); // 0x101C19C0-0x101C1B50
	public bool Detoriorate(float deltaTime); // 0x101C1820-0x101C1930
	public void Serialize(MessageWriter writer, bool initialState); // 0x101C1B50-0x101C1CE0
	public void Deserialize(MessageReader reader, bool initialState); // 0x101C1740-0x101C1820
}

public class ReactorTask : SabotageTask // TypeDefIndex: 5855
{
	// Fields
	private bool isComplete; // 0x30
	private ReactorSystemType reactor; // 0x34
	private bool even; // 0x38

	// Properties
	public override int TaskStep { get; } // 0x101C2380-0x101C23B0 
	public override bool IsComplete { get; } // 0x101C2370-0x101C2380 

	// Constructors
	public ReactorTask(); // 0x101BCD60-0x101BCD80

	// Methods
	public override void Initialize(); // 0x101C22F0-0x101C2300
	public void Awake(); // 0x101C2060-0x101C2200
	private void FixedUpdate(); // 0x101C22B0-0x101C22F0
	public override bool ValidConsole(Console console); // 0x101C2320-0x101C2370
	public override void OnRemove(); // 0x101A2F90-0x101A2FA0
	public override void Complete(); // 0x101C2200-0x101C22B0
	public override void AppendTaskText(StringBuilder sb); // 0x101C1EA0-0x101C2060
	[CompilerGenerated] // 0x10002030-0x10002050
	private bool _Awake_b__8_0(PlainShipRoom r); // 0x101C2300-0x101C2320
}

public class RefuelStage : Minigame // TypeDefIndex: 5323
{
	// Fields
	public float RefuelDuration; // 0x28
	private Color darkRed; // 0x2C
	private Color red; // 0x3C
	private Color green; // 0x4C
	public SpriteRenderer redLight; // 0x5C
	public SpriteRenderer greenLight; // 0x60
	public VerticalGauge srcGauge; // 0x64
	public VerticalGauge destGauge; // 0x68
	public AudioClip RefuelSound; // 0x6C
	private float timer; // 0x70
	private bool isDown; // 0x74
	private bool complete; // 0x75

	// Constructors
	public RefuelStage(); // 0x101C2A20-0x101C2AC0

	// Methods
	public override void Begin(PlayerTask task); // 0x101C23B0-0x101C2410
	public void FixedUpdate(); // 0x101C24D0-0x101C2790
	public void Refuel(); // 0x101C2850-0x101C2A20
	private void GetRefuelDynamics(AudioSource player, float dt); // 0x101C2790-0x101C2850
	public override void Close(); // 0x101C2410-0x101C24D0
}

public class RegionInfo // TypeDefIndex: 5495
{
	// Fields
	public readonly string Name; // 0x08
	public readonly string PingServer; // 0x0C
	public ServerInfo[] Servers; // 0x10

	// Constructors
	public RegionInfo(string name, string ping, ServerInfo[] servers); // 0x101C2F20-0x101C2F80

	// Methods
	public void Serialize(BinaryWriter writer); // 0x101C2E70-0x101C2F20
	public static RegionInfo Deserialize(BinaryReader reader); // 0x101C2AC0-0x101C2C20
	public RegionInfo Duplicate(); // 0x101C2C20-0x101C2DB0
	public override int GetHashCode(); // 0x101C2E40-0x101C2E70
	public override bool Equals(object obj); // 0x101C2DB0-0x101C2E40
}

public class RegionMenu : MonoBehaviour // TypeDefIndex: 5584
{
	// Fields
	public ObjectPoolBehavior ButtonPool; // 0x0C
	public TextRenderer RegionText; // 0x10

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass2_0 // TypeDefIndex: 5585
	{
		// Fields
		public RegionInfo region; // 0x08
		public RegionMenu __4__this; // 0x0C

		// Constructors
		public __c__DisplayClass2_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _OnEnable_b__0(); // 0x101D12D0-0x101D1360
	}

	// Constructors
	public RegionMenu(); // 0x101A68C0-0x101A68D0

	// Methods
	public void OnEnable(); // 0x101C3070-0x101C32B0
	public void OnDisable(); // 0x101C3040-0x101C3070
	public void Open(); // 0x101C32B0-0x101C32E0
	public void ChooseOption(RegionInfo region); // 0x101C2F80-0x101C3010
	public void Close(); // 0x101C3010-0x101C3040
}

public class RegionTextMonitor : MonoBehaviour // TypeDefIndex: 5714
{
	// Constructors
	public RegionTextMonitor(); // 0x101A68C0-0x101A68D0

	// Methods
	private void Start(); // 0x101C32E0-0x101C3340
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1004BF10-0x1004BF30
	public struct RegisterActivationCodeResponse_t // TypeDefIndex: 4486
	{
		// Fields
		public const int k_iCallback = 1008; // Metadata: 0x0024219B
		public ERegisterActivationCodeResult m_eResult; // 0x00
		public uint m_unPackageRegistered; // 0x04
	}
}

namespace Discord
{
	public struct Relationship // TypeDefIndex: 4887
	{
		// Fields
		public RelationshipType Type; // 0x00
		public User User; // 0x08
		public Presence Presence; // 0x20
	}

	public class RelationshipManager // TypeDefIndex: 4969
	{
		// Fields
		private IntPtr MethodsPtr; // 0x08
		private object MethodsStructure; // 0x0C
		[CompilerGenerated] // 0x10002030-0x10002050
		private RefreshHandler OnRefresh; // 0x10
		[CompilerGenerated] // 0x10002030-0x10002050
		private RelationshipUpdateHandler OnRelationshipUpdate; // 0x14
	
		// Properties
		private FFIMethods Methods { get; } // 0x10919C20-0x10919CF0 
	
		// Events
		public event RefreshHandler OnRefresh {
			add; // 0x10919B20-0x10919BA0
			remove; // 0x10919CF0-0x10919D70
		}
		public event RelationshipUpdateHandler OnRelationshipUpdate {
			add; // 0x10919BA0-0x10919C20
			remove; // 0x10919D70-0x10919DF0
		}
	
		// Nested types
		internal struct FFIEvents // TypeDefIndex: 4970
		{
			// Fields
			internal RefreshHandler OnRefresh; // 0x00
			internal RelationshipUpdateHandler OnRelationshipUpdate; // 0x04
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void RefreshHandler(IntPtr ptr); // TypeDefIndex: 4971; 0x1061F960-0x1061FAD0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void RelationshipUpdateHandler(IntPtr ptr, ref Relationship relationship); // TypeDefIndex: 4972; 0x1018BF80-0x1018C200
		}
	
		internal struct FFIMethods // TypeDefIndex: 4973
		{
			// Fields
			internal FilterMethod Filter; // 0x00
			internal CountMethod Count; // 0x04
			internal GetMethod Get; // 0x08
			internal GetAtMethod GetAt; // 0x0C
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate bool FilterCallback(IntPtr ptr, ref Relationship relationship); // TypeDefIndex: 4974; 0x10620440-0x106206D0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void FilterMethod(IntPtr methodsPtr, IntPtr callbackData, FilterCallback callback); // TypeDefIndex: 4975; 0x10344040-0x103442D0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result CountMethod(IntPtr methodsPtr, ref int count); // TypeDefIndex: 4976; 0x10623C60-0x10623DE0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetMethod(IntPtr methodsPtr, long userId, ref Relationship relationship); // TypeDefIndex: 4977; 0x10620E00-0x106210A0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetAtMethod(IntPtr methodsPtr, uint index, ref Relationship relationship); // TypeDefIndex: 4978; 0x104A0350-0x104A05E0
		}
	
		public delegate bool FilterHandler(ref Relationship relationship); // TypeDefIndex: 4979; 0x10620730-0x10620970
	
		public delegate void RefreshHandler(); // TypeDefIndex: 4980; 0x101D40E0-0x101D4220
	
		public delegate void RelationshipUpdateHandler(ref Relationship relationship); // TypeDefIndex: 4981; 0x10350280-0x103504C0
	
		// Constructors
		internal RelationshipManager(IntPtr ptr, IntPtr eventsPtr, ref FFIEvents events); // 0x109199F0-0x10919B20
	
		// Methods
		private void InitEvents(IntPtr eventsPtr, ref FFIEvents events); // 0x109197E0-0x10919890
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static bool FilterCallbackImpl(IntPtr ptr, ref Relationship relationship); // 0x10919520-0x109195A0
		public void Filter(FilterHandler callback); // 0x109195A0-0x10919650
		public int Count(); // 0x10919480-0x10919520
		public Relationship Get(long userId); // 0x10919710-0x109197E0
		public Relationship GetAt(uint index); // 0x10919650-0x10919710
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OnRefreshImpl(IntPtr ptr); // 0x10919890-0x10919940
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OnRelationshipUpdateImpl(IntPtr ptr, ref Relationship relationship); // 0x10919940-0x109199F0
	}

	public enum RelationshipType // TypeDefIndex: 4868
	{
		None = 0,
		Friend = 1,
		Blocked = 2,
		PendingIncoming = 3,
		PendingOutgoing = 4,
		Implicit = 5
	}
}

namespace LipingShare.LCLib.Asn1Processor
{
	internal class RelativeOid : LipingShare.LCLib.Asn1Processor.Oid // TypeDefIndex: 3798
	{
		// Constructors
		public RelativeOid(); // 0x109F5280-0x109F52D0
	
		// Methods
		public override string Decode(Stream bt); // 0x109F50D0-0x109F5280
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x10008650-0x10008670
	public struct RemoteStorageAppSyncedClient_t // TypeDefIndex: 4586
	{
		// Fields
		public const int k_iCallback = 1301; // Metadata: 0x0024232B
		public AppId_t m_nAppID; // 0x00
		public EResult m_eResult; // 0x04
		public int m_unNumDownloads; // 0x08
	}

	[CallbackIdentity] // 0x10008670-0x10008690
	public struct RemoteStorageAppSyncedServer_t // TypeDefIndex: 4587
	{
		// Fields
		public const int k_iCallback = 1302; // Metadata: 0x0024232F
		public AppId_t m_nAppID; // 0x00
		public EResult m_eResult; // 0x04
		public int m_unNumUploads; // 0x08
	}

	[CallbackIdentity] // 0x100086F0-0x10008710
	public struct RemoteStorageAppSyncProgress_t // TypeDefIndex: 4588
	{
		// Fields
		public const int k_iCallback = 1303; // Metadata: 0x00242333
		public string m_rgchCurrentFile; // 0x00
		public AppId_t m_nAppID; // 0x04
		public uint m_uBytesTransferredThisChunk; // 0x08
		public double m_dAppPercentComplete; // 0x10
		public bool m_bUploading; // 0x18
	}

	[CallbackIdentity] // 0x10008780-0x100087A0
	public struct RemoteStorageAppSyncStatusCheck_t // TypeDefIndex: 4589
	{
		// Fields
		public const int k_iCallback = 1305; // Metadata: 0x00242337
		public AppId_t m_nAppID; // 0x00
		public EResult m_eResult; // 0x04
	}

	[CallbackIdentity] // 0x10008840-0x10008860
	public struct RemoteStorageDeletePublishedFileResult_t // TypeDefIndex: 4592
	{
		// Fields
		public const int k_iCallback = 1311; // Metadata: 0x00242343
		public EResult m_eResult; // 0x00
		public PublishedFileId_t m_nPublishedFileId; // 0x08
	}

	[CallbackIdentity] // 0x10008A70-0x10008A90
	public struct RemoteStorageDownloadUGCResult_t // TypeDefIndex: 4598
	{
		// Fields
		public const int k_iCallback = 1317; // Metadata: 0x0024235B
		public EResult m_eResult; // 0x00
		public UGCHandle_t m_hFile; // 0x08
		public AppId_t m_nAppID; // 0x10
		public int m_nSizeInBytes; // 0x14
		public string m_pchFileName; // 0x18
		public ulong m_ulSteamIDOwner; // 0x20
	}

	[CallbackIdentity] // 0x1000A000-0x1000A020
	public struct RemoteStorageEnumeratePublishedFilesByUserActionResult_t // TypeDefIndex: 4609
	{
		// Fields
		public const int k_iCallback = 1328; // Metadata: 0x00242387
		public EResult m_eResult; // 0x00
		public EWorkshopFileAction m_eAction; // 0x04
		public int m_nResultsReturned; // 0x08
		public int m_nTotalResultCount; // 0x0C
		public PublishedFileId_t[] m_rgPublishedFileId; // 0x10
		public uint[] m_rgRTimeUpdated; // 0x14
	}

	[CallbackIdentity] // 0x10008860-0x10008880
	public struct RemoteStorageEnumerateUserPublishedFilesResult_t // TypeDefIndex: 4593
	{
		// Fields
		public const int k_iCallback = 1312; // Metadata: 0x00242347
		public EResult m_eResult; // 0x00
		public int m_nResultsReturned; // 0x04
		public int m_nTotalResultCount; // 0x08
		public PublishedFileId_t[] m_rgPublishedFileId; // 0x0C
	}

	[CallbackIdentity] // 0x10009F70-0x10009F90
	public struct RemoteStorageEnumerateUserSharedWorkshopFilesResult_t // TypeDefIndex: 4607
	{
		// Fields
		public const int k_iCallback = 1326; // Metadata: 0x0024237F
		public EResult m_eResult; // 0x00
		public int m_nResultsReturned; // 0x04
		public int m_nTotalResultCount; // 0x08
		public PublishedFileId_t[] m_rgPublishedFileId; // 0x0C
	}

	[CallbackIdentity] // 0x10008970-0x10008990
	public struct RemoteStorageEnumerateUserSubscribedFilesResult_t // TypeDefIndex: 4595
	{
		// Fields
		public const int k_iCallback = 1314; // Metadata: 0x0024234F
		public EResult m_eResult; // 0x00
		public int m_nResultsReturned; // 0x04
		public int m_nTotalResultCount; // 0x08
		public PublishedFileId_t[] m_rgPublishedFileId; // 0x0C
		public uint[] m_rgRTimeSubscribed; // 0x10
	}

	[CallbackIdentity] // 0x10009BE0-0x10009C00
	public struct RemoteStorageEnumerateWorkshopFilesResult_t // TypeDefIndex: 4600
	{
		// Fields
		public const int k_iCallback = 1319; // Metadata: 0x00242363
		public EResult m_eResult; // 0x00
		public int m_nResultsReturned; // 0x04
		public int m_nTotalResultCount; // 0x08
		public PublishedFileId_t[] m_rgPublishedFileId; // 0x0C
		public float[] m_rgScore; // 0x10
		public AppId_t m_nAppId; // 0x14
		public uint m_unStartIndex; // 0x18
	}

	[CallbackIdentity] // 0x1000A0C0-0x1000A0E0
	public struct RemoteStorageFileReadAsyncComplete_t // TypeDefIndex: 4613
	{
		// Fields
		public const int k_iCallback = 1332; // Metadata: 0x00242397
		public SteamAPICall_t m_hFileReadAsync; // 0x00
		public EResult m_eResult; // 0x08
		public uint m_nOffset; // 0x0C
		public uint m_cubRead; // 0x10
	}

	[CallbackIdentity] // 0x100087A0-0x100087C0
	public struct RemoteStorageFileShareResult_t // TypeDefIndex: 4590
	{
		// Fields
		public const int k_iCallback = 1307; // Metadata: 0x0024233B
		public EResult m_eResult; // 0x00
		public UGCHandle_t m_hFile; // 0x08
		public string m_rgchFilename; // 0x10
	}

	[CallbackIdentity] // 0x1000A0A0-0x1000A0C0
	public struct RemoteStorageFileWriteAsyncComplete_t // TypeDefIndex: 4612
	{
		// Fields
		public const int k_iCallback = 1331; // Metadata: 0x00242393
		public EResult m_eResult; // 0x00
	}

	[CallbackIdentity] // 0x10009BC0-0x10009BE0
	public struct RemoteStorageGetPublishedFileDetailsResult_t // TypeDefIndex: 4599
	{
		// Fields
		public const int k_iCallback = 1318; // Metadata: 0x0024235F
		public EResult m_eResult; // 0x00
		public PublishedFileId_t m_nPublishedFileId; // 0x08
		public AppId_t m_nCreatorAppID; // 0x10
		public AppId_t m_nConsumerAppID; // 0x14
		public string m_rgchTitle; // 0x18
		public string m_rgchDescription; // 0x1C
		public UGCHandle_t m_hFile; // 0x20
		public UGCHandle_t m_hPreviewFile; // 0x28
		public ulong m_ulSteamIDOwner; // 0x30
		public uint m_rtimeCreated; // 0x38
		public uint m_rtimeUpdated; // 0x3C
		public ERemoteStoragePublishedFileVisibility m_eVisibility; // 0x40
		public bool m_bBanned; // 0x44
		public string m_rgchTags; // 0x48
		public bool m_bTagsTruncated; // 0x4C
		public string m_pchFileName; // 0x50
		public int m_nFileSize; // 0x54
		public int m_nPreviewFileSize; // 0x58
		public string m_rgchURL; // 0x5C
		public EWorkshopFileType m_eFileType; // 0x60
		public bool m_bAcceptedForUse; // 0x64
	}

	[CallbackIdentity] // 0x10009C50-0x10009C70
	public struct RemoteStorageGetPublishedItemVoteDetailsResult_t // TypeDefIndex: 4601
	{
		// Fields
		public const int k_iCallback = 1320; // Metadata: 0x00242367
		public EResult m_eResult; // 0x00
		public PublishedFileId_t m_unPublishedFileId; // 0x08
		public int m_nVotesFor; // 0x10
		public int m_nVotesAgainst; // 0x14
		public int m_nReports; // 0x18
		public float m_fScore; // 0x1C
	}

	[CallbackIdentity] // 0x10009DF0-0x10009E10
	public struct RemoteStoragePublishedFileDeleted_t // TypeDefIndex: 4604
	{
		// Fields
		public const int k_iCallback = 1323; // Metadata: 0x00242373
		public PublishedFileId_t m_nPublishedFileId; // 0x00
		public AppId_t m_nAppID; // 0x08
	}

	[CallbackIdentity] // 0x10009CB0-0x10009CD0
	public struct RemoteStoragePublishedFileSubscribed_t // TypeDefIndex: 4602
	{
		// Fields
		public const int k_iCallback = 1321; // Metadata: 0x0024236B
		public PublishedFileId_t m_nPublishedFileId; // 0x00
		public AppId_t m_nAppID; // 0x08
	}

	[CallbackIdentity] // 0x10009D20-0x10009D40
	public struct RemoteStoragePublishedFileUnsubscribed_t // TypeDefIndex: 4603
	{
		// Fields
		public const int k_iCallback = 1322; // Metadata: 0x0024236F
		public PublishedFileId_t m_nPublishedFileId; // 0x00
		public AppId_t m_nAppID; // 0x08
	}

	[CallbackIdentity] // 0x1000A080-0x1000A0A0
	public struct RemoteStoragePublishedFileUpdated_t // TypeDefIndex: 4611
	{
		// Fields
		public const int k_iCallback = 1330; // Metadata: 0x0024238F
		public PublishedFileId_t m_nPublishedFileId; // 0x00
		public AppId_t m_nAppID; // 0x08
		public ulong m_ulUnused; // 0x10
	}

	[CallbackIdentity] // 0x1000A060-0x1000A080
	public struct RemoteStoragePublishFileProgress_t // TypeDefIndex: 4610
	{
		// Fields
		public const int k_iCallback = 1329; // Metadata: 0x0024238B
		public double m_dPercentFile; // 0x00
		public bool m_bPreview; // 0x08
	}

	[CallbackIdentity] // 0x100087F0-0x10008810
	public struct RemoteStoragePublishFileResult_t // TypeDefIndex: 4591
	{
		// Fields
		public const int k_iCallback = 1309; // Metadata: 0x0024233F
		public EResult m_eResult; // 0x00
		public PublishedFileId_t m_nPublishedFileId; // 0x08
		public bool m_bUserNeedsToAcceptWorkshopLegalAgreement; // 0x10
	}

	[CallbackIdentity] // 0x10009F90-0x10009FB0
	public struct RemoteStorageSetUserPublishedFileActionResult_t // TypeDefIndex: 4608
	{
		// Fields
		public const int k_iCallback = 1327; // Metadata: 0x00242383
		public EResult m_eResult; // 0x00
		public PublishedFileId_t m_nPublishedFileId; // 0x08
		public EWorkshopFileAction m_eAction; // 0x10
	}

	[CallbackIdentity] // 0x100088E0-0x10008900
	public struct RemoteStorageSubscribePublishedFileResult_t // TypeDefIndex: 4594
	{
		// Fields
		public const int k_iCallback = 1313; // Metadata: 0x0024234B
		public EResult m_eResult; // 0x00
		public PublishedFileId_t m_nPublishedFileId; // 0x08
	}

	[CallbackIdentity] // 0x100089F0-0x10008A10
	public struct RemoteStorageUnsubscribePublishedFileResult_t // TypeDefIndex: 4596
	{
		// Fields
		public const int k_iCallback = 1315; // Metadata: 0x00242353
		public EResult m_eResult; // 0x00
		public PublishedFileId_t m_nPublishedFileId; // 0x08
	}

	[CallbackIdentity] // 0x10008A50-0x10008A70
	public struct RemoteStorageUpdatePublishedFileResult_t // TypeDefIndex: 4597
	{
		// Fields
		public const int k_iCallback = 1316; // Metadata: 0x00242357
		public EResult m_eResult; // 0x00
		public PublishedFileId_t m_nPublishedFileId; // 0x08
		public bool m_bUserNeedsToAcceptWorkshopLegalAgreement; // 0x10
	}

	[CallbackIdentity] // 0x10009E90-0x10009EB0
	public struct RemoteStorageUpdateUserPublishedItemVoteResult_t // TypeDefIndex: 4605
	{
		// Fields
		public const int k_iCallback = 1324; // Metadata: 0x00242377
		public EResult m_eResult; // 0x00
		public PublishedFileId_t m_nPublishedFileId; // 0x08
	}

	[CallbackIdentity] // 0x10009F00-0x10009F20
	public struct RemoteStorageUserVoteDetails_t // TypeDefIndex: 4606
	{
		// Fields
		public const int k_iCallback = 1325; // Metadata: 0x0024237B
		public EResult m_eResult; // 0x00
		public PublishedFileId_t m_nPublishedFileId; // 0x08
		public EWorkshopVote m_eVote; // 0x10
	}

	[CallbackIdentity] // 0x1000A430-0x1000A450
	public struct RemoveAppDependencyResult_t // TypeDefIndex: 4630
	{
		// Fields
		public const int k_iCallback = 3415; // Metadata: 0x002423DB
		public EResult m_eResult; // 0x00
		public PublishedFileId_t m_nPublishedFileId; // 0x08
		public AppId_t m_nAppID; // 0x10
	}

	[CallbackIdentity] // 0x1000A3C0-0x1000A3E0
	public struct RemoveUGCDependencyResult_t // TypeDefIndex: 4628
	{
		// Fields
		public const int k_iCallback = 3413; // Metadata: 0x002423D3
		public EResult m_eResult; // 0x00
		public PublishedFileId_t m_nPublishedFileId; // 0x08
		public PublishedFileId_t m_nChildPublishedFileId; // 0x10
	}
}

public class ReportButtonManager : MonoBehaviour // TypeDefIndex: 5468
{
	// Fields
	public SpriteRenderer renderer; // 0x0C

	// Constructors
	public ReportButtonManager(); // 0x101A68C0-0x101A68D0

	// Methods
	public void SetActive(bool isActive); // 0x101C33C0-0x101C34F0
	public void DoClick(); // 0x101C3340-0x101C33C0
}

namespace MS.Internal.Xml.XPath
{
	internal abstract class ResetableIterator : XPathNodeIterator // TypeDefIndex: 1795
	{
		// Properties
		public abstract int CurrentPosition { get; }
	
		// Constructors
		public ResetableIterator(); // 0x106BB920-0x106BB940
		protected ResetableIterator(ResetableIterator other); // 0x106C5100-0x106C5130
	
		// Methods
		protected void ResetCount(); // 0x106C5210-0x106C5220
		public abstract void Reset();
	}
}

public static class ResolutionManager // TypeDefIndex: 5244
{
	// Fields
	[CompilerGenerated] // 0x10002030-0x10002050
	private static Action<float> ResolutionChanged; // 0x00

	// Events
	public static event Action<float> ResolutionChanged {
		add; // 0x101C3790-0x101C3810
		remove; // 0x101C3810-0x101C3890
	}

	// Methods
	public static void SetResolution(int width, int height, bool fullscreen); // 0x101C35C0-0x101C3630
	public static void ToggleFullscreen(); // 0x101C3630-0x101C3790
}

public class ResolutionSlider : MonoBehaviour // TypeDefIndex: 5745
{
	// Fields
	private int targetIdx; // 0x0C
	private Resolution targetResolution; // 0x10
	private bool targetFullscreen; // 0x1C
	private Resolution[] allResolutions; // 0x20
	public SlideBar slider; // 0x24
	public ToggleButtonBehaviour Fullscreen; // 0x28
	public ToggleButtonBehaviour VSync; // 0x2C
	public TextRenderer Display; // 0x30

	// Nested types
	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5746
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<Resolution, bool> __9__8_0; // 0x04

		// Constructors
		static __c(); // 0x101D1570-0x101D15C0
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _OnEnable_b__8_0(Resolution r); // 0x101D0E70-0x101D0E90
	}

	// Constructors
	public ResolutionSlider(); // 0x101A68C0-0x101A68D0

	// Methods
	public void OnEnable(); // 0x101C3890-0x101C3B30
	public void ToggleVSync(); // 0x101C3D50-0x101C3F40
	public void ToggleFullscreen(); // 0x101C3D20-0x101C3D50
	public void OnResChange(SlideBar slider); // 0x101C3B30-0x101C3C90
	public void SaveChange(); // 0x101C3C90-0x101C3D20
	[CompilerGenerated] // 0x10002030-0x10002050
	private bool _OnEnable_b__8_1(Resolution e); // 0x101C3F40-0x101C3F90
}

public class ResSetter : MonoBehaviour // TypeDefIndex: 5715
{
	// Fields
	public int Width; // 0x0C
	public int Height; // 0x10
	private int cnt; // 0x14

	// Constructors
	public ResSetter(); // 0x101C3590-0x101C35C0

	// Methods
	public void Start(); // 0x101C34F0-0x101C3510
	public void Update(); // 0x101C3510-0x101C3590
}

namespace Discord
{
	public enum Result // TypeDefIndex: 4858
	{
		Ok = 0,
		ServiceUnavailable = 1,
		InvalidVersion = 2,
		LockFailed = 3,
		InternalError = 4,
		InvalidPayload = 5,
		InvalidCommand = 6,
		InvalidPermissions = 7,
		NotFetched = 8,
		NotFound = 9,
		Conflict = 10,
		InvalidSecret = 11,
		InvalidJoinSecret = 12,
		NoEligibleActivity = 13,
		InvalidInvite = 14,
		NotAuthenticated = 15,
		InvalidAccessToken = 16,
		ApplicationMismatch = 17,
		InvalidDataUrl = 18,
		InvalidBase64 = 19,
		NotFiltered = 20,
		LobbyFull = 21,
		InvalidLobbySecret = 22,
		InvalidFilename = 23,
		InvalidFileSize = 24,
		InvalidEntitlement = 25,
		NotInstalled = 26,
		NotRunning = 27,
		InsufficientBuffer = 28,
		PurchaseCanceled = 29,
		InvalidGuild = 30,
		InvalidEvent = 31,
		InvalidChannel = 32,
		InvalidOrigin = 33,
		RateLimited = 34,
		OAuth2Error = 35,
		SelectChannelTimeout = 36,
		GetGuildTimeout = 37,
		SelectVoiceForceRequired = 38,
		CaptureShortcutAlreadyListening = 39,
		UnauthorizedForAchievement = 40,
		InvalidGiftCode = 41,
		PurchaseError = 42,
		TransactionAborted = 43
	}

	public class ResultException : Exception // TypeDefIndex: 4913
	{
		// Fields
		public readonly Discord.Result Result; // 0x44
	
		// Constructors
		public ResultException(Discord.Result result); // 0x10624CA0-0x10624D40
	}
}

namespace MS.Internal.Xml.XPath
{
	internal sealed class ReversePositionQuery : ForwardPositionQuery // TypeDefIndex: 1796
	{
		// Properties
		public override int CurrentPosition { get; } // 0x106C5270-0x106C52B0 
		public override QueryProps Properties { get; } // 0x1038D2F0-0x1038D300 
	
		// Constructors
		public ReversePositionQuery(Query input); // 0x106BB910-0x106BB920
		private ReversePositionQuery(ReversePositionQuery other); // 0x106BB900-0x106BB910
	
		// Methods
		public override XPathNodeIterator Clone(); // 0x106C5220-0x106C5270
	}
}

namespace GoogleMobileAds.Api
{
	public class Reward : EventArgs // TypeDefIndex: 5980
	{
		// Fields
		[CompilerGenerated] // 0x10002030-0x10002050
		private string _Type_k__BackingField; // 0x08
		[CompilerGenerated] // 0x10002030-0x10002050
		private double _Amount_k__BackingField; // 0x10
	
		// Properties
		public string Type { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101B4FF0-0x101B5000 0x101D22D0-0x101D22E0
		public double Amount { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x102825F0-0x10282600 0x10282600-0x10282620
	
		// Constructors
		public Reward(); // 0x102825A0-0x102825F0
	}

	public class RewardBasedVideoAd // TypeDefIndex: 5981
	{
		// Fields
		private IRewardBasedVideoAdClient client; // 0x08
		private static readonly RewardBasedVideoAd instance; // 0x00
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdLoaded; // 0x0C
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<AdFailedToLoadEventArgs> OnAdFailedToLoad; // 0x10
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdOpening; // 0x14
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdStarted; // 0x18
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdClosed; // 0x1C
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<Reward> OnAdRewarded; // 0x20
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdLeavingApplication; // 0x24
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdCompleted; // 0x28
	
		// Properties
		public static RewardBasedVideoAd Instance { get; } // 0x10282150-0x102821A0 
	
		// Events
		public event EventHandler<EventArgs> OnAdLoaded {
			add; // 0x10281F50-0x10281FD0
			remove; // 0x102823A0-0x10282420
		}
		public event EventHandler<AdFailedToLoadEventArgs> OnAdFailedToLoad {
			add; // 0x10281E50-0x10281ED0
			remove; // 0x102822A0-0x10282320
		}
		public event EventHandler<EventArgs> OnAdOpening {
			add; // 0x10281FD0-0x10282050
			remove; // 0x10282420-0x102824A0
		}
		public event EventHandler<EventArgs> OnAdStarted {
			add; // 0x102820D0-0x10282150
			remove; // 0x10282520-0x102825A0
		}
		public event EventHandler<EventArgs> OnAdClosed {
			add; // 0x10281D50-0x10281DD0
			remove; // 0x102821A0-0x10282220
		}
		public event EventHandler<Reward> OnAdRewarded {
			add; // 0x10282050-0x102820D0
			remove; // 0x102824A0-0x10282520
		}
		public event EventHandler<EventArgs> OnAdLeavingApplication {
			add; // 0x10281ED0-0x10281F50
			remove; // 0x10282320-0x102823A0
		}
		public event EventHandler<EventArgs> OnAdCompleted {
			add; // 0x10281DD0-0x10281E50
			remove; // 0x10282220-0x102822A0
		}
	
		// Constructors
		private RewardBasedVideoAd(); // 0x10281AE0-0x10281D50
		static RewardBasedVideoAd(); // 0x10281A90-0x10281AE0
	
		// Methods
		public void LoadAd(AdRequest request, string adUnitId); // 0x10281700-0x102817A0
		public bool IsLoaded(); // 0x102816B0-0x10281700
		public void Show(); // 0x10281840-0x10281890
		public void SetUserId(string userId); // 0x102817F0-0x10281840
		public string MediationAdapterClassName(); // 0x102817A0-0x102817F0
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _.ctor_b__4_0(object sender, EventArgs args); // 0x10281890-0x102818D0
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _.ctor_b__4_1(object sender, AdFailedToLoadEventArgs args); // 0x102818D0-0x10281910
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _.ctor_b__4_2(object sender, EventArgs args); // 0x10281910-0x10281950
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _.ctor_b__4_3(object sender, EventArgs args); // 0x10281950-0x10281990
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _.ctor_b__4_4(object sender, EventArgs args); // 0x10281990-0x102819D0
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _.ctor_b__4_5(object sender, EventArgs args); // 0x102819D0-0x10281A10
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _.ctor_b__4_6(object sender, Reward args); // 0x10281A10-0x10281A50
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _.ctor_b__4_7(object sender, EventArgs args); // 0x10281A50-0x10281A90
	}

	public class RewardedAd // TypeDefIndex: 5982
	{
		// Fields
		private IRewardedAdClient client; // 0x08
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdLoaded; // 0x0C
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<AdErrorEventArgs> OnAdFailedToLoad; // 0x10
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<AdErrorEventArgs> OnAdFailedToShow; // 0x14
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdOpening; // 0x18
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdClosed; // 0x1C
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<Reward> OnUserEarnedReward; // 0x20
	
		// Events
		public event EventHandler<EventArgs> OnAdLoaded {
			add; // 0x102839C0-0x10283A40
			remove; // 0x10283CC0-0x10283D40
		}
		public event EventHandler<AdErrorEventArgs> OnAdFailedToLoad {
			add; // 0x102838C0-0x10283940
			remove; // 0x10283BC0-0x10283C40
		}
		public event EventHandler<AdErrorEventArgs> OnAdFailedToShow {
			add; // 0x10283940-0x102839C0
			remove; // 0x10283C40-0x10283CC0
		}
		public event EventHandler<EventArgs> OnAdOpening {
			add; // 0x10283A40-0x10283AC0
			remove; // 0x10283D40-0x10283DC0
		}
		public event EventHandler<EventArgs> OnAdClosed {
			add; // 0x10283840-0x102838C0
			remove; // 0x10283B40-0x10283BC0
		}
		public event EventHandler<Reward> OnUserEarnedReward {
			add; // 0x10283AC0-0x10283B40
			remove; // 0x10283DC0-0x10283E40
		}
	
		// Constructors
		public RewardedAd(string adUnitId); // 0x102835B0-0x10283840
	
		// Methods
		public void LoadAd(AdRequest request); // 0x10283290-0x102832E0
		public bool IsLoaded(); // 0x10283240-0x10283290
		public void Show(); // 0x102833E0-0x10283430
		public void SetServerSideVerificationOptions(ServerSideVerificationOptions serverSideVerificationOptions); // 0x10283330-0x102833E0
		public Reward GetRewardItem(); // 0x10283180-0x10283240
		public string MediationAdapterClassName(); // 0x102832E0-0x10283330
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _.ctor_b__1_0(object sender, EventArgs args); // 0x10283430-0x10283470
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _.ctor_b__1_1(object sender, AdErrorEventArgs args); // 0x10283470-0x102834B0
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _.ctor_b__1_2(object sender, AdErrorEventArgs args); // 0x102834B0-0x102834F0
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _.ctor_b__1_3(object sender, EventArgs args); // 0x102834F0-0x10283530
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _.ctor_b__1_4(object sender, EventArgs args); // 0x10283530-0x10283570
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _.ctor_b__1_5(object sender, Reward args); // 0x10283570-0x102835B0
	}
}

namespace GoogleMobileAds.Common
{
	public class RewardedAdDummyClient : IRewardedAdClient // TypeDefIndex: 5957
	{
		// Fields
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdLoaded; // 0x08
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<AdErrorEventArgs> OnAdFailedToLoad; // 0x0C
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<AdErrorEventArgs> OnAdFailedToShow; // 0x10
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdOpening; // 0x14
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<EventArgs> OnAdClosed; // 0x18
		[CompilerGenerated] // 0x10002030-0x10002050
		private EventHandler<Reward> OnUserEarnedReward; // 0x1C
	
		// Events
		public event EventHandler<EventArgs> OnAdLoaded {
			add; // 0x10282D00-0x10282D80
			remove; // 0x10283000-0x10283080
		}
		public event EventHandler<AdErrorEventArgs> OnAdFailedToLoad {
			add; // 0x10282C00-0x10282C80
			remove; // 0x10282F00-0x10282F80
		}
		public event EventHandler<AdErrorEventArgs> OnAdFailedToShow {
			add; // 0x10282C80-0x10282D00
			remove; // 0x10282F80-0x10283000
		}
		public event EventHandler<EventArgs> OnAdOpening {
			add; // 0x10282D80-0x10282E00
			remove; // 0x10283080-0x10283100
		}
		public event EventHandler<EventArgs> OnAdClosed {
			add; // 0x10282B80-0x10282C00
			remove; // 0x10282E80-0x10282F00
		}
		public event EventHandler<Reward> OnUserEarnedReward {
			add; // 0x10282E00-0x10282E80
			remove; // 0x10283100-0x10283180
		}
	
		// Constructors
		public RewardedAdDummyClient(); // 0x10282AD0-0x10282B80
	
		// Methods
		public void CreateRewardedAd(string adUnitId); // 0x10282620-0x102826C0
		public void LoadAd(AdRequest request); // 0x10282800-0x102828F0
		public bool IsLoaded(); // 0x10282760-0x10282800
		public void Show(); // 0x10282A30-0x10282AD0
		public string MediationAdapterClassName(); // 0x102828F0-0x10282990
		public Reward GetRewardItem(); // 0x102826C0-0x10282760
		public void SetServerSideVerificationOptions(ServerSideVerificationOptions serverSideVerificationOptions); // 0x10282990-0x10282A30
	}
}

public class RingBuffer<T> // TypeDefIndex: 5698
{
	// Fields
	private readonly T[] Data;
	private int startIdx;
	[CompilerGenerated] // 0x10002030-0x10002050
	private int _Count_k__BackingField;

	// Properties
	public int Count { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; }
	public int Capacity { get; }
	public T this[int i] { get => default; }

	// Constructors
	public RingBuffer(int size);

	// Methods
	public T First();
	public T Last();
	public void Add(T item);
	public T RemoveFirst();
	public void Clear();
}

public class RoomTracker : MonoBehaviour // TypeDefIndex: 5469
{
	// Fields
	public TextRenderer text; // 0x0C
	public float SourceY; // 0x10
	public float TargetY; // 0x14
	private Collider2D playerCollider; // 0x18
	private ContactFilter2D filter; // 0x1C
	private Collider2D[] buffer; // 0x38
	public PlainShipRoom LastRoom; // 0x3C
	private Coroutine slideInRoutine; // 0x40

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoSlideIn_d__11 : IEnumerator<object> // TypeDefIndex: 5470
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public RoomTracker __4__this; // 0x10
		public SystemTypes newRoom; // 0x14
		private Vector3 _tempPos_5__2; // 0x18
		private Color _tempColor_5__3; // 0x24
		private float _timer_5__4; // 0x34

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoSlideIn_d__11(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101CF080-0x101CF2E0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101CF2E0-0x101CF330
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _SlideOut_d__12 : IEnumerator<object> // TypeDefIndex: 5471
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public RoomTracker __4__this; // 0x10
		private Vector3 _tempPos_5__2; // 0x14
		private Color _tempColor_5__3; // 0x20
		private float _timer_5__4; // 0x30

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _SlideOut_d__12(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101D0820-0x101D0A60
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101D0A60-0x101D0AB0
	}

	// Constructors
	public RoomTracker(); // 0x101C4650-0x101C46B0

	// Methods
	public void Awake(); // 0x101C3F90-0x101C4010
	public void OnDisable(); // 0x101C4570-0x101C4600
	public void FixedUpdate(); // 0x101C41D0-0x101C4570
	[IteratorStateMachine] // 0x100421A0-0x100421F0
	private IEnumerator CoSlideIn(SystemTypes newRoom); // 0x101C4170-0x101C41D0
	[IteratorStateMachine] // 0x10042240-0x10042290
	private IEnumerator SlideOut(); // 0x101C4600-0x101C4650
	private static bool CheckHitsForPlayer(Collider2D[] buffer, int hitCount); // 0x101C4010-0x101C4170
}

namespace MS.Internal.Xml.XPath
{
	internal class Root : AstNode // TypeDefIndex: 1797
	{
		// Properties
		public override AstType Type { get; } // 0x102F71D0-0x102F71E0 
		public override XPathResultType ReturnType { get; } // 0x1045B170-0x1045B180 
	
		// Constructors
		public Root(); // 0x101A2CD0-0x101A2CE0
	}
}

public class Rotater : MonoBehaviour // TypeDefIndex: 5716
{
	// Fields
	public float DegreesPerSecond; // 0x0C

	// Constructors
	public Rotater(); // 0x101C4740-0x101C4760

	// Methods
	private void Update(); // 0x101C46B0-0x101C4740
}

public enum RpcCalls : byte // TypeDefIndex: 5497
{
	PlayAnimation = 0,
	CompleteTask = 1,
	SyncSettings = 2,
	SetInfected = 3,
	Exiled = 4,
	CheckName = 5,
	SetName = 6,
	CheckColor = 7,
	SetColor = 8,
	SetHat = 9,
	SetSkin = 10,
	ReportDeadBody = 11,
	MurderPlayer = 12,
	SendChat = 13,
	StartMeeting = 14,
	SetScanner = 15,
	SendChatNote = 16,
	SetPet = 17,
	SetStartCounter = 18,
	EnterVent = 19,
	ExitVent = 20,
	SnapTo = 21,
	Close = 22,
	VotingComplete = 23,
	CastVote = 24,
	ClearVote = 25,
	AddVote = 26,
	CloseDoorsOfType = 27,
	RepairSystem = 28,
	SetTasks = 29,
	UpdateGameData = 30
}

public class SabotageSystemType : ISystemType // TypeDefIndex: 5792
{
	// Fields
	public const float SpecialSabDelay = 30f; // Metadata: 0x00243D75
	[CompilerGenerated] // 0x10002030-0x10002050
	private float _Timer_k__BackingField; // 0x08
	private List<IActivatable> specials; // 0x0C
	private bool dirty; // 0x10
	private DummySab dummy; // 0x14

	// Properties
	public float Timer { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ set; } // 0x101C4D10-0x101C4D20 0x101C4D20-0x101C4D40
	public float PercentCool { get; } // 0x101C4CF0-0x101C4D10 
	public bool AnyActive { get; } // 0x101C4C30-0x101C4CF0 

	// Nested types
	public class DummySab : IActivatable // TypeDefIndex: 5793
	{
		// Fields
		public float timer; // 0x08

		// Properties
		public bool IsActive { get; } // 0x101B9F50-0x101B9F70 

		// Constructors
		public DummySab(); // 0x101A2CD0-0x101A2CE0
	}

	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5794
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<IActivatable, bool> __9__9_0; // 0x04
		public static Predicate<IActivatable> __9__13_0; // 0x08

		// Constructors
		static __c(); // 0x101D1430-0x101D1480
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _get_AnyActive_b__9_0(IActivatable s); // 0x101D1050-0x101D10F0
		internal bool _.ctor_b__13_0(IActivatable d); // 0x101D1010-0x101D1050
	}

	// Constructors
	public SabotageSystemType(IActivatable[] specials); // 0x101C4B00-0x101C4C30

	// Methods
	public bool Detoriorate(float deltaTime); // 0x101C4790-0x101C48B0
	public void ForceSabTime(float t); // 0x101C48B0-0x101C48D0
	public void RepairDamage(PlayerControl player, byte amount); // 0x101C48D0-0x101C4AC0
	public void Serialize(MessageWriter writer, bool initialState); // 0x101C4AC0-0x101C4B00
	public void Deserialize(MessageReader reader, bool initialState); // 0x101C4760-0x101C4790
}

public abstract class SabotageTask : PlayerTask // TypeDefIndex: 5856
{
	// Fields
	protected bool didContribute; // 0x28
	public ArrowBehaviour[] Arrows; // 0x2C

	// Constructors
	protected SabotageTask(); // 0x101BCD60-0x101BCD80

	// Methods
	public void MarkContributed(); // 0x101C4D40-0x101C4D50
	protected void SetupArrows(); // 0x101C4D50-0x101C4FE0
}

public class SampleMinigame : Minigame // TypeDefIndex: 5606
{
	// Fields
	private static string[] ProcessingStrings; // 0x00
	private const float PanelMoveDuration = 0.75f; // Metadata: 0x00243C8D
	private const byte TubeMask = 15; // Metadata: 0x00243C91
	public TextRenderer UpperText; // 0x28
	public TextRenderer LowerText; // 0x2C
	public float TimePerStep; // 0x30
	public FloatRange platformY; // 0x34
	public FloatRange dropperX; // 0x38
	public SpriteRenderer CenterPanel; // 0x3C
	public SpriteRenderer Dropper; // 0x40
	public SpriteRenderer[] Tubes; // 0x44
	public SpriteRenderer[] Buttons; // 0x48
	public SpriteRenderer LowerButton; // 0x4C
	public AudioClip ButtonSound; // 0x50
	public AudioClip PanelMoveSound; // 0x54
	public AudioClip FailSound; // 0x58
	public AudioClip[] DropSounds; // 0x5C
	private RandomFill<AudioClip> dropSounds; // 0x60

	// Properties
	private States State { get; set; } // 0x101C60E0-0x101C6120 0x101C6160-0x101C61A0
	private int AnomalyId { get; set; } // 0x101C60A0-0x101C60E0 0x101C6120-0x101C6160

	// Nested types
	public enum States : byte // TypeDefIndex: 5607
	{
		PrepareSample = 0,
		Complete = 16,
		AwaitingStart = 32,
		Selection = 64,
		Processing = 128
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _BringPanelUp_d__30 : IEnumerator<object> // TypeDefIndex: 5608
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SampleMinigame __4__this; // 0x10
		public bool isBeginning; // 0x14
		private WaitForFixedUpdate _wait_5__2; // 0x18
		private Vector3 _pos_5__3; // 0x1C
		private float _i_5__4; // 0x28

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _BringPanelUp_d__30(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101CCCD0-0x101CCFB0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101CCFB0-0x101CD000
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _BringPanelDown_d__31 : IEnumerator<object> // TypeDefIndex: 5609
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SampleMinigame __4__this; // 0x10
		private WaitForFixedUpdate _wait_5__2; // 0x14
		private Vector3 _pos_5__3; // 0x18
		private float _i_5__4; // 0x24

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _BringPanelDown_d__31(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101CCA40-0x101CCC80
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101CCC80-0x101CCCD0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _DropTube_d__32 : IEnumerator<object> // TypeDefIndex: 5610
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SampleMinigame __4__this; // 0x10
		public int id; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _DropTube_d__32(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101D06B0-0x101D07D0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101D07D0-0x101D0820
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoSelectTube_d__34 : IEnumerator<object> // TypeDefIndex: 5611
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public int selectedTube; // 0x10
		public int correctTube; // 0x14
		public SampleMinigame __4__this; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoSelectTube_d__34(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101CE240-0x101CE900
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101CE900-0x101CE950
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoStartProcessing_d__36 : IEnumerator<object> // TypeDefIndex: 5612
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SampleMinigame __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoStartProcessing_d__36(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101CFDE0-0x101CFF40
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101CFF40-0x101CFF90
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _DropLiquid_d__37 : IEnumerator<object> // TypeDefIndex: 5613
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SampleMinigame __4__this; // 0x10
		private WaitForSeconds _dropWait_5__2; // 0x14
		private WaitForFixedUpdate _wait_5__3; // 0x18
		private Vector3 _pos_5__4; // 0x1C
		private int _step_5__5; // 0x28
		private float _start_5__6; // 0x2C
		private float _xTarg_5__7; // 0x30
		private float _i_5__8; // 0x34

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _DropLiquid_d__37(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101D01D0-0x101D0660
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x101D0660-0x101D06B0
	}

	// Constructors
	public SampleMinigame(); // 0x101C6000-0x101C60A0
	static SampleMinigame(); // 0x101C5E70-0x101C6000

	// Methods
	public void Awake(); // 0x101C4FE0-0x101C5050
	public override void Begin(PlayerTask task); // 0x101C5050-0x101C5460
	private void SetPlatformBottom(); // 0x101C5D50-0x101C5DE0
	private void SetPlatformTop(); // 0x101C5DE0-0x101C5E70
	public void FixedUpdate(); // 0x101C5670-0x101C5A70
	[IteratorStateMachine] // 0x10009C00-0x10009C50
	public IEnumerator BringPanelUp(bool isBeginning); // 0x101C54B0-0x101C5510
	[IteratorStateMachine] // 0x10009CD0-0x10009D20
	public IEnumerator BringPanelDown(); // 0x101C5460-0x101C54B0
	[IteratorStateMachine] // 0x10009DA0-0x10009DF0
	private IEnumerator DropTube(int id); // 0x101C5610-0x101C5670
	public void SelectTube(int tubeId); // 0x101C5BF0-0x101C5D50
	[IteratorStateMachine] // 0x10009EB0-0x10009F00
	private IEnumerator CoSelectTube(int correctTube, int selectedTube); // 0x101C5510-0x101C5570
	public void NextStep(); // 0x101C5A70-0x101C5BF0
	[IteratorStateMachine] // 0x10009F20-0x10009F70
	private IEnumerator CoStartProcessing(); // 0x101C5570-0x101C55C0
	[IteratorStateMachine] // 0x10009FB0-0x1000A000
	private IEnumerator DropLiquid(); // 0x101C55C0-0x101C5610
}

public static class SaveManager // TypeDefIndex: 5719
{
	// Fields
	private static bool loaded; // 0x00
	private static bool loadedStats; // 0x01
	private static bool loadedAnnounce; // 0x02
	private static string lastPlayerName; // 0x04
	private static byte sfxVolume; // 0x08
	private static byte musicVolume; // 0x09
	private static bool showMinPlayerWarning; // 0x0A
	private static bool showOnlineHelp; // 0x0B
	private static byte showAdsScreen; // 0x0C
	private static bool vsync; // 0x0D
	private static bool censorChat; // 0x0E
	private static int touchConfig; // 0x10
	private static float joyStickSize; // 0x14
	private static uint colorConfig; // 0x18
	private static uint lastPet; // 0x1C
	private static uint lastHat; // 0x20
	private static uint lastSkin; // 0x24
	private static uint lastLanguage; // 0x28
	private static GameOptionsData hostOptionsData; // 0x2C
	private static GameOptionsData searchOptionsData; // 0x30
	private static Announcement lastAnnounce; // 0x38
	private static SecureDataFile purchaseFile; // 0x48
	private static HashSet<string> purchases; // 0x4C

	// Properties
	public static Announcement LastAnnouncement { get; set; } // 0x101C8820-0x101C8880 0x101C9020-0x101C9080
	public static bool BoughtNoAds { get; } // 0x101C8400-0x101C8470 
	public static bool VSync { get; set; } // 0x101C8DA0-0x101C8E00 0x101C94C0-0x101C9520
	public static bool CensorChat { get; set; } // 0x101C8470-0x101C84D0 0x101C8E70-0x101C8ED0
	public static ShowAdsState ShowAdsScreen { get; set; } // 0x101C8C20-0x101C8C80 0x101C9340-0x101C93A0
	public static bool ShowMinPlayerWarning { get; set; } // 0x101C8C80-0x101C8CE0 0x101C93A0-0x101C9400
	public static bool ShowOnlineHelp { get; set; } // 0x101C8CE0-0x101C8D40 0x101C9400-0x101C9460
	public static float SfxVolume { get; set; } // 0x101C8BB0-0x101C8C20 0x101C92D0-0x101C9340
	public static float MusicVolume { get; set; } // 0x101C8A80-0x101C8AF0 0x101C9200-0x101C9270
	public static int TouchConfig { get; set; } // 0x101C8D40-0x101C8DA0 0x101C9460-0x101C94C0
	public static float JoystickSize { get; set; } // 0x101C87C0-0x101C8820 0x101C8FB0-0x101C9020
	public static string PlayerName { get; set; } // 0x101C8AF0-0x101C8BB0 0x101C9270-0x101C92D0
	public static uint LastPet { get; set; } // 0x101C89C0-0x101C8A20 0x101C9140-0x101C91A0
	public static uint LastHat { get; set; } // 0x101C8880-0x101C88E0 0x101C9080-0x101C90E0
	public static uint LastSkin { get; set; } // 0x101C8A20-0x101C8A80 0x101C91A0-0x101C9200
	public static uint LastLanguage { get; set; } // 0x101C88E0-0x101C89C0 0x101C90E0-0x101C9140
	public static byte BodyColor { get; set; } // 0x101C83A0-0x101C8400 0x101C8E00-0x101C8E70
	public static GameOptionsData GameHostOptions { get; set; } // 0x101C84D0-0x101C8670 0x101C8ED0-0x101C8F40
	public static GameOptionsData GameSearchOptions { get; set; } // 0x101C8670-0x101C87C0 0x101C8F40-0x101C8FB0

	// Nested types
	private class SecureDataFile // TypeDefIndex: 5720
	{
		// Fields
		[CompilerGenerated] // 0x10002030-0x10002050
		private bool _Loaded_k__BackingField; // 0x08
		private string filePath; // 0x0C

		// Properties
		public bool Loaded { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101CA160-0x101CA170 0x101CA170-0x101CA180

		// Constructors
		public SecureDataFile(string filePath); // 0x101CA140-0x101CA160

		// Methods
		public void LoadData(Action<BinaryReader> performRead); // 0x101C9800-0x101C9D10
		public void SaveData(params /* 0x10002030-0x10002050 */ object[] items); // 0x101C9D10-0x101CA140
		public void Delete(); // 0x101C9740-0x101C9800
	}

	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5721
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Action<BinaryReader> __9__34_0; // 0x04

		// Constructors
		static __c(); // 0x101D1480-0x101D14D0
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _LoadSecureData_b__34_0(BinaryReader reader); // 0x101D0D70-0x101D0E70
	}

	// Constructors
	static SaveManager(); // 0x101C8220-0x101C83A0

	// Methods
	public static uint GetMapPurchaseField(); // 0x101C6290-0x101C6310
	public static bool GetMapAvailable(int id); // 0x101C6220-0x101C6290
	public static bool GetMapPurchased(int id); // 0x101C6310-0x101C6330
	public static bool GetPurchase(string key); // 0x101C6330-0x101C63A0
	public static void ClearPurchased(string key); // 0x101C61A0-0x101C6220
	public static void SetPurchased(string key); // 0x101C7D80-0x101C7EC0
	private static void LoadSecureData(); // 0x101C6D60-0x101C7020
	private static void SaveSecureData(); // 0x101C7CC0-0x101C7D80
	private static GameOptionsData LoadGameOptions(string filename); // 0x101C65E0-0x101C6810
	private static void SaveGameOptions(GameOptionsData data, string filename); // 0x101C7200-0x101C73C0
	private static void LoadAnnouncement(); // 0x101C63A0-0x101C65E0
	public static void SaveAnnouncement(); // 0x101C7020-0x101C7200
	private static void LoadPlayerPrefs(); // 0x101C6810-0x101C6D60
	private static void SavePlayerPrefs(); // 0x101C73C0-0x101C7CC0
	private static void TryGetBool(string[] parts, int index, out bool value, bool @default = false /* Metadata: 0x00243D1C */); // 0x101C7EC0-0x101C7F40
	private static void TryGetByte(string[] parts, int index, out byte value); // 0x101C7F40-0x101C7F80
	private static void TryGetFloat(string[] parts, int index, out float value, float @default = 0f /* Metadata: 0x00243D1D */); // 0x101C8110-0x101C81A0
	private static void TryGetDateTime(string[] parts, int index, out DateTime value); // 0x101C8050-0x101C8110
	private static void TryGetInt(string[] parts, int index, out int value); // 0x101C81A0-0x101C81E0
	private static void TryGetUint(string[] parts, int index, out uint value, uint @default = 0 /* Metadata: 0x00243D21 */); // 0x101C81E0-0x101C8220
	private static void TryGetDateTicks(string[] parts, int index, out DateTime value); // 0x101C7F80-0x101C8050
}

public class Scene0Controller : SceneController // TypeDefIndex: 5375
{
	// Fields
	public float Duration; // 0x0C
	public SpriteRenderer[] ExtraBoys; // 0x10
	public AnimationCurve PopInCurve; // 0x14
	public AnimationCurve PopOutCurve; // 0x18
	public float OutDuration; // 0x1C

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Run_d__7 : IEnumerator<object> // TypeDefIndex: 5376
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public Scene0Controller __4__this; // 0x10
		private int _lastBoy_5__2; // 0x14
		private float _start_5__3; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Run_d__7(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A41740-0x10A418B0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A418B0-0x10A41900
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _PopIn_d__8 : IEnumerator<object> // TypeDefIndex: 5377
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SpriteRenderer boy; // 0x10
		public Scene0Controller __4__this; // 0x14
		private float _timer_5__2; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _PopIn_d__8(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A40390-0x10A40560
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A40560-0x10A405B0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _PopOut_d__9 : IEnumerator<object> // TypeDefIndex: 5378
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SpriteRenderer boy; // 0x10
		public Scene0Controller __4__this; // 0x14
		private float _timer_5__2; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _PopOut_d__9(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A405B0-0x10A40790
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A40790-0x10A407E0
	}

	// Constructors
	public Scene0Controller(); // 0x101C9710-0x101C9740

	// Methods
	public void OnEnable(); // 0x101C9590-0x101C95F0
	public void OnDisable(); // 0x101C9520-0x101C9590
	[IteratorStateMachine] // 0x10038380-0x100383D0
	private IEnumerator Run(); // 0x101C96B0-0x101C9710
	[IteratorStateMachine] // 0x10038480-0x100384D0
	private IEnumerator PopIn(SpriteRenderer boy); // 0x101C95F0-0x101C9650
	[IteratorStateMachine] // 0x10038630-0x10038680
	private IEnumerator PopOut(SpriteRenderer boy); // 0x101C9650-0x101C96B0
}

public class Scene1Controller : SceneController // TypeDefIndex: 5379
{
	// Fields
	public PlayerAnimator[] players; // 0x0C
	public DummyConsole[] Consoles; // 0x10
	public Vector2[] WayPoints; // 0x14
	public Camera backupCam; // 0x18

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _RunPlayer_d__7 : IEnumerator<object> // TypeDefIndex: 5380
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public Scene1Controller __4__this; // 0x10
		public int idx; // 0x14
		private PlayerAnimator _myPlayer_5__2; // 0x18
		private int _i_5__3; // 0x1C
		private bool _willInterrupt_5__4; // 0x20

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _RunPlayer_d__7(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A40DF0-0x10A40FA0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A40FA0-0x10A40FF0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _DoUse_d__8 : IEnumerator<object> // TypeDefIndex: 5381
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public Scene1Controller __4__this; // 0x10
		public int idx; // 0x14
		public int consoleid; // 0x18
		private PlayerAnimator _myPlayer_5__2; // 0x1C

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _DoUse_d__8(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A3F860-0x10A3FC50
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A3FC50-0x10A3FCA0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _WaitForSeconds_d__9 : IEnumerator<object> // TypeDefIndex: 5382
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public float duration; // 0x10
		private float _time_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _WaitForSeconds_d__9(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1022E960-0x1022E9D0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A41F10-0x10A41F60
	}

	// Constructors
	public Scene1Controller(); // 0x101A68C0-0x101A68D0

	// Methods
	public void OnDrawGizmos(); // 0x10A2C610-0x10A2C750
	public void OnEnable(); // 0x10A2C750-0x10A2C820
	public void OnDisable(); // 0x10A2C560-0x10A2C610
	[IteratorStateMachine] // 0x1003A2A0-0x1003A2F0
	private IEnumerator RunPlayer(int idx); // 0x10A2C820-0x10A2C880
	[IteratorStateMachine] // 0x1003A340-0x1003A390
	private IEnumerator DoUse(int idx, int consoleid); // 0x10A2C500-0x10A2C560
	[IteratorStateMachine] // 0x1003A3E0-0x1003A430
	public static IEnumerator WaitForSeconds(float duration); // 0x10A2C880-0x10A2C8D0
}

public class SceneChanger : MonoBehaviour // TypeDefIndex: 5245
{
	// Fields
	public string TargetScene; // 0x0C
	public Button.ButtonClickedEvent BeforeSceneChange; // 0x10

	// Constructors
	public SceneChanger(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Click(); // 0x10A2C8E0-0x10A2C910
	public static void ChangeScene(string target); // 0x10A2C8D0-0x10A2C8E0
	public void ExitGame(); // 0x10A2C910-0x10A2C920
}

public class SceneController : MonoBehaviour // TypeDefIndex: 5383
{
	// Constructors
	public SceneController(); // 0x101A68C0-0x101A68D0
}

public class ScreenJoystick : MonoBehaviour, IVirtualJoystick // TypeDefIndex: 5415
{
	// Fields
	private Collider2D[] hitBuffer; // 0x0C
	[CompilerGenerated] // 0x10002030-0x10002050
	private Vector2 _Delta_k__BackingField; // 0x10
	private Controller myController; // 0x18
	private int touchId; // 0x1C

	// Properties
	public Vector2 Delta { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x102B8830-0x102B8850 0x102B8850-0x102B8870

	// Constructors
	public ScreenJoystick(); // 0x10A2CCC0-0x10A2CD30

	// Methods
	private void FixedUpdate(); // 0x10A2C920-0x10A2CCC0
}

namespace Steamworks
{
	[Serializable]
	public struct ScreenshotHandle : IEquatable<ScreenshotHandle>, IComparable<ScreenshotHandle> // TypeDefIndex: 4818
	{
		// Fields
		public static readonly ScreenshotHandle Invalid; // 0x00
		public uint m_ScreenshotHandle; // 0x00
	
		// Constructors
		public ScreenshotHandle(uint value); // 0x100900E0-0x100900F0
		static ScreenshotHandle(); // 0x1018AFF0-0x1018B020
	
		// Methods
		public override string ToString(); // 0x100900C0-0x100900E0
		public override bool Equals(object other); // 0x10090160-0x100901F0
		public override int GetHashCode(); // 0x100900A0-0x100900C0
		public static bool operator ==(ScreenshotHandle x, ScreenshotHandle y); // 0x1018AFC0-0x1018AFD0
		public static bool operator !=(ScreenshotHandle x, ScreenshotHandle y); // 0x1018B020-0x1018B070
		public static explicit operator ScreenshotHandle(uint value); // 0x1018AFD0-0x1018AFE0
		public static explicit operator uint(ScreenshotHandle that); // 0x1018AFD0-0x1018AFE0
		public bool Equals(ScreenshotHandle other); // 0x10090080-0x100900A0
		public int CompareTo(ScreenshotHandle other); // 0x1008FFF0-0x10090010
	}

	[CallbackIdentity] // 0x1000A110-0x1000A130
	public struct ScreenshotReady_t // TypeDefIndex: 4614
	{
		// Fields
		public const int k_iCallback = 2301; // Metadata: 0x0024239B
		public ScreenshotHandle m_hLocal; // 0x00
		public EResult m_eResult; // 0x04
	}

	[CallbackIdentity] // 0x1000A130-0x1000A150
	public struct ScreenshotRequested_t // TypeDefIndex: 4615
	{
		// Fields
		public const int k_iCallback = 2302; // Metadata: 0x0024239F
	}
}

public class Scroller : PassiveUiElement // TypeDefIndex: 5465
{
	// Fields
	public Transform Inner; // 0x10
	public bool allowX; // 0x14
	public FloatRange XBounds; // 0x18
	public bool allowY; // 0x1C
	public FloatRange YBounds; // 0x20
	public FloatRange ScrollerYRange; // 0x24
	public SpriteRenderer ScrollerY; // 0x28
	private Vector2 velocity; // 0x2C
	private bool active; // 0x34

	// Properties
	public override bool HandleUp { get; } // 0x101D2490-0x101D24A0 
	public override bool HandleDown { get; } // 0x101D2490-0x101D24A0 
	public override bool HandleDrag { get; } // 0x101D2490-0x101D24A0 
	public override bool HandleOverOut { get; } // 0x101A1190-0x101A1520 
	public bool AtTop { get; } // 0x10A2D850-0x10A2D8A0 
	public bool AtBottom { get; } // 0x10A2D7F0-0x10A2D850 
	public Collider2D Hitbox { get; } // 0x10A2D8A0-0x10A2D8D0 

	// Constructors
	public Scroller(); // 0x10A2D760-0x10A2D7F0

	// Methods
	public void FixedUpdate(); // 0x10A2CD30-0x10A2CDE0
	public void Update(); // 0x10A2D630-0x10A2D760
	public void ScrollDown(); // 0x10A2CF40-0x10A2D050
	public void ScrollUp(); // 0x10A2D3B0-0x10A2D4C0
	public float GetScrollPercY(); // 0x10A2CDE0-0x10A2CE70
	public void ScrollPercentY(float p); // 0x10A2D050-0x10A2D110
	public override void ReceiveClickDown(); // 0x10A2CE70-0x10A2CE80
	public override void ReceiveClickUp(); // 0x10A2CF30-0x10A2CF40
	public override void ReceiveClickDrag(Vector2 dragDelta); // 0x10A2CE80-0x10A2CF30
	public void ScrollRelative(Vector2 dragDelta); // 0x10A2D110-0x10A2D3B0
	private void UpdateScrollBars(Vector3 pos); // 0x10A2D4C0-0x10A2D630
}

public class SecurityCameraSystemType : ISystemType // TypeDefIndex: 5726
{
	// Fields
	public const byte IncrementOp = 1; // Metadata: 0x00243D25
	public const byte DecrementOp = 2; // Metadata: 0x00243D26
	private HashSet<byte> PlayersUsing; // 0x08

	// Properties
	public bool InUse { get; } // 0x10A2DCD0-0x10A2DD10 

	// Constructors
	public SecurityCameraSystemType(); // 0x10A2DC70-0x10A2DCD0

	// Methods
	public bool Detoriorate(float deltaTime); // 0x101A1190-0x101A1520
	public void RepairDamage(PlayerControl player, byte amount); // 0x10A2D980-0x10A2DA10
	private void UpdateCameras(); // 0x10A2DB70-0x10A2DC70
	public void Serialize(MessageWriter writer, bool initialState); // 0x10A2DA10-0x10A2DB70
	public void Deserialize(MessageReader reader, bool initialState); // 0x10A2D8D0-0x10A2D980
}

public class SecurityLogBehaviour : MonoBehaviour // TypeDefIndex: 5795
{
	// Fields
	public const byte ConsoleMask = 240; // Metadata: 0x00243D79
	public const byte PlayerMask = 15; // Metadata: 0x00243D7A
	public Color[] BarColors; // 0x0C
	public readonly List<SecurityLogEntry> LogEntries; // 0x10
	public bool HasNew; // 0x14

	// Nested types
	public enum SecurityLogLocations // TypeDefIndex: 5796
	{
		North = 0,
		Southeast = 1,
		Southwest = 2
	}

	public struct SecurityLogEntry // TypeDefIndex: 5797
	{
		// Fields
		public byte PlayerId; // 0x00
		public SecurityLogLocations Location; // 0x04

		// Constructors
		public SecurityLogEntry(byte playerId, SecurityLogLocations location); // 0x100DD190-0x100DD1B0
	}

	// Constructors
	public SecurityLogBehaviour(); // 0x10A2DDA0-0x10A2DF00

	// Methods
	public void LogPlayer(PlayerControl player, SecurityLogLocations location); // 0x10A2DD10-0x10A2DDA0
}

public class SecurityLogGame : Minigame // TypeDefIndex: 5356
{
	// Fields
	private SecurityLogBehaviour Logger; // 0x28
	public ObjectPoolBehavior EntryPool; // 0x2C
	public Scroller scroller; // 0x30
	public float ScreenHeight; // 0x34
	public float EntryHeight; // 0x38
	public Sprite[] LocationBgs; // 0x3C
	public TextRenderer SabText; // 0x40

	// Constructors
	public SecurityLogGame(); // 0x10A2E690-0x10A2E6C0

	// Methods
	public void Awake(); // 0x10A2DF00-0x10A2DFC0
	public void Update(); // 0x10A2E560-0x10A2E690
	private void RefreshScreen(); // 0x10A2DFC0-0x10A2E560
}

public class SecurityLogger : MonoBehaviour // TypeDefIndex: 5723
{
	// Fields
	private static Collider2D[] hits; // 0x00
	public SecurityLogBehaviour LogParent; // 0x0C
	public SecurityLogBehaviour.SecurityLogLocations MyLocation; // 0x10
	public float Cooldown; // 0x14
	public SpriteRenderer Image; // 0x18
	public BoxCollider2D Sensor; // 0x1C
	private float[] Timers; // 0x20
	private ContactFilter2D filter; // 0x24

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass9_0 // TypeDefIndex: 5724
	{
		// Fields
		public int i; // 0x08

		// Constructors
		public __c__DisplayClass9_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _FixedUpdate_b__0(PlayerControl p); // 0x10A41D70-0x10A41E20
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _BlinkSensor_d__10 : IEnumerator<object> // TypeDefIndex: 5725
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SecurityLogger __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _BlinkSensor_d__10(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A3E690-0x10A3E840
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A3E840-0x10A3E890
	}

	// Constructors
	public SecurityLogger(); // 0x10A2EAE0-0x10A2EB30
	static SecurityLogger(); // 0x10A2EAA0-0x10A2EAE0

	// Methods
	private void Awake(); // 0x10A2E6C0-0x10A2E740
	public void FixedUpdate(); // 0x10A2E790-0x10A2EAA0
	[IteratorStateMachine] // 0x10019200-0x10019250
	private IEnumerator BlinkSensor(); // 0x10A2E740-0x10A2E790
}

namespace Hazel
{
	[Flags] // 0x10002030-0x10002050
	public enum SendOption : byte // TypeDefIndex: 4179
	{
		None = 0,
		Reliable = 1
	}
}

public class SensorDoor : MonoBehaviour // TypeDefIndex: 5357
{
	// Fields
	public SpriteRenderer LeftSide; // 0x0C
	public SpriteRenderer RightSide; // 0x10
	public float ActivationDistance; // 0x14
	public bool Opening; // 0x18
	public float OpenDuration; // 0x1C
	private float openTimer; // 0x20
	public AudioClip OpenSound; // 0x24
	public AudioClip CloseSound; // 0x28

	// Constructors
	public SensorDoor(); // 0x10A2F110-0x10A2F130

	// Methods
	public void OnEnable(); // 0x10A2EEF0-0x10A2EF50
	[ContextMenu] // 0x10034880-0x100348B0
	public void SetUvs(); // 0x10A2EF50-0x10A2EF70
	private void Update(); // 0x10A2EF70-0x10A2F110
	private void CheckDoor(); // 0x10A2EB30-0x10A2EEF0
}

public class ServerInfo // TypeDefIndex: 5496
{
	// Fields
	public readonly string Name; // 0x08
	public readonly string Ip; // 0x0C
	public readonly ushort Port; // 0x10
	public int Players; // 0x14
	public int ConnectionFailures; // 0x18

	// Constructors
	public ServerInfo(string name, string ip, ushort port); // 0x10A2F4F0-0x10A2F540

	// Methods
	public void Serialize(BinaryWriter writer); // 0x10A2F3E0-0x10A2F4B0
	public static ServerInfo Deserialize(BinaryReader reader); // 0x10A2F130-0x10A2F250
	internal static ServerInfo Deserialize(MessageReader parts); // 0x10A2F250-0x10A2F350
	public override string ToString(); // 0x10A2F4B0-0x10A2F4F0
	public override int GetHashCode(); // 0x105D10C0-0x105D10F0
	public override bool Equals(object obj); // 0x10A2F350-0x10A2F3E0
}

public class ServerManager : DestroyableSingleton<ServerManager> // TypeDefIndex: 5498
{
	// Fields
	public static readonly RegionInfo[] DefaultRegions; // 0x00
	[CompilerGenerated] // 0x10002030-0x10002050
	private RegionInfo _CurrentRegion_k__BackingField; // 0x10
	[CompilerGenerated] // 0x10002030-0x10002050
	private ServerInfo _CurrentServer_k__BackingField; // 0x14
	private string serverInfoFile; // 0x18
	private UpdateState state; // 0x1C

	// Properties
	public RegionInfo CurrentRegion { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101BCD80-0x101BCD90 0x101BCF20-0x101BCF30
	public ServerInfo CurrentServer { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101ADCB0-0x101ADCC0 0x101BCF30-0x101BCF40
	private ServerInfo[] AvailableServers { get; } // 0x102F6850-0x102F6870 
	public string OnlineNetAddress { get; } // 0x103AC6F0-0x103AC710 

	// Nested types
	private enum UpdateState // TypeDefIndex: 5499
	{
		Connecting = 0,
		Failed = 1,
		Success = 2
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _HandleUpnp_d__17 : IEnumerator<object> // TypeDefIndex: 5500
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _HandleUpnp_d__17(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A3FF00-0x10A401A0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A401A0-0x10A401F0
	}

	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5501
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<ServerInfo, bool> __9__18_0; // 0x04
		public static Func<ServerInfo, int> __9__18_1; // 0x08
		public static Func<ServerInfo, int> __9__18_2; // 0x0C
		public static Func<Ping, bool> __9__19_0; // 0x10
		public static Func<Ping, bool> __9__19_1; // 0x14
		public static Func<ServerInfo, int> __9__25_1; // 0x18

		// Constructors
		static __c(); // 0x10A41E20-0x10A41E70
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _ReselectServer_b__18_0(ServerInfo s); // 0x10A41A70-0x10A41A90
		internal int _ReselectServer_b__18_1(ServerInfo s); // 0x104D0850-0x104D0870
		internal int _ReselectServer_b__18_2(ServerInfo s); // 0x10240D00-0x10240D20
		internal bool _ReselectRegion_b__19_0(Ping p); // 0x10A41A50-0x10A41A70
		internal bool _ReselectRegion_b__19_1(Ping p); // 0x10A41A50-0x10A41A70
		internal int _TrackServerFailure_b__25_1(ServerInfo s); // 0x10240D00-0x10240D20
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass19_0 // TypeDefIndex: 5502
	{
		// Fields
		public string bestIp; // 0x08

		// Constructors
		public __c__DisplayClass19_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _ReselectRegion_b__2(RegionInfo r); // 0x103DBC90-0x103DBCC0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass19_1 // TypeDefIndex: 5503
	{
		// Fields
		public Ping ping; // 0x08

		// Constructors
		public __c__DisplayClass19_1(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _ReselectRegion_b__3(RegionInfo r); // 0x10A41C50-0x10A41C90
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _ReselectRegion_d__19 : IEnumerator<object> // TypeDefIndex: 5504
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		private __c__DisplayClass19_0 __8__1; // 0x10
		public ServerManager __4__this; // 0x14
		private Ping[] _pings_5__2; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _ReselectRegion_d__19(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A407E0-0x10A40DA0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A40DA0-0x10A40DF0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _WaitForServers_d__20 : IEnumerator<object> // TypeDefIndex: 5505
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public ServerManager __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _WaitForServers_d__20(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A41F60-0x10A41FB0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A41FB0-0x10A42000
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass22_0 // TypeDefIndex: 5506
	{
		// Fields
		public ServerInfo existingServer; // 0x08

		// Constructors
		public __c__DisplayClass22_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _SetServers_b__0(ServerInfo s); // 0x10A41C90-0x10A41CD0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass25_0 // TypeDefIndex: 5507
	{
		// Fields
		public string networkAddress; // 0x08
		public ServerInfo srv; // 0x0C

		// Constructors
		public __c__DisplayClass25_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _TrackServerFailure_b__0(ServerInfo s); // 0x103DBC90-0x103DBCC0
		internal bool _TrackServerFailure_b__2(ServerInfo s); // 0x10A41CD0-0x10A41D00
	}

	// Constructors
	public ServerManager(); // 0x10A30A30-0x10A30A70
	static ServerManager(); // 0x10A30530-0x10A30A30

	// Methods
	public override void Awake(); // 0x10A2F540-0x10A2F7A0
	[IteratorStateMachine] // 0x10044E30-0x10044E80
	private IEnumerator HandleUpnp(); // 0x10A2F7A0-0x10A2F7F0
	[ContextMenu] // 0x10046060-0x10046090
	internal void ReselectServer(); // 0x10A2FB70-0x10A2FE70
	[IteratorStateMachine] // 0x100461D0-0x10046220
	public IEnumerator ReselectRegion(); // 0x10A2FB20-0x10A2FB70
	[IteratorStateMachine] // 0x10046270-0x100462C0
	public IEnumerator WaitForServers(); // 0x10A304E0-0x10A30530
	internal void SetRegion(RegionInfo region); // 0x10A300D0-0x10A30100
	internal void SetServers(ServerInfo[] servers); // 0x10A30100-0x10A302F0
	public void SaveServers(); // 0x10A2FE70-0x10A300D0
	private void LoadServers(); // 0x10A2F7F0-0x10A2FB20
	internal bool TrackServerFailure(string networkAddress); // 0x10A302F0-0x10A304E0
}

namespace Steamworks
{
	[Serializable]
	public struct servernetadr_t // TypeDefIndex: 4789
	{
		// Fields
		private ushort m_usConnectionPort; // 0x00
		private ushort m_usQueryPort; // 0x02
		private uint m_unIP; // 0x04
	
		// Methods
		public void Init(uint ip, ushort usQueryPort, ushort usConnectionPort); // 0x100D1CE0-0x100D1D00
		public ushort GetQueryPort(); // 0x100D1CD0-0x100D1CE0
		public void SetQueryPort(ushort usPort); // 0x100D1D00-0x100D5790
		public ushort GetConnectionPort(); // 0x100A6D10-0x100A6D20
		public void SetConnectionPort(ushort usPort); // 0x100918C0-0x10091CE0
		public uint GetIP(); // 0x10093000-0x10093010
		public void SetIP(uint unIP); // 0x100BE230-0x100BE360
		public string GetConnectionAddressString(); // 0x100D1C50-0x100D1C70
		public string GetQueryAddressString(); // 0x100D1CB0-0x100D1CD0
		public static string ToString(uint unIP, ushort usPort); // 0x107250E0-0x10725330
		public static bool operator <(servernetadr_t x, servernetadr_t y); // 0x107253C0-0x107253F0
		public static bool operator >(servernetadr_t x, servernetadr_t y); // 0x10725360-0x10725390
		public override bool Equals(object other); // 0x100D1BB0-0x100D1C50
		public override int GetHashCode(); // 0x100D1C70-0x100D1CB0
		public static bool operator ==(servernetadr_t x, servernetadr_t y); // 0x10725330-0x10725360
		public static bool operator !=(servernetadr_t x, servernetadr_t y); // 0x10725390-0x107253C0
		public bool Equals(servernetadr_t other); // 0x100D1B80-0x100D1BB0
		public int CompareTo(servernetadr_t other); // 0x100D1B30-0x100D1B80
	}
}

namespace GoogleMobileAds.Api
{
	public class ServerSideVerificationOptions // TypeDefIndex: 5983
	{
		// Fields
		[CompilerGenerated] // 0x10002030-0x10002050
		private string _UserId_k__BackingField; // 0x08
		[CompilerGenerated] // 0x10002030-0x10002050
		private string _CustomData_k__BackingField; // 0x0C
	
		// Properties
		public string UserId { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101B4FF0-0x101B5000 0x101D22D0-0x101D22E0
		public string CustomData { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101AE200-0x101AE210 0x101AEE90-0x101AEEA0
	
		// Nested types
		public class Builder // TypeDefIndex: 5984
		{
			// Fields
			[CompilerGenerated] // 0x10002030-0x10002050
			private string _UserId_k__BackingField; // 0x08
			[CompilerGenerated] // 0x10002030-0x10002050
			private string _CustomData_k__BackingField; // 0x0C
	
			// Properties
			internal string UserId { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101B4FF0-0x101B5000 0x101D22D0-0x101D22E0
			internal string CustomData { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101AE200-0x101AE210 0x101AEE90-0x101AEEA0
	
			// Constructors
			public Builder(); // 0x101A2CD0-0x101A2CE0
	
			// Methods
			public Builder SetUserId(string userId); // 0x101D22D0-0x101D22E0
			public Builder SetCustomData(string customData); // 0x101AEE90-0x101AEEA0
			public ServerSideVerificationOptions Build(); // 0x10271520-0x10271580
		}
	
		// Constructors
		private ServerSideVerificationOptions(Builder builder); // 0x10283E40-0x10283E70
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x10003960-0x10003980
	public struct SetPersonaNameResponse_t // TypeDefIndex: 4507
	{
		// Fields
		public const int k_iCallback = 347; // Metadata: 0x002421EF
		public bool m_bSuccess; // 0x00
		public bool m_bLocalSuccess; // 0x01
		public EResult m_result; // 0x04
	}
}

public enum SettingsMode // TypeDefIndex: 5733
{
	Host = 0,
	Search = 1
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000A320-0x1000A340
	public struct SetUserItemVoteResult_t // TypeDefIndex: 4623
	{
		// Fields
		public const int k_iCallback = 3408; // Metadata: 0x002423BF
		public PublishedFileId_t m_nPublishedFileId; // 0x00
		public EResult m_eResult; // 0x08
		public bool m_bVoteUp; // 0x0C
	}
}

public class ShadowCamera : MonoBehaviour // TypeDefIndex: 5755
{
	// Fields
	public Shader Shadozer; // 0x0C

	// Constructors
	public ShadowCamera(); // 0x101A68C0-0x101A68D0

	// Methods
	public void OnEnable(); // 0x10A30AC0-0x10A30B20
	public void OnDisable(); // 0x10A30A70-0x10A30AC0
}

public class ShadowCollab : MonoBehaviour // TypeDefIndex: 5748
{
	// Fields
	public Camera ShadowCamera; // 0x0C
	public MeshRenderer ShadowQuad; // 0x10
	private float oldAspect; // 0x14

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Run_d__4 : IEnumerator<object> // TypeDefIndex: 5749
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public ShadowCollab __4__this; // 0x10
		private Camera _cam_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Run_d__4(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A414C0-0x10A416A0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A416F0-0x10A41740
	}

	// Constructors
	public ShadowCollab(); // 0x101A68C0-0x101A68D0

	// Methods
	public void OnEnable(); // 0x10A30B20-0x10A30B80
	[IteratorStateMachine] // 0x10019E00-0x10019E50
	private IEnumerator Run(); // 0x10A30B80-0x10A30BD0
}

public class ShhhBehaviour : MonoBehaviour // TypeDefIndex: 5475
{
	// Fields
	public SpriteRenderer Background; // 0x0C
	public SpriteRenderer Body; // 0x10
	public SpriteRenderer Hand; // 0x14
	public SpriteRenderer TextImage; // 0x18
	public float RotateSpeed; // 0x1C
	public Vector2Range HandTarget; // 0x20
	public AnimationCurve PositionEasing; // 0x30
	public FloatRange HandRotate; // 0x34
	public AnimationCurve RotationEasing; // 0x38
	public Vector2Range TextTarget; // 0x3C
	public AnimationCurve TextEasing; // 0x4C
	public float Duration; // 0x50
	public float Delay; // 0x54
	public float TextDuration; // 0x58
	public float PulseDuration; // 0x5C
	public float PulseSize; // 0x60
	public float HoldDuration; // 0x64
	public bool Autoplay; // 0x68

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _PlayAnimation_d__19 : IEnumerator<object> // TypeDefIndex: 5476
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public ShhhBehaviour __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _PlayAnimation_d__19(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A401F0-0x10A40340
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A40340-0x10A40390
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _AnimateText_d__21 : IEnumerator<object> // TypeDefIndex: 5477
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public ShhhBehaviour __4__this; // 0x10
		private Vector3 _vec_5__2; // 0x14
		private float _t_5__3; // 0x20

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _AnimateText_d__21(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A3E310-0x10A3E640
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A3E640-0x10A3E690
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _AnimateHand_d__22 : IEnumerator<object> // TypeDefIndex: 5478
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public ShhhBehaviour __4__this; // 0x10
		private Vector3 _vec_5__2; // 0x14
		private float _t_5__3; // 0x20

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _AnimateHand_d__22(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A3E150-0x10A3E2C0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A3E2C0-0x10A3E310
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _WaitWithInterrupt_d__25 : IEnumerator<object> // TypeDefIndex: 5479
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public float duration; // 0x10
		private float _timer_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _WaitWithInterrupt_d__25(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A42000-0x10A42080
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A42080-0x10A42080
	}

	// Constructors
	public ShhhBehaviour(); // 0x10A31070-0x10A310C0

	// Methods
	public void OnEnable(); // 0x10A30C80-0x10A30DB0
	[IteratorStateMachine] // 0x10042BC0-0x10042C10
	public IEnumerator PlayAnimation(); // 0x10A30DB0-0x10A30E00
	public void Update(); // 0x10A30FB0-0x10A31020
	[IteratorStateMachine] // 0x10042CE0-0x10042D30
	private IEnumerator AnimateText(); // 0x10A30C20-0x10A30C70
	[IteratorStateMachine] // 0x10042DB0-0x10042E00
	private IEnumerator AnimateHand(); // 0x10A30BD0-0x10A30C20
	private void UpdateHand(ref Vector3 vec, float p); // 0x10A30E00-0x10A30F40
	private void UpdateText(ref Vector3 vec, float p); // 0x10A30F40-0x10A30FB0
	[IteratorStateMachine] // 0x10042EC0-0x10042F10
	public static IEnumerator WaitWithInterrupt(float duration); // 0x10A31020-0x10A31070
	public static bool CheckForInterrupt(); // 0x10A30C70-0x10A30C80
}

public class ShieldMinigame : Minigame // TypeDefIndex: 5756
{
	// Fields
	public Color OnColor; // 0x28
	public Color OffColor; // 0x38
	public SpriteRenderer[] Shields; // 0x48
	public SpriteRenderer Gauge; // 0x4C
	private byte shields; // 0x50
	public AudioClip ShieldOnSound; // 0x54
	public AudioClip ShieldOffSound; // 0x58

	// Constructors
	public ShieldMinigame(); // 0x10A315A0-0x10A315E0

	// Methods
	public override void Begin(PlayerTask task); // 0x10A310C0-0x10A31110
	public void ToggleShield(int i); // 0x10A31120-0x10A31380
	public void FixedUpdate(); // 0x10A31110-0x10A31120
	private void UpdateButtons(); // 0x10A31380-0x10A315A0
}

public class ShipStatus : InnerNetObject // TypeDefIndex: 5798
{
	// Fields
	public static ShipStatus Instance; // 0x00
	public Color CameraColor; // 0x24
	public float MaxLightRadius; // 0x34
	public float MinLightRadius; // 0x38
	public float MapScale; // 0x3C
	public MapBehaviour MapPrefab; // 0x40
	public ExileController ExileCutscenePrefab; // 0x44
	public Vector2 InitialSpawnCenter; // 0x48
	public Vector2 MeetingSpawnCenter; // 0x50
	public Vector2 MeetingSpawnCenter2; // 0x58
	public float SpawnRadius; // 0x60
	public NormalPlayerTask[] CommonTasks; // 0x64
	public NormalPlayerTask[] LongTasks; // 0x68
	public NormalPlayerTask[] NormalTasks; // 0x6C
	public PlayerTask[] SpecialTasks; // 0x70
	public Transform[] DummyLocations; // 0x74
	public SurvCamera[] AllCameras; // 0x78
	public PlainDoor[] AllDoors; // 0x7C
	public Console[] AllConsoles; // 0x80
	public Dictionary<SystemTypes, ISystemType> Systems; // 0x84
	[CompilerGenerated] // 0x10002030-0x10002050
	private IStepWatcher[] _AllStepWatchers_k__BackingField; // 0x88
	[CompilerGenerated] // 0x10002030-0x10002050
	private PlainShipRoom[] _AllRooms_k__BackingField; // 0x8C
	[CompilerGenerated] // 0x10002030-0x10002050
	private Dictionary<SystemTypes, PlainShipRoom> _FastRooms_k__BackingField; // 0x90
	[CompilerGenerated] // 0x10002030-0x10002050
	private Vent[] _AllVents_k__BackingField; // 0x94
	public AnimationClip[] WeaponFires; // 0x98
	public SpriteAnim WeaponsImage; // 0x9C
	public AudioClip[] VentMoveSounds; // 0xA0
	public AudioClip VentEnterSound; // 0xA4
	public AnimationClip HatchActive; // 0xA8
	public SpriteAnim Hatch; // 0xAC
	public ParticleSystem HatchParticles; // 0xB0
	public AnimationClip ShieldsActive; // 0xB4
	public SpriteAnim[] ShieldsImages; // 0xB8
	public SpriteRenderer ShieldBorder; // 0xBC
	public Sprite ShieldBorderOn; // 0xC0
	public MedScannerBehaviour MedScanner; // 0xC4
	private int WeaponFireIdx; // 0xC8
	public float Timer; // 0xCC
	public float EmergencyCooldown; // 0xD0
	public MapType Type; // 0xD4

	// Properties
	public IStepWatcher[] AllStepWatchers { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x10A34920-0x10A34930 0x10A34930-0x10A34950
	public PlainShipRoom[] AllRooms { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x102F4CE0-0x102F4CF0 0x102F4830-0x102F4850
	public Dictionary<SystemTypes, PlainShipRoom> FastRooms { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x102F3700-0x102F3710 0x10A34950-0x10A34970
	public Vent[] AllVents { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x105785E0-0x105785F0 0x105786E0-0x10578700

	// Nested types
	public enum MapType // TypeDefIndex: 5799
	{
		Ship = 0,
		Hq = 1,
		Pb = 2
	}

	public class SystemTypeComparer : IEqualityComparer<SystemTypes> // TypeDefIndex: 5800
	{
		// Fields
		public static readonly SystemTypeComparer Instance; // 0x00

		// Constructors
		public SystemTypeComparer(); // 0x101A2CD0-0x101A2CE0
		static SystemTypeComparer(); // 0x10A3E100-0x10A3E150

		// Methods
		public bool Equals(SystemTypes x, SystemTypes y); // 0x104FED90-0x104FEDA0
		public int GetHashCode(SystemTypes obj); // 0x10218460-0x10218470
	}

	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5801
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<ISystemType, bool> __9__56_0; // 0x04
		public static Func<IStepWatcher, int> __9__57_0; // 0x08
		public static Func<PlainShipRoom, bool> __9__57_1; // 0x0C
		public static Func<PlainShipRoom, SystemTypes> __9__57_2; // 0x10
		public static Func<GameData.PlayerInfo, bool> __9__67_0; // 0x14
		public static Func<GameData.PlayerInfo, bool> __9__67_1; // 0x18
		public static Func<PlayerTask, bool> __9__75_0; // 0x1C
		public static Action<DeadBody> __9__79_0; // 0x20
		public static Func<PlayerTask, bool> __9__80_0; // 0x24

		// Constructors
		static __c(); // 0x10A41E70-0x10A41EC0
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _OnEnable_b__56_0(ISystemType i); // 0x10A41A10-0x10A41A50
		internal int _Awake_b__57_0(IStepWatcher s); // 0x10A41900-0x10A419A0
		internal bool _Awake_b__57_1(PlainShipRoom p); // 0x10A419A0-0x10A419C0
		internal SystemTypes _Awake_b__57_2(PlainShipRoom d); // 0x10A419C0-0x10A419E0
		internal bool _SelectInfected_b__67_0(GameData.PlayerInfo pcd); // 0x101D0EB0-0x101D0ED0
		internal bool _SelectInfected_b__67_1(GameData.PlayerInfo pc); // 0x10A41B00-0x10A41B20
		internal bool _CheckEndCriteria_b__75_0(PlayerTask t); // 0x10A419E0-0x10A41A10
		internal void _ReviveEveryone_b__79_0(DeadBody b); // 0x10A41A90-0x10A41B00
		internal bool _CheckTaskCompletion_b__80_0(PlayerTask t); // 0x10A419E0-0x10A41A10
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass63_0 // TypeDefIndex: 5802
	{
		// Fields
		public byte idx; // 0x08

		// Constructors
		public __c__DisplayClass63_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _GetTaskById_b__0(NormalPlayerTask t); // 0x10A41D00-0x10A41D20
		internal bool _GetTaskById_b__1(NormalPlayerTask t); // 0x10A41D00-0x10A41D20
		internal bool _GetTaskById_b__2(NormalPlayerTask t); // 0x10A41D00-0x10A41D20
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass70_0 // TypeDefIndex: 5803
	{
		// Fields
		public HashSet<TaskTypes> usedTaskTypes; // 0x08
		public Func<NormalPlayerTask, bool> __9__0; // 0x0C

		// Constructors
		public __c__DisplayClass70_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _AddTasksFromList_b__0(NormalPlayerTask t); // 0x10A41D20-0x10A41D70
	}

	// Constructors
	public ShipStatus(); // 0x10A348D0-0x10A34920

	// Methods
	public void RpcCloseDoorsOfType(SystemTypes type); // 0x10A33F00-0x10A33FB0
	public void RpcRepairSystem(SystemTypes systemType, int amount); // 0x10A34030-0x10A34160
	public override void HandleRpc(byte callId, MessageReader reader); // 0x10A33320-0x10A333C0
	private void OnEnable(); // 0x10A335C0-0x10A33BA0
	private void Awake(); // 0x10A318A0-0x10A31B20
	public void Start(); // 0x10A34780-0x10A348D0
	public override void OnDestroy(); // 0x10A334F0-0x10A335C0
	public Vector2 GetSpawnLocation(int playerId, int numPlayer, bool initialSpawn); // 0x10A32FC0-0x10A33220
	public void StartShields(); // 0x10A346E0-0x10A34780
	public void FireWeapon(); // 0x10A32C30-0x10A32D10
	public NormalPlayerTask GetTaskById(byte idx); // 0x10A33220-0x10A33320
	public void OpenHatch(); // 0x10A33BA0-0x10A33C60
	public void CloseDoorsOfType(SystemTypes room); // 0x10A32850-0x10A32950
	public void RepairSystem(SystemTypes systemType, PlayerControl player, byte amount); // 0x10A33C60-0x10A33D50
	internal void SelectInfected(); // 0x10A34160-0x10A344C0
	private void AssignTaskIndexes(); // 0x10A317A0-0x10A318A0
	public void Begin(); // 0x10A31B20-0x10A31F20
	private void AddTasksFromList(ref int start, int count, List<byte> tasks, HashSet<TaskTypes> usedTaskTypes, List<NormalPlayerTask> unusedTasks); // 0x10A315E0-0x10A317A0
	public void FixedUpdate(); // 0x10A32D10-0x10A32FC0
	public float CalculateLightRadius(GameData.PlayerInfo player); // 0x10A31F20-0x10A320A0
	public override bool Serialize(MessageWriter writer, bool initialState); // 0x10A344C0-0x10A346E0
	public override void Deserialize(MessageReader reader, bool initialState); // 0x10A32950-0x10A32B50
	private void CheckEndCriteria(); // 0x10A320A0-0x10A32660
	private void EndGameForSabotage(); // 0x10A32B50-0x10A32C30
	public bool IsGameOverDueToDeath(); // 0x10A333C0-0x10A334F0
	private static void RpcEndGame(GameOverReason endReason, bool showAd); // 0x10A33FB0-0x10A34030
	private static void ReviveEveryone(); // 0x10A33D50-0x10A33F00
	public bool CheckTaskCompletion(); // 0x10A32660-0x10A32850
}

public enum ShowAdsState : byte // TypeDefIndex: 5717
{
	Personalized = 0,
	NonPersonalized = 1,
	Accepted = 128,
	Purchased = 130
}

public class SimonSaysGame : Minigame // TypeDefIndex: 5709
{
	// Fields
	private Queue<int> operations; // 0x28
	private const int FlashOp = 256; // Metadata: 0x00243D05
	private const int AnimateOp = 128; // Metadata: 0x00243D09
	private const int ReAnimateOp = 32; // Metadata: 0x00243D0D
	private const int FailOp = 64; // Metadata: 0x00243D11
	private Color gray; // 0x2C
	private Color blue; // 0x3C
	private Color red; // 0x4C
	private Color green; // 0x5C
	public SpriteRenderer[] LeftSide; // 0x6C
	public SpriteRenderer[] Buttons; // 0x70
	public SpriteRenderer[] LeftLights; // 0x74
	public SpriteRenderer[] RightLights; // 0x78
	private float flashTime; // 0x7C
	private float userButtonFlashTime; // 0x80
	public AudioClip ButtonPressSound; // 0x84
	public AudioClip FailSound; // 0x88

	// Properties
	private int IndexCount { get; set; } // 0x10A35210-0x10A35250 0x101C6160-0x101C61A0
	private byte this[int idx] { get => default; set {} } // 0x10A35250-0x10A35290 0x10A35290-0x10A352D0

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoRun_d__25 : IEnumerator<object> // TypeDefIndex: 5710
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SimonSaysGame __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoRun_d__25(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A3EE70-0x10A3F2B0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A3F2B0-0x10A3F300
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoAnimateNewLeftSide_d__27 : IEnumerator<object> // TypeDefIndex: 5711
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SimonSaysGame __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoAnimateNewLeftSide_d__27(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A3E890-0x10A3EA80
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A3EA80-0x10A3EAD0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoAnimateOldLeftSide_d__28 : IEnumerator<object> // TypeDefIndex: 5712
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SimonSaysGame __4__this; // 0x10
		private int _i_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoAnimateOldLeftSide_d__28(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A3EAD0-0x10A3ECF0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A3ECF0-0x10A3ED40
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _FlashButton_d__29 : IEnumerator<object> // TypeDefIndex: 5713
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public int id; // 0x10
		public SimonSaysGame __4__this; // 0x14
		public SpriteRenderer butt; // 0x18
		public float flashTime; // 0x1C
		private Color _c_5__2; // 0x20

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _FlashButton_d__29(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A3FCA0-0x10A3FEB0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A3FEB0-0x10A3FF00
	}

	// Constructors
	public SimonSaysGame(); // 0x10A350E0-0x10A35210

	// Methods
	public override void Begin(PlayerTask task); // 0x10A34A00-0x10A34B70
	public void HitButton(int bIdx); // 0x10A34CD0-0x10A34FA0
	[IteratorStateMachine] // 0x10018910-0x10018960
	private IEnumerator CoRun(); // 0x10A34C10-0x10A34C60
	private void AddIndex(int idxToAdd); // 0x10A34970-0x10A34A00
	[IteratorStateMachine] // 0x100189C0-0x10018A10
	private IEnumerator CoAnimateNewLeftSide(); // 0x10A34B70-0x10A34BC0
	[IteratorStateMachine] // 0x10018A40-0x10018A90
	private IEnumerator CoAnimateOldLeftSide(); // 0x10A34BC0-0x10A34C10
	[IteratorStateMachine] // 0x10018AE0-0x10018B30
	private IEnumerator FlashButton(int id, SpriteRenderer butt, float flashTime); // 0x10A34C60-0x10A34CD0
	private void SetLights(SpriteRenderer[] lights, int num); // 0x10A35080-0x10A350E0
	private void SetAllColor(Color color); // 0x10A34FA0-0x10A35080
}

public class SinglePopHelp : MonoBehaviour // TypeDefIndex: 5812
{
	// Constructors
	public SinglePopHelp(); // 0x101A68C0-0x101A68D0
}

namespace Steamworks
{
	[Serializable]
	public struct SiteId_t : IEquatable<SiteId_t>, IComparable<SiteId_t> // TypeDefIndex: 4823
	{
		// Fields
		public static readonly SiteId_t Invalid; // 0x00
		public ulong m_SiteId; // 0x00
	
		// Constructors
		public SiteId_t(ulong value); // 0x10073670-0x10073690
		static SiteId_t(); // 0x1018B7F0-0x1018B840
	
		// Methods
		public override string ToString(); // 0x10073650-0x10073670
		public override bool Equals(object other); // 0x100901F0-0x10090290
		public override int GetHashCode(); // 0x10073630-0x10073650
		public static bool operator ==(SiteId_t x, SiteId_t y); // 0x10187800-0x10187820
		public static bool operator !=(SiteId_t x, SiteId_t y); // 0x1018B840-0x1018B8A0
		public static explicit operator SiteId_t(ulong value); // 0x10187820-0x10187830
		public static explicit operator ulong(SiteId_t that); // 0x10187820-0x10187830
		public bool Equals(SiteId_t other); // 0x10073610-0x10073630
		public int CompareTo(SiteId_t other); // 0x10073550-0x10073570
	}
}

public class SkeldShipRoom : PlainShipRoom, IStepWatcher // TypeDefIndex: 5804
{
	// Fields
	public AudioClip AmbientSound; // 0x18
	public float AmbientVolume; // 0x1C
	public float AmbientMaxDist; // 0x20
	public Vector2 AmbientOffset; // 0x24
	[CompilerGenerated] // 0x10002030-0x10002050
	private readonly int _Priority_k__BackingField; // 0x2C
	public SoundGroup FootStepSounds; // 0x30
	private RaycastHit2D[] volumeBuffer; // 0x34

	// Properties
	public int Priority { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x101F0010-0x101F0020 

	// Constructors
	public SkeldShipRoom(); // 0x10A35800-0x10A35860

	// Methods
	public void Start(); // 0x10A356B0-0x10A357E0
	public SoundGroup MakeFootstep(PlayerControl player); // 0x10A355E0-0x10A356B0
	private void GetAmbientSoundVolume(AudioSource player, float dt); // 0x10A352D0-0x10A355E0
	[CompilerGenerated] // 0x10002030-0x10002050
	private void _Start_b__8_0(AudioSource player, float dt); // 0x10A357E0-0x10A35800
}

[CreateAssetMenu] // 0x10002030-0x10002050
public class SkinData : ScriptableObject, IBuyable // TypeDefIndex: 5699
{
	// Fields
	public Sprite IdleFrame; // 0x0C
	public AnimationClip IdleAnim; // 0x10
	public AnimationClip RunAnim; // 0x14
	public AnimationClip EnterVentAnim; // 0x18
	public AnimationClip ExitVentAnim; // 0x1C
	public AnimationClip KillTongueImpostor; // 0x20
	public AnimationClip KillTongueVictim; // 0x24
	public AnimationClip KillShootImpostor; // 0x28
	public AnimationClip KillShootVictim; // 0x2C
	public AnimationClip KillStabVictim; // 0x30
	public AnimationClip KillNeckVictim; // 0x34
	public Sprite EjectFrame; // 0x38
	public AnimationClip SpawnAnim; // 0x3C
	public bool NotInStore; // 0x40
	public bool Free; // 0x41
	public HatBehaviour RelatedHat; // 0x44
	public string StoreName; // 0x48
	public int Order; // 0x4C

	// Properties
	public string ProdId { get; } // 0x10A35860-0x10A358D0 

	// Constructors
	public SkinData(); // 0x101ADCA0-0x101ADCB0
}

public class SkinLayer : MonoBehaviour // TypeDefIndex: 5700
{
	// Fields
	public SpriteRenderer layer; // 0x0C
	public SpriteAnim animator; // 0x10
	public SkinData skin; // 0x14

	// Properties
	public bool Flipped { set; } // 0x10A35F10-0x10A35F40
	public bool Visible { set; } // 0x10A35F40-0x10A35F70

	// Constructors
	public SkinLayer(); // 0x101A68C0-0x101A68D0

	// Methods
	public void SetRun(); // 0x10A35C10-0x10A35D00
	public void SetSpawn(float time = 0f /* Metadata: 0x00243CE6 */); // 0x10A35E30-0x10A35F10
	public void SetExitVent(); // 0x10A359B0-0x10A35A90
	public void SetEnterVent(); // 0x10A358D0-0x10A359B0
	public void SetIdle(); // 0x10A35B20-0x10A35C10
	public void SetGhost(); // 0x10A35A90-0x10A35B20
	internal void SetSkin(uint skinId); // 0x10A35D00-0x10A35E30
}

public class SkinsTab : MonoBehaviour // TypeDefIndex: 5571
{
	// Fields
	public ColorChip ColorTabPrefab; // 0x0C
	public SpriteRenderer DemoImage; // 0x10
	public HatParent HatImage; // 0x14
	public SpriteRenderer SkinImage; // 0x18
	public SpriteRenderer PetImage; // 0x1C
	public FloatRange XRange; // 0x20
	public float YStart; // 0x24
	public float YOffset; // 0x28
	public int NumPerRow; // 0x2C
	public Scroller scroller; // 0x30
	private List<ColorChip> ColorChips; // 0x34

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass11_0 // TypeDefIndex: 5572
	{
		// Fields
		public SkinData skin; // 0x08
		public SkinsTab __4__this; // 0x0C

		// Constructors
		public __c__DisplayClass11_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _OnEnable_b__0(); // 0x10A41B20-0x10A41C50
	}

	// Constructors
	public SkinsTab(); // 0x10A36720-0x10A367C0

	// Methods
	public void OnEnable(); // 0x10A36040-0x10A36440
	public void OnDisable(); // 0x10A35F70-0x10A36040
	public void Update(); // 0x10A36570-0x10A36720
	private void SelectHat(SkinData skin); // 0x10A36440-0x10A36570
}

namespace Discord
{
	public struct Sku // TypeDefIndex: 4892
	{
		// Fields
		public long Id; // 0x00
		public SkuType Type; // 0x08
		public string Name; // 0x0C
		public SkuPrice Price; // 0x10
	}

	public struct SkuPrice // TypeDefIndex: 4891
	{
		// Fields
		public uint Amount; // 0x00
		public string Currency; // 0x04
	}

	public enum SkuType // TypeDefIndex: 4874
	{
		Application = 1,
		DLC = 2,
		Consumable = 3,
		Bundle = 4
	}
}

public class SlideBar : PassiveUiElement // TypeDefIndex: 5813
{
	// Fields
	public TextRenderer Title; // 0x10
	public SpriteRenderer Bar; // 0x14
	public SpriteRenderer Dot; // 0x18
	public FloatRange Range; // 0x1C
	public bool Vertical; // 0x20
	public float Value; // 0x24
	public UnityEvent OnValueChange; // 0x28

	// Properties
	public override bool HandleDrag { get; } // 0x101D2490-0x101D24A0 

	// Constructors
	public SlideBar(); // 0x101ACA10-0x101ACA20

	// Methods
	public void OnEnable(); // 0x10A368D0-0x10A369F0
	public void OnDisable(); // 0x10A367C0-0x10A368D0
	public override void ReceiveClickDrag(Vector2 dragDelta); // 0x10A369F0-0x10A36BB0
	public void UpdateValue(); // 0x10A36BB0-0x10A36C70
}

namespace Steamworks
{
	[Serializable]
	public struct SNetListenSocket_t : IEquatable<SNetListenSocket_t>, IComparable<SNetListenSocket_t> // TypeDefIndex: 4812
	{
		// Fields
		public uint m_SNetListenSocket; // 0x00
	
		// Constructors
		public SNetListenSocket_t(uint value); // 0x100900E0-0x100900F0
	
		// Methods
		public override string ToString(); // 0x100900C0-0x100900E0
		public override bool Equals(object other); // 0x10090010-0x10090080
		public override int GetHashCode(); // 0x100900A0-0x100900C0
		public static bool operator ==(SNetListenSocket_t x, SNetListenSocket_t y); // 0x1018AFC0-0x1018AFD0
		public static bool operator !=(SNetListenSocket_t x, SNetListenSocket_t y); // 0x1018AFE0-0x1018AFF0
		public static explicit operator SNetListenSocket_t(uint value); // 0x1018AFD0-0x1018AFE0
		public static explicit operator uint(SNetListenSocket_t that); // 0x1018AFD0-0x1018AFE0
		public bool Equals(SNetListenSocket_t other); // 0x10090080-0x100900A0
		public int CompareTo(SNetListenSocket_t other); // 0x1008FFF0-0x10090010
	}

	[Serializable]
	public struct SNetSocket_t : IEquatable<SNetSocket_t>, IComparable<SNetSocket_t> // TypeDefIndex: 4813
	{
		// Fields
		public uint m_SNetSocket; // 0x00
	
		// Constructors
		public SNetSocket_t(uint value); // 0x100900E0-0x100900F0
	
		// Methods
		public override string ToString(); // 0x100900C0-0x100900E0
		public override bool Equals(object other); // 0x100900F0-0x10090160
		public override int GetHashCode(); // 0x100900A0-0x100900C0
		public static bool operator ==(SNetSocket_t x, SNetSocket_t y); // 0x1018AFC0-0x1018AFD0
		public static bool operator !=(SNetSocket_t x, SNetSocket_t y); // 0x1018AFE0-0x1018AFF0
		public static explicit operator SNetSocket_t(uint value); // 0x1018AFD0-0x1018AFE0
		public static explicit operator uint(SNetSocket_t that); // 0x1018AFD0-0x1018AFE0
		public bool Equals(SNetSocket_t other); // 0x10090080-0x100900A0
		public int CompareTo(SNetSocket_t other); // 0x1008FFF0-0x10090010
	}
}

public class SnowAttacher : MonoBehaviour // TypeDefIndex: 5625
{
	// Fields
	public GameObject SnowPrefab; // 0x0C

	// Constructors
	public SnowAttacher(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Start(); // 0x10A36C70-0x10A36D70
}

public class SnowManager : MonoBehaviour // TypeDefIndex: 5626
{
	// Fields
	public ParticleSystem particles; // 0x0C
	private ParticleSystemRenderer rend; // 0x10
	private float timer; // 0x14

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Run_d__4 : IEnumerator<object> // TypeDefIndex: 5627
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SnowManager __4__this; // 0x10
		private ContactFilter2D _filter_5__2; // 0x14
		private Collider2D[] _buffer_5__3; // 0x30
		private WaitForSeconds _wait_5__4; // 0x34

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Run_d__4(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A41130-0x10A414C0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A416A0-0x10A416F0
	}

	// Constructors
	public SnowManager(); // 0x101A68C0-0x101A68D0

	// Methods
	private void Start(); // 0x10A36E60-0x10A36EF0
	[IteratorStateMachine] // 0x1000AD10-0x1000AD60
	private IEnumerator Run(); // 0x10A36D70-0x10A36DC0
	private void SetPartAlpha(); // 0x10A36DC0-0x10A36E60
}

namespace Steamworks
{
	[CallbackIdentity] // 0x10008610-0x10008630
	public struct SocketStatusCallback_t // TypeDefIndex: 4584
	{
		// Fields
		public const int k_iCallback = 1201; // Metadata: 0x00242323
		public SNetSocket_t m_hSocket; // 0x00
		public SNetListenSocket_t m_hListenSocket; // 0x04
		public CSteamID m_steamIDRemote; // 0x08
		public int m_eSNetSocketState; // 0x10
	}
}

public abstract class SomeKindaDoor : MonoBehaviour // TypeDefIndex: 5765
{
	// Constructors
	protected SomeKindaDoor(); // 0x101A68C0-0x101A68D0

	// Methods
	public abstract void SetDoorway(bool open);
}

public class SortGameObject : MonoBehaviour // TypeDefIndex: 5512
{
	// Fields
	public ObjType MyType; // 0x0C
	public Collider2D Collider; // 0x10
	public SpriteRenderer Image; // 0x14
	public SpriteRenderer Shadow; // 0x18
	private const float ShadowTime = 0.15f; // Metadata: 0x00243C0D

	// Nested types
	public enum ObjType // TypeDefIndex: 5513
	{
		Plant = 0,
		Mineral = 1,
		Animal = 2
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoShadowRise_d__6 : IEnumerator<object> // TypeDefIndex: 5514
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SortGameObject __4__this; // 0x10
		private float _timer_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoShadowRise_d__6(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A3F640-0x10A3F810
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A3F810-0x10A3F860
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoShadowFall_d__7 : IEnumerator<object> // TypeDefIndex: 5515
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public bool inBox; // 0x10
		public SortGameObject __4__this; // 0x14
		public AudioClip dropSound; // 0x18
		private float _timer_5__2; // 0x1C

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoShadowFall_d__7(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A3F300-0x10A3F5F0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A3F5F0-0x10A3F640
	}

	// Constructors
	public SortGameObject(); // 0x101A68C0-0x101A68D0

	// Methods
	[IteratorStateMachine] // 0x100473A0-0x100473F0
	public IEnumerator CoShadowRise(); // 0x10A36F50-0x10A36FA0
	[IteratorStateMachine] // 0x10047520-0x10047570
	public IEnumerator CoShadowFall(bool inBox, AudioClip dropSound); // 0x10A36EF0-0x10A36F50
}

public class SortMinigame : Minigame // TypeDefIndex: 5516
{
	// Fields
	public SortGameObject[] Objects; // 0x28
	public BoxCollider2D AnimalBox; // 0x2C
	public BoxCollider2D PlantBox; // 0x30
	public BoxCollider2D MineralBox; // 0x34
	public AudioClip[] PickUpSounds; // 0x38
	public AudioClip[] DropSounds; // 0x3C
	private Controller myController; // 0x40

	// Constructors
	public SortMinigame(); // 0x10A376C0-0x10A37720

	// Methods
	public void Start(); // 0x10A37190-0x10A37370
	public void Update(); // 0x10A37370-0x10A376C0
	private bool CheckBox(SortGameObject obj, bool dropped); // 0x10A36FA0-0x10A37190
}

[CreateAssetMenu] // 0x10002030-0x10002050
public class SoundGroup : ScriptableObject // TypeDefIndex: 5246
{
	// Fields
	public AudioClip[] Clips; // 0x0C

	// Constructors
	public SoundGroup(); // 0x101ADCA0-0x101ADCB0

	// Methods
	public AudioClip Random(); // 0x10A37720-0x10A37780
}

public class SoundManager : MonoBehaviour // TypeDefIndex: 5820
{
	// Fields
	private static SoundManager _Instance; // 0x00
	public AudioMixerGroup musicMixer; // 0x0C
	public AudioMixerGroup sfxMixer; // 0x10
	public static float MusicVolume; // 0x04
	public static float SfxVolume; // 0x08
	private Dictionary<AudioClip, AudioSource> allSources; // 0x14
	private List<ISoundPlayer> soundPlayers; // 0x18

	// Properties
	public static SoundManager Instance { get; } // 0x10A38EF0-0x10A39020 

	// Nested types
	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5821
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static DynamicSound.GetDynamicsFunction __9__17_0; // 0x04
		public static DynamicSound.GetDynamicsFunction __9__18_0; // 0x08

		// Constructors
		static __c(); // 0x10A41EC0-0x10A41F10
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _PlayNamedSound_b__17_0(AudioSource a, float b); // 0x101A2F90-0x101A2FA0
		internal void _GetNamedAudioSource_b__18_0(AudioSource a, float b); // 0x101A2F90-0x101A2FA0
	}

	// Constructors
	public SoundManager(); // 0x10A38E80-0x10A38EF0
	static SoundManager(); // 0x10A38E40-0x10A38E80

	// Methods
	public void Start(); // 0x10A383B0-0x10A38530
	public void Update(); // 0x10A38D20-0x10A38E40
	private void UpdateVolume(); // 0x10A38A70-0x10A38D20
	public void ChangeSfxVolume(float volume); // 0x10A378B0-0x10A379E0
	public void ChangeMusicVolume(float volume); // 0x10A37780-0x10A378B0
	public void StopNamedSound(string name); // 0x10A38790-0x10A388A0
	public void StopSound(AudioClip clip); // 0x10A388A0-0x10A38A70
	public void StopAllSound(); // 0x10A38530-0x10A38790
	public AudioSource PlayNamedSound(string name, AudioClip sound, bool loop, bool playAsSfx = false /* Metadata: 0x00243DB1 */); // 0x10A37E20-0x10A37EF0
	public AudioSource GetNamedAudioSource(string name); // 0x10A37B90-0x10A37C60
	public AudioSource PlayDynamicSound(string name, AudioClip clip, bool loop, DynamicSound.GetDynamicsFunction volumeFunc, bool playAsSfx = false /* Metadata: 0x00243DB2 */); // 0x10A37C60-0x10A37E20
	public void CrossFadeSound(string name, AudioClip clip, float maxVolume, float duration = 1.5f /* Metadata: 0x00243DB3 */); // 0x10A379E0-0x10A37B90
	public AudioSource PlaySoundImmediate(AudioClip clip, bool loop, float volume = 1f /* Metadata: 0x00243DB7 */, float pitch = 1f /* Metadata: 0x00243DBB */); // 0x10A37EF0-0x10A38110
	public bool SoundIsPlaying(AudioClip clip); // 0x10A38330-0x10A383B0
	public AudioSource PlaySound(AudioClip clip, bool loop, float volume = 1f /* Metadata: 0x00243DBF */); // 0x10A38110-0x10A38330
}

public class SoundStarter : MonoBehaviour // TypeDefIndex: 5822
{
	// Fields
	public string Name; // 0x0C
	public AudioClip SoundToPlay; // 0x10
	public bool StopAll; // 0x14
	[Range] // 0x1001D290-0x1001D2C0
	public float Volume; // 0x18

	// Constructors
	public SoundStarter(); // 0x10A390E0-0x10A39100

	// Methods
	public void Awake(); // 0x10A39020-0x10A390E0
}

namespace InnerNet
{
	[Flags] // 0x10002030-0x10002050
	public enum SpawnFlags : byte // TypeDefIndex: 5908
	{
		None = 0,
		IsClientCharacter = 1
	}
}

public class SpecimenGame : Minigame // TypeDefIndex: 5649
{
	// Fields
	public Collider2D[] Specimens; // 0x28
	public Transform[] Slots; // 0x2C
	private Controller cont; // 0x30
	public AudioClip[] PlaceSounds; // 0x34

	// Constructors
	public SpecimenGame(); // 0x10A397D0-0x10A39830

	// Methods
	public void Update(); // 0x10A392A0-0x10A397D0
	private void CheckForWin(); // 0x10A39100-0x10A392A0
}

public class SpinAnimator : MonoBehaviour // TypeDefIndex: 5828
{
	// Fields
	public float Speed; // 0x0C
	private States curState; // 0x10

	// Nested types
	private enum States // TypeDefIndex: 5829
	{
		Visible = 0,
		Invisible = 1,
		Spinning = 2,
		Pulsing = 3
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoDisappear_d__6 : IEnumerator<object> // TypeDefIndex: 5830
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SpinAnimator __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoDisappear_d__6(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A3ED40-0x10A3EE20
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A3EE20-0x10A3EE70
	}

	// Constructors
	public SpinAnimator(); // 0x10A39B00-0x10A39B20

	// Methods
	private void Update(); // 0x10A39A90-0x10A39B00
	public void Appear(); // 0x10A39830-0x10A398F0
	public void Disappear(); // 0x10A39940-0x10A399B0
	[IteratorStateMachine] // 0x1001D700-0x1001D750
	private IEnumerator CoDisappear(); // 0x10A398F0-0x10A39940
	public void StartPulse(); // 0x10A399C0-0x10A39A90
	internal void Play(); // 0x10A399B0-0x10A399C0
}

namespace PowerTools
{
	[DisallowMultipleComponent] // 0x10021110-0x10021170
	[RequireComponent] // 0x10021110-0x10021170
	public class SpriteAnim : SpriteAnimEventHandler // TypeDefIndex: 5895
	{
		// Fields
		private static readonly string STATE_NAME; // 0x00
		private static readonly string CONTROLLER_PATH; // 0x04
		[SerializeField] // 0x10002030-0x10002050
		private AnimationClip m_defaultAnim; // 0x14
		private static RuntimeAnimatorController m_sharedAnimatorController; // 0x08
		private Animator m_animator; // 0x18
		private AnimatorOverrideController m_controller; // 0x1C
		private SpriteAnimNodes m_nodes; // 0x20
		private List<KeyValuePair<AnimationClip, AnimationClip>> m_clipPairList; // 0x24
		private AnimationClip m_currAnim; // 0x28
		private float m_speed; // 0x2C
	
		// Properties
		public bool Playing { get; } // 0x101CC880-0x101CC8A0 
		public bool Paused { get; set; } // 0x101CBB30-0x101CBBC0 0x101CC9A0-0x101CCA40
		public float Speed { get; set; } // 0x101CBA50-0x101CBA60 0x101CC500-0x101CC590
		public float Time { get; set; } // 0x101CC8A0-0x101CC980 0x101CC590-0x101CC640
		public float NormalizedTime { get; set; } // 0x101CC7B0-0x101CC880 0x101CC980-0x101CC9A0
		public AnimationClip Clip { get; } // 0x101CB980-0x101CB990 
		public string ClipName { get; } // 0x101CC720-0x101CC7B0 
	
		// Constructors
		public SpriteAnim(); // 0x101CC6C0-0x101CC720
		static SpriteAnim(); // 0x101CC670-0x101CC6C0
	
		// Methods
		public void Play(AnimationClip anim = null, float speed = 1f /* Metadata: 0x00244328 */); // 0x101CBDE0-0x101CC260
		public void Stop(); // 0x101CC640-0x101CC670
		public void Pause(); // 0x101CBDB0-0x101CBDE0
		public void Resume(); // 0x101CC390-0x101CC3C0
		public AnimationClip GetCurrentAnimation(); // 0x101CB980-0x101CB990
		public bool IsPlaying(AnimationClip clip = null); // 0x101CBBC0-0x101CBCC0
		public bool IsPlaying(string animName); // 0x101CBCC0-0x101CBDB0
		public bool IsPaused(); // 0x101CBB30-0x101CBBC0
		public void SetSpeed(float speed); // 0x101CC500-0x101CC590
		public float GetSpeed(); // 0x101CBA50-0x101CBA60
		public float GetTime(); // 0x101CBA60-0x101CBB30
		public void SetTime(float time); // 0x101CC590-0x101CC640
		public float GetNormalisedTime(); // 0x101CB990-0x101CBA50
		public void SetNormalizedTime(float ratio); // 0x101CC3C0-0x101CC500
		private void Awake(); // 0x101CB800-0x101CB980
		private void Reset(); // 0x101CC260-0x101CC390
	}

	[DisallowMultipleComponent] // 0x10002030-0x10002050
	public class SpriteAnimEventHandler : MonoBehaviour // TypeDefIndex: 5896
	{
		// Fields
		private string m_eventWithObjectMessage; // 0x0C
		private object m_eventWithObjectData; // 0x10
	
		// Nested types
		public static class EventParser // TypeDefIndex: 5897
		{
			// Fields
			public static readonly char MESSAGE_DELIMITER; // 0x00
			public static readonly string MESSAGE_NOPARAM; // 0x04
			public static readonly string MESSAGE_INT; // 0x08
			public static readonly string MESSAGE_FLOAT; // 0x0C
			public static readonly string MESSAGE_STRING; // 0x10
			public static readonly string MESSAGE_OBJECT_FUNCNAME; // 0x14
			public static readonly string MESSAGE_OBJECT_DATA; // 0x18
	
			// Constructors
			static EventParser(); // 0x101BA170-0x101BA200
	
			// Methods
			public static int ParseInt(ref string messageString); // 0x101BA020-0x101BA0D0
			public static float ParseFloat(ref string messageString); // 0x101B9F70-0x101BA020
			public static string ParseString(ref string messageString); // 0x101BA0D0-0x101BA170
		}
	
		// Constructors
		public SpriteAnimEventHandler(); // 0x101A68C0-0x101A68D0
	
		// Methods
		private void _Anim(string function); // 0x101CA5C0-0x101CA5E0
		private void _AnimInt(string messageString); // 0x101CA290-0x101CA3A0
		private void _AnimFloat(string messageString); // 0x101CA180-0x101CA290
		private void _AnimString(string messageString); // 0x101CA4E0-0x101CA5C0
		private void _AnimObjectFunc(string funcName); // 0x101CA440-0x101CA4E0
		private void _AnimObjectData(UnityEngine.Object data); // 0x101CA3A0-0x101CA440
	}

	public class SpriteAnimNodes : MonoBehaviour // TypeDefIndex: 5899
	{
		// Fields
		public static readonly int NUM_NODES; // 0x00
		[HideInInspector] // 0x10002170-0x100021A0
		[SerializeField] // 0x10002170-0x100021A0
		private Vector2 m_node0; // 0x0C
		[HideInInspector] // 0x10002170-0x100021A0
		[SerializeField] // 0x10002170-0x100021A0
		private Vector2 m_node1; // 0x14
		[HideInInspector] // 0x10002170-0x100021A0
		[SerializeField] // 0x10002170-0x100021A0
		private Vector2 m_node2; // 0x1C
		[HideInInspector] // 0x10002170-0x100021A0
		[SerializeField] // 0x10002170-0x100021A0
		private Vector2 m_node3; // 0x24
		[HideInInspector] // 0x10002170-0x100021A0
		[SerializeField] // 0x10002170-0x100021A0
		private Vector2 m_node4; // 0x2C
		[HideInInspector] // 0x10002170-0x100021A0
		[SerializeField] // 0x10002170-0x100021A0
		private Vector2 m_node5; // 0x34
		[HideInInspector] // 0x10002170-0x100021A0
		[SerializeField] // 0x10002170-0x100021A0
		private Vector2 m_node6; // 0x3C
		[HideInInspector] // 0x10002170-0x100021A0
		[SerializeField] // 0x10002170-0x100021A0
		private Vector2 m_node7; // 0x44
		[HideInInspector] // 0x10002170-0x100021A0
		[SerializeField] // 0x10002170-0x100021A0
		private Vector2 m_node8; // 0x4C
		[HideInInspector] // 0x10002170-0x100021A0
		[SerializeField] // 0x10002170-0x100021A0
		private Vector2 m_node9; // 0x54
		[HideInInspector] // 0x10002170-0x100021A0
		[SerializeField] // 0x10002170-0x100021A0
		private float m_ang0; // 0x5C
		[HideInInspector] // 0x10002170-0x100021A0
		[SerializeField] // 0x10002170-0x100021A0
		private float m_ang1; // 0x60
		[HideInInspector] // 0x10002170-0x100021A0
		[SerializeField] // 0x10002170-0x100021A0
		private float m_ang2; // 0x64
		[HideInInspector] // 0x10002170-0x100021A0
		[SerializeField] // 0x10002170-0x100021A0
		private float m_ang3; // 0x68
		[HideInInspector] // 0x10002170-0x100021A0
		[SerializeField] // 0x10002170-0x100021A0
		private float m_ang4; // 0x6C
		[HideInInspector] // 0x10002170-0x100021A0
		[SerializeField] // 0x10002170-0x100021A0
		private float m_ang5; // 0x70
		[HideInInspector] // 0x10002170-0x100021A0
		[SerializeField] // 0x10002170-0x100021A0
		private float m_ang6; // 0x74
		[HideInInspector] // 0x10002170-0x100021A0
		[SerializeField] // 0x10002170-0x100021A0
		private float m_ang7; // 0x78
		[HideInInspector] // 0x10002170-0x100021A0
		[SerializeField] // 0x10002170-0x100021A0
		private float m_ang8; // 0x7C
		[HideInInspector] // 0x10002170-0x100021A0
		[SerializeField] // 0x10002170-0x100021A0
		private float m_ang9; // 0x80
		private SpriteRenderer m_spriteRenderer; // 0x84
	
		// Constructors
		public SpriteAnimNodes(); // 0x101CB6B0-0x101CB800
		static SpriteAnimNodes(); // 0x101CB680-0x101CB6B0
	
		// Methods
		public Vector3 GetPosition(int nodeId, bool ignoredPivot = false /* Metadata: 0x0024432C */); // 0x101CB1D0-0x101CB4A0
		public Vector3 GetLocalPosition(int nodeId, bool ignoredPivot = false /* Metadata: 0x0024432D */); // 0x101CAB00-0x101CB040
		public float GetAngle(int nodeId); // 0x101CA910-0x101CAB00
		public Vector2 GetPositionRaw(int nodeId); // 0x101CB040-0x101CB1D0
		public float GetAngleRaw(int nodeId); // 0x101CA870-0x101CA910
		public void Reset(); // 0x101CB4A0-0x101CB680
	}

	public class SpriteAnimNodeSync : MonoBehaviour // TypeDefIndex: 5898
	{
		// Fields
		public int NodeId; // 0x0C
		public SpriteAnimNodes Parent; // 0x10
		public SpriteRenderer ParentRenderer; // 0x14
		public SpriteRenderer Renderer; // 0x18
	
		// Constructors
		public SpriteAnimNodeSync(); // 0x101A68C0-0x101A68D0
	
		// Methods
		public void LateUpdate(); // 0x101CA5E0-0x101CA870
	}
}

[RequireComponent] // 0x10027DD0-0x10027E40
[RequireComponent] // 0x10027DD0-0x10027E40
public class SpriteParticle : MonoBehaviour // TypeDefIndex: 5248
{
	// Fields
	private const float FrameRate = 24f; // Metadata: 0x00243AFE
	public Sprite[] Sprites; // 0x0C
	public ParticleInfo[] Particles; // 0x10
	public ushort[][] TriangleCache; // 0x14
	private Vector3[] verts; // 0x18
	private Vector2[] uvs; // 0x1C
	private List<int> tris; // 0x20
	private Mesh mesh; // 0x24
	private int MaxVerts; // 0x28
	private Dictionary<int, Vector2[]> VertCache; // 0x2C
	private Dictionary<int, Vector2[]> UvCache; // 0x30

	// Constructors
	public SpriteParticle(); // 0x10A3A600-0x10A3A690

	// Methods
	public void OnDrawGizmos(); // 0x10A39B20-0x10A39DD0
	public void Start(); // 0x10A39DD0-0x10A3A280
	public void Update(); // 0x10A3A280-0x10A3A600
}

public class SpriteScroller : MonoBehaviour // TypeDefIndex: 5831
{
	// Fields
	public Renderer rend; // 0x0C
	public float XRate; // 0x10
	public float YRate; // 0x14

	// Constructors
	public SpriteScroller(); // 0x102A3E60-0x102A3E90

	// Methods
	private void Update(); // 0x10A3A690-0x10A3A790
}

internal static class SR // TypeDefIndex: 3
{
	// Methods
	internal static string Format(string resourceFormat, object p1); // 0x10377CB0-0x10377D10
	internal static string Format(string resourceFormat, object p1, object p2); // 0x10377C50-0x10377CB0
}

internal static class SR // TypeDefIndex: 1739
{
	// Methods
	internal static string GetString(string name, params /* 0x10002030-0x10002050 */ object[] args); // 0x1054DA40-0x1054DAA0
	internal static string GetString(CultureInfo culture, string name, params /* 0x10002030-0x10002050 */ object[] args); // 0x1049E4D0-0x1049E4E0
}

internal static class SR // TypeDefIndex: 2171
{
	// Methods
	internal static string GetString(string name, params /* 0x10002030-0x10002050 */ object[] args); // 0x1049E470-0x1049E4D0
	internal static string GetString(CultureInfo culture, string name, params /* 0x10002030-0x10002050 */ object[] args); // 0x1049E4D0-0x1049E4E0
	internal static string GetString(string name); // 0x1018AFD0-0x1018AFE0
}

internal static class SR // TypeDefIndex: 2707
{
	// Methods
	internal static string GetString(string name); // 0x1018AFD0-0x1018AFE0
}

[RequireComponent] // 0x1001D4B0-0x1001D520
[RequireComponent] // 0x1001D4B0-0x1001D520
public class StarGen : MonoBehaviour // TypeDefIndex: 5826
{
	// Fields
	private const float MaxStarRadius = 0.05f; // Metadata: 0x00243DC3
	public int NumStars; // 0x0C
	public float Length; // 0x10
	public float Width; // 0x14
	public Vector2 Direction; // 0x18
	private Vector2 NormDir; // 0x20
	private Vector2 Tangent; // 0x28
	private float tanLen; // 0x30
	public FloatRange Rates; // 0x34
	[HideInInspector] // 0x10002030-0x10002050
	private Stars[] stars; // 0x38
	[HideInInspector] // 0x10002030-0x10002050
	private Vector3[] verts; // 0x3C
	[HideInInspector] // 0x10002030-0x10002050
	private Mesh mesh; // 0x40

	// Nested types
	[Serializable]
	private struct Stars // TypeDefIndex: 5827
	{
		// Fields
		public float Size; // 0x00
		public float Rate; // 0x04
		public float PositionX; // 0x08
		public float PositionY; // 0x0C
	}

	// Constructors
	public StarGen(); // 0x10A3B4E0-0x10A3B610

	// Methods
	public void Start(); // 0x10A3AE40-0x10A3B4E0
	private void FixedUpdate(); // 0x10A3A790-0x10A3AB50
	public void SetDirection(Vector2 dir); // 0x10A3AC90-0x10A3AE40
	public void RegenPositions(); // 0x10A3AB80-0x10A3AC90
	private float OrthoDistance(float pointx, float pointy); // 0x10A3AB50-0x10A3AB80
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000A360-0x1000A380
	public struct StartPlaytimeTrackingResult_t // TypeDefIndex: 4625
	{
		// Fields
		public const int k_iCallback = 3410; // Metadata: 0x002423C7
		public EResult m_eResult; // 0x00
	}
}

public class StatsManager // TypeDefIndex: 5833
{
	// Fields
	public static StatsManager Instance; // 0x00
	private const byte StatsVersion = 3; // Metadata: 0x00243DD7
	private bool loadedStats; // 0x08
	private uint bodiesReported; // 0x0C
	private uint emergenciesCalls; // 0x10
	private uint tasksCompleted; // 0x14
	private uint completedAllTasks; // 0x18
	private uint sabsFixed; // 0x1C
	private uint impostorKills; // 0x20
	private uint timesMurdered; // 0x24
	private uint timesEjected; // 0x28
	private uint crewmateStreak; // 0x2C
	private uint timesImpostor; // 0x30
	private uint timesCrewmate; // 0x34
	private uint gamesStarted; // 0x38
	private uint gamesFinished; // 0x3C
	private float banPoints; // 0x40
	private long lastGameStarted; // 0x48
	private const int PointsUntilBanStarts = 2; // Metadata: 0x00243DD8
	private const int MinutesPerBanPoint = 5; // Metadata: 0x00243DDC
	private uint[] WinReasons; // 0x50
	private uint[] DrawReasons; // 0x54
	private uint[] LoseReasons; // 0x58

	// Properties
	public uint BodiesReported { get; set; } // 0x10A3C4C0-0x10A3C4F0 0x10A3C810-0x10A3C850
	public uint EmergenciesCalled { get; set; } // 0x10A3C550-0x10A3C580 0x10A3C8D0-0x10A3C910
	public uint TasksCompleted { get; set; } // 0x10A3C690-0x10A3C6C0 0x10A3CA50-0x10A3CA90
	public uint CompletedAllTasks { get; set; } // 0x10A3C4F0-0x10A3C520 0x10A3C850-0x10A3C890
	public uint SabsFixed { get; set; } // 0x10A3C660-0x10A3C690 0x10A3CA10-0x10A3CA50
	public uint ImpostorKills { get; set; } // 0x10A3C5E0-0x10A3C610 0x10A3C990-0x10A3C9D0
	public uint TimesMurdered { get; set; } // 0x10A3C750-0x10A3C780 0x10A3CB50-0x10A3CB90
	public uint TimesEjected { get; set; } // 0x10A3C6F0-0x10A3C720 0x10A3CAD0-0x10A3CB10
	public uint CrewmateStreak { get; set; } // 0x10A3C520-0x10A3C550 0x10A3C890-0x10A3C8D0
	public uint TimesImpostor { get; set; } // 0x10A3C720-0x10A3C750 0x10A3CB10-0x10A3CB50
	public uint TimesCrewmate { get; set; } // 0x10A3C6C0-0x10A3C6F0 0x10A3CA90-0x10A3CAD0
	public uint GamesStarted { get; set; } // 0x10A3C5B0-0x10A3C5E0 0x10A3C950-0x10A3C990
	public uint GamesFinished { get; set; } // 0x10A3C580-0x10A3C5B0 0x10A3C910-0x10A3C950
	public float BanPoints { get; set; } // 0x10A3C490-0x10A3C4C0 0x10A3C780-0x10A3C810
	public DateTime LastGameStarted { get; set; } // 0x10A3C610-0x10A3C660 0x10A3C9D0-0x10A3CA10
	public float BanMinutes { get; } // 0x10A3C400-0x10A3C490 
	public bool AmBanned { get; } // 0x10A3C1B0-0x10A3C1D0 
	public int BanMinutesLeft { get; } // 0x10A3C1D0-0x10A3C400 

	// Constructors
	public StatsManager(); // 0x10A3C140-0x10A3C1B0
	static StatsManager(); // 0x10A3C0A0-0x10A3C140

	// Methods
	public void AddDrawReason(GameOverReason reason); // 0x10A3B610-0x10A3B670
	public void AddWinReason(GameOverReason reason); // 0x10A3B6D0-0x10A3B730
	public uint GetWinReason(GameOverReason reason); // 0x10A3B780-0x10A3B7D0
	public void AddLoseReason(GameOverReason reason); // 0x10A3B670-0x10A3B6D0
	public uint GetLoseReason(GameOverReason reason); // 0x10A3B730-0x10A3B780
	protected virtual void LoadStats(); // 0x10A3B7D0-0x10A3BC50
	protected virtual void SaveStats(); // 0x10A3BC50-0x10A3C0A0
}

public class StatsPopup : MonoBehaviour // TypeDefIndex: 5834
{
	// Fields
	public TextRenderer StatsText; // 0x0C
	public TextRenderer NumbersText; // 0x10

	// Constructors
	public StatsPopup(); // 0x101A68C0-0x101A68D0

	// Methods
	private void OnEnable(); // 0x10A3CC20-0x10A3D2E0
	private static void AppendStat(StringBuilder str, StringBuilder strNums, StringNames statName, object stat); // 0x10A3CB90-0x10A3CC20
}

namespace Discord
{
	public enum Status // TypeDefIndex: 4867
	{
		Offline = 0,
		Online = 1,
		Idle = 2,
		DoNotDisturb = 3
	}
}

namespace Steamworks
{
	public static class SteamAPI // TypeDefIndex: 4299
	{
		// Methods
		public static bool Init(); // 0x1018C540-0x1018C560
		public static void Shutdown(); // 0x1018C5E0-0x1018C600
		public static bool RestartAppIfNecessary(AppId_t unOwnAppID); // 0x1018C5A0-0x1018C5C0
		public static void ReleaseCurrentThreadMemory(); // 0x1018C580-0x1018C5A0
		public static void RunCallbacks(); // 0x1018C5C0-0x1018C5E0
		public static bool IsSteamRunning(); // 0x1018C560-0x1018C580
		public static HSteamUser GetHSteamUserCurrent(); // 0x1018C500-0x1018C520
		public static HSteamPipe GetHSteamPipe(); // 0x1018C4E0-0x1018C500
		public static HSteamUser GetHSteamUser(); // 0x1018C520-0x1018C540
	}

	[UnmanagedFunctionPointer] // 0x1000C5E0-0x1000C600
	public delegate void SteamAPI_CheckCallbackRegistered_t(int iCallbackNum); // TypeDefIndex: 4793; 0x1018C280-0x1018C4E0

	[Serializable]
	public struct SteamAPICall_t : IEquatable<SteamAPICall_t>, IComparable<SteamAPICall_t> // TypeDefIndex: 4824
	{
		// Fields
		public static readonly SteamAPICall_t Invalid; // 0x00
		public ulong m_SteamAPICall; // 0x00
	
		// Constructors
		public SteamAPICall_t(ulong value); // 0x10073670-0x10073690
		static SteamAPICall_t(); // 0x1018BE40-0x1018BE90
	
		// Methods
		public override string ToString(); // 0x10073650-0x10073670
		public override bool Equals(object other); // 0x10090290-0x10090720
		public override int GetHashCode(); // 0x10073630-0x10073650
		public static bool operator ==(SteamAPICall_t x, SteamAPICall_t y); // 0x10187800-0x10187820
		public static bool operator !=(SteamAPICall_t x, SteamAPICall_t y); // 0x1018BE90-0x1018BEF0
		public static explicit operator SteamAPICall_t(ulong value); // 0x10187820-0x10187830
		public static explicit operator ulong(SteamAPICall_t that); // 0x10187820-0x10187830
		public bool Equals(SteamAPICall_t other); // 0x10073610-0x10073630
		public int CompareTo(SteamAPICall_t other); // 0x10073550-0x10073570
	}

	[CallbackIdentity] // 0x1000BFF0-0x1000C010
	public struct SteamAPICallCompleted_t // TypeDefIndex: 4659
	{
		// Fields
		public const int k_iCallback = 703; // Metadata: 0x0024244F
		public SteamAPICall_t m_hAsyncCall; // 0x00
		public int m_iCallback; // 0x08
		public uint m_cubParam; // 0x0C
	}

	[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
	public delegate void SteamAPIWarningMessageHook_t(int nSeverity, StringBuilder pchDebugText); // TypeDefIndex: 4792; 0x1018BF80-0x1018C200

	[CallbackIdentity] // 0x1004BE40-0x1004BE60
	public struct SteamAppInstalled_t // TypeDefIndex: 4483
	{
		// Fields
		public const int k_iCallback = 3901; // Metadata: 0x0024218F
		public AppId_t m_nAppID; // 0x00
	}

	public static class SteamAppList // TypeDefIndex: 4758
	{
		// Methods
		public static uint GetNumInstalledApps(); // 0x1018CA40-0x1018CA80
		public static uint GetInstalledApps(AppId_t[] pvecAppID, uint unMaxAppIDs); // 0x1018C9F0-0x1018CA40
		public static int GetAppName(AppId_t nAppID, out string pchName, int cchNameMax); // 0x1018C910-0x1018C9F0
		public static int GetAppInstallDir(AppId_t nAppID, out string pchDirectory, int cchNameMax); // 0x1018C830-0x1018C910
		public static int GetAppBuildId(AppId_t nAppID); // 0x1018C7E0-0x1018C830
	}

	public static class SteamApps // TypeDefIndex: 4759
	{
		// Methods
		public static bool BIsSubscribed(); // 0x1018CF00-0x1018CF40
		public static bool BIsLowViolence(); // 0x1018CE30-0x1018CE70
		public static bool BIsCybercafe(); // 0x1018CDA0-0x1018CDE0
		public static bool BIsVACBanned(); // 0x1018CF40-0x1018CF80
		public static string GetCurrentGameLanguage(); // 0x1018D260-0x1018D2B0
		public static string GetAvailableGameLanguages(); // 0x1018D130-0x1018D180
		public static bool BIsSubscribedApp(AppId_t appID); // 0x1018CE70-0x1018CEC0
		public static bool BIsDlcInstalled(AppId_t appID); // 0x1018CDE0-0x1018CE30
		public static uint GetEarliestPurchaseUnixTime(AppId_t nAppID); // 0x1018D340-0x1018D390
		public static bool BIsSubscribedFromFreeWeekend(); // 0x1018CEC0-0x1018CF00
		public static int GetDLCCount(); // 0x1018D2B0-0x1018D2F0
		public static bool BGetDLCDataByIndex(int iDLC, out AppId_t pAppID, out bool pbAvailable, out string pchName, int cchNameBufferSize); // 0x1018CC60-0x1018CD50
		public static void InstallDLC(AppId_t nAppID); // 0x1018D690-0x1018D6E0
		public static void UninstallDLC(AppId_t nAppID); // 0x1018D7C0-0x1018D810
		public static void RequestAppProofOfPurchaseKey(AppId_t nAppID); // 0x1018D770-0x1018D7C0
		public static bool GetCurrentBetaName(out string pchName, int cchNameBufferSize); // 0x1018D180-0x1018D260
		public static bool MarkContentCorrupt(bool bMissingFilesOnly); // 0x1018D6E0-0x1018D730
		public static uint GetInstalledDepots(AppId_t appID, DepotId_t[] pvecDepots, uint cMaxDepots); // 0x1018D500-0x1018D550
		public static uint GetAppInstallDir(AppId_t appID, out string pchFolder, uint cchFolderBufferSize); // 0x1018CFC0-0x1018D0A0
		public static bool BIsAppInstalled(AppId_t appID); // 0x1018CD50-0x1018CDA0
		public static CSteamID GetAppOwner(); // 0x1018D0A0-0x1018D130
		public static string GetLaunchQueryParam(string pchKey); // 0x1018D550-0x1018D690
		public static bool GetDlcDownloadProgress(AppId_t nAppID, out ulong punBytesDownloaded, out ulong punBytesTotal); // 0x1018D2F0-0x1018D340
		public static int GetAppBuildId(); // 0x1018CF80-0x1018CFC0
		public static void RequestAllProofOfPurchaseKeys(); // 0x1018D730-0x1018D770
		public static SteamAPICall_t GetFileDetails(string pszFileName); // 0x1018D390-0x1018D500
	}

	[CallbackIdentity] // 0x1004BEA0-0x1004BEC0
	public struct SteamAppUninstalled_t // TypeDefIndex: 4484
	{
		// Fields
		public const int k_iCallback = 3902; // Metadata: 0x00242193
		public AppId_t m_nAppID; // 0x00
	}
}

public class SteamBehaviour : MonoBehaviour // TypeDefIndex: 5320
{
	// Fields
	public SpriteAnim anim; // 0x0C
	public FloatRange PlayRate; // 0x10

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Run_d__3 : IEnumerator<object> // TypeDefIndex: 5321
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SteamBehaviour __4__this; // 0x10
		private float _time_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Run_d__3(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10A40FF0-0x10A410E0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10A410E0-0x10A41130
	}

	// Constructors
	public SteamBehaviour(); // 0x10A3D390-0x10A3D400

	// Methods
	public void OnEnable(); // 0x10A3D2E0-0x10A3D340
	[IteratorStateMachine] // 0x10031180-0x100311D0
	private IEnumerator Run(); // 0x10A3D340-0x10A3D390
}

namespace Steamworks
{
	public static class SteamCallbacks // TypeDefIndex: 4304
	{
		// Nested types
		public static class CallbackHub<T> // TypeDefIndex: 4305
			where T : struct
		{
			// Fields
			private static CCallbackBaseVTable m_CallbackBaseVTable;
			private static IntPtr m_pVTable;
			private static CCallbackBase m_CCallbackBase;
			private static GCHandle m_pCCallbackBase;
			[CompilerGenerated] // 0x10002030-0x10002050
			private static DispatchDelegate m_Func;
			private static Dictionary<ulong, APIDispatchDelegate> callResultFuncs;
			private static readonly int m_size;
	
			// Properties
			private static int CallbackCount { get; }
	
			// Events
			private static event DispatchDelegate m_Func {
				add; // 0x00000000-0x00000000
				remove; // 0x00000000-0x00000000
			}
	
			// Nested types
			public delegate void DispatchDelegate(T param); // TypeDefIndex: 4306; 0x00000000-0x00000000
	
			public delegate void APIDispatchDelegate(T param, bool bIOFailure); // TypeDefIndex: 4307; 0x00000000-0x00000000
	
			// Constructors
			static CallbackHub();
	
			// Methods
			public static void RegisterCallback(DispatchDelegate func);
			public static void UnregisterCallback(DispatchDelegate func);
			public static void RegisterCallResult(APIDispatchDelegate func, SteamAPICall_t hApiCall);
			public static void UnregisterCallResult(SteamAPICall_t hApiCall);
			private static void BuildCCallbackBase();
			public static void OnRunCallback(IntPtr pvParam);
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall);
			public static int OnGetCallbackSizeBytes();
		}
	
		internal static class VTables // TypeDefIndex: 4308
		{
			// Fields
			internal static readonly Dictionary<Type, CCallbackBaseVTable> vtables; // 0x00
	
			// Constructors
			static VTables(); // 0x1018FBC0-0x101969C0
		}
	
		public static class SteamAppInstalled_t // TypeDefIndex: 4309
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10023EC0-0x10023F10
			public static void OnRunCallback(IntPtr pvParam); // 0x1018C780-0x1018C7E0
			[AOT.MonoPInvokeCallback] // 0x10023F40-0x10023F90
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018C720-0x1018C780
			[AOT.MonoPInvokeCallback] // 0x10023FC0-0x10024010
			public static int OnGetCallbackSizeBytes(); // 0x1018C600-0x1018C720
		}
	
		public static class SteamAppUninstalled_t // TypeDefIndex: 4310
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100240E0-0x10024130
			public static void OnRunCallback(IntPtr pvParam); // 0x1018CC00-0x1018CC60
			[AOT.MonoPInvokeCallback] // 0x10024160-0x100241B0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018CBA0-0x1018CC00
			[AOT.MonoPInvokeCallback] // 0x100241E0-0x10024230
			public static int OnGetCallbackSizeBytes(); // 0x1018CA80-0x1018CBA0
		}
	
		public static class DlcInstalled_t // TypeDefIndex: 4311
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100242F0-0x10024340
			public static void OnRunCallback(IntPtr pvParam); // 0x1017B440-0x1017B4A0
			[AOT.MonoPInvokeCallback] // 0x100243A0-0x100243F0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017B3E0-0x1017B440
			[AOT.MonoPInvokeCallback] // 0x10024420-0x10024470
			public static int OnGetCallbackSizeBytes(); // 0x1017B2C0-0x1017B3E0
		}
	
		public static class RegisterActivationCodeResponse_t // TypeDefIndex: 4312
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100244E0-0x10024530
			public static void OnRunCallback(IntPtr pvParam); // 0x10187AB0-0x10187B10
			[AOT.MonoPInvokeCallback] // 0x10024560-0x100245B0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10187A50-0x10187AB0
			[AOT.MonoPInvokeCallback] // 0x100245B0-0x10024600
			public static int OnGetCallbackSizeBytes(); // 0x10187930-0x10187A50
		}
	
		public static class NewLaunchQueryParameters_t // TypeDefIndex: 4313
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10025730-0x10025780
			public static void OnRunCallback(IntPtr pvParam); // 0x10186C90-0x10186CF0
			[AOT.MonoPInvokeCallback] // 0x100257E0-0x10025830
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10186C30-0x10186C90
			[AOT.MonoPInvokeCallback] // 0x100258D0-0x10025930
			public static int OnGetCallbackSizeBytes(); // 0x10186B10-0x10186C30
		}
	
		public static class AppProofOfPurchaseKeyResponse_t // TypeDefIndex: 4314
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10026AA0-0x10026AF0
			public static void OnRunCallback(IntPtr pvParam); // 0x1017A180-0x1017A1E0
			[AOT.MonoPInvokeCallback] // 0x10026BC0-0x10026C10
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017A120-0x1017A180
			[AOT.MonoPInvokeCallback] // 0x10026CA0-0x10026CF0
			public static int OnGetCallbackSizeBytes(); // 0x1017A000-0x1017A120
		}
	
		public static class FileDetailsResult_t // TypeDefIndex: 4315
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10026D40-0x10026D90
			public static void OnRunCallback(IntPtr pvParam); // 0x1017BF80-0x1017BFF0
			[AOT.MonoPInvokeCallback] // 0x10026E30-0x10026E80
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017BF20-0x1017BF80
			[AOT.MonoPInvokeCallback] // 0x10026ED0-0x10026F20
			public static int OnGetCallbackSizeBytes(); // 0x1017BE00-0x1017BF20
		}
	
		public static class PersonaStateChange_t // TypeDefIndex: 4316
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10026F50-0x10026FA0
			public static void OnRunCallback(IntPtr pvParam); // 0x101874D0-0x10187530
			[AOT.MonoPInvokeCallback] // 0x10027060-0x100270B0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10187470-0x101874D0
			[AOT.MonoPInvokeCallback] // 0x100270E0-0x10027130
			public static int OnGetCallbackSizeBytes(); // 0x10187350-0x10187470
		}
	
		public static class GameOverlayActivated_t // TypeDefIndex: 4317
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100271D0-0x10027220
			public static void OnRunCallback(IntPtr pvParam); // 0x1017EAB0-0x1017EB10
			[AOT.MonoPInvokeCallback] // 0x10027220-0x10027270
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017EA50-0x1017EAB0
			[AOT.MonoPInvokeCallback] // 0x100272B0-0x10027300
			public static int OnGetCallbackSizeBytes(); // 0x1017E930-0x1017EA50
		}
	
		public static class GameServerChangeRequested_t // TypeDefIndex: 4318
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10027340-0x10027390
			public static void OnRunCallback(IntPtr pvParam); // 0x1017EE70-0x1017EED0
			[AOT.MonoPInvokeCallback] // 0x100273E0-0x10027430
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017EE10-0x1017EE70
			[AOT.MonoPInvokeCallback] // 0x100274F0-0x10027540
			public static int OnGetCallbackSizeBytes(); // 0x1017ECF0-0x1017EE10
		}
	
		public static class GameLobbyJoinRequested_t // TypeDefIndex: 4319
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10027580-0x100275D0
			public static void OnRunCallback(IntPtr pvParam); // 0x1017E8D0-0x1017E930
			[AOT.MonoPInvokeCallback] // 0x100276B0-0x10027700
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017E870-0x1017E8D0
			[AOT.MonoPInvokeCallback] // 0x100277A0-0x100277F0
			public static int OnGetCallbackSizeBytes(); // 0x1017E750-0x1017E870
		}
	
		public static class AvatarImageLoaded_t // TypeDefIndex: 4320
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100277F0-0x10027840
			public static void OnRunCallback(IntPtr pvParam); // 0x1017A540-0x1017A5A0
			[AOT.MonoPInvokeCallback] // 0x100278C0-0x10027910
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017A4E0-0x1017A540
			[AOT.MonoPInvokeCallback] // 0x100279A0-0x100279F0
			public static int OnGetCallbackSizeBytes(); // 0x1017A3C0-0x1017A4E0
		}
	
		public static class ClanOfficerListResponse_t // TypeDefIndex: 4321
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10027A80-0x10027AD0
			public static void OnRunCallback(IntPtr pvParam); // 0x1017ACC0-0x1017AD20
			[AOT.MonoPInvokeCallback] // 0x10027B50-0x10027BA0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017AC60-0x1017ACC0
			[AOT.MonoPInvokeCallback] // 0x10027C00-0x10027C50
			public static int OnGetCallbackSizeBytes(); // 0x1017AB40-0x1017AC60
		}
	
		public static class FriendRichPresenceUpdate_t // TypeDefIndex: 4322
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10027C80-0x10027CD0
			public static void OnRunCallback(IntPtr pvParam); // 0x1017C170-0x1017C1D0
			[AOT.MonoPInvokeCallback] // 0x10027D00-0x10027D50
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017C110-0x1017C170
			[AOT.MonoPInvokeCallback] // 0x10027D80-0x10027DD0
			public static int OnGetCallbackSizeBytes(); // 0x1017BFF0-0x1017C110
		}
	
		public static class GameRichPresenceJoinRequested_t // TypeDefIndex: 4323
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10027E40-0x10027E90
			public static void OnRunCallback(IntPtr pvParam); // 0x1017EC90-0x1017ECF0
			[AOT.MonoPInvokeCallback] // 0x10027EC0-0x10027F10
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017EC30-0x1017EC90
			[AOT.MonoPInvokeCallback] // 0x10027FA0-0x10027FF0
			public static int OnGetCallbackSizeBytes(); // 0x1017EB10-0x1017EC30
		}
	
		public static class GameConnectedClanChatMsg_t // TypeDefIndex: 4324
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10028100-0x10028150
			public static void OnRunCallback(IntPtr pvParam); // 0x1017E510-0x1017E570
			[AOT.MonoPInvokeCallback] // 0x10028220-0x10028270
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017E4B0-0x1017E510
			[AOT.MonoPInvokeCallback] // 0x10028360-0x100283B0
			public static int OnGetCallbackSizeBytes(); // 0x1017E390-0x1017E4B0
		}
	
		public static class GameConnectedChatJoin_t // TypeDefIndex: 4325
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10028450-0x100284A0
			public static void OnRunCallback(IntPtr pvParam); // 0x1017E150-0x1017E1B0
			[AOT.MonoPInvokeCallback] // 0x100284F0-0x10028540
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017E0F0-0x1017E150
			[AOT.MonoPInvokeCallback] // 0x10028630-0x10028680
			public static int OnGetCallbackSizeBytes(); // 0x1017DFD0-0x1017E0F0
		}
	
		public static class GameConnectedChatLeave_t // TypeDefIndex: 4326
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10028750-0x100287A0
			public static void OnRunCallback(IntPtr pvParam); // 0x1017E330-0x1017E390
			[AOT.MonoPInvokeCallback] // 0x10028870-0x100288C0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017E2D0-0x1017E330
			[AOT.MonoPInvokeCallback] // 0x10028940-0x10028990
			public static int OnGetCallbackSizeBytes(); // 0x1017E1B0-0x1017E2D0
		}
	
		public static class DownloadClanActivityCountsResult_t // TypeDefIndex: 4327
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10028A40-0x10028A90
			public static void OnRunCallback(IntPtr pvParam); // 0x1017B620-0x1017B680
			[AOT.MonoPInvokeCallback] // 0x10028B40-0x10028B90
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017B5C0-0x1017B620
			[AOT.MonoPInvokeCallback] // 0x10028C10-0x10028C60
			public static int OnGetCallbackSizeBytes(); // 0x1017B4A0-0x1017B5C0
		}
	
		public static class JoinClanChatRoomCompletionResult_t // TypeDefIndex: 4328
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10028D10-0x10028D60
			public static void OnRunCallback(IntPtr pvParam); // 0x10183240-0x101832A0
			[AOT.MonoPInvokeCallback] // 0x10028E60-0x10028EB0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101831E0-0x10183240
			[AOT.MonoPInvokeCallback] // 0x10029100-0x10029150
			public static int OnGetCallbackSizeBytes(); // 0x101830C0-0x101831E0
		}
	
		public static class GameConnectedFriendChatMsg_t // TypeDefIndex: 4329
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10029200-0x10029250
			public static void OnRunCallback(IntPtr pvParam); // 0x1017E6F0-0x1017E750
			[AOT.MonoPInvokeCallback] // 0x10029330-0x10029380
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017E690-0x1017E6F0
			[AOT.MonoPInvokeCallback] // 0x100293C0-0x10029410
			public static int OnGetCallbackSizeBytes(); // 0x1017E570-0x1017E690
		}
	
		public static class FriendsGetFollowerCount_t // TypeDefIndex: 4330
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10029780-0x100297D0
			public static void OnRunCallback(IntPtr pvParam); // 0x1017C530-0x1017C590
			[AOT.MonoPInvokeCallback] // 0x10029860-0x100298B0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017C4D0-0x1017C530
			[AOT.MonoPInvokeCallback] // 0x10029910-0x10029960
			public static int OnGetCallbackSizeBytes(); // 0x1017C3B0-0x1017C4D0
		}
	
		public static class FriendsIsFollowing_t // TypeDefIndex: 4331
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100299E0-0x10029A30
			public static void OnRunCallback(IntPtr pvParam); // 0x1017C710-0x1017C770
			[AOT.MonoPInvokeCallback] // 0x1002AB90-0x1002ABE0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017C6B0-0x1017C710
			[AOT.MonoPInvokeCallback] // 0x1002AC80-0x1002ACD0
			public static int OnGetCallbackSizeBytes(); // 0x1017C590-0x1017C6B0
		}
	
		public static class FriendsEnumerateFollowingList_t // TypeDefIndex: 4332
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1002AD10-0x1002AD60
			public static void OnRunCallback(IntPtr pvParam); // 0x1017C350-0x1017C3B0
			[AOT.MonoPInvokeCallback] // 0x1002ADD0-0x1002AE20
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017C2F0-0x1017C350
			[AOT.MonoPInvokeCallback] // 0x1002AE60-0x1002AEB0
			public static int OnGetCallbackSizeBytes(); // 0x1017C1D0-0x1017C2F0
		}
	
		public static class SetPersonaNameResponse_t // TypeDefIndex: 4333
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1002AF20-0x1002AF70
			public static void OnRunCallback(IntPtr pvParam); // 0x1018B5B0-0x1018B610
			[AOT.MonoPInvokeCallback] // 0x1002B000-0x1002B050
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018B550-0x1018B5B0
			[AOT.MonoPInvokeCallback] // 0x1002B0C0-0x1002B110
			public static int OnGetCallbackSizeBytes(); // 0x1018B430-0x1018B550
		}
	
		public static class GCMessageAvailable_t // TypeDefIndex: 4334
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1002B130-0x1002B180
			public static void OnRunCallback(IntPtr pvParam); // 0x1017C8F0-0x1017C950
			[AOT.MonoPInvokeCallback] // 0x1002B180-0x1002B1D0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017C890-0x1017C8F0
			[AOT.MonoPInvokeCallback] // 0x1002B2D0-0x1002B320
			public static int OnGetCallbackSizeBytes(); // 0x1017C770-0x1017C890
		}
	
		public static class GCMessageFailed_t // TypeDefIndex: 4335
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1002B320-0x1002B370
			public static void OnRunCallback(IntPtr pvParam); // 0x1017CAD0-0x1017CB30
			[AOT.MonoPInvokeCallback] // 0x1002B440-0x1002B490
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017CA70-0x1017CAD0
			[AOT.MonoPInvokeCallback] // 0x1002B500-0x1002B550
			public static int OnGetCallbackSizeBytes(); // 0x1017C950-0x1017CA70
		}
	
		public static class GSClientApprove_t // TypeDefIndex: 4336
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1002B5C0-0x1002B610
			public static void OnRunCallback(IntPtr pvParam); // 0x1017CE90-0x1017CEF0
			[AOT.MonoPInvokeCallback] // 0x1002B670-0x1002B6C0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017CE30-0x1017CE90
			[AOT.MonoPInvokeCallback] // 0x1002B750-0x1002B7A0
			public static int OnGetCallbackSizeBytes(); // 0x1017CD10-0x1017CE30
		}
	
		public static class GSClientDeny_t // TypeDefIndex: 4337
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1002B8A0-0x1002B8F0
			public static void OnRunCallback(IntPtr pvParam); // 0x1017D070-0x1017D0D0
			[AOT.MonoPInvokeCallback] // 0x1002B9A0-0x1002B9F0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017D010-0x1017D070
			[AOT.MonoPInvokeCallback] // 0x1002BAD0-0x1002BB20
			public static int OnGetCallbackSizeBytes(); // 0x1017CEF0-0x1017D010
		}
	
		public static class GSClientKick_t // TypeDefIndex: 4338
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1002BB80-0x1002BBD0
			public static void OnRunCallback(IntPtr pvParam); // 0x1017D430-0x1017D490
			[AOT.MonoPInvokeCallback] // 0x1002BC70-0x1002BCC0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017D3D0-0x1017D430
			[AOT.MonoPInvokeCallback] // 0x1002BCF0-0x1002BD40
			public static int OnGetCallbackSizeBytes(); // 0x1017D2B0-0x1017D3D0
		}
	
		public static class GSClientAchievementStatus_t // TypeDefIndex: 4339
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1002BDB0-0x1002BE00
			public static void OnRunCallback(IntPtr pvParam); // 0x1017CCB0-0x1017CD10
			[AOT.MonoPInvokeCallback] // 0x1002BE30-0x1002BE80
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017CC50-0x1017CCB0
			[AOT.MonoPInvokeCallback] // 0x1002BF10-0x1002BF60
			public static int OnGetCallbackSizeBytes(); // 0x1017CB30-0x1017CC50
		}
	
		public static class GSPolicyResponse_t // TypeDefIndex: 4340
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1002BF90-0x1002BFE0
			public static void OnRunCallback(IntPtr pvParam); // 0x1017D7F0-0x1017D850
			[AOT.MonoPInvokeCallback] // 0x1002C080-0x1002C0D0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017D790-0x1017D7F0
			[AOT.MonoPInvokeCallback] // 0x1002C100-0x1002C150
			public static int OnGetCallbackSizeBytes(); // 0x1017D670-0x1017D790
		}
	
		public static class GSGameplayStats_t // TypeDefIndex: 4341
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1002C1F0-0x1002C240
			public static void OnRunCallback(IntPtr pvParam); // 0x1017D610-0x1017D670
			[AOT.MonoPInvokeCallback] // 0x1002C270-0x1002C2C0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017D5B0-0x1017D610
			[AOT.MonoPInvokeCallback] // 0x1002C340-0x1002C390
			public static int OnGetCallbackSizeBytes(); // 0x1017D490-0x1017D5B0
		}
	
		public static class GSClientGroupStatus_t // TypeDefIndex: 4342
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1002C4B0-0x1002C500
			public static void OnRunCallback(IntPtr pvParam); // 0x1017D250-0x1017D2B0
			[AOT.MonoPInvokeCallback] // 0x1002C550-0x1002C5A0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017D1F0-0x1017D250
			[AOT.MonoPInvokeCallback] // 0x1002C700-0x1002C750
			public static int OnGetCallbackSizeBytes(); // 0x1017D0D0-0x1017D1F0
		}
	
		public static class GSReputation_t // TypeDefIndex: 4343
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1002C790-0x1002C7E0
			public static void OnRunCallback(IntPtr pvParam); // 0x1017D9D0-0x1017DA30
			[AOT.MonoPInvokeCallback] // 0x1002C840-0x1002C890
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017D970-0x1017D9D0
			[AOT.MonoPInvokeCallback] // 0x1002C960-0x1002C9B0
			public static int OnGetCallbackSizeBytes(); // 0x1017D850-0x1017D970
		}
	
		public static class AssociateWithClanResult_t // TypeDefIndex: 4344
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1002CA40-0x1002CA90
			public static void OnRunCallback(IntPtr pvParam); // 0x1017A360-0x1017A3C0
			[AOT.MonoPInvokeCallback] // 0x1002CB40-0x1002CB90
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017A300-0x1017A360
			[AOT.MonoPInvokeCallback] // 0x1002CC50-0x1002CCA0
			public static int OnGetCallbackSizeBytes(); // 0x1017A1E0-0x1017A300
		}
	
		public static class ComputeNewPlayerCompatibilityResult_t // TypeDefIndex: 4345
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1002CD00-0x1002CD50
			public static void OnRunCallback(IntPtr pvParam); // 0x1017B080-0x1017B0E0
			[AOT.MonoPInvokeCallback] // 0x1002CE10-0x1002CE60
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017B020-0x1017B080
			[AOT.MonoPInvokeCallback] // 0x1002CF30-0x1002CF80
			public static int OnGetCallbackSizeBytes(); // 0x1017AF00-0x1017B020
		}
	
		public static class GSStatsReceived_t // TypeDefIndex: 4346
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1002CFE0-0x1002D030
			public static void OnRunCallback(IntPtr pvParam); // 0x1017DBB0-0x1017DC10
			[AOT.MonoPInvokeCallback] // 0x1002D150-0x1002D1A0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017DB50-0x1017DBB0
			[AOT.MonoPInvokeCallback] // 0x1002D200-0x1002D250
			public static int OnGetCallbackSizeBytes(); // 0x1017DA30-0x1017DB50
		}
	
		public static class GSStatsStored_t // TypeDefIndex: 4347
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1002D2F0-0x1002D350
			public static void OnRunCallback(IntPtr pvParam); // 0x1017DD90-0x1017DDF0
			[AOT.MonoPInvokeCallback] // 0x1002E4A0-0x1002E4F0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017DD30-0x1017DD90
			[AOT.MonoPInvokeCallback] // 0x1002E600-0x1002E650
			public static int OnGetCallbackSizeBytes(); // 0x1017DC10-0x1017DD30
		}
	
		public static class GSStatsUnloaded_t // TypeDefIndex: 4348
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1002E6C0-0x1002E710
			public static void OnRunCallback(IntPtr pvParam); // 0x1017DF70-0x1017DFD0
			[AOT.MonoPInvokeCallback] // 0x1002E7C0-0x1002E810
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017DF10-0x1017DF70
			[AOT.MonoPInvokeCallback] // 0x1002E840-0x1002E890
			public static int OnGetCallbackSizeBytes(); // 0x1017DDF0-0x1017DF10
		}
	
		public static class HTML_BrowserReady_t // TypeDefIndex: 4349
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1002E8F0-0x1002E950
			public static void OnRunCallback(IntPtr pvParam); // 0x1017FD80-0x1017FDE0
			[AOT.MonoPInvokeCallback] // 0x1002FA80-0x1002FAD0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017FD20-0x1017FD80
			[AOT.MonoPInvokeCallback] // 0x1002FAD0-0x1002FB20
			public static int OnGetCallbackSizeBytes(); // 0x1017FC00-0x1017FD20
		}
	
		public static class HTML_NeedsPaint_t // TypeDefIndex: 4350
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1002FB80-0x1002FBD0
			public static void OnRunCallback(IntPtr pvParam); // 0x10181240-0x101812A0
			[AOT.MonoPInvokeCallback] // 0x1002FC60-0x1002FCB0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101811E0-0x10181240
			[AOT.MonoPInvokeCallback] // 0x1002FCE0-0x1002FD30
			public static int OnGetCallbackSizeBytes(); // 0x101810C0-0x101811E0
		}
	
		public static class HTML_StartRequest_t // TypeDefIndex: 4351
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1002FD90-0x1002FDE0
			public static void OnRunCallback(IntPtr pvParam); // 0x10181D80-0x10181DE0
			[AOT.MonoPInvokeCallback] // 0x1002FE10-0x1002FE60
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10181D20-0x10181D80
			[AOT.MonoPInvokeCallback] // 0x1002FEC0-0x1002FF10
			public static int OnGetCallbackSizeBytes(); // 0x10181C00-0x10181D20
		}
	
		public static class HTML_CloseBrowser_t // TypeDefIndex: 4352
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1002FF90-0x1002FFE0
			public static void OnRunCallback(IntPtr pvParam); // 0x10180330-0x10180390
			[AOT.MonoPInvokeCallback] // 0x10030060-0x100300B0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101802D0-0x10180330
			[AOT.MonoPInvokeCallback] // 0x10030110-0x10030160
			public static int OnGetCallbackSizeBytes(); // 0x101801B0-0x101802D0
		}
	
		public static class HTML_URLChanged_t // TypeDefIndex: 4353
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10030160-0x100301B0
			public static void OnRunCallback(IntPtr pvParam); // 0x10182150-0x101821B0
			[AOT.MonoPInvokeCallback] // 0x10030240-0x10030290
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101820F0-0x10182150
			[AOT.MonoPInvokeCallback] // 0x100302E0-0x10030330
			public static int OnGetCallbackSizeBytes(); // 0x10181FD0-0x101820F0
		}
	
		public static class HTML_FinishedRequest_t // TypeDefIndex: 4354
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10030330-0x10030380
			public static void OnRunCallback(IntPtr pvParam); // 0x101806F0-0x10180750
			[AOT.MonoPInvokeCallback] // 0x10030380-0x100303D0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10180690-0x101806F0
			[AOT.MonoPInvokeCallback] // 0x10030450-0x100304A0
			public static int OnGetCallbackSizeBytes(); // 0x10180570-0x10180690
		}
	
		public static class HTML_OpenLinkInNewTab_t // TypeDefIndex: 4355
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100304D0-0x10030520
			public static void OnRunCallback(IntPtr pvParam); // 0x10181600-0x10181660
			[AOT.MonoPInvokeCallback] // 0x100305A0-0x100305F0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101815A0-0x10181600
			[AOT.MonoPInvokeCallback] // 0x100305F0-0x10030640
			public static int OnGetCallbackSizeBytes(); // 0x10181480-0x101815A0
		}
	
		public static class HTML_ChangedTitle_t // TypeDefIndex: 4356
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100306A0-0x100306F0
			public static void OnRunCallback(IntPtr pvParam); // 0x10180150-0x101801B0
			[AOT.MonoPInvokeCallback] // 0x10030720-0x10030770
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101800F0-0x10180150
			[AOT.MonoPInvokeCallback] // 0x100307B0-0x10030800
			public static int OnGetCallbackSizeBytes(); // 0x1017FFD0-0x101800F0
		}
	
		public static class HTML_SearchResults_t // TypeDefIndex: 4357
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10030870-0x100308C0
			public static void OnRunCallback(IntPtr pvParam); // 0x101817E0-0x10181840
			[AOT.MonoPInvokeCallback] // 0x10030930-0x10030980
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10181780-0x101817E0
			[AOT.MonoPInvokeCallback] // 0x10030A20-0x10030A70
			public static int OnGetCallbackSizeBytes(); // 0x10181660-0x10181780
		}
	
		public static class HTML_CanGoBackAndForward_t // TypeDefIndex: 4358
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10030A70-0x10030AC0
			public static void OnRunCallback(IntPtr pvParam); // 0x1017FF60-0x1017FFD0
			[AOT.MonoPInvokeCallback] // 0x10030B00-0x10030B50
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017FF00-0x1017FF60
			[AOT.MonoPInvokeCallback] // 0x10030C60-0x10030CB0
			public static int OnGetCallbackSizeBytes(); // 0x1017FDE0-0x1017FF00
		}
	
		public static class HTML_HorizontalScroll_t // TypeDefIndex: 4359
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10030F00-0x10030F50
			public static void OnRunCallback(IntPtr pvParam); // 0x10180AB0-0x10180B10
			[AOT.MonoPInvokeCallback] // 0x10030F80-0x10030FD0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10180A50-0x10180AB0
			[AOT.MonoPInvokeCallback] // 0x10031030-0x10031080
			public static int OnGetCallbackSizeBytes(); // 0x10180930-0x10180A50
		}
	
		public static class HTML_VerticalScroll_t // TypeDefIndex: 4360
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100310E0-0x10031130
			public static void OnRunCallback(IntPtr pvParam); // 0x10182510-0x10182570
			[AOT.MonoPInvokeCallback] // 0x10031130-0x10031180
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101824B0-0x10182510
			[AOT.MonoPInvokeCallback] // 0x100312D0-0x10031320
			public static int OnGetCallbackSizeBytes(); // 0x10182390-0x101824B0
		}
	
		public static class HTML_LinkAtPosition_t // TypeDefIndex: 4361
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10032510-0x10032560
			public static void OnRunCallback(IntPtr pvParam); // 0x10181060-0x101810C0
			[AOT.MonoPInvokeCallback] // 0x10032710-0x10032760
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10181000-0x10181060
			[AOT.MonoPInvokeCallback] // 0x100327A0-0x100327F0
			public static int OnGetCallbackSizeBytes(); // 0x10180ED0-0x10181000
		}
	
		public static class HTML_JSAlert_t // TypeDefIndex: 4362
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10032880-0x100328D0
			public static void OnRunCallback(IntPtr pvParam); // 0x10180C90-0x10180CF0
			[AOT.MonoPInvokeCallback] // 0x10032910-0x10032960
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10180C30-0x10180C90
			[AOT.MonoPInvokeCallback] // 0x100329A0-0x100329F0
			public static int OnGetCallbackSizeBytes(); // 0x10180B10-0x10180C30
		}
	
		public static class HTML_JSConfirm_t // TypeDefIndex: 4363
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10032A60-0x10032AB0
			public static void OnRunCallback(IntPtr pvParam); // 0x10180E70-0x10180ED0
			[AOT.MonoPInvokeCallback] // 0x10032AE0-0x10032B30
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10180E10-0x10180E70
			[AOT.MonoPInvokeCallback] // 0x10032BE0-0x10032C30
			public static int OnGetCallbackSizeBytes(); // 0x10180CF0-0x10180E10
		}
	
		public static class HTML_FileOpenDialog_t // TypeDefIndex: 4364
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10032C60-0x10032CB0
			public static void OnRunCallback(IntPtr pvParam); // 0x10180510-0x10180570
			[AOT.MonoPInvokeCallback] // 0x10032CE0-0x10032D30
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101804B0-0x10180510
			[AOT.MonoPInvokeCallback] // 0x10032D90-0x10032DE0
			public static int OnGetCallbackSizeBytes(); // 0x10180390-0x101804B0
		}
	
		public static class HTML_NewWindow_t // TypeDefIndex: 4365
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10032E30-0x10032E80
			public static void OnRunCallback(IntPtr pvParam); // 0x10181420-0x10181480
			[AOT.MonoPInvokeCallback] // 0x10032EB0-0x10032F00
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101813C0-0x10181420
			[AOT.MonoPInvokeCallback] // 0x10032F00-0x10032F50
			public static int OnGetCallbackSizeBytes(); // 0x101812A0-0x101813C0
		}
	
		public static class HTML_SetCursor_t // TypeDefIndex: 4366
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10032F50-0x10032FA0
			public static void OnRunCallback(IntPtr pvParam); // 0x101819C0-0x10181A20
			[AOT.MonoPInvokeCallback] // 0x10032FD0-0x10033020
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10181960-0x101819C0
			[AOT.MonoPInvokeCallback] // 0x10033050-0x100330A0
			public static int OnGetCallbackSizeBytes(); // 0x10181840-0x10181960
		}
	
		public static class HTML_StatusText_t // TypeDefIndex: 4367
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100330D0-0x10033120
			public static void OnRunCallback(IntPtr pvParam); // 0x10181F60-0x10181FD0
			[AOT.MonoPInvokeCallback] // 0x10033180-0x100331D0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10181F00-0x10181F60
			[AOT.MonoPInvokeCallback] // 0x10033250-0x100332A0
			public static int OnGetCallbackSizeBytes(); // 0x10181DE0-0x10181F00
		}
	
		public static class HTML_ShowToolTip_t // TypeDefIndex: 4368
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100343C0-0x10034410
			public static void OnRunCallback(IntPtr pvParam); // 0x10181BA0-0x10181C00
			[AOT.MonoPInvokeCallback] // 0x10034410-0x10034460
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10181B40-0x10181BA0
			[AOT.MonoPInvokeCallback] // 0x10034460-0x100344B0
			public static int OnGetCallbackSizeBytes(); // 0x10181A20-0x10181B40
		}
	
		public static class HTML_UpdateToolTip_t // TypeDefIndex: 4369
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100344B0-0x10034500
			public static void OnRunCallback(IntPtr pvParam); // 0x10182330-0x10182390
			[AOT.MonoPInvokeCallback] // 0x10034500-0x10034550
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101822D0-0x10182330
			[AOT.MonoPInvokeCallback] // 0x10034550-0x100345A0
			public static int OnGetCallbackSizeBytes(); // 0x101821B0-0x101822D0
		}
	
		public static class HTML_HideToolTip_t // TypeDefIndex: 4370
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100345F0-0x10034640
			public static void OnRunCallback(IntPtr pvParam); // 0x101808D0-0x10180930
			[AOT.MonoPInvokeCallback] // 0x10034640-0x10034690
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10180870-0x101808D0
			[AOT.MonoPInvokeCallback] // 0x10034690-0x100346E0
			public static int OnGetCallbackSizeBytes(); // 0x10180750-0x10180870
		}
	
		public static class HTTPRequestCompleted_t // TypeDefIndex: 4371
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100346E0-0x10034730
			public static void OnRunCallback(IntPtr pvParam); // 0x101826F0-0x10182750
			[AOT.MonoPInvokeCallback] // 0x10034730-0x10034780
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10182690-0x101826F0
			[AOT.MonoPInvokeCallback] // 0x100347B0-0x10034800
			public static int OnGetCallbackSizeBytes(); // 0x10182570-0x10182690
		}
	
		public static class HTTPRequestHeadersReceived_t // TypeDefIndex: 4372
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10034830-0x10034880
			public static void OnRunCallback(IntPtr pvParam); // 0x10182AB0-0x10182B10
			[AOT.MonoPInvokeCallback] // 0x100348B0-0x10034900
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10182A50-0x10182AB0
			[AOT.MonoPInvokeCallback] // 0x10034990-0x100349E0
			public static int OnGetCallbackSizeBytes(); // 0x10182930-0x10182A50
		}
	
		public static class HTTPRequestDataReceived_t // TypeDefIndex: 4373
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10034B00-0x10034B50
			public static void OnRunCallback(IntPtr pvParam); // 0x101828D0-0x10182930
			[AOT.MonoPInvokeCallback] // 0x10034BA0-0x10034BF0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10182870-0x101828D0
			[AOT.MonoPInvokeCallback] // 0x10034C50-0x10034CA0
			public static int OnGetCallbackSizeBytes(); // 0x10182750-0x10182870
		}
	
		public static class SteamInventoryResultReady_t // TypeDefIndex: 4374
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10034CE0-0x10034D30
			public static void OnRunCallback(IntPtr pvParam); // 0x1018DF30-0x1018DF90
			[AOT.MonoPInvokeCallback] // 0x10034D80-0x10034DD0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018DED0-0x1018DF30
			[AOT.MonoPInvokeCallback] // 0x10034E90-0x10034EE0
			public static int OnGetCallbackSizeBytes(); // 0x1018DDB0-0x1018DED0
		}
	
		public static class SteamInventoryFullUpdate_t // TypeDefIndex: 4375
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10034F10-0x10034F60
			public static void OnRunCallback(IntPtr pvParam); // 0x1018DD50-0x1018DDB0
			[AOT.MonoPInvokeCallback] // 0x10035040-0x10035090
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018DCF0-0x1018DD50
			[AOT.MonoPInvokeCallback] // 0x10035360-0x100353B0
			public static int OnGetCallbackSizeBytes(); // 0x1018DBD0-0x1018DCF0
		}
	
		public static class SteamInventoryDefinitionUpdate_t // TypeDefIndex: 4376
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10035490-0x100354E0
			public static void OnRunCallback(IntPtr pvParam); // 0x1018D990-0x1018D9F0
			[AOT.MonoPInvokeCallback] // 0x10035510-0x10035560
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018D930-0x1018D990
			[AOT.MonoPInvokeCallback] // 0x100355E0-0x10035630
			public static int OnGetCallbackSizeBytes(); // 0x1018D810-0x1018D930
		}
	
		public static class SteamInventoryEligiblePromoItemDefIDs_t // TypeDefIndex: 4377
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10035630-0x10035680
			public static void OnRunCallback(IntPtr pvParam); // 0x1018DB70-0x1018DBD0
			[AOT.MonoPInvokeCallback] // 0x10035760-0x100357B0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018DB10-0x1018DB70
			[AOT.MonoPInvokeCallback] // 0x10036920-0x10036970
			public static int OnGetCallbackSizeBytes(); // 0x1018D9F0-0x1018DB10
		}
	
		public static class FavoritesListChanged_t // TypeDefIndex: 4378
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10036A20-0x10036A70
			public static void OnRunCallback(IntPtr pvParam); // 0x1017BDA0-0x1017BE00
			[AOT.MonoPInvokeCallback] // 0x10036B10-0x10036B60
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017BD40-0x1017BDA0
			[AOT.MonoPInvokeCallback] // 0x10036BC0-0x10036C10
			public static int OnGetCallbackSizeBytes(); // 0x1017BC20-0x1017BD40
		}
	
		public static class LobbyInvite_t // TypeDefIndex: 4379
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10036CC0-0x10036D10
			public static void OnRunCallback(IntPtr pvParam); // 0x101848D0-0x10184930
			[AOT.MonoPInvokeCallback] // 0x10036D80-0x10036DD0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10184870-0x101848D0
			[AOT.MonoPInvokeCallback] // 0x10036DD0-0x10036E20
			public static int OnGetCallbackSizeBytes(); // 0x10184750-0x10184870
		}
	
		public static class LobbyEnter_t // TypeDefIndex: 4380
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10036E70-0x10036EC0
			public static void OnRunCallback(IntPtr pvParam); // 0x10184510-0x10184570
			[AOT.MonoPInvokeCallback] // 0x10036F40-0x10036F90
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101844B0-0x10184510
			[AOT.MonoPInvokeCallback] // 0x10037030-0x10037080
			public static int OnGetCallbackSizeBytes(); // 0x10184390-0x101844B0
		}
	
		public static class LobbyDataUpdate_t // TypeDefIndex: 4381
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10037110-0x10037160
			public static void OnRunCallback(IntPtr pvParam); // 0x10184330-0x10184390
			[AOT.MonoPInvokeCallback] // 0x10037200-0x10037250
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101842D0-0x10184330
			[AOT.MonoPInvokeCallback] // 0x10037290-0x100372E0
			public static int OnGetCallbackSizeBytes(); // 0x101841B0-0x101842D0
		}
	
		public static class LobbyChatUpdate_t // TypeDefIndex: 4382
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10037390-0x100373E0
			public static void OnRunCallback(IntPtr pvParam); // 0x10183F60-0x10183FD0
			[AOT.MonoPInvokeCallback] // 0x10037500-0x10037550
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10183F00-0x10183F60
			[AOT.MonoPInvokeCallback] // 0x100375F0-0x10037640
			public static int OnGetCallbackSizeBytes(); // 0x10183DE0-0x10183F00
		}
	
		public static class LobbyChatMsg_t // TypeDefIndex: 4383
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10037750-0x100377A0
			public static void OnRunCallback(IntPtr pvParam); // 0x10183D80-0x10183DE0
			[AOT.MonoPInvokeCallback] // 0x100377A0-0x100377F0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10183D20-0x10183D80
			[AOT.MonoPInvokeCallback] // 0x10037900-0x10037950
			public static int OnGetCallbackSizeBytes(); // 0x10183C00-0x10183D20
		}
	
		public static class LobbyGameCreated_t // TypeDefIndex: 4384
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10037950-0x100379A0
			public static void OnRunCallback(IntPtr pvParam); // 0x101846F0-0x10184750
			[AOT.MonoPInvokeCallback] // 0x10037A20-0x10037A70
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10184690-0x101846F0
			[AOT.MonoPInvokeCallback] // 0x10037AA0-0x10037AF0
			public static int OnGetCallbackSizeBytes(); // 0x10184570-0x10184690
		}
	
		public static class LobbyMatchList_t // TypeDefIndex: 4385
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10037BD0-0x10037C20
			public static void OnRunCallback(IntPtr pvParam); // 0x10184C90-0x10184CF0
			[AOT.MonoPInvokeCallback] // 0x10037C80-0x10037CD0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10184C30-0x10184C90
			[AOT.MonoPInvokeCallback] // 0x10037D60-0x10037DB0
			public static int OnGetCallbackSizeBytes(); // 0x10184B10-0x10184C30
		}
	
		public static class LobbyKicked_t // TypeDefIndex: 4386
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10037E70-0x10037EC0
			public static void OnRunCallback(IntPtr pvParam); // 0x10184AB0-0x10184B10
			[AOT.MonoPInvokeCallback] // 0x10037FB0-0x10038000
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10184A50-0x10184AB0
			[AOT.MonoPInvokeCallback] // 0x10038040-0x10038090
			public static int OnGetCallbackSizeBytes(); // 0x10184930-0x10184A50
		}
	
		public static class LobbyCreated_t // TypeDefIndex: 4387
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100381B0-0x10038200
			public static void OnRunCallback(IntPtr pvParam); // 0x10184150-0x101841B0
			[AOT.MonoPInvokeCallback] // 0x10038270-0x100382C0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101840F0-0x10184150
			[AOT.MonoPInvokeCallback] // 0x100383D0-0x10038420
			public static int OnGetCallbackSizeBytes(); // 0x10183FD0-0x101840F0
		}
	
		public static class FavoritesListAccountsUpdated_t // TypeDefIndex: 4388
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100384D0-0x10038520
			public static void OnRunCallback(IntPtr pvParam); // 0x1017BBC0-0x1017BC20
			[AOT.MonoPInvokeCallback] // 0x10038680-0x100386D0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017BB60-0x1017BBC0
			[AOT.MonoPInvokeCallback] // 0x10038710-0x10038760
			public static int OnGetCallbackSizeBytes(); // 0x1017BA40-0x1017BB60
		}
	
		public static class PlaybackStatusHasChanged_t // TypeDefIndex: 4389
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10038850-0x100388A0
			public static void OnRunCallback(IntPtr pvParam); // 0x101876B0-0x101877B0
			[AOT.MonoPInvokeCallback] // 0x100389B0-0x10038A00
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10187650-0x101876B0
			[AOT.MonoPInvokeCallback] // 0x10038A30-0x10038A80
			public static int OnGetCallbackSizeBytes(); // 0x10187530-0x10187650
		}
	
		public static class VolumeHasChanged_t // TypeDefIndex: 4390
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10038B50-0x10038BA0
			public static void OnRunCallback(IntPtr pvParam); // 0x1088DB90-0x1088DBF0
			[AOT.MonoPInvokeCallback] // 0x10038C10-0x10038C60
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1088DB30-0x1088DB90
			[AOT.MonoPInvokeCallback] // 0x10038D30-0x10038D80
			public static int OnGetCallbackSizeBytes(); // 0x1088DA10-0x1088DB30
		}
	
		public static class MusicPlayerRemoteWillActivate_t // TypeDefIndex: 4391
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10038DB0-0x10038E00
			public static void OnRunCallback(IntPtr pvParam); // 0x10185420-0x10185480
			[AOT.MonoPInvokeCallback] // 0x10038ED0-0x10038F20
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101853C0-0x10185420
			[AOT.MonoPInvokeCallback] // 0x1003A0E0-0x1003A130
			public static int OnGetCallbackSizeBytes(); // 0x101852A0-0x101853C0
		}
	
		public static class MusicPlayerRemoteWillDeactivate_t // TypeDefIndex: 4392
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003A1A0-0x1003A1F0
			public static void OnRunCallback(IntPtr pvParam); // 0x10185600-0x10185660
			[AOT.MonoPInvokeCallback] // 0x1003A250-0x1003A2A0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101855A0-0x10185600
			[AOT.MonoPInvokeCallback] // 0x1003A2F0-0x1003A340
			public static int OnGetCallbackSizeBytes(); // 0x10185480-0x101855A0
		}
	
		public static class MusicPlayerRemoteToFront_t // TypeDefIndex: 4393
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003A390-0x1003A3E0
			public static void OnRunCallback(IntPtr pvParam); // 0x10185240-0x101852A0
			[AOT.MonoPInvokeCallback] // 0x1003A480-0x1003A4D0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101851E0-0x10185240
			[AOT.MonoPInvokeCallback] // 0x1003A550-0x1003A5A0
			public static int OnGetCallbackSizeBytes(); // 0x101850C0-0x101851E0
		}
	
		public static class MusicPlayerWillQuit_t // TypeDefIndex: 4394
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003A6B0-0x1003A700
			public static void OnRunCallback(IntPtr pvParam); // 0x10186AB0-0x10186B10
			[AOT.MonoPInvokeCallback] // 0x1003A760-0x1003A7B0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10186A50-0x10186AB0
			[AOT.MonoPInvokeCallback] // 0x1003B9F0-0x1003BA40
			public static int OnGetCallbackSizeBytes(); // 0x10186930-0x10186A50
		}
	
		public static class MusicPlayerWantsPlay_t // TypeDefIndex: 4395
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003BAA0-0x1003BAF0
			public static void OnRunCallback(IntPtr pvParam); // 0x10186330-0x10186390
			[AOT.MonoPInvokeCallback] // 0x1003BB60-0x1003BBB0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101862D0-0x10186330
			[AOT.MonoPInvokeCallback] // 0x1003BBE0-0x1003BC30
			public static int OnGetCallbackSizeBytes(); // 0x101861B0-0x101862D0
		}
	
		public static class MusicPlayerWantsPause_t // TypeDefIndex: 4396
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003BC30-0x1003BC80
			public static void OnRunCallback(IntPtr pvParam); // 0x10185D80-0x10185DE0
			[AOT.MonoPInvokeCallback] // 0x1003BC80-0x1003BCD0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10185D20-0x10185D80
			[AOT.MonoPInvokeCallback] // 0x1003BD10-0x1003BD60
			public static int OnGetCallbackSizeBytes(); // 0x10185C00-0x10185D20
		}
	
		public static class MusicPlayerWantsPlayPrevious_t // TypeDefIndex: 4397
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003BDA0-0x1003BDF0
			public static void OnRunCallback(IntPtr pvParam); // 0x10186150-0x101861B0
			[AOT.MonoPInvokeCallback] // 0x1003BDF0-0x1003BE40
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101860F0-0x10186150
			[AOT.MonoPInvokeCallback] // 0x1003BE80-0x1003BED0
			public static int OnGetCallbackSizeBytes(); // 0x10185FD0-0x101860F0
		}
	
		public static class MusicPlayerWantsPlayNext_t // TypeDefIndex: 4398
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003C170-0x1003C1C0
			public static void OnRunCallback(IntPtr pvParam); // 0x10185F60-0x10185FD0
			[AOT.MonoPInvokeCallback] // 0x1003C1C0-0x1003C210
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10185F00-0x10185F60
			[AOT.MonoPInvokeCallback] // 0x1003C210-0x1003C260
			public static int OnGetCallbackSizeBytes(); // 0x10185DE0-0x10185F00
		}
	
		public static class MusicPlayerWantsShuffled_t // TypeDefIndex: 4399
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003C260-0x1003C2B0
			public static void OnRunCallback(IntPtr pvParam); // 0x101866F0-0x10186750
			[AOT.MonoPInvokeCallback] // 0x1003C2B0-0x1003C300
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10186690-0x101866F0
			[AOT.MonoPInvokeCallback] // 0x1003C300-0x1003C350
			public static int OnGetCallbackSizeBytes(); // 0x10186570-0x10186690
		}
	
		public static class MusicPlayerWantsLooped_t // TypeDefIndex: 4400
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003C3A0-0x1003C3F0
			public static void OnRunCallback(IntPtr pvParam); // 0x10185BA0-0x10185C00
			[AOT.MonoPInvokeCallback] // 0x1003C440-0x1003C490
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10185B40-0x10185BA0
			[AOT.MonoPInvokeCallback] // 0x1003C560-0x1003C5B0
			public static int OnGetCallbackSizeBytes(); // 0x10185A20-0x10185B40
		}
	
		public static class MusicPlayerWantsVolume_t // TypeDefIndex: 4401
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003C5F0-0x1003C640
			public static void OnRunCallback(IntPtr pvParam); // 0x101868D0-0x10186930
			[AOT.MonoPInvokeCallback] // 0x1003C640-0x1003C690
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10186870-0x101868D0
			[AOT.MonoPInvokeCallback] // 0x1003C690-0x1003C6E0
			public static int OnGetCallbackSizeBytes(); // 0x10186750-0x10186870
		}
	
		public static class MusicPlayerSelectsQueueEntry_t // TypeDefIndex: 4402
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003C720-0x1003C770
			public static void OnRunCallback(IntPtr pvParam); // 0x101859C0-0x10185A20
			[AOT.MonoPInvokeCallback] // 0x1003C770-0x1003C7C0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10185960-0x101859C0
			[AOT.MonoPInvokeCallback] // 0x1003C7C0-0x1003C810
			public static int OnGetCallbackSizeBytes(); // 0x10185840-0x10185960
		}
	
		public static class MusicPlayerSelectsPlaylistEntry_t // TypeDefIndex: 4403
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003C810-0x1003C860
			public static void OnRunCallback(IntPtr pvParam); // 0x101857E0-0x10185840
			[AOT.MonoPInvokeCallback] // 0x1003C920-0x1003C970
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10185780-0x101857E0
			[AOT.MonoPInvokeCallback] // 0x1003C970-0x1003C9C0
			public static int OnGetCallbackSizeBytes(); // 0x10185660-0x10185780
		}
	
		public static class MusicPlayerWantsPlayingRepeatStatus_t // TypeDefIndex: 4404
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003CA00-0x1003CA50
			public static void OnRunCallback(IntPtr pvParam); // 0x10186510-0x10186570
			[AOT.MonoPInvokeCallback] // 0x1003CA50-0x1003CAA0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101864B0-0x10186510
			[AOT.MonoPInvokeCallback] // 0x1003CAA0-0x1003CAF0
			public static int OnGetCallbackSizeBytes(); // 0x10186390-0x101864B0
		}
	
		public static class P2PSessionRequest_t // TypeDefIndex: 4405
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003CAF0-0x1003CB40
			public static void OnRunCallback(IntPtr pvParam); // 0x10187240-0x101872A0
			[AOT.MonoPInvokeCallback] // 0x1003CB40-0x1003CB90
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101871E0-0x10187240
			[AOT.MonoPInvokeCallback] // 0x1003CB90-0x1003CBE0
			public static int OnGetCallbackSizeBytes(); // 0x101870C0-0x101871E0
		}
	
		public static class P2PSessionConnectFail_t // TypeDefIndex: 4406
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003CD40-0x1003CD90
			public static void OnRunCallback(IntPtr pvParam); // 0x10187060-0x101870C0
			[AOT.MonoPInvokeCallback] // 0x1003CDE0-0x1003CE30
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10187000-0x10187060
			[AOT.MonoPInvokeCallback] // 0x1003DFA0-0x1003E000
			public static int OnGetCallbackSizeBytes(); // 0x10186ED0-0x10187000
		}
	
		public static class SocketStatusCallback_t // TypeDefIndex: 4407
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003E050-0x1003E0A0
			public static void OnRunCallback(IntPtr pvParam); // 0x1018BA20-0x1018BA80
			[AOT.MonoPInvokeCallback] // 0x1003E120-0x1003E170
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018B9C0-0x1018BA20
			[AOT.MonoPInvokeCallback] // 0x1003E170-0x1003E1C0
			public static int OnGetCallbackSizeBytes(); // 0x1018B8A0-0x1018B9C0
		}
	
		public static class RemoteStorageAppSyncedClient_t // TypeDefIndex: 4408
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003E1C0-0x1003E210
			public static void OnRunCallback(IntPtr pvParam); // 0x10188060-0x101880C0
			[AOT.MonoPInvokeCallback] // 0x1003E210-0x1003E260
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10188000-0x10188060
			[AOT.MonoPInvokeCallback] // 0x1003E260-0x1003E2B0
			public static int OnGetCallbackSizeBytes(); // 0x10187ED0-0x10188000
		}
	
		public static class RemoteStorageAppSyncedServer_t // TypeDefIndex: 4409
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003E300-0x1003E350
			public static void OnRunCallback(IntPtr pvParam); // 0x10188240-0x101882A0
			[AOT.MonoPInvokeCallback] // 0x1003E3A0-0x1003E3F0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101881E0-0x10188240
			[AOT.MonoPInvokeCallback] // 0x1003E440-0x1003E490
			public static int OnGetCallbackSizeBytes(); // 0x101880C0-0x101881E0
		}
	
		public static class RemoteStorageAppSyncProgress_t // TypeDefIndex: 4410
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003E4E0-0x1003E530
			public static void OnRunCallback(IntPtr pvParam); // 0x10187C90-0x10187CF0
			[AOT.MonoPInvokeCallback] // 0x1003E730-0x1003E780
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10187C30-0x10187C90
			[AOT.MonoPInvokeCallback] // 0x1003E7F0-0x1003E840
			public static int OnGetCallbackSizeBytes(); // 0x10187B10-0x10187C30
		}
	
		public static class RemoteStorageAppSyncStatusCheck_t // TypeDefIndex: 4411
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003E840-0x1003E890
			public static void OnRunCallback(IntPtr pvParam); // 0x10187E70-0x10187ED0
			[AOT.MonoPInvokeCallback] // 0x1003E890-0x1003E8E0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10187E10-0x10187E70
			[AOT.MonoPInvokeCallback] // 0x1003E8E0-0x1003E930
			public static int OnGetCallbackSizeBytes(); // 0x10187CF0-0x10187E10
		}
	
		public static class RemoteStorageFileShareResult_t // TypeDefIndex: 4412
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003E930-0x1003E980
			public static void OnRunCallback(IntPtr pvParam); // 0x10189330-0x10189390
			[AOT.MonoPInvokeCallback] // 0x1003E980-0x1003E9D0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101892D0-0x10189330
			[AOT.MonoPInvokeCallback] // 0x1003E9D0-0x1003EA20
			public static int OnGetCallbackSizeBytes(); // 0x101891B0-0x101892D0
		}
	
		public static class RemoteStoragePublishFileResult_t // TypeDefIndex: 4413
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003EA20-0x1003EA70
			public static void OnRunCallback(IntPtr pvParam); // 0x10189C90-0x10189CF0
			[AOT.MonoPInvokeCallback] // 0x1003EAC0-0x1003EB10
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10189C30-0x10189C90
			[AOT.MonoPInvokeCallback] // 0x1003EB60-0x1003EBB0
			public static int OnGetCallbackSizeBytes(); // 0x10189B10-0x10189C30
		}
	
		public static class RemoteStorageDeletePublishedFileResult_t // TypeDefIndex: 4414
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003EC80-0x1003ECD0
			public static void OnRunCallback(IntPtr pvParam); // 0x10188420-0x10188480
			[AOT.MonoPInvokeCallback] // 0x1003ED20-0x1003ED70
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101883C0-0x10188420
			[AOT.MonoPInvokeCallback] // 0x1003ED70-0x1003EDC0
			public static int OnGetCallbackSizeBytes(); // 0x101882A0-0x101883C0
		}
	
		public static class RemoteStorageEnumerateUserPublishedFilesResult_t // TypeDefIndex: 4415
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003EF00-0x1003EF50
			public static void OnRunCallback(IntPtr pvParam); // 0x101889C0-0x10188A20
			[AOT.MonoPInvokeCallback] // 0x1003EF50-0x1003EFA0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10188960-0x101889C0
			[AOT.MonoPInvokeCallback] // 0x1003EFA0-0x1003F000
			public static int OnGetCallbackSizeBytes(); // 0x10188840-0x10188960
		}
	
		public static class RemoteStorageSubscribePublishedFileResult_t // TypeDefIndex: 4416
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003F050-0x1003F0A0
			public static void OnRunCallback(IntPtr pvParam); // 0x1018A7E0-0x1018A840
			[AOT.MonoPInvokeCallback] // 0x1003F0F0-0x1003F140
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018A780-0x1018A7E0
			[AOT.MonoPInvokeCallback] // 0x1003F190-0x1003F1E0
			public static int OnGetCallbackSizeBytes(); // 0x1018A660-0x1018A780
		}
	
		public static class RemoteStorageEnumerateUserSubscribedFilesResult_t // TypeDefIndex: 4417
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003F230-0x1003F280
			public static void OnRunCallback(IntPtr pvParam); // 0x10188D80-0x10188DE0
			[AOT.MonoPInvokeCallback] // 0x1003F280-0x1003F2D0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10188D20-0x10188D80
			[AOT.MonoPInvokeCallback] // 0x1003F2D0-0x1003F320
			public static int OnGetCallbackSizeBytes(); // 0x10188C00-0x10188D20
		}
	
		public static class RemoteStorageUnsubscribePublishedFileResult_t // TypeDefIndex: 4418
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003F370-0x1003F3C0
			public static void OnRunCallback(IntPtr pvParam); // 0x1018A9C0-0x1018AA20
			[AOT.MonoPInvokeCallback] // 0x1003F410-0x1003F460
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018A960-0x1018A9C0
			[AOT.MonoPInvokeCallback] // 0x1003F4B0-0x1003F500
			public static int OnGetCallbackSizeBytes(); // 0x1018A840-0x1018A960
		}
	
		public static class RemoteStorageUpdatePublishedFileResult_t // TypeDefIndex: 4419
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003F550-0x1003F5A0
			public static void OnRunCallback(IntPtr pvParam); // 0x1018ABA0-0x1018AC00
			[AOT.MonoPInvokeCallback] // 0x1003F5A0-0x1003F5F0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018AB40-0x1018ABA0
			[AOT.MonoPInvokeCallback] // 0x1003F5F0-0x1003F640
			public static int OnGetCallbackSizeBytes(); // 0x1018AA20-0x1018AB40
		}
	
		public static class RemoteStorageDownloadUGCResult_t // TypeDefIndex: 4420
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003F670-0x1003F6C0
			public static void OnRunCallback(IntPtr pvParam); // 0x10188600-0x10188660
			[AOT.MonoPInvokeCallback] // 0x1003F740-0x1003F790
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101885A0-0x10188600
			[AOT.MonoPInvokeCallback] // 0x1003F790-0x1003F7E0
			public static int OnGetCallbackSizeBytes(); // 0x10188480-0x101885A0
		}
	
		public static class RemoteStorageGetPublishedFileDetailsResult_t // TypeDefIndex: 4421
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003F810-0x1003F860
			public static void OnRunCallback(IntPtr pvParam); // 0x101896F0-0x10189750
			[AOT.MonoPInvokeCallback] // 0x1003F860-0x1003F8B0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10189690-0x101896F0
			[AOT.MonoPInvokeCallback] // 0x1003F920-0x1003F970
			public static int OnGetCallbackSizeBytes(); // 0x10189570-0x10189690
		}
	
		public static class RemoteStorageEnumerateWorkshopFilesResult_t // TypeDefIndex: 4422
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003F970-0x1003F9C0
			public static void OnRunCallback(IntPtr pvParam); // 0x10188F60-0x10188FD0
			[AOT.MonoPInvokeCallback] // 0x1003F9C0-0x1003FA10
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10188F00-0x10188F60
			[AOT.MonoPInvokeCallback] // 0x1003FA60-0x1003FAB0
			public static int OnGetCallbackSizeBytes(); // 0x10188DE0-0x10188F00
		}
	
		public static class RemoteStorageGetPublishedItemVoteDetailsResult_t // TypeDefIndex: 4423
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003FAB0-0x1003FB00
			public static void OnRunCallback(IntPtr pvParam); // 0x101898D0-0x10189930
			[AOT.MonoPInvokeCallback] // 0x1003FB30-0x1003FB80
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10189870-0x101898D0
			[AOT.MonoPInvokeCallback] // 0x1003FBD0-0x1003FC20
			public static int OnGetCallbackSizeBytes(); // 0x10189750-0x10189870
		}
	
		public static class RemoteStoragePublishedFileSubscribed_t // TypeDefIndex: 4424
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003FC70-0x1003FCC0
			public static void OnRunCallback(IntPtr pvParam); // 0x1018A060-0x1018A0C0
			[AOT.MonoPInvokeCallback] // 0x1003FCF0-0x1003FD40
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018A000-0x1018A060
			[AOT.MonoPInvokeCallback] // 0x1003FD60-0x1003FDB0
			public static int OnGetCallbackSizeBytes(); // 0x10189ED0-0x1018A000
		}
	
		public static class RemoteStoragePublishedFileUnsubscribed_t // TypeDefIndex: 4425
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003FDE0-0x1003FE30
			public static void OnRunCallback(IntPtr pvParam); // 0x1018A240-0x1018A2A0
			[AOT.MonoPInvokeCallback] // 0x1003FEA0-0x1003FEF0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018A1E0-0x1018A240
			[AOT.MonoPInvokeCallback] // 0x1003FF40-0x1003FF90
			public static int OnGetCallbackSizeBytes(); // 0x1018A0C0-0x1018A1E0
		}
	
		public static class RemoteStoragePublishedFileDeleted_t // TypeDefIndex: 4426
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1003FF90-0x1003FFE0
			public static void OnRunCallback(IntPtr pvParam); // 0x10189E70-0x10189ED0
			[AOT.MonoPInvokeCallback] // 0x10040080-0x100400D0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10189E10-0x10189E70
			[AOT.MonoPInvokeCallback] // 0x10040110-0x10040160
			public static int OnGetCallbackSizeBytes(); // 0x10189CF0-0x10189E10
		}
	
		public static class RemoteStorageUpdateUserPublishedItemVoteResult_t // TypeDefIndex: 4427
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100401F0-0x10040240
			public static void OnRunCallback(IntPtr pvParam); // 0x1018AD80-0x1018ADE0
			[AOT.MonoPInvokeCallback] // 0x10040240-0x10040290
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018AD20-0x1018AD80
			[AOT.MonoPInvokeCallback] // 0x10040310-0x10040360
			public static int OnGetCallbackSizeBytes(); // 0x1018AC00-0x1018AD20
		}
	
		public static class RemoteStorageUserVoteDetails_t // TypeDefIndex: 4428
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100403E0-0x10040430
			public static void OnRunCallback(IntPtr pvParam); // 0x1018AF60-0x1018AFC0
			[AOT.MonoPInvokeCallback] // 0x10040460-0x100404B0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018AF00-0x1018AF60
			[AOT.MonoPInvokeCallback] // 0x100404E0-0x10040530
			public static int OnGetCallbackSizeBytes(); // 0x1018ADE0-0x1018AF00
		}
	
		public static class RemoteStorageEnumerateUserSharedWorkshopFilesResult_t // TypeDefIndex: 4429
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10040530-0x10040580
			public static void OnRunCallback(IntPtr pvParam); // 0x10188BA0-0x10188C00
			[AOT.MonoPInvokeCallback] // 0x10040680-0x100406D0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10188B40-0x10188BA0
			[AOT.MonoPInvokeCallback] // 0x100406D0-0x10040720
			public static int OnGetCallbackSizeBytes(); // 0x10188A20-0x10188B40
		}
	
		public static class RemoteStorageSetUserPublishedFileActionResult_t // TypeDefIndex: 4430
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10040760-0x100407B0
			public static void OnRunCallback(IntPtr pvParam); // 0x1018A600-0x1018A660
			[AOT.MonoPInvokeCallback] // 0x100407B0-0x10040800
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018A5A0-0x1018A600
			[AOT.MonoPInvokeCallback] // 0x10040800-0x10040850
			public static int OnGetCallbackSizeBytes(); // 0x1018A480-0x1018A5A0
		}
	
		public static class RemoteStorageEnumeratePublishedFilesByUserActionResult_t // TypeDefIndex: 4431
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100408A0-0x100408F0
			public static void OnRunCallback(IntPtr pvParam); // 0x101887E0-0x10188840
			[AOT.MonoPInvokeCallback] // 0x10040940-0x10040990
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10188780-0x101887E0
			[AOT.MonoPInvokeCallback] // 0x10040990-0x100409E0
			public static int OnGetCallbackSizeBytes(); // 0x10188660-0x10188780
		}
	
		public static class RemoteStoragePublishFileProgress_t // TypeDefIndex: 4432
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10040A10-0x10040A60
			public static void OnRunCallback(IntPtr pvParam); // 0x10189AB0-0x10189B10
			[AOT.MonoPInvokeCallback] // 0x10040AD0-0x10040B20
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10189A50-0x10189AB0
			[AOT.MonoPInvokeCallback] // 0x10040B70-0x10040BC0
			public static int OnGetCallbackSizeBytes(); // 0x10189930-0x10189A50
		}
	
		public static class RemoteStoragePublishedFileUpdated_t // TypeDefIndex: 4433
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10040BC0-0x10040C10
			public static void OnRunCallback(IntPtr pvParam); // 0x1018A420-0x1018A480
			[AOT.MonoPInvokeCallback] // 0x10040C10-0x10040C60
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018A3C0-0x1018A420
			[AOT.MonoPInvokeCallback] // 0x10040C60-0x10040CB0
			public static int OnGetCallbackSizeBytes(); // 0x1018A2A0-0x1018A3C0
		}
	
		public static class RemoteStorageFileWriteAsyncComplete_t // TypeDefIndex: 4434
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10040D00-0x10040D50
			public static void OnRunCallback(IntPtr pvParam); // 0x10189510-0x10189570
			[AOT.MonoPInvokeCallback] // 0x10040D50-0x10040DA0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101894B0-0x10189510
			[AOT.MonoPInvokeCallback] // 0x10040DD0-0x10040E20
			public static int OnGetCallbackSizeBytes(); // 0x10189390-0x101894B0
		}
	
		public static class RemoteStorageFileReadAsyncComplete_t // TypeDefIndex: 4435
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10041F50-0x10041FA0
			public static void OnRunCallback(IntPtr pvParam); // 0x10189150-0x101891B0
			[AOT.MonoPInvokeCallback] // 0x10041FD0-0x10042020
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101890F0-0x10189150
			[AOT.MonoPInvokeCallback] // 0x10042020-0x10042070
			public static int OnGetCallbackSizeBytes(); // 0x10188FD0-0x101890F0
		}
	
		public static class ScreenshotReady_t // TypeDefIndex: 4436
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100420A0-0x100420F0
			public static void OnRunCallback(IntPtr pvParam); // 0x1018B1F0-0x1018B250
			[AOT.MonoPInvokeCallback] // 0x10042120-0x10042170
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018B190-0x1018B1F0
			[AOT.MonoPInvokeCallback] // 0x100421F0-0x10042240
			public static int OnGetCallbackSizeBytes(); // 0x1018B070-0x1018B190
		}
	
		public static class ScreenshotRequested_t // TypeDefIndex: 4437
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10042290-0x100422E0
			public static void OnRunCallback(IntPtr pvParam); // 0x1018B3D0-0x1018B430
			[AOT.MonoPInvokeCallback] // 0x100422E0-0x10042330
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018B370-0x1018B3D0
			[AOT.MonoPInvokeCallback] // 0x10042330-0x10042380
			public static int OnGetCallbackSizeBytes(); // 0x1018B250-0x1018B370
		}
	
		public static class SteamUGCQueryCompleted_t // TypeDefIndex: 4438
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10042380-0x100423D0
			public static void OnRunCallback(IntPtr pvParam); // 0x1018E890-0x1018E8F0
			[AOT.MonoPInvokeCallback] // 0x10042410-0x10042460
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018E830-0x1018E890
			[AOT.MonoPInvokeCallback] // 0x10042460-0x100424B0
			public static int OnGetCallbackSizeBytes(); // 0x1018E710-0x1018E830
		}
	
		public static class SteamUGCRequestUGCDetailsResult_t // TypeDefIndex: 4439
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100424B0-0x10042500
			public static void OnRunCallback(IntPtr pvParam); // 0x1018EA70-0x1018EAD0
			[AOT.MonoPInvokeCallback] // 0x10042530-0x10042580
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018EA10-0x1018EA70
			[AOT.MonoPInvokeCallback] // 0x10042580-0x100425D0
			public static int OnGetCallbackSizeBytes(); // 0x1018E8F0-0x1018EA10
		}
	
		public static class CreateItemResult_t // TypeDefIndex: 4440
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10042620-0x10042670
			public static void OnRunCallback(IntPtr pvParam); // 0x1017B260-0x1017B2C0
			[AOT.MonoPInvokeCallback] // 0x10042830-0x10042880
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017B200-0x1017B260
			[AOT.MonoPInvokeCallback] // 0x10042880-0x100428D0
			public static int OnGetCallbackSizeBytes(); // 0x1017B0E0-0x1017B200
		}
	
		public static class SubmitItemUpdateResult_t // TypeDefIndex: 4441
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10042940-0x10042990
			public static void OnRunCallback(IntPtr pvParam); // 0x1018F010-0x1018F070
			[AOT.MonoPInvokeCallback] // 0x10042990-0x100429E0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018EFB0-0x1018F010
			[AOT.MonoPInvokeCallback] // 0x100429E0-0x10042A30
			public static int OnGetCallbackSizeBytes(); // 0x1018EE90-0x1018EFB0
		}
	
		public static class ItemInstalled_t // TypeDefIndex: 4442
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10042A30-0x10042A80
			public static void OnRunCallback(IntPtr pvParam); // 0x10183060-0x101830C0
			[AOT.MonoPInvokeCallback] // 0x10042B20-0x10042B70
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10183000-0x10183060
			[AOT.MonoPInvokeCallback] // 0x10042B70-0x10042BC0
			public static int OnGetCallbackSizeBytes(); // 0x10182ED0-0x10183000
		}
	
		public static class DownloadItemResult_t // TypeDefIndex: 4443
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10042C90-0x10042CE0
			public static void OnRunCallback(IntPtr pvParam); // 0x1017B800-0x1017B860
			[AOT.MonoPInvokeCallback] // 0x10042D30-0x10042D80
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017B7A0-0x1017B800
			[AOT.MonoPInvokeCallback] // 0x10042E00-0x10042E50
			public static int OnGetCallbackSizeBytes(); // 0x1017B680-0x1017B7A0
		}
	
		public static class UserFavoriteItemsListChanged_t // TypeDefIndex: 4444
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10042F10-0x10042F60
			public static void OnRunCallback(IntPtr pvParam); // 0x1018F5B0-0x1018F610
			[AOT.MonoPInvokeCallback] // 0x10042F60-0x10042FB0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018F550-0x1018F5B0
			[AOT.MonoPInvokeCallback] // 0x10043030-0x10043080
			public static int OnGetCallbackSizeBytes(); // 0x1018F430-0x1018F550
		}
	
		public static class SetUserItemVoteResult_t // TypeDefIndex: 4445
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10043080-0x100430D0
			public static void OnRunCallback(IntPtr pvParam); // 0x1018B790-0x1018B7F0
			[AOT.MonoPInvokeCallback] // 0x100430D0-0x10043120
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018B730-0x1018B790
			[AOT.MonoPInvokeCallback] // 0x10043160-0x100431B0
			public static int OnGetCallbackSizeBytes(); // 0x1018B610-0x1018B730
		}
	
		public static class GetUserItemVoteResult_t // TypeDefIndex: 4446
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100431B0-0x10043200
			public static void OnRunCallback(IntPtr pvParam); // 0x1017F600-0x1017F660
			[AOT.MonoPInvokeCallback] // 0x10043200-0x10043250
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017F5A0-0x1017F600
			[AOT.MonoPInvokeCallback] // 0x100432A0-0x100432F0
			public static int OnGetCallbackSizeBytes(); // 0x1017F480-0x1017F5A0
		}
	
		public static class StartPlaytimeTrackingResult_t // TypeDefIndex: 4447
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10043320-0x10043370
			public static void OnRunCallback(IntPtr pvParam); // 0x1018BC00-0x1018BC60
			[AOT.MonoPInvokeCallback] // 0x10043370-0x100433C0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018BBA0-0x1018BC00
			[AOT.MonoPInvokeCallback] // 0x100434F0-0x10043540
			public static int OnGetCallbackSizeBytes(); // 0x1018BA80-0x1018BBA0
		}
	
		public static class StopPlaytimeTrackingResult_t // TypeDefIndex: 4448
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10043590-0x100435E0
			public static void OnRunCallback(IntPtr pvParam); // 0x1018EC50-0x1018ECB0
			[AOT.MonoPInvokeCallback] // 0x100436C0-0x10043710
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018EBF0-0x1018EC50
			[AOT.MonoPInvokeCallback] // 0x10043740-0x10043790
			public static int OnGetCallbackSizeBytes(); // 0x1018EAD0-0x1018EBF0
		}
	
		public static class SteamServersConnected_t // TypeDefIndex: 4449
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10043860-0x100438B0
			public static void OnRunCallback(IntPtr pvParam); // 0x1018E2F0-0x1018E350
			[AOT.MonoPInvokeCallback] // 0x100438E0-0x10043930
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018E290-0x1018E2F0
			[AOT.MonoPInvokeCallback] // 0x10043AA0-0x10043AF0
			public static int OnGetCallbackSizeBytes(); // 0x1018E170-0x1018E290
		}
	
		public static class SteamServerConnectFailure_t // TypeDefIndex: 4450
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10043B20-0x10043B70
			public static void OnRunCallback(IntPtr pvParam); // 0x1018E110-0x1018E170
			[AOT.MonoPInvokeCallback] // 0x10043BA0-0x10043BF0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018E0B0-0x1018E110
			[AOT.MonoPInvokeCallback] // 0x10043D80-0x10043DD0
			public static int OnGetCallbackSizeBytes(); // 0x1018DF90-0x1018E0B0
		}
	
		public static class SteamServersDisconnected_t // TypeDefIndex: 4451
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10043E60-0x10043EB0
			public static void OnRunCallback(IntPtr pvParam); // 0x1018E4D0-0x1018E530
			[AOT.MonoPInvokeCallback] // 0x10043F50-0x10043FA0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018E470-0x1018E4D0
			[AOT.MonoPInvokeCallback] // 0x10044040-0x10044090
			public static int OnGetCallbackSizeBytes(); // 0x1018E350-0x1018E470
		}
	
		public static class ClientGameServerDeny_t // TypeDefIndex: 4452
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10044100-0x10044150
			public static void OnRunCallback(IntPtr pvParam); // 0x1017AEA0-0x1017AF00
			[AOT.MonoPInvokeCallback] // 0x100441C0-0x10044210
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017AE40-0x1017AEA0
			[AOT.MonoPInvokeCallback] // 0x10044270-0x100442C0
			public static int OnGetCallbackSizeBytes(); // 0x1017AD20-0x1017AE40
		}
	
		public static class IPCFailure_t // TypeDefIndex: 4453
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100442F0-0x10044340
			public static void OnRunCallback(IntPtr pvParam); // 0x10182C90-0x10182CF0
			[AOT.MonoPInvokeCallback] // 0x100443E0-0x10044430
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10182C30-0x10182C90
			[AOT.MonoPInvokeCallback] // 0x10044590-0x100445E0
			public static int OnGetCallbackSizeBytes(); // 0x10182B10-0x10182C30
		}
	
		public static class LicensesUpdated_t // TypeDefIndex: 4454
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10044690-0x100446E0
			public static void OnRunCallback(IntPtr pvParam); // 0x10183BA0-0x10183C00
			[AOT.MonoPInvokeCallback] // 0x100447B0-0x10044800
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10183B40-0x10183BA0
			[AOT.MonoPInvokeCallback] // 0x10044A00-0x10044A50
			public static int OnGetCallbackSizeBytes(); // 0x10183A20-0x10183B40
		}
	
		public static class ValidateAuthTicketResponse_t // TypeDefIndex: 4455
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10044AC0-0x10044B10
			public static void OnRunCallback(IntPtr pvParam); // 0x1088D9B0-0x1088DA10
			[AOT.MonoPInvokeCallback] // 0x10044BD0-0x10044C20
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1088D950-0x1088D9B0
			[AOT.MonoPInvokeCallback] // 0x10044CB0-0x10044D00
			public static int OnGetCallbackSizeBytes(); // 0x1088D830-0x1088D950
		}
	
		public static class MicroTxnAuthorizationResponse_t // TypeDefIndex: 4456
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10044D30-0x10044D80
			public static void OnRunCallback(IntPtr pvParam); // 0x10185060-0x101850C0
			[AOT.MonoPInvokeCallback] // 0x10044DB0-0x10044E00
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10185000-0x10185060
			[AOT.MonoPInvokeCallback] // 0x10044EB0-0x10044F00
			public static int OnGetCallbackSizeBytes(); // 0x10184ED0-0x10185000
		}
	
		public static class EncryptedAppTicketResponse_t // TypeDefIndex: 4457
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10046090-0x100460E0
			public static void OnRunCallback(IntPtr pvParam); // 0x1017B9E0-0x1017BA40
			[AOT.MonoPInvokeCallback] // 0x10046220-0x10046270
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017B980-0x1017B9E0
			[AOT.MonoPInvokeCallback] // 0x10046370-0x100463C0
			public static int OnGetCallbackSizeBytes(); // 0x1017B860-0x1017B980
		}
	
		public static class GetAuthSessionTicketResponse_t // TypeDefIndex: 4458
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100463C0-0x10046410
			public static void OnRunCallback(IntPtr pvParam); // 0x1017F420-0x1017F480
			[AOT.MonoPInvokeCallback] // 0x100464C0-0x10046510
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017F3C0-0x1017F420
			[AOT.MonoPInvokeCallback] // 0x10046510-0x10046560
			public static int OnGetCallbackSizeBytes(); // 0x1017F2A0-0x1017F3C0
		}
	
		public static class GameWebCallback_t // TypeDefIndex: 4459
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10046590-0x100465E0
			public static void OnRunCallback(IntPtr pvParam); // 0x1017F060-0x1017F0C0
			[AOT.MonoPInvokeCallback] // 0x10046630-0x10046680
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017F000-0x1017F060
			[AOT.MonoPInvokeCallback] // 0x100466D0-0x10046720
			public static int OnGetCallbackSizeBytes(); // 0x1017EED0-0x1017F000
		}
	
		public static class StoreAuthURLResponse_t // TypeDefIndex: 4460
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10046780-0x100467D0
			public static void OnRunCallback(IntPtr pvParam); // 0x1018EE30-0x1018EE90
			[AOT.MonoPInvokeCallback] // 0x100468A0-0x100468F0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018EDD0-0x1018EE30
			[AOT.MonoPInvokeCallback] // 0x10046940-0x10046990
			public static int OnGetCallbackSizeBytes(); // 0x1018ECB0-0x1018EDD0
		}
	
		public static class UserStatsReceived_t // TypeDefIndex: 4461
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10046A10-0x10046A60
			public static void OnRunCallback(IntPtr pvParam); // 0x1018F790-0x1018F7F0
			[AOT.MonoPInvokeCallback] // 0x10046A60-0x10046AB0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018F730-0x1018F790
			[AOT.MonoPInvokeCallback] // 0x10046B50-0x10046BA0
			public static int OnGetCallbackSizeBytes(); // 0x1018F610-0x1018F730
		}
	
		public static class UserStatsStored_t // TypeDefIndex: 4462
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10046BF0-0x10046C40
			public static void OnRunCallback(IntPtr pvParam); // 0x1018F970-0x1018F9D0
			[AOT.MonoPInvokeCallback] // 0x10046CE0-0x10046D30
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018F910-0x1018F970
			[AOT.MonoPInvokeCallback] // 0x10046DC0-0x10046E10
			public static int OnGetCallbackSizeBytes(); // 0x1018F7F0-0x1018F910
		}
	
		public static class UserAchievementStored_t // TypeDefIndex: 4463
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10047000-0x10047050
			public static void OnRunCallback(IntPtr pvParam); // 0x1018F3D0-0x1018F430
			[AOT.MonoPInvokeCallback] // 0x100470F0-0x10047140
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018F370-0x1018F3D0
			[AOT.MonoPInvokeCallback] // 0x10047190-0x100471E0
			public static int OnGetCallbackSizeBytes(); // 0x1018F250-0x1018F370
		}
	
		public static class LeaderboardFindResult_t // TypeDefIndex: 4464
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100472C0-0x10047310
			public static void OnRunCallback(IntPtr pvParam); // 0x10183420-0x10183480
			[AOT.MonoPInvokeCallback] // 0x10047350-0x100473A0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101833C0-0x10183420
			[AOT.MonoPInvokeCallback] // 0x100474D0-0x10047520
			public static int OnGetCallbackSizeBytes(); // 0x101832A0-0x101833C0
		}
	
		public static class LeaderboardScoresDownloaded_t // TypeDefIndex: 4465
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100475B0-0x10047600
			public static void OnRunCallback(IntPtr pvParam); // 0x101837E0-0x10183840
			[AOT.MonoPInvokeCallback] // 0x100476E0-0x10047730
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10183780-0x101837E0
			[AOT.MonoPInvokeCallback] // 0x100477A0-0x100477F0
			public static int OnGetCallbackSizeBytes(); // 0x10183660-0x10183780
		}
	
		public static class LeaderboardScoreUploaded_t // TypeDefIndex: 4466
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100478E0-0x10047930
			public static void OnRunCallback(IntPtr pvParam); // 0x10183600-0x10183660
			[AOT.MonoPInvokeCallback] // 0x100479A0-0x100479F0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x101835A0-0x10183600
			[AOT.MonoPInvokeCallback] // 0x10047A40-0x10047A90
			public static int OnGetCallbackSizeBytes(); // 0x10183480-0x101835A0
		}
	
		public static class NumberOfCurrentPlayers_t // TypeDefIndex: 4467
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10047B10-0x10047B60
			public static void OnRunCallback(IntPtr pvParam); // 0x10186E70-0x10186ED0
			[AOT.MonoPInvokeCallback] // 0x10047C40-0x10047C90
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10186E10-0x10186E70
			[AOT.MonoPInvokeCallback] // 0x10047CE0-0x10047D30
			public static int OnGetCallbackSizeBytes(); // 0x10186CF0-0x10186E10
		}
	
		public static class UserStatsUnloaded_t // TypeDefIndex: 4468
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10047D30-0x10047D80
			public static void OnRunCallback(IntPtr pvParam); // 0x1018FB50-0x1018FBC0
			[AOT.MonoPInvokeCallback] // 0x10048EE0-0x10048F30
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018FAF0-0x1018FB50
			[AOT.MonoPInvokeCallback] // 0x10049000-0x10049050
			public static int OnGetCallbackSizeBytes(); // 0x1018F9D0-0x1018FAF0
		}
	
		public static class UserAchievementIconFetched_t // TypeDefIndex: 4469
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10049090-0x100490E0
			public static void OnRunCallback(IntPtr pvParam); // 0x1018F1F0-0x1018F250
			[AOT.MonoPInvokeCallback] // 0x10049190-0x100491E0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018F190-0x1018F1F0
			[AOT.MonoPInvokeCallback] // 0x100492A0-0x100492F0
			public static int OnGetCallbackSizeBytes(); // 0x1018F070-0x1018F190
		}
	
		public static class GlobalAchievementPercentagesReady_t // TypeDefIndex: 4470
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x100493B0-0x10049400
			public static void OnRunCallback(IntPtr pvParam); // 0x1017F9C0-0x1017FA20
			[AOT.MonoPInvokeCallback] // 0x100494B0-0x10049500
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017F960-0x1017F9C0
			[AOT.MonoPInvokeCallback] // 0x10049570-0x100495C0
			public static int OnGetCallbackSizeBytes(); // 0x1017F840-0x1017F960
		}
	
		public static class LeaderboardUGCSet_t // TypeDefIndex: 4471
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10049640-0x10049690
			public static void OnRunCallback(IntPtr pvParam); // 0x101839C0-0x10183A20
			[AOT.MonoPInvokeCallback] // 0x10049700-0x10049750
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10183960-0x101839C0
			[AOT.MonoPInvokeCallback] // 0x10049780-0x100497D0
			public static int OnGetCallbackSizeBytes(); // 0x10183840-0x10183960
		}
	
		public static class GlobalStatsReceived_t // TypeDefIndex: 4472
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10049830-0x10049880
			public static void OnRunCallback(IntPtr pvParam); // 0x1017FBA0-0x1017FC00
			[AOT.MonoPInvokeCallback] // 0x10049930-0x10049980
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017FB40-0x1017FBA0
			[AOT.MonoPInvokeCallback] // 0x100499C0-0x10049A10
			public static int OnGetCallbackSizeBytes(); // 0x1017FA20-0x1017FB40
		}
	
		public static class IPCountry_t // TypeDefIndex: 4473
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10049A50-0x10049AA0
			public static void OnRunCallback(IntPtr pvParam); // 0x10182E70-0x10182ED0
			[AOT.MonoPInvokeCallback] // 0x10049B30-0x10049B80
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10182E10-0x10182E70
			[AOT.MonoPInvokeCallback] // 0x10049BB0-0x10049C00
			public static int OnGetCallbackSizeBytes(); // 0x10182CF0-0x10182E10
		}
	
		public static class LowBatteryPower_t // TypeDefIndex: 4474
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10049C80-0x10049CD0
			public static void OnRunCallback(IntPtr pvParam); // 0x10184E70-0x10184ED0
			[AOT.MonoPInvokeCallback] // 0x10049CD0-0x10049D20
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x10184E10-0x10184E70
			[AOT.MonoPInvokeCallback] // 0x10049D70-0x10049DC0
			public static int OnGetCallbackSizeBytes(); // 0x10184CF0-0x10184E10
		}
	
		public static class SteamAPICallCompleted_t // TypeDefIndex: 4475
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10049E10-0x10049E60
			public static void OnRunCallback(IntPtr pvParam); // 0x1018BDE0-0x1018BE40
			[AOT.MonoPInvokeCallback] // 0x10049EB0-0x10049F00
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018BD80-0x1018BDE0
			[AOT.MonoPInvokeCallback] // 0x10049F50-0x10049FA0
			public static int OnGetCallbackSizeBytes(); // 0x1018BC60-0x1018BD80
		}
	
		public static class SteamShutdown_t // TypeDefIndex: 4476
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x10049FA0-0x1004A000
			public static void OnRunCallback(IntPtr pvParam); // 0x1018E6B0-0x1018E710
			[AOT.MonoPInvokeCallback] // 0x1004A000-0x1004A050
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1018E650-0x1018E6B0
			[AOT.MonoPInvokeCallback] // 0x1004A110-0x1004A160
			public static int OnGetCallbackSizeBytes(); // 0x1018E530-0x1018E650
		}
	
		public static class CheckFileSignature_t // TypeDefIndex: 4477
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1004A1B0-0x1004A200
			public static void OnRunCallback(IntPtr pvParam); // 0x1017AAE0-0x1017AB40
			[AOT.MonoPInvokeCallback] // 0x1004A270-0x1004A2C0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017AA80-0x1017AAE0
			[AOT.MonoPInvokeCallback] // 0x1004A300-0x1004A350
			public static int OnGetCallbackSizeBytes(); // 0x1017A960-0x1017AA80
		}
	
		public static class GamepadTextInputDismissed_t // TypeDefIndex: 4478
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1004A450-0x1004A4A0
			public static void OnRunCallback(IntPtr pvParam); // 0x1017F240-0x1017F2A0
			[AOT.MonoPInvokeCallback] // 0x1004A510-0x1004A560
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017F1E0-0x1017F240
			[AOT.MonoPInvokeCallback] // 0x1004A560-0x1004A5B0
			public static int OnGetCallbackSizeBytes(); // 0x1017F0C0-0x1017F1E0
		}
	
		public static class BroadcastUploadStart_t // TypeDefIndex: 4479
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1004A5F0-0x1004A640
			public static void OnRunCallback(IntPtr pvParam); // 0x1017A720-0x1017A780
			[AOT.MonoPInvokeCallback] // 0x1004A6A0-0x1004A6F0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017A6C0-0x1017A720
			[AOT.MonoPInvokeCallback] // 0x1004A780-0x1004A7D0
			public static int OnGetCallbackSizeBytes(); // 0x1017A5A0-0x1017A6C0
		}
	
		public static class BroadcastUploadStop_t // TypeDefIndex: 4480
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1004A820-0x1004A870
			public static void OnRunCallback(IntPtr pvParam); // 0x1017A900-0x1017A960
			[AOT.MonoPInvokeCallback] // 0x1004A950-0x1004A9A0
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017A8A0-0x1017A900
			[AOT.MonoPInvokeCallback] // 0x1004A9A0-0x1004A9F0
			public static int OnGetCallbackSizeBytes(); // 0x1017A780-0x1017A8A0
		}
	
		public static class GetVideoURLResult_t // TypeDefIndex: 4481
		{
			// Methods
			[AOT.MonoPInvokeCallback] // 0x1004AAF0-0x1004AB40
			public static void OnRunCallback(IntPtr pvParam); // 0x1017F7E0-0x1017F840
			[AOT.MonoPInvokeCallback] // 0x1004BCE0-0x1004BD30
			public static void OnRunCallResult(IntPtr pvParam, bool bFailed, ulong hSteamAPICall); // 0x1017F780-0x1017F7E0
			[AOT.MonoPInvokeCallback] // 0x1004BDF0-0x1004BE40
			public static int OnGetCallbackSizeBytes(); // 0x1017F660-0x1017F780
		}
	}

	public static class SteamClient // TypeDefIndex: 4760
	{
		// Methods
		public static HSteamPipe CreateSteamPipe(); // 0x108782A0-0x108782F0
		public static bool BReleaseSteamPipe(HSteamPipe hSteamPipe); // 0x10878160-0x108781B0
		public static HSteamUser ConnectToGlobalUser(HSteamPipe hSteamPipe); // 0x108781F0-0x10878250
		public static HSteamUser CreateLocalUser(out HSteamPipe phSteamPipe, EAccountType eAccountType); // 0x10878250-0x108782A0
		public static void ReleaseUser(HSteamPipe hSteamPipe, HSteamUser hUser); // 0x1087A150-0x1087A1A0
		public static IntPtr GetISteamUser(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x10879D70-0x10879EC0
		public static IntPtr GetISteamGameServer(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x108789C0-0x10878B10
		public static void SetLocalIPBinding(uint unIP, ushort usPort); // 0x1087A1A0-0x1087A1F0
		public static IntPtr GetISteamFriends(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x10878720-0x10878870
		public static IntPtr GetISteamUtils(HSteamPipe hSteamPipe, string pchVersion); // 0x10879EC0-0x1087A000
		public static IntPtr GetISteamMatchmaking(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x108791A0-0x108792F0
		public static IntPtr GetISteamMatchmakingServers(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x10879050-0x108791A0
		public static IntPtr GetISteamGenericInterface(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x10878B10-0x10878C60
		public static IntPtr GetISteamUserStats(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x10879C20-0x10879D70
		public static IntPtr GetISteamGameServerStats(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion); // 0x10878870-0x108789C0
		public static IntPtr GetISteamApps(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x10878480-0x108785D0
		public static IntPtr GetISteamNetworking(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x10879590-0x108796E0
		public static IntPtr GetISteamRemoteStorage(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion); // 0x10879830-0x10879980
		public static IntPtr GetISteamScreenshots(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion); // 0x10879980-0x10879AD0
		public static uint GetIPCCallCount(); // 0x108782F0-0x10878330
		public static void SetWarningMessageHook(SteamAPIWarningMessageHook_t pFunction); // 0x1087A1F0-0x1087A240
		public static bool BShutdownIfAllPipesClosed(); // 0x108781B0-0x108781F0
		public static IntPtr GetISteamHTTP(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion); // 0x10878DB0-0x10878F00
		public static IntPtr GetISteamController(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x108785D0-0x10878720
		public static IntPtr GetISteamUGC(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x10879AD0-0x10879C20
		public static IntPtr GetISteamAppList(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x10878330-0x10878480
		public static IntPtr GetISteamMusic(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion); // 0x10879440-0x10879590
		public static IntPtr GetISteamMusicRemote(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion); // 0x108792F0-0x10879440
		public static IntPtr GetISteamHTMLSurface(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion); // 0x10878C60-0x10878DB0
		public static IntPtr GetISteamInventory(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion); // 0x10878F00-0x10879050
		public static IntPtr GetISteamVideo(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion); // 0x1087A000-0x1087A150
		public static IntPtr GetISteamParentalSettings(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion); // 0x108796E0-0x10879830
	}

	public static class SteamController // TypeDefIndex: 4761
	{
		// Methods
		public static bool Init(); // 0x1087AC60-0x1087ACA0
		public static bool Shutdown(); // 0x1087AE90-0x1087AED0
		public static void RunFrame(); // 0x1087ACA0-0x1087ACE0
		public static int GetConnectedControllers(ControllerHandle_t[] handlesOut); // 0x1087A740-0x1087A7E0
		public static bool ShowBindingPanel(ControllerHandle_t controllerHandle); // 0x1087ADC0-0x1087AE10
		public static ControllerActionSetHandle_t GetActionSetHandle(string pszActionSetName); // 0x1087A380-0x1087A4D0
		public static void ActivateActionSet(ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetHandle); // 0x1087A290-0x1087A2E0
		public static ControllerActionSetHandle_t GetCurrentActionSet(ControllerHandle_t controllerHandle); // 0x1087A830-0x1087A890
		public static void ActivateActionSetLayer(ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetLayerHandle); // 0x1087A240-0x1087A290
		public static void DeactivateActionSetLayer(ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetLayerHandle); // 0x1087A2E0-0x1087A330
		public static void DeactivateAllActionSetLayers(ControllerHandle_t controllerHandle); // 0x1087A330-0x1087A380
		public static int GetActiveActionSetLayers(ControllerHandle_t controllerHandle, out ControllerActionSetHandle_t handlesOut); // 0x1087A4D0-0x1087A520
		public static ControllerDigitalActionHandle_t GetDigitalActionHandle(string pszActionName); // 0x1087A8E0-0x1087AA30
		public static ControllerDigitalActionData_t GetDigitalActionData(ControllerHandle_t controllerHandle, ControllerDigitalActionHandle_t digitalActionHandle); // 0x1087A890-0x1087A8E0
		public static int GetDigitalActionOrigins(ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetHandle, ControllerDigitalActionHandle_t digitalActionHandle, EControllerActionOrigin[] originsOut); // 0x1087AA30-0x1087AA90
		public static ControllerAnalogActionHandle_t GetAnalogActionHandle(string pszActionName); // 0x1087A590-0x1087A6E0
		public static ControllerAnalogActionData_t GetAnalogActionData(ControllerHandle_t controllerHandle, ControllerAnalogActionHandle_t analogActionHandle); // 0x1087A520-0x1087A590
		public static int GetAnalogActionOrigins(ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetHandle, ControllerAnalogActionHandle_t analogActionHandle, EControllerActionOrigin[] originsOut); // 0x1087A6E0-0x1087A740
		public static void StopAnalogActionMomentum(ControllerHandle_t controllerHandle, ControllerAnalogActionHandle_t eAction); // 0x1087AED0-0x1087AF20
		public static void TriggerHapticPulse(ControllerHandle_t controllerHandle, ESteamControllerPad eTargetPad, ushort usDurationMicroSec); // 0x1087AF20-0x1087AF70
		public static void TriggerRepeatedHapticPulse(ControllerHandle_t controllerHandle, ESteamControllerPad eTargetPad, ushort usDurationMicroSec, ushort usOffMicroSec, ushort unRepeat, uint nFlags); // 0x1087AF70-0x1087AFD0
		public static void TriggerVibration(ControllerHandle_t controllerHandle, ushort usLeftSpeed, ushort usRightSpeed); // 0x1087AFD0-0x1087B020
		public static void SetLEDColor(ControllerHandle_t controllerHandle, byte nColorR, byte nColorG, byte nColorB, uint nFlags); // 0x1087ACE0-0x1087AD40
		public static int GetGamepadIndexForController(ControllerHandle_t ulControllerHandle); // 0x1087AA90-0x1087AAE0
		public static ControllerHandle_t GetControllerForGamepadIndex(int nIndex); // 0x1087A7E0-0x1087A830
		public static ControllerMotionData_t GetMotionData(ControllerHandle_t controllerHandle); // 0x1087AB90-0x1087AC00
		public static bool ShowDigitalActionOrigins(ControllerHandle_t controllerHandle, ControllerDigitalActionHandle_t digitalActionHandle, float flScale, float flXPosition, float flYPosition); // 0x1087AE10-0x1087AE90
		public static bool ShowAnalogActionOrigins(ControllerHandle_t controllerHandle, ControllerAnalogActionHandle_t analogActionHandle, float flScale, float flXPosition, float flYPosition); // 0x1087AD40-0x1087ADC0
		public static string GetStringForActionOrigin(EControllerActionOrigin eOrigin); // 0x1087AC00-0x1087AC60
		public static string GetGlyphForActionOrigin(EControllerActionOrigin eOrigin); // 0x1087AAE0-0x1087AB40
		public static ESteamInputType GetInputTypeForHandle(ControllerHandle_t controllerHandle); // 0x1087AB40-0x1087AB90
	}

	public static class SteamEncryptedAppTicket // TypeDefIndex: 4301
	{
		// Methods
		public static bool BDecryptTicket(byte[] rgubTicketEncrypted, uint cubTicketEncrypted, byte[] rgubTicketDecrypted, ref uint pcubTicketDecrypted, byte[] rgubKey, int cubKey); // 0x1087B020-0x1087B040
		public static bool BIsTicketForApp(byte[] rgubTicketDecrypted, uint cubTicketDecrypted, AppId_t nAppID); // 0x1087B040-0x1087B060
		public static uint GetTicketIssueTime(byte[] rgubTicketDecrypted, uint cubTicketDecrypted); // 0x1087B0C0-0x1087B0E0
		public static void GetTicketSteamID(byte[] rgubTicketDecrypted, uint cubTicketDecrypted, out CSteamID psteamID); // 0x1087B0E0-0x1087B100
		public static uint GetTicketAppID(byte[] rgubTicketDecrypted, uint cubTicketDecrypted); // 0x1087B0A0-0x1087B0C0
		public static bool BUserOwnsAppInTicket(byte[] rgubTicketDecrypted, uint cubTicketDecrypted, AppId_t nAppID); // 0x1087B080-0x1087B0A0
		public static bool BUserIsVacBanned(byte[] rgubTicketDecrypted, uint cubTicketDecrypted); // 0x1087B060-0x1087B080
		public static byte[] GetUserVariableData(byte[] rgubTicketDecrypted, uint cubTicketDecrypted, out uint pcubUserData); // 0x1087B100-0x1087B190
	}

	public static class SteamFriends // TypeDefIndex: 4762
	{
		// Methods
		public static string GetPersonaName(); // 0x1087C870-0x1087C8C0
		public static SteamAPICall_t SetPersonaName(string pchPersonaName); // 0x1087D370-0x1087D4F0
		public static EPersonaState GetPersonaState(); // 0x1087C8C0-0x1087C900
		public static int GetFriendCount(EFriendFlags iFriendFlags); // 0x1087C020-0x1087C070
		public static CSteamID GetFriendByIndex(int iFriend, EFriendFlags iFriendFlags); // 0x1087BE40-0x1087BEE0
		public static EFriendRelationship GetFriendRelationship(CSteamID steamIDFriend); // 0x1087C350-0x1087C3A0
		public static EPersonaState GetFriendPersonaState(CSteamID steamIDFriend); // 0x1087C300-0x1087C350
		public static string GetFriendPersonaName(CSteamID steamIDFriend); // 0x1087C2B0-0x1087C300
		public static bool GetFriendGamePlayed(CSteamID steamIDFriend, out FriendGameInfo_t pFriendGameInfo); // 0x1087C110-0x1087C160
		public static string GetFriendPersonaNameHistory(CSteamID steamIDFriend, int iPersonaName); // 0x1087C250-0x1087C2B0
		public static int GetFriendSteamLevel(CSteamID steamIDFriend); // 0x1087C5B0-0x1087C600
		public static string GetPlayerNickname(CSteamID steamIDPlayer); // 0x1087C900-0x1087C950
		public static int GetFriendsGroupCount(); // 0x1087C600-0x1087C640
		public static FriendsGroupID_t GetFriendsGroupIDByIndex(int iFG); // 0x1087C640-0x1087C6D0
		public static string GetFriendsGroupName(FriendsGroupID_t friendsGroupID); // 0x1087C770-0x1087C7D0
		public static int GetFriendsGroupMembersCount(FriendsGroupID_t friendsGroupID); // 0x1087C6D0-0x1087C720
		public static void GetFriendsGroupMembersList(FriendsGroupID_t friendsGroupID, CSteamID[] pOutSteamIDMembers, int nMembersCount); // 0x1087C720-0x1087C770
		public static bool HasFriend(CSteamID steamIDFriend, EFriendFlags iFriendFlags); // 0x1087C9E0-0x1087CA30
		public static int GetClanCount(); // 0x1087BA50-0x1087BA90
		public static CSteamID GetClanByIndex(int iClan); // 0x1087B870-0x1087B910
		public static string GetClanName(CSteamID steamIDClan); // 0x1087BA90-0x1087BAE0
		public static string GetClanTag(CSteamID steamIDClan); // 0x1087BC70-0x1087BCC0
		public static bool GetClanActivityCounts(CSteamID steamIDClan, out int pnOnline, out int pnInGame, out int pnChatting); // 0x1087B810-0x1087B870
		public static SteamAPICall_t DownloadClanActivityCounts(CSteamID[] psteamIDClans, int cClansToRequest); // 0x1087B630-0x1087B6D0
		public static int GetFriendCountFromSource(CSteamID steamIDSource); // 0x1087BFD0-0x1087C020
		public static CSteamID GetFriendFromSourceByIndex(CSteamID steamIDSource, int iFriend); // 0x1087C070-0x1087C110
		public static bool IsUserInSource(CSteamID steamIDUser, CSteamID steamIDSource); // 0x1087CD60-0x1087CDB0
		public static void SetInGameVoiceSpeaking(CSteamID steamIDUser, bool bSpeaking); // 0x1087D2D0-0x1087D320
		public static void ActivateGameOverlay(string pchDialog); // 0x1087B480-0x1087B5A0
		public static void ActivateGameOverlayToUser(string pchDialog, CSteamID steamID); // 0x1087B230-0x1087B360
		public static void ActivateGameOverlayToWebPage(string pchURL); // 0x1087B360-0x1087B480
		public static void ActivateGameOverlayToStore(AppId_t nAppID, EOverlayToStoreFlag eFlag); // 0x1087B1E0-0x1087B230
		public static void SetPlayedWith(CSteamID steamIDUserPlayedWith); // 0x1087D4F0-0x1087D540
		public static void ActivateGameOverlayInviteDialog(CSteamID steamIDLobby); // 0x1087B190-0x1087B1E0
		public static int GetSmallFriendAvatar(CSteamID steamIDFriend); // 0x1087C950-0x1087C9A0
		public static int GetMediumFriendAvatar(CSteamID steamIDFriend); // 0x1087C820-0x1087C870
		public static int GetLargeFriendAvatar(CSteamID steamIDFriend); // 0x1087C7D0-0x1087C820
		public static bool RequestUserInformation(CSteamID steamIDUser, bool bRequireNameOnly); // 0x1087D130-0x1087D180
		public static SteamAPICall_t RequestClanOfficerList(CSteamID steamIDClan); // 0x1087D040-0x1087D0E0
		public static CSteamID GetClanOwner(CSteamID steamIDClan); // 0x1087BBD0-0x1087BC70
		public static int GetClanOfficerCount(CSteamID steamIDClan); // 0x1087BB80-0x1087BBD0
		public static CSteamID GetClanOfficerByIndex(CSteamID steamIDClan, int iOfficer); // 0x1087BAE0-0x1087BB80
		public static uint GetUserRestrictions(); // 0x1087C9A0-0x1087C9E0
		public static bool SetRichPresence(string pchKey, string pchValue); // 0x1087D540-0x1087D6F0
		public static void ClearRichPresence(); // 0x1087B5A0-0x1087B5E0
		public static string GetFriendRichPresence(CSteamID steamIDFriend, string pchKey); // 0x1087C450-0x1087C5B0
		public static int GetFriendRichPresenceKeyCount(CSteamID steamIDFriend); // 0x1087C400-0x1087C450
		public static string GetFriendRichPresenceKeyByIndex(CSteamID steamIDFriend, int iKey); // 0x1087C3A0-0x1087C400
		public static void RequestFriendRichPresence(CSteamID steamIDFriend); // 0x1087D0E0-0x1087D130
		public static bool InviteUserToGame(CSteamID steamIDFriend, string pchConnectString); // 0x1087CA30-0x1087CB80
		public static int GetCoplayFriendCount(); // 0x1087BCC0-0x1087BD00
		public static CSteamID GetCoplayFriend(int iCoplayFriend); // 0x1087BD00-0x1087BDA0
		public static int GetFriendCoplayTime(CSteamID steamIDFriend); // 0x1087BF80-0x1087BFD0
		public static AppId_t GetFriendCoplayGame(CSteamID steamIDFriend); // 0x1087BEE0-0x1087BF80
		public static SteamAPICall_t JoinClanChatRoom(CSteamID steamIDClan); // 0x1087CDB0-0x1087CE50
		public static bool LeaveClanChatRoom(CSteamID steamIDClan); // 0x1087CE50-0x1087CEA0
		public static int GetClanChatMemberCount(CSteamID steamIDClan); // 0x1087B910-0x1087B960
		public static CSteamID GetChatMemberByIndex(CSteamID steamIDClan, int iUser); // 0x1087B770-0x1087B810
		public static bool SendClanChatMessage(CSteamID steamIDClanChat, string pchText); // 0x1087D180-0x1087D2D0
		public static int GetClanChatMessage(CSteamID steamIDClanChat, int iMessage, out string prgchText, int cchTextMax, out EChatEntryType peChatEntryType, out CSteamID psteamidChatter); // 0x1087B960-0x1087BA50
		public static bool IsClanChatAdmin(CSteamID steamIDClanChat, CSteamID steamIDUser); // 0x1087CB80-0x1087CBD0
		public static bool IsClanChatWindowOpenInSteam(CSteamID steamIDClanChat); // 0x1087CBD0-0x1087CC20
		public static bool OpenClanChatWindowInSteam(CSteamID steamIDClanChat); // 0x1087CEA0-0x1087CEF0
		public static bool CloseClanChatWindowInSteam(CSteamID steamIDClanChat); // 0x1087B5E0-0x1087B630
		public static bool SetListenForFriendsMessages(bool bInterceptEnabled); // 0x1087D320-0x1087D370
		public static bool ReplyToFriendMessage(CSteamID steamIDFriend, string pchMsgToSend); // 0x1087CEF0-0x1087D040
		public static int GetFriendMessage(CSteamID steamIDFriend, int iMessageID, out string pvData, int cubData, out EChatEntryType peChatEntryType); // 0x1087C160-0x1087C250
		public static SteamAPICall_t GetFollowerCount(CSteamID steamID); // 0x1087BDA0-0x1087BE40
		public static SteamAPICall_t IsFollowing(CSteamID steamID); // 0x1087CCC0-0x1087CD60
		public static SteamAPICall_t EnumerateFollowingList(uint unStartIndex); // 0x1087B6D0-0x1087B770
		public static bool IsClanPublic(CSteamID steamIDClan); // 0x1087CC70-0x1087CCC0
		public static bool IsClanOfficialGameGroup(CSteamID steamIDClan); // 0x1087CC20-0x1087CC70
	}

	public static class SteamGameServer // TypeDefIndex: 4763
	{
		// Methods
		public static bool InitGameServer(uint unIP, ushort usGamePort, ushort usQueryPort, uint unFlags, AppId_t nGameAppId, string pchVersionString); // 0x108888B0-0x10888A00
		public static void SetProduct(string pszProduct); // 0x10889560-0x10889680
		public static void SetGameDescription(string pszGameDescription); // 0x10888E50-0x10888F70
		public static void SetModDir(string pszModDir); // 0x108893F0-0x10889510
		public static void SetDedicatedServer(bool bDedicated); // 0x10888CE0-0x10888D30
		public static void LogOn(string pszToken); // 0x10888A80-0x10888BA0
		public static void LogOnAnonymous(); // 0x10888A40-0x10888A80
		public static void LogOff(); // 0x10888A00-0x10888A40
		public static bool BLoggedOn(); // 0x10888110-0x10888150
		public static bool BSecure(); // 0x10888150-0x10888190
		public static CSteamID GetSteamID(); // 0x108887D0-0x10888860
		public static bool WasRestartRequested(); // 0x10889A80-0x10889AC0
		public static void SetMaxPlayerCount(int cPlayersMax); // 0x108893A0-0x108893F0
		public static void SetBotPlayerCount(int cBotplayers); // 0x10888C90-0x10888CE0
		public static void SetServerName(string pszServerName); // 0x108897A0-0x108898C0
		public static void SetMapName(string pszMapName); // 0x10889280-0x108893A0
		public static void SetPasswordProtected(bool bPasswordProtected); // 0x10889510-0x10889560
		public static void SetSpectatorPort(ushort unSpectatorPort); // 0x108898C0-0x10889910
		public static void SetSpectatorServerName(string pszSpectatorServerName); // 0x10889910-0x10889A30
		public static void ClearAllKeyValues(); // 0x10888380-0x108883C0
		public static void SetKeyValue(string pKey, string pValue); // 0x108890E0-0x10889280
		public static void SetGameTags(string pchGameTags); // 0x10888F70-0x10889090
		public static void SetGameData(string pchGameData); // 0x10888D30-0x10888E50
		public static void SetRegion(string pszRegion); // 0x10889680-0x108897A0
		public static bool SendUserConnectAndAuthenticate(uint unIPClient, byte[] pvAuthBlob, uint cubAuthBlobSize, out CSteamID pSteamIDUser); // 0x10888BF0-0x10888C40
		public static CSteamID CreateUnauthenticatedUserConnection(); // 0x10888460-0x108884F0
		public static void SendUserDisconnect(CSteamID steamIDUser); // 0x10888C40-0x10888C90
		public static bool BUpdateUserData(CSteamID steamIDUser, string pchPlayerName, uint uScore); // 0x10888190-0x108882E0
		public static HAuthTicket GetAuthSessionTicket(byte[] pTicket, int cbMaxTicket, out uint pcbTicket); // 0x108885D0-0x10888670
		public static EBeginAuthSessionResult BeginAuthSession(byte[] pAuthTicket, int cbAuthTicket, CSteamID steamID); // 0x108882E0-0x10888330
		public static void EndAuthSession(CSteamID steamID); // 0x10888540-0x10888590
		public static void CancelAuthTicket(HAuthTicket hAuthTicket); // 0x10888330-0x10888380
		public static EUserHasLicenseForAppResult UserHasLicenseForApp(CSteamID steamID, AppId_t appID); // 0x10889A30-0x10889A80
		public static bool RequestUserGroupStatus(CSteamID steamIDUser, CSteamID steamIDGroup); // 0x10888BA0-0x10888BF0
		public static void GetGameplayStats(); // 0x10888670-0x108886B0
		public static SteamAPICall_t GetServerReputation(); // 0x10888740-0x108887D0
		public static uint GetPublicIP(); // 0x10888700-0x10888740
		public static bool HandleIncomingPacket(byte[] pData, int cbData, uint srcIP, ushort srcPort); // 0x10888860-0x108888B0
		public static int GetNextOutgoingPacket(byte[] pOut, int cbMaxOut, out uint pNetAdr, out ushort pPort); // 0x108886B0-0x10888700
		public static void EnableHeartbeats(bool bActive); // 0x108884F0-0x10888540
		public static void SetHeartbeatInterval(int iHeartbeatInterval); // 0x10889090-0x108890E0
		public static void ForceHeartbeat(); // 0x10888590-0x108885D0
		public static SteamAPICall_t AssociateWithClan(CSteamID steamIDClan); // 0x10888070-0x10888110
		public static SteamAPICall_t ComputeNewPlayerCompatibility(CSteamID steamIDNewPlayer); // 0x108883C0-0x10888460
	}

	public static class SteamGameServerApps // TypeDefIndex: 4764
	{
		// Methods
		public static bool BIsSubscribed(); // 0x1087D990-0x1087D9D0
		public static bool BIsLowViolence(); // 0x1087D8C0-0x1087D900
		public static bool BIsCybercafe(); // 0x1087D830-0x1087D870
		public static bool BIsVACBanned(); // 0x1087D9D0-0x1087DA10
		public static string GetCurrentGameLanguage(); // 0x1087DCF0-0x1087DD40
		public static string GetAvailableGameLanguages(); // 0x1087DBC0-0x1087DC10
		public static bool BIsSubscribedApp(AppId_t appID); // 0x1087D900-0x1087D950
		public static bool BIsDlcInstalled(AppId_t appID); // 0x1087D870-0x1087D8C0
		public static uint GetEarliestPurchaseUnixTime(AppId_t nAppID); // 0x1087DDD0-0x1087DE20
		public static bool BIsSubscribedFromFreeWeekend(); // 0x1087D950-0x1087D990
		public static int GetDLCCount(); // 0x1087DD40-0x1087DD80
		public static bool BGetDLCDataByIndex(int iDLC, out AppId_t pAppID, out bool pbAvailable, out string pchName, int cchNameBufferSize); // 0x1087D6F0-0x1087D7E0
		public static void InstallDLC(AppId_t nAppID); // 0x1087E130-0x1087E180
		public static void UninstallDLC(AppId_t nAppID); // 0x1087E260-0x1087E2B0
		public static void RequestAppProofOfPurchaseKey(AppId_t nAppID); // 0x1087E210-0x1087E260
		public static bool GetCurrentBetaName(out string pchName, int cchNameBufferSize); // 0x1087DC10-0x1087DCF0
		public static bool MarkContentCorrupt(bool bMissingFilesOnly); // 0x1087E180-0x1087E1D0
		public static uint GetInstalledDepots(AppId_t appID, DepotId_t[] pvecDepots, uint cMaxDepots); // 0x1087DFA0-0x1087DFF0
		public static uint GetAppInstallDir(AppId_t appID, out string pchFolder, uint cchFolderBufferSize); // 0x1087DA50-0x1087DB30
		public static bool BIsAppInstalled(AppId_t appID); // 0x1087D7E0-0x1087D830
		public static CSteamID GetAppOwner(); // 0x1087DB30-0x1087DBC0
		public static string GetLaunchQueryParam(string pchKey); // 0x1087DFF0-0x1087E130
		public static bool GetDlcDownloadProgress(AppId_t nAppID, out ulong punBytesDownloaded, out ulong punBytesTotal); // 0x1087DD80-0x1087DDD0
		public static int GetAppBuildId(); // 0x1087DA10-0x1087DA50
		public static void RequestAllProofOfPurchaseKeys(); // 0x1087E1D0-0x1087E210
		public static SteamAPICall_t GetFileDetails(string pszFileName); // 0x1087DE20-0x1087DFA0
	}

	public static class SteamGameServerClient // TypeDefIndex: 4765
	{
		// Methods
		public static HSteamPipe CreateSteamPipe(); // 0x1087E3F0-0x1087E440
		public static bool BReleaseSteamPipe(HSteamPipe hSteamPipe); // 0x1087E2B0-0x1087E300
		public static HSteamUser ConnectToGlobalUser(HSteamPipe hSteamPipe); // 0x1087E340-0x1087E3A0
		public static HSteamUser CreateLocalUser(out HSteamPipe phSteamPipe, EAccountType eAccountType); // 0x1087E3A0-0x1087E3F0
		public static void ReleaseUser(HSteamPipe hSteamPipe, HSteamUser hUser); // 0x108802A0-0x108802F0
		public static IntPtr GetISteamUser(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x1087FEC0-0x10880010
		public static IntPtr GetISteamGameServer(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x1087EB10-0x1087EC60
		public static void SetLocalIPBinding(uint unIP, ushort usPort); // 0x108802F0-0x10880340
		public static IntPtr GetISteamFriends(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x1087E870-0x1087E9C0
		public static IntPtr GetISteamUtils(HSteamPipe hSteamPipe, string pchVersion); // 0x10880010-0x10880150
		public static IntPtr GetISteamMatchmaking(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x1087F2F0-0x1087F440
		public static IntPtr GetISteamMatchmakingServers(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x1087F1A0-0x1087F2F0
		public static IntPtr GetISteamGenericInterface(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x1087EC60-0x1087EDB0
		public static IntPtr GetISteamUserStats(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x1087FD70-0x1087FEC0
		public static IntPtr GetISteamGameServerStats(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion); // 0x1087E9C0-0x1087EB10
		public static IntPtr GetISteamApps(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x1087E5D0-0x1087E720
		public static IntPtr GetISteamNetworking(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x1087F6E0-0x1087F830
		public static IntPtr GetISteamRemoteStorage(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion); // 0x1087F980-0x1087FAD0
		public static IntPtr GetISteamScreenshots(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion); // 0x1087FAD0-0x1087FC20
		public static uint GetIPCCallCount(); // 0x1087E440-0x1087E480
		public static void SetWarningMessageHook(SteamAPIWarningMessageHook_t pFunction); // 0x10880340-0x10880390
		public static bool BShutdownIfAllPipesClosed(); // 0x1087E300-0x1087E340
		public static IntPtr GetISteamHTTP(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion); // 0x1087EF00-0x1087F050
		public static IntPtr GetISteamController(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x1087E720-0x1087E870
		public static IntPtr GetISteamUGC(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x1087FC20-0x1087FD70
		public static IntPtr GetISteamAppList(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion); // 0x1087E480-0x1087E5D0
		public static IntPtr GetISteamMusic(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion); // 0x1087F590-0x1087F6E0
		public static IntPtr GetISteamMusicRemote(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion); // 0x1087F440-0x1087F590
		public static IntPtr GetISteamHTMLSurface(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion); // 0x1087EDB0-0x1087EF00
		public static IntPtr GetISteamInventory(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion); // 0x1087F050-0x1087F1A0
		public static IntPtr GetISteamVideo(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion); // 0x10880150-0x108802A0
		public static IntPtr GetISteamParentalSettings(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion); // 0x1087F830-0x1087F980
	}

	public static class SteamGameServerHTTP // TypeDefIndex: 4766
	{
		// Methods
		public static HTTPRequestHandle CreateHTTPRequest(EHTTPMethod eHTTPRequestMethod, string pchAbsoluteURL); // 0x10880420-0x10880590
		public static bool SetHTTPRequestContextValue(HTTPRequestHandle hRequest, ulong ulContextValue); // 0x10880E30-0x10880E80
		public static bool SetHTTPRequestNetworkActivityTimeout(HTTPRequestHandle hRequest, uint unTimeoutSeconds); // 0x10881230-0x10881280
		public static bool SetHTTPRequestHeaderValue(HTTPRequestHandle hRequest, string pchHeaderName, string pchHeaderValue); // 0x10881080-0x10881230
		public static bool SetHTTPRequestGetOrPostParameter(HTTPRequestHandle hRequest, string pchParamName, string pchParamValue); // 0x10880ED0-0x10881080
		public static bool SendHTTPRequest(HTTPRequestHandle hRequest, out SteamAPICall_t pCallHandle); // 0x10880B50-0x10880BA0
		public static bool SendHTTPRequestAndStreamResponse(HTTPRequestHandle hRequest, out SteamAPICall_t pCallHandle); // 0x10880B00-0x10880B50
		public static bool DeferHTTPRequest(HTTPRequestHandle hRequest); // 0x10880590-0x108805E0
		public static bool PrioritizeHTTPRequest(HTTPRequestHandle hRequest); // 0x10880A10-0x10880A60
		public static bool GetHTTPResponseHeaderSize(HTTPRequestHandle hRequest, string pchHeaderName, out uint unResponseHeaderSize); // 0x10880720-0x10880870
		public static bool GetHTTPResponseHeaderValue(HTTPRequestHandle hRequest, string pchHeaderName, byte[] pHeaderValueBuffer, uint unBufferSize); // 0x10880870-0x108809C0
		public static bool GetHTTPResponseBodySize(HTTPRequestHandle hRequest, out uint unBodySize); // 0x108806D0-0x10880720
		public static bool GetHTTPResponseBodyData(HTTPRequestHandle hRequest, byte[] pBodyDataBuffer, uint unBufferSize); // 0x10880680-0x108806D0
		public static bool GetHTTPStreamingResponseBodyData(HTTPRequestHandle hRequest, uint cOffset, byte[] pBodyDataBuffer, uint unBufferSize); // 0x108809C0-0x10880A10
		public static bool ReleaseHTTPRequest(HTTPRequestHandle hRequest); // 0x10880AB0-0x10880B00
		public static bool GetHTTPDownloadProgressPct(HTTPRequestHandle hRequest, out float pflPercentOut); // 0x108805E0-0x10880630
		public static bool SetHTTPRequestRawPostBody(HTTPRequestHandle hRequest, string pchContentType, byte[] pubBody, uint unBodyLen); // 0x10881280-0x108813D0
		public static HTTPCookieContainerHandle CreateCookieContainer(bool bAllowResponsesToModify); // 0x10880390-0x10880420
		public static bool ReleaseCookieContainer(HTTPCookieContainerHandle hCookieContainer); // 0x10880A60-0x10880AB0
		public static bool SetCookie(HTTPCookieContainerHandle hCookieContainer, string pchHost, string pchUrl, string pchCookie); // 0x10880BA0-0x10880DE0
		public static bool SetHTTPRequestCookieContainer(HTTPRequestHandle hRequest, HTTPCookieContainerHandle hCookieContainer); // 0x10880E80-0x10880ED0
		public static bool SetHTTPRequestUserAgentInfo(HTTPRequestHandle hRequest, string pchUserAgentInfo); // 0x10881420-0x10881560
		public static bool SetHTTPRequestRequiresVerifiedCertificate(HTTPRequestHandle hRequest, bool bRequireVerifiedCertificate); // 0x108813D0-0x10881420
		public static bool SetHTTPRequestAbsoluteTimeoutMS(HTTPRequestHandle hRequest, uint unMilliseconds); // 0x10880DE0-0x10880E30
		public static bool GetHTTPRequestWasTimedOut(HTTPRequestHandle hRequest, out bool pbWasTimedOut); // 0x10880630-0x10880680
	}

	public static class SteamGameServerInventory // TypeDefIndex: 4767
	{
		// Methods
		public static EResult GetResultStatus(SteamInventoryResult_t resultHandle); // 0x10881DE0-0x10881E30
		public static bool GetResultItems(SteamInventoryResult_t resultHandle, SteamItemDetails_t[] pOutItemsArray, ref uint punOutItemsArraySize); // 0x10881D90-0x10881DE0
		public static bool GetResultItemProperty(SteamInventoryResult_t resultHandle, uint unItemIndex, string pchPropertyName, out string pchValueBuffer, ref uint punValueBufferSizeOut); // 0x10881BD0-0x10881D90
		public static uint GetResultTimestamp(SteamInventoryResult_t resultHandle); // 0x10881E30-0x10881E80
		public static bool CheckResultSteamID(SteamInventoryResult_t resultHandle, CSteamID steamIDExpected); // 0x10881600-0x10881650
		public static void DestroyResult(SteamInventoryResult_t resultHandle); // 0x108816F0-0x10881740
		public static bool GetAllItems(out SteamInventoryResult_t pResultHandle); // 0x108817F0-0x10881840
		public static bool GetItemsByID(out SteamInventoryResult_t pResultHandle, SteamItemInstanceID_t[] pInstanceIDs, uint unCountInstanceIDs); // 0x10881AF0-0x10881B40
		public static bool SerializeResult(SteamInventoryResult_t resultHandle, byte[] pOutBuffer, out uint punOutBufferSize); // 0x108821D0-0x10882220
		public static bool DeserializeResult(out SteamInventoryResult_t pOutResultHandle, byte[] pBuffer, uint unBufferSize, bool bRESERVED_MUST_BE_FALSE = false /* Metadata: 0x0024385F */); // 0x108816A0-0x108816F0
		public static bool GenerateItems(out SteamInventoryResult_t pResultHandle, SteamItemDef_t[] pArrayItemDefs, uint[] punArrayQuantity, uint unArrayLength); // 0x108817A0-0x108817F0
		public static bool GrantPromoItems(out SteamInventoryResult_t pResultHandle); // 0x10881E80-0x10881ED0
		public static bool AddPromoItem(out SteamInventoryResult_t pResultHandle, SteamItemDef_t itemDef); // 0x10881560-0x108815B0
		public static bool AddPromoItems(out SteamInventoryResult_t pResultHandle, SteamItemDef_t[] pArrayItemDefs, uint unArrayLength); // 0x108815B0-0x10881600
		public static bool ConsumeItem(out SteamInventoryResult_t pResultHandle, SteamItemInstanceID_t itemConsume, uint unQuantity); // 0x10881650-0x108816A0
		public static bool ExchangeItems(out SteamInventoryResult_t pResultHandle, SteamItemDef_t[] pArrayGenerate, uint[] punArrayGenerateQuantity, uint unArrayGenerateLength, SteamItemInstanceID_t[] pArrayDestroy, uint[] punArrayDestroyQuantity, uint unArrayDestroyLength); // 0x10881740-0x108817A0
		public static bool TransferItemQuantity(out SteamInventoryResult_t pResultHandle, SteamItemInstanceID_t itemIdSource, uint unQuantity, SteamItemInstanceID_t itemIdDest); // 0x108829D0-0x10882A30
		public static void SendItemDropHeartbeat(); // 0x10882190-0x108821D0
		public static bool TriggerItemDrop(out SteamInventoryResult_t pResultHandle, SteamItemDef_t dropListDefinition); // 0x10882A30-0x10882A80
		public static bool TradeItems(out SteamInventoryResult_t pResultHandle, CSteamID steamIDTradePartner, SteamItemInstanceID_t[] pArrayGive, uint[] pArrayGiveQuantity, uint nArrayGiveLength, SteamItemInstanceID_t[] pArrayGet, uint[] pArrayGetQuantity, uint nArrayGetLength); // 0x10882970-0x108829D0
		public static bool LoadItemDefinitions(); // 0x10881ED0-0x10881F10
		public static bool GetItemDefinitionIDs(SteamItemDef_t[] pItemDefIDs, out uint punItemDefIDsArraySize); // 0x10881890-0x108818E0
		public static bool GetItemDefinitionProperty(SteamItemDef_t iDefinition, string pchPropertyName, out string pchValueBuffer, ref uint punValueBufferSizeOut); // 0x108818E0-0x10881AA0
		public static SteamAPICall_t RequestEligiblePromoItemDefinitionsIDs(CSteamID steamID); // 0x10882060-0x10882100
		public static bool GetEligiblePromoItemDefinitionIDs(CSteamID steamID, SteamItemDef_t[] pItemDefIDs, ref uint punItemDefIDsArraySize); // 0x10881840-0x10881890
		public static SteamAPICall_t StartPurchase(SteamItemDef_t[] pArrayItemDefs, uint[] punArrayQuantity, uint unArrayLength); // 0x108827F0-0x10882890
		public static SteamAPICall_t RequestPrices(); // 0x10882100-0x10882190
		public static uint GetNumItemsWithPrices(); // 0x10881B90-0x10881BD0
		public static bool GetItemsWithPrices(SteamItemDef_t[] pArrayItemDefs, ulong[] pPrices, uint unArrayLength); // 0x10881B40-0x10881B90
		public static bool GetItemPrice(SteamItemDef_t iDefinition, out ulong pPrice); // 0x10881AA0-0x10881AF0
		public static SteamInventoryUpdateHandle_t StartUpdateProperties(); // 0x10882890-0x10882920
		public static bool RemoveProperty(SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, string pchPropertyName); // 0x10881F10-0x10882060
		public static bool SetProperty(SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, string pchPropertyName, string pchPropertyValue); // 0x10882630-0x108827F0
		public static bool SetProperty(SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, string pchPropertyName, bool bValue); // 0x108824E0-0x10882630
		public static bool SetProperty1(SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, string pchPropertyName, long nValue); // 0x10882220-0x10882380
		public static bool SetProperty2(SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, string pchPropertyName, float flValue); // 0x10882380-0x108824E0
		public static bool SubmitUpdateProperties(SteamInventoryUpdateHandle_t handle, out SteamInventoryResult_t pResultHandle); // 0x10882920-0x10882970
	}

	public static class SteamGameServerNetworking // TypeDefIndex: 4768
	{
		// Methods
		public static bool SendP2PPacket(CSteamID steamIDRemote, byte[] pubData, uint cubData, EP2PSend eP2PSendType, int nChannel = 0 /* Metadata: 0x00243860 */); // 0x10883170-0x108831D0
		public static bool IsP2PPacketAvailable(out uint pcubMsgSize, int nChannel = 0 /* Metadata: 0x00243864 */); // 0x10882FC0-0x10883010
		public static bool ReadP2PPacket(byte[] pubDest, uint cubDest, out uint pcubMsgSize, out CSteamID psteamIDRemote, int nChannel = 0 /* Metadata: 0x00243868 */); // 0x10883010-0x10883070
		public static bool AcceptP2PSessionWithUser(CSteamID steamIDRemote); // 0x10882A80-0x10882AD0
		public static bool CloseP2PSessionWithUser(CSteamID steamIDRemote); // 0x10882B70-0x10882BC0
		public static bool CloseP2PChannelWithUser(CSteamID steamIDRemote, int nChannel); // 0x10882B20-0x10882B70
		public static bool GetP2PSessionState(CSteamID steamIDRemote, out P2PSessionState_t pConnectionState); // 0x10882E20-0x10882E70
		public static bool AllowP2PPacketRelay(bool bAllow); // 0x10882AD0-0x10882B20
		public static SNetListenSocket_t CreateListenSocket(int nVirtualP2PPort, uint nIP, ushort nPort, bool bAllowUseOfPacketRelay); // 0x10882C20-0x10882C80
		public static SNetSocket_t CreateP2PConnectionSocket(CSteamID steamIDTarget, int nVirtualPort, int nTimeoutSec, bool bAllowUseOfPacketRelay); // 0x10882C80-0x10882CE0
		public static SNetSocket_t CreateConnectionSocket(uint nIP, ushort nPort, int nTimeoutSec); // 0x10882BC0-0x10882C20
		public static bool DestroySocket(SNetSocket_t hSocket, bool bNotifyRemoteEnd); // 0x10882D30-0x10882D80
		public static bool DestroyListenSocket(SNetListenSocket_t hSocket, bool bNotifyRemoteEnd); // 0x10882CE0-0x10882D30
		public static bool SendDataOnSocket(SNetSocket_t hSocket, byte[] pubData, uint cubData, bool bReliable); // 0x10883120-0x10883170
		public static bool IsDataAvailableOnSocket(SNetSocket_t hSocket, out uint pcubMsgSize); // 0x10882F20-0x10882F70
		public static bool RetrieveDataFromSocket(SNetSocket_t hSocket, byte[] pubDest, uint cubDest, out uint pcubMsgSize); // 0x10883070-0x108830C0
		public static bool IsDataAvailable(SNetListenSocket_t hListenSocket, out uint pcubMsgSize, out SNetSocket_t phSocket); // 0x10882F70-0x10882FC0
		public static bool RetrieveData(SNetListenSocket_t hListenSocket, byte[] pubDest, uint cubDest, out uint pcubMsgSize, out SNetSocket_t phSocket); // 0x108830C0-0x10883120
		public static bool GetSocketInfo(SNetSocket_t hSocket, out CSteamID pSteamIDRemote, out int peSocketStatus, out uint punIPRemote, out ushort punPortRemote); // 0x10882EC0-0x10882F20
		public static bool GetListenSocketInfo(SNetListenSocket_t hListenSocket, out uint pnIP, out ushort pnPort); // 0x10882D80-0x10882DD0
		public static ESNetSocketConnectionType GetSocketConnectionType(SNetSocket_t hSocket); // 0x10882E70-0x10882EC0
		public static int GetMaxPacketSize(SNetSocket_t hSocket); // 0x10882DD0-0x10882E20
	}

	public static class SteamGameServerStats // TypeDefIndex: 4769
	{
		// Methods
		public static SteamAPICall_t RequestUserStats(CSteamID steamIDUser); // 0x10883710-0x108837B0
		public static bool GetUserStat(CSteamID steamIDUser, string pchName, out int pData); // 0x10883470-0x108835C0
		public static bool GetUserStat(CSteamID steamIDUser, string pchName, out float pData); // 0x108835C0-0x10883710
		public static bool GetUserAchievement(CSteamID steamIDUser, string pchName, out bool pbAchieved); // 0x10883320-0x10883470
		public static bool SetUserStat(CSteamID steamIDUser, string pchName, int nData); // 0x10883A50-0x10883BA0
		public static bool SetUserStat(CSteamID steamIDUser, string pchName, float fData); // 0x10883900-0x10883A50
		public static bool UpdateUserAvgRateStat(CSteamID steamIDUser, string pchName, float flCountThisSession, double dSessionLength); // 0x10883C40-0x10883DA0
		public static bool SetUserAchievement(CSteamID steamIDUser, string pchName); // 0x108837B0-0x10883900
		public static bool ClearUserAchievement(CSteamID steamIDUser, string pchName); // 0x108831D0-0x10883320
		public static SteamAPICall_t StoreUserStats(CSteamID steamIDUser); // 0x10883BA0-0x10883C40
	}

	public static class SteamGameServerUGC // TypeDefIndex: 4770
	{
		// Methods
		public static UGCQueryHandle_t CreateQueryUserUGCRequest(AccountID_t unAccountID, EUserUGCList eListType, EUGCMatchingUGCType eMatchingUGCType, EUserUGCListSortOrder eSortOrder, AppId_t nCreatorAppID, AppId_t nConsumerAppID, uint unPage); // 0x10884B50-0x10884C00
		public static UGCQueryHandle_t CreateQueryAllUGCRequest(EUGCQuery eQueryType, EUGCMatchingUGCType eMatchingeMatchingUGCTypeFileType, AppId_t nCreatorAppID, AppId_t nConsumerAppID, uint unPage); // 0x10884A00-0x10884AB0
		public static UGCQueryHandle_t CreateQueryUGCDetailsRequest(PublishedFileId_t[] pvecPublishedFileID, uint unNumPublishedFileIDs); // 0x10884AB0-0x10884B50
		public static SteamAPICall_t SendQueryUGCRequest(UGCQueryHandle_t handle); // 0x10885B20-0x10885BC0
		public static bool GetQueryUGCResult(UGCQueryHandle_t handle, uint index, out SteamUGCDetails_t pDetails); // 0x10885510-0x10885560
		public static bool GetQueryUGCPreviewURL(UGCQueryHandle_t handle, uint index, out string pchURL, uint cchURLSize); // 0x10885420-0x10885510
		public static bool GetQueryUGCMetadata(UGCQueryHandle_t handle, uint index, out string pchMetadata, uint cchMetadatasize); // 0x10885290-0x10885380
		public static bool GetQueryUGCChildren(UGCQueryHandle_t handle, uint index, PublishedFileId_t[] pvecPublishedFileID, uint cMaxEntries); // 0x108850F0-0x10885150
		public static bool GetQueryUGCStatistic(UGCQueryHandle_t handle, uint index, EItemStatistic eStatType, out ulong pStatValue); // 0x10885560-0x108855C0
		public static uint GetQueryUGCNumAdditionalPreviews(UGCQueryHandle_t handle, uint index); // 0x10885380-0x108853D0
		public static bool GetQueryUGCAdditionalPreview(UGCQueryHandle_t handle, uint index, uint previewIndex, out string pchURLOrVideoID, uint cchURLSize, out string pchOriginalFileName, uint cchOriginalFileNameSize, out EItemPreviewType pPreviewType); // 0x10884FB0-0x108850F0
		public static uint GetQueryUGCNumKeyValueTags(UGCQueryHandle_t handle, uint index); // 0x108853D0-0x10885420
		public static bool GetQueryUGCKeyValueTag(UGCQueryHandle_t handle, uint index, uint keyValueTagIndex, out string pchKey, uint cchKeySize, out string pchValue, uint cchValueSize); // 0x10885150-0x10885290
		public static bool ReleaseQueryUGCRequest(UGCQueryHandle_t handle); // 0x108856B0-0x10885700
		public static bool AddRequiredTag(UGCQueryHandle_t handle, string pTagName); // 0x108846D0-0x10884820
		public static bool AddExcludedTag(UGCQueryHandle_t handle, string pTagName); // 0x10883EE0-0x10884030
		public static bool SetReturnOnlyIDs(UGCQueryHandle_t handle, bool bReturnOnlyIDs); // 0x108869B0-0x10886A00
		public static bool SetReturnKeyValueTags(UGCQueryHandle_t handle, bool bReturnKeyValueTags); // 0x108868C0-0x10886910
		public static bool SetReturnLongDescription(UGCQueryHandle_t handle, bool bReturnLongDescription); // 0x10886910-0x10886960
		public static bool SetReturnMetadata(UGCQueryHandle_t handle, bool bReturnMetadata); // 0x10886960-0x108869B0
		public static bool SetReturnChildren(UGCQueryHandle_t handle, bool bReturnChildren); // 0x10886870-0x108868C0
		public static bool SetReturnAdditionalPreviews(UGCQueryHandle_t handle, bool bReturnAdditionalPreviews); // 0x10886820-0x10886870
		public static bool SetReturnTotalOnly(UGCQueryHandle_t handle, bool bReturnTotalOnly); // 0x10886A50-0x10886AA0
		public static bool SetReturnPlaytimeStats(UGCQueryHandle_t handle, uint unDays); // 0x10886A00-0x10886A50
		public static bool SetLanguage(UGCQueryHandle_t handle, string pchLanguage); // 0x10886630-0x10886780
		public static bool SetAllowCachedResponse(UGCQueryHandle_t handle, uint unMaxAgeSeconds); // 0x10885BC0-0x10885C10
		public static bool SetCloudFileNameFilter(UGCQueryHandle_t handle, string pMatchCloudFileName); // 0x10885C10-0x10885D60
		public static bool SetMatchAnyTag(UGCQueryHandle_t handle, bool bMatchAnyTag); // 0x10886780-0x108867D0
		public static bool SetSearchText(UGCQueryHandle_t handle, string pSearchText); // 0x10886AA0-0x10886BF0
		public static bool SetRankedByTrendDays(UGCQueryHandle_t handle, uint unDays); // 0x108867D0-0x10886820
		public static bool AddRequiredKeyValueTag(UGCQueryHandle_t handle, string pKey, string pValue); // 0x10884520-0x108846D0
		public static SteamAPICall_t RequestUGCDetails(PublishedFileId_t nPublishedFileID, uint unMaxAgeSeconds); // 0x10885A80-0x10885B20
		public static SteamAPICall_t CreateItem(AppId_t nConsumerAppId, EWorkshopFileType eFileType); // 0x10884960-0x10884A00
		public static UGCUpdateHandle_t StartItemUpdate(AppId_t nConsumerAppId, PublishedFileId_t nPublishedFileID); // 0x10886C90-0x10886D30
		public static bool SetItemTitle(UGCUpdateHandle_t handle, string pchTitle); // 0x10886340-0x10886490
		public static bool SetItemDescription(UGCUpdateHandle_t handle, string pchDescription); // 0x10885EB0-0x10886000
		public static bool SetItemUpdateLanguage(UGCUpdateHandle_t handle, string pchLanguage); // 0x10886490-0x108865E0
		public static bool SetItemMetadata(UGCUpdateHandle_t handle, string pchMetaData); // 0x10886000-0x10886150
		public static bool SetItemVisibility(UGCUpdateHandle_t handle, ERemoteStoragePublishedFileVisibility eVisibility); // 0x108865E0-0x10886630
		public static bool SetItemTags(UGCUpdateHandle_t updateHandle, IList<string> pTags); // 0x108862A0-0x10886340
		public static bool SetItemContent(UGCUpdateHandle_t handle, string pszContentFolder); // 0x10885D60-0x10885EB0
		public static bool SetItemPreview(UGCUpdateHandle_t handle, string pszPreviewFile); // 0x10886150-0x108862A0
		public static bool RemoveItemKeyValueTags(UGCUpdateHandle_t handle, string pchKey); // 0x108858E0-0x10885A30
		public static bool AddItemKeyValueTag(UGCUpdateHandle_t handle, string pchKey, string pchValue); // 0x10884030-0x108841E0
		public static bool AddItemPreviewFile(UGCUpdateHandle_t handle, string pszPreviewFile, EItemPreviewType type); // 0x108841E0-0x10884330
		public static bool AddItemPreviewVideo(UGCUpdateHandle_t handle, string pszVideoID); // 0x10884330-0x10884480
		public static bool UpdateItemPreviewFile(UGCUpdateHandle_t handle, uint index, string pszPreviewFile); // 0x10887210-0x10887360
		public static bool UpdateItemPreviewVideo(UGCUpdateHandle_t handle, uint index, string pszVideoID); // 0x10887360-0x108874B0
		public static bool RemoveItemPreview(UGCUpdateHandle_t handle, uint index); // 0x10885A30-0x10885A80
		public static SteamAPICall_t SubmitItemUpdate(UGCUpdateHandle_t handle, string pchChangeNote); // 0x10886F00-0x10887080
		public static EItemUpdateStatus GetItemUpdateProgress(UGCUpdateHandle_t handle, out ulong punBytesProcessed, out ulong punBytesTotal); // 0x10884F20-0x10884F70
		public static SteamAPICall_t SetUserItemVote(PublishedFileId_t nPublishedFileID, bool bVoteUp); // 0x10886BF0-0x10886C90
		public static SteamAPICall_t GetUserItemVote(PublishedFileId_t nPublishedFileID); // 0x10885610-0x108856B0
		public static SteamAPICall_t AddItemToFavorites(AppId_t nAppId, PublishedFileId_t nPublishedFileID); // 0x10884480-0x10884520
		public static SteamAPICall_t RemoveItemFromFavorites(AppId_t nAppId, PublishedFileId_t nPublishedFileID); // 0x10885840-0x108858E0
		public static SteamAPICall_t SubscribeItem(PublishedFileId_t nPublishedFileID); // 0x10887080-0x10887120
		public static SteamAPICall_t UnsubscribeItem(PublishedFileId_t nPublishedFileID); // 0x10887170-0x10887210
		public static uint GetNumSubscribedItems(); // 0x10884F70-0x10884FB0
		public static uint GetSubscribedItems(PublishedFileId_t[] pvecPublishedFileID, uint cMaxEntries); // 0x108855C0-0x10885610
		public static uint GetItemState(PublishedFileId_t nPublishedFileID); // 0x10884ED0-0x10884F20
		public static bool GetItemInstallInfo(PublishedFileId_t nPublishedFileID, out ulong punSizeOnDisk, out string pchFolder, uint cchFolderSize, out uint punTimeStamp); // 0x10884DE0-0x10884ED0
		public static bool GetItemDownloadInfo(PublishedFileId_t nPublishedFileID, out ulong punBytesDownloaded, out ulong punBytesTotal); // 0x10884D90-0x10884DE0
		public static bool DownloadItem(PublishedFileId_t nPublishedFileID, bool bHighPriority); // 0x10884CA0-0x10884CF0
		public static bool BInitWorkshopForGameServer(DepotId_t unWorkshopDepotID, string pszFolder); // 0x10884820-0x10884960
		public static void SuspendDownloads(bool bSuspend); // 0x10887120-0x10887170
		public static SteamAPICall_t StartPlaytimeTracking(PublishedFileId_t[] pvecPublishedFileID, uint unNumPublishedFileIDs); // 0x10886D30-0x10886DD0
		public static SteamAPICall_t StopPlaytimeTracking(PublishedFileId_t[] pvecPublishedFileID, uint unNumPublishedFileIDs); // 0x10886E60-0x10886F00
		public static SteamAPICall_t StopPlaytimeTrackingForAllItems(); // 0x10886DD0-0x10886E60
		public static SteamAPICall_t AddDependency(PublishedFileId_t nParentPublishedFileID, PublishedFileId_t nChildPublishedFileID); // 0x10883E40-0x10883EE0
		public static SteamAPICall_t RemoveDependency(PublishedFileId_t nParentPublishedFileID, PublishedFileId_t nChildPublishedFileID); // 0x108857A0-0x10885840
		public static SteamAPICall_t AddAppDependency(PublishedFileId_t nPublishedFileID, AppId_t nAppID); // 0x10883DA0-0x10883E40
		public static SteamAPICall_t RemoveAppDependency(PublishedFileId_t nPublishedFileID, AppId_t nAppID); // 0x10885700-0x108857A0
		public static SteamAPICall_t GetAppDependencies(PublishedFileId_t nPublishedFileID); // 0x10884CF0-0x10884D90
		public static SteamAPICall_t DeleteItem(PublishedFileId_t nPublishedFileID); // 0x10884C00-0x10884CA0
	}

	public static class SteamGameServerUtils // TypeDefIndex: 4771
	{
		// Methods
		public static uint GetSecondsSinceAppActive(); // 0x10887AD0-0x10887B10
		public static uint GetSecondsSinceComputerActive(); // 0x10887B10-0x10887B50
		public static EUniverse GetConnectedUniverse(); // 0x10887800-0x10887840
		public static uint GetServerRealTime(); // 0x10887B50-0x10887B90
		public static string GetIPCountry(); // 0x108879E0-0x10887A30
		public static bool GetImageSize(int iImage, out uint pnWidth, out uint pnHeight); // 0x10887A80-0x10887AD0
		public static bool GetImageRGBA(int iImage, byte[] pubDest, int nDestBufferSize); // 0x10887A30-0x10887A80
		public static bool GetCSERIPPort(out uint unIP, out ushort usPort); // 0x108877B0-0x10887800
		public static byte GetCurrentBatteryPower(); // 0x10887840-0x10887880
		public static AppId_t GetAppID(); // 0x10887720-0x108877B0
		public static void SetOverlayNotificationPosition(ENotificationPosition eNotificationPosition); // 0x10887D80-0x10887DD0
		public static bool IsAPICallCompleted(SteamAPICall_t hSteamAPICall, out bool pbFailed); // 0x10887BE0-0x10887C30
		public static ESteamAPICallFailure GetAPICallFailureReason(SteamAPICall_t hSteamAPICall); // 0x10887670-0x108876C0
		public static bool GetAPICallResult(SteamAPICall_t hSteamAPICall, IntPtr pCallback, int cubCallback, int iCallbackExpected, out bool pbFailed); // 0x108876C0-0x10887720
		public static uint GetIPCCallCount(); // 0x108879A0-0x108879E0
		public static void SetWarningMessageHook(SteamAPIWarningMessageHook_t pFunction); // 0x10887E20-0x10887E70
		public static bool IsOverlayEnabled(); // 0x10887C30-0x10887C70
		public static bool BOverlayNeedsPresent(); // 0x108874B0-0x108874F0
		public static SteamAPICall_t CheckFileSignature(string szFileName); // 0x108874F0-0x10887670
		public static bool ShowGamepadTextInput(EGamepadTextInputMode eInputMode, EGamepadTextInputLineMode eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText); // 0x10887E70-0x10888030
		public static uint GetEnteredGamepadTextLength(); // 0x10887960-0x108879A0
		public static bool GetEnteredGamepadTextInput(out string pchText, uint cchText); // 0x10887880-0x10887960
		public static string GetSteamUILanguage(); // 0x10887B90-0x10887BE0
		public static bool IsSteamRunningInVR(); // 0x10887CB0-0x10887CF0
		public static void SetOverlayNotificationInset(int nHorizontalInset, int nVerticalInset); // 0x10887D30-0x10887D80
		public static bool IsSteamInBigPictureMode(); // 0x10887C70-0x10887CB0
		public static void StartVRDashboard(); // 0x10888030-0x10888070
		public static bool IsVRHeadsetStreamingEnabled(); // 0x10887CF0-0x10887D30
		public static void SetVRHeadsetStreamingEnabled(bool bEnabled); // 0x10887DD0-0x10887E20
	}

	public static class SteamHTMLSurface // TypeDefIndex: 4772
	{
		// Methods
		public static bool Init(); // 0x1088A290-0x1088A2D0
		public static bool Shutdown(); // 0x1088AD40-0x1088AD80
		public static SteamAPICall_t CreateBrowser(string pchUserAgent, string pchUserCSS); // 0x10889D00-0x10889EE0
		public static void RemoveBrowser(HHTMLBrowser unBrowserHandle); // 0x1088A7E0-0x1088A830
		public static void LoadURL(HHTMLBrowser unBrowserHandle, string pchURL, string pchPostData); // 0x1088A410-0x1088A5B0
		public static void SetSize(HHTMLBrowser unBrowserHandle, uint unWidth, uint unHeight); // 0x1088ACA0-0x1088ACF0
		public static void StopLoad(HHTMLBrowser unBrowserHandle); // 0x1088ADD0-0x1088AE20
		public static void Reload(HHTMLBrowser unBrowserHandle); // 0x1088A790-0x1088A7E0
		public static void GoBack(HHTMLBrowser unBrowserHandle); // 0x1088A1F0-0x1088A240
		public static void GoForward(HHTMLBrowser unBrowserHandle); // 0x1088A240-0x1088A290
		public static void AddHeader(HHTMLBrowser unBrowserHandle, string pchKey, string pchValue); // 0x10889AC0-0x10889C60
		public static void ExecuteJavascript(HHTMLBrowser unBrowserHandle, string pchScript); // 0x10889EE0-0x1088A010
		public static void MouseUp(HHTMLBrowser unBrowserHandle, EHTMLMouseButton eMouseButton); // 0x1088A6A0-0x1088A6F0
		public static void MouseDown(HHTMLBrowser unBrowserHandle, EHTMLMouseButton eMouseButton); // 0x1088A600-0x1088A650
		public static void MouseDoubleClick(HHTMLBrowser unBrowserHandle, EHTMLMouseButton eMouseButton); // 0x1088A5B0-0x1088A600
		public static void MouseMove(HHTMLBrowser unBrowserHandle, int x, int y); // 0x1088A650-0x1088A6A0
		public static void MouseWheel(HHTMLBrowser unBrowserHandle, int nDelta); // 0x1088A6F0-0x1088A740
		public static void KeyDown(HHTMLBrowser unBrowserHandle, uint nNativeKeyCode, EHTMLKeyModifiers eHTMLKeyModifiers); // 0x1088A370-0x1088A3C0
		public static void KeyUp(HHTMLBrowser unBrowserHandle, uint nNativeKeyCode, EHTMLKeyModifiers eHTMLKeyModifiers); // 0x1088A3C0-0x1088A410
		public static void KeyChar(HHTMLBrowser unBrowserHandle, uint cUnicodeChar, EHTMLKeyModifiers eHTMLKeyModifiers); // 0x1088A320-0x1088A370
		public static void SetHorizontalScroll(HHTMLBrowser unBrowserHandle, uint nAbsolutePixelScroll); // 0x1088ABA0-0x1088ABF0
		public static void SetVerticalScroll(HHTMLBrowser unBrowserHandle, uint nAbsolutePixelScroll); // 0x1088ACF0-0x1088AD40
		public static void SetKeyFocus(HHTMLBrowser unBrowserHandle, bool bHasKeyFocus); // 0x1088ABF0-0x1088AC40
		public static void ViewSource(HHTMLBrowser unBrowserHandle); // 0x1088AE20-0x1088AE70
		public static void CopyToClipboard(HHTMLBrowser unBrowserHandle); // 0x10889CB0-0x10889D00
		public static void PasteFromClipboard(HHTMLBrowser unBrowserHandle); // 0x1088A740-0x1088A790
		public static void Find(HHTMLBrowser unBrowserHandle, string pchSearchStr, bool bCurrentlyInFind, bool bReverse); // 0x1088A060-0x1088A1A0
		public static void StopFind(HHTMLBrowser unBrowserHandle); // 0x1088AD80-0x1088ADD0
		public static void GetLinkAtPosition(HHTMLBrowser unBrowserHandle, int x, int y); // 0x1088A1A0-0x1088A1F0
		public static void SetCookie(string pchHostname, string pchKey, string pchValue, string pchPath = "/" /* Metadata: 0x0024386C */, uint nExpires = 0 /* Metadata: 0x00243871 */, bool bSecure = false /* Metadata: 0x00243875 */, bool bHTTPOnly = false /* Metadata: 0x00243876 */); // 0x1088A880-0x1088AB50
		public static void SetPageScaleFactor(HHTMLBrowser unBrowserHandle, float flZoom, int nPointX, int nPointY); // 0x1088AC40-0x1088ACA0
		public static void SetBackgroundMode(HHTMLBrowser unBrowserHandle, bool bBackgroundMode); // 0x1088A830-0x1088A880
		public static void SetDPIScalingFactor(HHTMLBrowser unBrowserHandle, float flDPIScaling); // 0x1088AB50-0x1088ABA0
		public static void AllowStartRequest(HHTMLBrowser unBrowserHandle, bool bAllowed); // 0x10889C60-0x10889CB0
		public static void JSDialogResponse(HHTMLBrowser unBrowserHandle, bool bResult); // 0x1088A2D0-0x1088A320
		public static void FileLoadDialogResponse(HHTMLBrowser unBrowserHandle, IntPtr pchSelectedFiles); // 0x1088A010-0x1088A060
	}

	public static class SteamHTTP // TypeDefIndex: 4773
	{
		// Methods
		public static HTTPRequestHandle CreateHTTPRequest(EHTTPMethod eHTTPRequestMethod, string pchAbsoluteURL); // 0x1088AF00-0x1088B070
		public static bool SetHTTPRequestContextValue(HTTPRequestHandle hRequest, ulong ulContextValue); // 0x1088B910-0x1088B960
		public static bool SetHTTPRequestNetworkActivityTimeout(HTTPRequestHandle hRequest, uint unTimeoutSeconds); // 0x1088BD10-0x1088BD60
		public static bool SetHTTPRequestHeaderValue(HTTPRequestHandle hRequest, string pchHeaderName, string pchHeaderValue); // 0x1088BB60-0x1088BD10
		public static bool SetHTTPRequestGetOrPostParameter(HTTPRequestHandle hRequest, string pchParamName, string pchParamValue); // 0x1088B9B0-0x1088BB60
		public static bool SendHTTPRequest(HTTPRequestHandle hRequest, out SteamAPICall_t pCallHandle); // 0x1088B630-0x1088B680
		public static bool SendHTTPRequestAndStreamResponse(HTTPRequestHandle hRequest, out SteamAPICall_t pCallHandle); // 0x1088B5E0-0x1088B630
		public static bool DeferHTTPRequest(HTTPRequestHandle hRequest); // 0x1088B070-0x1088B0C0
		public static bool PrioritizeHTTPRequest(HTTPRequestHandle hRequest); // 0x1088B4F0-0x1088B540
		public static bool GetHTTPResponseHeaderSize(HTTPRequestHandle hRequest, string pchHeaderName, out uint unResponseHeaderSize); // 0x1088B200-0x1088B350
		public static bool GetHTTPResponseHeaderValue(HTTPRequestHandle hRequest, string pchHeaderName, byte[] pHeaderValueBuffer, uint unBufferSize); // 0x1088B350-0x1088B4A0
		public static bool GetHTTPResponseBodySize(HTTPRequestHandle hRequest, out uint unBodySize); // 0x1088B1B0-0x1088B200
		public static bool GetHTTPResponseBodyData(HTTPRequestHandle hRequest, byte[] pBodyDataBuffer, uint unBufferSize); // 0x1088B160-0x1088B1B0
		public static bool GetHTTPStreamingResponseBodyData(HTTPRequestHandle hRequest, uint cOffset, byte[] pBodyDataBuffer, uint unBufferSize); // 0x1088B4A0-0x1088B4F0
		public static bool ReleaseHTTPRequest(HTTPRequestHandle hRequest); // 0x1088B590-0x1088B5E0
		public static bool GetHTTPDownloadProgressPct(HTTPRequestHandle hRequest, out float pflPercentOut); // 0x1088B0C0-0x1088B110
		public static bool SetHTTPRequestRawPostBody(HTTPRequestHandle hRequest, string pchContentType, byte[] pubBody, uint unBodyLen); // 0x1088BD60-0x1088BEB0
		public static HTTPCookieContainerHandle CreateCookieContainer(bool bAllowResponsesToModify); // 0x1088AE70-0x1088AF00
		public static bool ReleaseCookieContainer(HTTPCookieContainerHandle hCookieContainer); // 0x1088B540-0x1088B590
		public static bool SetCookie(HTTPCookieContainerHandle hCookieContainer, string pchHost, string pchUrl, string pchCookie); // 0x1088B680-0x1088B8C0
		public static bool SetHTTPRequestCookieContainer(HTTPRequestHandle hRequest, HTTPCookieContainerHandle hCookieContainer); // 0x1088B960-0x1088B9B0
		public static bool SetHTTPRequestUserAgentInfo(HTTPRequestHandle hRequest, string pchUserAgentInfo); // 0x1088BF00-0x1088C040
		public static bool SetHTTPRequestRequiresVerifiedCertificate(HTTPRequestHandle hRequest, bool bRequireVerifiedCertificate); // 0x1088BEB0-0x1088BF00
		public static bool SetHTTPRequestAbsoluteTimeoutMS(HTTPRequestHandle hRequest, uint unMilliseconds); // 0x1088B8C0-0x1088B910
		public static bool GetHTTPRequestWasTimedOut(HTTPRequestHandle hRequest, out bool pbWasTimedOut); // 0x1088B110-0x1088B160
	}

	public static class SteamInventory // TypeDefIndex: 4774
	{
		// Methods
		public static EResult GetResultStatus(SteamInventoryResult_t resultHandle); // 0x1088C9E0-0x1088CA30
		public static bool GetResultItems(SteamInventoryResult_t resultHandle, SteamItemDetails_t[] pOutItemsArray, ref uint punOutItemsArraySize); // 0x1088C990-0x1088C9E0
		public static bool GetResultItemProperty(SteamInventoryResult_t resultHandle, uint unItemIndex, string pchPropertyName, out string pchValueBuffer, ref uint punValueBufferSizeOut); // 0x1088C7D0-0x1088C990
		public static uint GetResultTimestamp(SteamInventoryResult_t resultHandle); // 0x1088CA30-0x1088CA80
		public static bool CheckResultSteamID(SteamInventoryResult_t resultHandle, CSteamID steamIDExpected); // 0x1088C200-0x1088C250
		public static void DestroyResult(SteamInventoryResult_t resultHandle); // 0x1088C2F0-0x1088C340
		public static bool GetAllItems(out SteamInventoryResult_t pResultHandle); // 0x1088C3F0-0x1088C440
		public static bool GetItemsByID(out SteamInventoryResult_t pResultHandle, SteamItemInstanceID_t[] pInstanceIDs, uint unCountInstanceIDs); // 0x1088C6F0-0x1088C740
		public static bool SerializeResult(SteamInventoryResult_t resultHandle, byte[] pOutBuffer, out uint punOutBufferSize); // 0x1088CDD0-0x1088CE20
		public static bool DeserializeResult(out SteamInventoryResult_t pOutResultHandle, byte[] pBuffer, uint unBufferSize, bool bRESERVED_MUST_BE_FALSE = false /* Metadata: 0x00243877 */); // 0x1088C2A0-0x1088C2F0
		public static bool GenerateItems(out SteamInventoryResult_t pResultHandle, SteamItemDef_t[] pArrayItemDefs, uint[] punArrayQuantity, uint unArrayLength); // 0x1088C3A0-0x1088C3F0
		public static bool GrantPromoItems(out SteamInventoryResult_t pResultHandle); // 0x1088CA80-0x1088CAD0
		public static bool AddPromoItem(out SteamInventoryResult_t pResultHandle, SteamItemDef_t itemDef); // 0x1088C160-0x1088C1B0
		public static bool AddPromoItems(out SteamInventoryResult_t pResultHandle, SteamItemDef_t[] pArrayItemDefs, uint unArrayLength); // 0x1088C1B0-0x1088C200
		public static bool ConsumeItem(out SteamInventoryResult_t pResultHandle, SteamItemInstanceID_t itemConsume, uint unQuantity); // 0x1088C250-0x1088C2A0
		public static bool ExchangeItems(out SteamInventoryResult_t pResultHandle, SteamItemDef_t[] pArrayGenerate, uint[] punArrayGenerateQuantity, uint unArrayGenerateLength, SteamItemInstanceID_t[] pArrayDestroy, uint[] punArrayDestroyQuantity, uint unArrayDestroyLength); // 0x1088C340-0x1088C3A0
		public static bool TransferItemQuantity(out SteamInventoryResult_t pResultHandle, SteamItemInstanceID_t itemIdSource, uint unQuantity, SteamItemInstanceID_t itemIdDest); // 0x1088D5D0-0x1088D630
		public static void SendItemDropHeartbeat(); // 0x1088CD90-0x1088CDD0
		public static bool TriggerItemDrop(out SteamInventoryResult_t pResultHandle, SteamItemDef_t dropListDefinition); // 0x1088D630-0x1088D790
		public static bool TradeItems(out SteamInventoryResult_t pResultHandle, CSteamID steamIDTradePartner, SteamItemInstanceID_t[] pArrayGive, uint[] pArrayGiveQuantity, uint nArrayGiveLength, SteamItemInstanceID_t[] pArrayGet, uint[] pArrayGetQuantity, uint nArrayGetLength); // 0x1088D570-0x1088D5D0
		public static bool LoadItemDefinitions(); // 0x1088CAD0-0x1088CB10
		public static bool GetItemDefinitionIDs(SteamItemDef_t[] pItemDefIDs, out uint punItemDefIDsArraySize); // 0x1088C490-0x1088C4E0
		public static bool GetItemDefinitionProperty(SteamItemDef_t iDefinition, string pchPropertyName, out string pchValueBuffer, ref uint punValueBufferSizeOut); // 0x1088C4E0-0x1088C6A0
		public static SteamAPICall_t RequestEligiblePromoItemDefinitionsIDs(CSteamID steamID); // 0x1088CC60-0x1088CD00
		public static bool GetEligiblePromoItemDefinitionIDs(CSteamID steamID, SteamItemDef_t[] pItemDefIDs, ref uint punItemDefIDsArraySize); // 0x1088C440-0x1088C490
		public static SteamAPICall_t StartPurchase(SteamItemDef_t[] pArrayItemDefs, uint[] punArrayQuantity, uint unArrayLength); // 0x1088D3F0-0x1088D490
		public static SteamAPICall_t RequestPrices(); // 0x1088CD00-0x1088CD90
		public static uint GetNumItemsWithPrices(); // 0x1088C790-0x1088C7D0
		public static bool GetItemsWithPrices(SteamItemDef_t[] pArrayItemDefs, ulong[] pPrices, uint unArrayLength); // 0x1088C740-0x1088C790
		public static bool GetItemPrice(SteamItemDef_t iDefinition, out ulong pPrice); // 0x1088C6A0-0x1088C6F0
		public static SteamInventoryUpdateHandle_t StartUpdateProperties(); // 0x1088D490-0x1088D520
		public static bool RemoveProperty(SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, string pchPropertyName); // 0x1088CB10-0x1088CC60
		public static bool SetProperty(SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, string pchPropertyName, string pchPropertyValue); // 0x1088D0E0-0x1088D2A0
		public static bool SetProperty(SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, string pchPropertyName, bool bValue); // 0x1088D2A0-0x1088D3F0
		public static bool SetProperty1(SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, string pchPropertyName, long nValue); // 0x1088CE20-0x1088CF80
		public static bool SetProperty2(SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, string pchPropertyName, float flValue); // 0x1088CF80-0x1088D0E0
		public static bool SubmitUpdateProperties(SteamInventoryUpdateHandle_t handle, out SteamInventoryResult_t pResultHandle); // 0x1088D520-0x1088D570
	}

	[CallbackIdentity] // 0x10006910-0x10006930
	public struct SteamInventoryDefinitionUpdate_t // TypeDefIndex: 4551
	{
		// Fields
		public const int k_iCallback = 4702; // Metadata: 0x0024229F
	}

	[CallbackIdentity] // 0x10006930-0x10006950
	public struct SteamInventoryEligiblePromoItemDefIDs_t // TypeDefIndex: 4552
	{
		// Fields
		public const int k_iCallback = 4703; // Metadata: 0x002422A3
		public EResult m_result; // 0x00
		public CSteamID m_steamID; // 0x04
		public int m_numEligiblePromoItemDefs; // 0x0C
		public bool m_bCachedData; // 0x10
	}

	[CallbackIdentity] // 0x100068F0-0x10006910
	public struct SteamInventoryFullUpdate_t // TypeDefIndex: 4550
	{
		// Fields
		public const int k_iCallback = 4701; // Metadata: 0x0024229B
		public SteamInventoryResult_t m_handle; // 0x00
	}

	[CallbackIdentity] // 0x10006970-0x10006990
	public struct SteamInventoryRequestPricesResult_t // TypeDefIndex: 4554
	{
		// Fields
		public const int k_iCallback = 4705; // Metadata: 0x002422AB
		public EResult m_result; // 0x00
		public string m_rgchCurrency; // 0x04
	}

	[Serializable]
	public struct SteamInventoryResult_t : IEquatable<SteamInventoryResult_t>, IComparable<SteamInventoryResult_t> // TypeDefIndex: 4806
	{
		// Fields
		public static readonly SteamInventoryResult_t Invalid; // 0x00
		public int m_SteamInventoryResult; // 0x00
	
		// Constructors
		public SteamInventoryResult_t(int value); // 0x100900E0-0x100900F0
		static SteamInventoryResult_t(); // 0x1088C040-0x1088C070
	
		// Methods
		public override string ToString(); // 0x10091F80-0x10091FA0
		public override bool Equals(object other); // 0x100D72C0-0x100D7350
		public override int GetHashCode(); // 0x100900A0-0x100900C0
		public static bool operator ==(SteamInventoryResult_t x, SteamInventoryResult_t y); // 0x1018AFC0-0x1018AFD0
		public static bool operator !=(SteamInventoryResult_t x, SteamInventoryResult_t y); // 0x1088C070-0x1088C0C0
		public static explicit operator SteamInventoryResult_t(int value); // 0x1018AFD0-0x1018AFE0
		public static explicit operator int(SteamInventoryResult_t that); // 0x1018AFD0-0x1018AFE0
		public bool Equals(SteamInventoryResult_t other); // 0x10090080-0x100900A0
		public int CompareTo(SteamInventoryResult_t other); // 0x10091ED0-0x10091EF0
	}

	[CallbackIdentity] // 0x100068D0-0x100068F0
	public struct SteamInventoryResultReady_t // TypeDefIndex: 4549
	{
		// Fields
		public const int k_iCallback = 4700; // Metadata: 0x00242297
		public SteamInventoryResult_t m_handle; // 0x00
		public EResult m_result; // 0x04
	}

	[CallbackIdentity] // 0x10006950-0x10006970
	public struct SteamInventoryStartPurchaseResult_t // TypeDefIndex: 4553
	{
		// Fields
		public const int k_iCallback = 4704; // Metadata: 0x002422A7
		public EResult m_result; // 0x00
		public ulong m_ulOrderID; // 0x08
		public ulong m_ulTransID; // 0x10
	}

	[Serializable]
	public struct SteamInventoryUpdateHandle_t : IEquatable<SteamInventoryUpdateHandle_t>, IComparable<SteamInventoryUpdateHandle_t> // TypeDefIndex: 4807
	{
		// Fields
		public static readonly SteamInventoryUpdateHandle_t Invalid; // 0x00
		public ulong m_SteamInventoryUpdateHandle; // 0x00
	
		// Constructors
		public SteamInventoryUpdateHandle_t(ulong value); // 0x10073670-0x10073690
		static SteamInventoryUpdateHandle_t(); // 0x1088C0C0-0x1088C100
	
		// Methods
		public override string ToString(); // 0x10073650-0x10073670
		public override bool Equals(object other); // 0x100D7350-0x100D73F0
		public override int GetHashCode(); // 0x10073630-0x10073650
		public static bool operator ==(SteamInventoryUpdateHandle_t x, SteamInventoryUpdateHandle_t y); // 0x10187800-0x10187820
		public static bool operator !=(SteamInventoryUpdateHandle_t x, SteamInventoryUpdateHandle_t y); // 0x1088C100-0x1088C160
		public static explicit operator SteamInventoryUpdateHandle_t(ulong value); // 0x10187820-0x10187830
		public static explicit operator ulong(SteamInventoryUpdateHandle_t that); // 0x10187820-0x10187830
		public bool Equals(SteamInventoryUpdateHandle_t other); // 0x10073610-0x10073630
		public int CompareTo(SteamInventoryUpdateHandle_t other); // 0x10073550-0x10073570
	}

	[Serializable]
	public struct SteamItemDef_t : IEquatable<SteamItemDef_t>, IComparable<SteamItemDef_t> // TypeDefIndex: 4808
	{
		// Fields
		public int m_SteamItemDef; // 0x00
	
		// Constructors
		public SteamItemDef_t(int value); // 0x100900E0-0x100900F0
	
		// Methods
		public override string ToString(); // 0x10091F80-0x10091FA0
		public override bool Equals(object other); // 0x100D73F0-0x100D7460
		public override int GetHashCode(); // 0x100900A0-0x100900C0
		public static bool operator ==(SteamItemDef_t x, SteamItemDef_t y); // 0x1018AFC0-0x1018AFD0
		public static bool operator !=(SteamItemDef_t x, SteamItemDef_t y); // 0x1018AFE0-0x1018AFF0
		public static explicit operator SteamItemDef_t(int value); // 0x1018AFD0-0x1018AFE0
		public static explicit operator int(SteamItemDef_t that); // 0x1018AFD0-0x1018AFE0
		public bool Equals(SteamItemDef_t other); // 0x10090080-0x100900A0
		public int CompareTo(SteamItemDef_t other); // 0x10091ED0-0x10091EF0
	}

	public struct SteamItemDetails_t // TypeDefIndex: 4751
	{
		// Fields
		public SteamItemInstanceID_t m_itemId; // 0x00
		public SteamItemDef_t m_iDefinition; // 0x08
		public ushort m_unQuantity; // 0x0C
		public ushort m_unFlags; // 0x0E
	}

	[Serializable]
	public struct SteamItemInstanceID_t : IEquatable<SteamItemInstanceID_t>, IComparable<SteamItemInstanceID_t> // TypeDefIndex: 4809
	{
		// Fields
		public static readonly SteamItemInstanceID_t Invalid; // 0x00
		public ulong m_SteamItemInstanceID; // 0x00
	
		// Constructors
		public SteamItemInstanceID_t(ulong value); // 0x10073670-0x10073690
		static SteamItemInstanceID_t(); // 0x1088D790-0x1088D7D0
	
		// Methods
		public override string ToString(); // 0x10073650-0x10073670
		public override bool Equals(object other); // 0x100D7460-0x100D7500
		public override int GetHashCode(); // 0x10073630-0x10073650
		public static bool operator ==(SteamItemInstanceID_t x, SteamItemInstanceID_t y); // 0x10187800-0x10187820
		public static bool operator !=(SteamItemInstanceID_t x, SteamItemInstanceID_t y); // 0x1088D7D0-0x1088D830
		public static explicit operator SteamItemInstanceID_t(ulong value); // 0x10187820-0x10187830
		public static explicit operator ulong(SteamItemInstanceID_t that); // 0x10187820-0x10187830
		public bool Equals(SteamItemInstanceID_t other); // 0x10073610-0x10073630
		public int CompareTo(SteamItemInstanceID_t other); // 0x10073550-0x10073570
	}

	[Serializable]
	public struct SteamLeaderboard_t : IEquatable<SteamLeaderboard_t>, IComparable<SteamLeaderboard_t> // TypeDefIndex: 4828
	{
		// Fields
		public ulong m_SteamLeaderboard; // 0x00
	
		// Constructors
		public SteamLeaderboard_t(ulong value); // 0x10073670-0x10073690
	
		// Methods
		public override string ToString(); // 0x10073650-0x10073670
		public override bool Equals(object other); // 0x100D0C70-0x100D1270
		public override int GetHashCode(); // 0x10073630-0x10073650
		public static bool operator ==(SteamLeaderboard_t x, SteamLeaderboard_t y); // 0x10187800-0x10187820
		public static bool operator !=(SteamLeaderboard_t x, SteamLeaderboard_t y); // 0x101D22E0-0x101D2410
		public static explicit operator SteamLeaderboard_t(ulong value); // 0x10187820-0x10187830
		public static explicit operator ulong(SteamLeaderboard_t that); // 0x10187820-0x10187830
		public bool Equals(SteamLeaderboard_t other); // 0x10073610-0x10073630
		public int CompareTo(SteamLeaderboard_t other); // 0x10073550-0x10073570
	}

	[Serializable]
	public struct SteamLeaderboardEntries_t : IEquatable<SteamLeaderboardEntries_t>, IComparable<SteamLeaderboardEntries_t> // TypeDefIndex: 4827
	{
		// Fields
		public ulong m_SteamLeaderboardEntries; // 0x00
	
		// Constructors
		public SteamLeaderboardEntries_t(ulong value); // 0x10073670-0x10073690
	
		// Methods
		public override string ToString(); // 0x10073650-0x10073670
		public override bool Equals(object other); // 0x100D7500-0x100D7700
		public override int GetHashCode(); // 0x10073630-0x10073650
		public static bool operator ==(SteamLeaderboardEntries_t x, SteamLeaderboardEntries_t y); // 0x10187800-0x10187820
		public static bool operator !=(SteamLeaderboardEntries_t x, SteamLeaderboardEntries_t y); // 0x101D22E0-0x101D2410
		public static explicit operator SteamLeaderboardEntries_t(ulong value); // 0x10187820-0x10187830
		public static explicit operator ulong(SteamLeaderboardEntries_t that); // 0x10187820-0x10187830
		public bool Equals(SteamLeaderboardEntries_t other); // 0x10073610-0x10073630
		public int CompareTo(SteamLeaderboardEntries_t other); // 0x10073550-0x10073570
	}
}

[DisallowMultipleComponent] // 0x10002030-0x10002050
public class SteamManager : MonoBehaviour // TypeDefIndex: 5722
{
	// Fields
	private static SteamManager s_instance; // 0x00
	private static bool s_EverInitialized; // 0x04
	private bool m_bInitialized; // 0x0C
	private SteamAPIWarningMessageHook_t m_SteamAPIWarningMessageHook; // 0x10

	// Properties
	private static SteamManager Instance { get; } // 0x10A3D980-0x10A3DA20 
	public static bool Initialized { get; } // 0x10A3D8D0-0x10A3D980 

	// Constructors
	public SteamManager(); // 0x101A68C0-0x101A68D0

	// Methods
	[AOT.MonoPInvokeCallback] // 0x100190E0-0x10019130
	private static void SteamAPIDebugTextHook(int nSeverity, StringBuilder pchDebugText); // 0x10A3D860-0x10A3D8B0
	private void Awake(); // 0x10A3D400-0x10A3D720
	private void OnEnable(); // 0x10A3D7B0-0x10A3D860
	private void OnDestroy(); // 0x10A3D730-0x10A3D7B0
	[ContextMenu] // 0x10019170-0x100191A0
	private void DoShutdown(); // 0x10A3D720-0x10A3D730
	private void Update(); // 0x10A3D8B0-0x10A3D8D0
}

namespace Steamworks
{
	public static class SteamMatchmaking // TypeDefIndex: 4775
	{
		// Methods
		public static int GetFavoriteGameCount(); // 0x10716DD0-0x10716E10
		public static bool GetFavoriteGame(int iGame, out AppId_t pnAppID, out uint pnIP, out ushort pnConnPort, out ushort pnQueryPort, out uint punFlags, out uint pRTime32LastPlayedOnServer); // 0x10716E10-0x10716E70
		public static int AddFavoriteGame(AppId_t nAppID, uint nIP, ushort nConnPort, ushort nQueryPort, uint unFlags, uint rTime32LastPlayedOnServer); // 0x10716640-0x107166A0
		public static bool RemoveFavoriteGame(AppId_t nAppID, uint nIP, ushort nConnPort, ushort nQueryPort, uint unFlags); // 0x10717740-0x107177A0
		public static SteamAPICall_t RequestLobbyList(); // 0x107177F0-0x10717880
		public static void AddRequestLobbyListStringFilter(string pchKeyToMatch, string pchValueToMatch, ELobbyComparison eComparisonType); // 0x10716A40-0x10716BE0
		public static void AddRequestLobbyListNumericalFilter(string pchKeyToMatch, int nValueToMatch, ELobbyComparison eComparisonType); // 0x107168C0-0x107169F0
		public static void AddRequestLobbyListNearValueFilter(string pchKeyToMatch, int nValueToBeCloseTo); // 0x10716790-0x107168C0
		public static void AddRequestLobbyListFilterSlotsAvailable(int nSlotsAvailable); // 0x10716740-0x10716790
		public static void AddRequestLobbyListDistanceFilter(ELobbyDistanceFilter eLobbyDistanceFilter); // 0x107166F0-0x10716740
		public static void AddRequestLobbyListResultCountFilter(int cMaxResults); // 0x107169F0-0x10716A40
		public static void AddRequestLobbyListCompatibleMembersFilter(CSteamID steamIDLobby); // 0x107166A0-0x107166F0
		public static CSteamID GetLobbyByIndex(int iLobby); // 0x10716E70-0x10716F10
		public static SteamAPICall_t CreateLobby(ELobbyType eLobbyType, int cMaxMembers); // 0x10716BE0-0x10716C80
		public static SteamAPICall_t JoinLobby(CSteamID steamIDLobby); // 0x10717650-0x107176F0
		public static void LeaveLobby(CSteamID steamIDLobby); // 0x107176F0-0x10717740
		public static bool InviteUserToLobby(CSteamID steamIDLobby, CSteamID steamIDInvitee); // 0x10717600-0x10717650
		public static int GetNumLobbyMembers(CSteamID steamIDLobby); // 0x107175B0-0x10717600
		public static CSteamID GetLobbyMemberByIndex(CSteamID steamIDLobby, int iMember); // 0x107172C0-0x10717360
		public static string GetLobbyData(CSteamID steamIDLobby, string pchKey); // 0x10717100-0x10717260
		public static bool SetLobbyData(CSteamID steamIDLobby, string pchKey, string pchValue); // 0x10717920-0x10717AD0
		public static int GetLobbyDataCount(CSteamID steamIDLobby); // 0x107170B0-0x10717100
		public static bool GetLobbyDataByIndex(CSteamID steamIDLobby, int iLobbyData, out string pchKey, int cchKeyBufferSize, out string pchValue, int cchValueBufferSize); // 0x10716F70-0x107170B0
		public static bool DeleteLobbyData(CSteamID steamIDLobby, string pchKey); // 0x10716C80-0x10716DD0
		public static string GetLobbyMemberData(CSteamID steamIDLobby, CSteamID steamIDUser, string pchKey); // 0x10717360-0x107174C0
		public static void SetLobbyMemberData(CSteamID steamIDLobby, string pchKey, string pchValue); // 0x10717B80-0x10717D20
		public static bool SendLobbyChatMsg(CSteamID steamIDLobby, byte[] pvMsgBody, int cubMsgBody); // 0x10717880-0x107178D0
		public static int GetLobbyChatEntry(CSteamID steamIDLobby, int iChatID, out CSteamID pSteamIDUser, byte[] pvData, int cubData, out EChatEntryType peChatEntryType); // 0x10716F10-0x10716F70
		public static bool RequestLobbyData(CSteamID steamIDLobby); // 0x107177A0-0x107177F0
		public static void SetLobbyGameServer(CSteamID steamIDLobby, uint unGameServerIP, ushort unGameServerPort, CSteamID steamIDGameServer); // 0x10717AD0-0x10717B30
		public static bool GetLobbyGameServer(CSteamID steamIDLobby, out uint punGameServerIP, out ushort punGameServerPort, out CSteamID psteamIDGameServer); // 0x10717260-0x107172C0
		public static bool SetLobbyMemberLimit(CSteamID steamIDLobby, int cMaxMembers); // 0x10717D20-0x10717D70
		public static int GetLobbyMemberLimit(CSteamID steamIDLobby); // 0x107174C0-0x10717510
		public static bool SetLobbyType(CSteamID steamIDLobby, ELobbyType eLobbyType); // 0x10717DC0-0x10717E10
		public static bool SetLobbyJoinable(CSteamID steamIDLobby, bool bLobbyJoinable); // 0x10717B30-0x10717B80
		public static CSteamID GetLobbyOwner(CSteamID steamIDLobby); // 0x10717510-0x107175B0
		public static bool SetLobbyOwner(CSteamID steamIDLobby, CSteamID steamIDNewOwner); // 0x10717D70-0x10717DC0
		public static bool SetLinkedLobby(CSteamID steamIDLobby, CSteamID steamIDLobbyDependent); // 0x107178D0-0x10717920
	}

	public static class SteamMatchmakingServers // TypeDefIndex: 4776
	{
		// Methods
		public static HServerListRequest RequestInternetServerList(AppId_t iApp, MatchMakingKeyValuePair_t[] ppchFilters, uint nFilters, ISteamMatchmakingServerListResponse pRequestServersResponse); // 0x10716360-0x10716430
		public static HServerListRequest RequestLANServerList(AppId_t iApp, ISteamMatchmakingServerListResponse pRequestServersResponse); // 0x10716430-0x107164D0
		public static HServerListRequest RequestFriendsServerList(AppId_t iApp, MatchMakingKeyValuePair_t[] ppchFilters, uint nFilters, ISteamMatchmakingServerListResponse pRequestServersResponse); // 0x107161C0-0x10716290
		public static HServerListRequest RequestFavoritesServerList(AppId_t iApp, MatchMakingKeyValuePair_t[] ppchFilters, uint nFilters, ISteamMatchmakingServerListResponse pRequestServersResponse); // 0x107160F0-0x107161C0
		public static HServerListRequest RequestHistoryServerList(AppId_t iApp, MatchMakingKeyValuePair_t[] ppchFilters, uint nFilters, ISteamMatchmakingServerListResponse pRequestServersResponse); // 0x10716290-0x10716360
		public static HServerListRequest RequestSpectatorServerList(AppId_t iApp, MatchMakingKeyValuePair_t[] ppchFilters, uint nFilters, ISteamMatchmakingServerListResponse pRequestServersResponse); // 0x107164D0-0x107165A0
		public static void ReleaseRequest(HServerListRequest hServerListRequest); // 0x107160A0-0x107160F0
		public static gameserveritem_t GetServerDetails(HServerListRequest hRequest, int iServer); // 0x10715D60-0x10715E70
		public static void CancelQuery(HServerListRequest hRequest); // 0x10715C70-0x10715CC0
		public static void RefreshQuery(HServerListRequest hRequest); // 0x10716000-0x10716050
		public static bool IsRefreshing(HServerListRequest hRequest); // 0x10715E70-0x10715EC0
		public static int GetServerCount(HServerListRequest hRequest); // 0x10715D10-0x10715D60
		public static void RefreshServer(HServerListRequest hRequest, int iServer); // 0x10716050-0x107160A0
		public static HServerQuery PingServer(uint unIP, ushort usPort, ISteamMatchmakingPingResponse pRequestServersResponse); // 0x10715EC0-0x10715F60
		public static HServerQuery PlayerDetails(uint unIP, ushort usPort, ISteamMatchmakingPlayersResponse pRequestServersResponse); // 0x10715F60-0x10716000
		public static HServerQuery ServerRules(uint unIP, ushort usPort, ISteamMatchmakingRulesResponse pRequestServersResponse); // 0x107165A0-0x10716640
		public static void CancelServerQuery(HServerQuery hServerQuery); // 0x10715CC0-0x10715D10
	}

	public static class SteamMusic // TypeDefIndex: 4777
	{
		// Methods
		public static bool BIsEnabled(); // 0x10718C10-0x10718C50
		public static bool BIsPlaying(); // 0x10718C50-0x10718C90
		public static AudioPlayback_Status GetPlaybackStatus(); // 0x10718C90-0x10718CD0
		public static void Play(); // 0x10718DD0-0x10718E10
		public static void Pause(); // 0x10718D10-0x10718D50
		public static void PlayPrevious(); // 0x10718D90-0x10718DD0
		public static void PlayNext(); // 0x10718D50-0x10718D90
		public static void SetVolume(float flVolume); // 0x10718E10-0x10718E60
		public static float GetVolume(); // 0x10718CD0-0x10718D10
	}

	public static class SteamMusicRemote // TypeDefIndex: 4778
	{
		// Methods
		public static bool RegisterSteamMusicRemote(string pchName); // 0x10718290-0x107183C0
		public static bool DeregisterSteamMusicRemote(); // 0x10717F70-0x10717FB0
		public static bool BIsCurrentMusicRemote(); // 0x10717E60-0x10717EA0
		public static bool BActivationSuccess(bool bValue); // 0x10717E10-0x10717E60
		public static bool SetDisplayName(string pchDisplayName); // 0x107184E0-0x10718610
		public static bool SetPNGIcon_64x64(byte[] pvBuffer, uint cbBufferLength); // 0x10718610-0x10718660
		public static bool EnablePlayPrevious(bool bValue); // 0x10718050-0x107180A0
		public static bool EnablePlayNext(bool bValue); // 0x10718000-0x10718050
		public static bool EnableShuffled(bool bValue); // 0x10718140-0x10718190
		public static bool EnableLooped(bool bValue); // 0x10717FB0-0x10718000
		public static bool EnableQueue(bool bValue); // 0x107180F0-0x10718140
		public static bool EnablePlaylists(bool bValue); // 0x107180A0-0x107180F0
		public static bool UpdatePlaybackStatus(AudioPlayback_Status nStatus); // 0x10718B20-0x10718B70
		public static bool UpdateShuffled(bool bValue); // 0x10718B70-0x10718BC0
		public static bool UpdateLooped(bool bValue); // 0x10718AD0-0x10718B20
		public static bool UpdateVolume(float flValue); // 0x10718BC0-0x10718C10
		public static bool CurrentEntryWillChange(); // 0x10717F30-0x10717F70
		public static bool CurrentEntryIsAvailable(bool bAvailable); // 0x10717EE0-0x10717F30
		public static bool UpdateCurrentEntryText(string pchText); // 0x107189A0-0x10718AD0
		public static bool UpdateCurrentEntryElapsedSeconds(int nValue); // 0x10718950-0x107189A0
		public static bool UpdateCurrentEntryCoverArt(byte[] pvBuffer, uint cbBufferLength); // 0x10718900-0x10718950
		public static bool CurrentEntryDidChange(); // 0x10717EA0-0x10717EE0
		public static bool QueueWillChange(); // 0x10718250-0x10718290
		public static bool ResetQueueEntries(); // 0x10718400-0x10718440
		public static bool SetQueueEntry(int nID, int nPosition, string pchEntryText); // 0x107187B0-0x10718900
		public static bool SetCurrentQueueEntry(int nID); // 0x10718490-0x107184E0
		public static bool QueueDidChange(); // 0x10718210-0x10718250
		public static bool PlaylistWillChange(); // 0x107181D0-0x10718210
		public static bool ResetPlaylistEntries(); // 0x107183C0-0x10718400
		public static bool SetPlaylistEntry(int nID, int nPosition, string pchEntryText); // 0x10718660-0x107187B0
		public static bool SetCurrentPlaylistEntry(int nID); // 0x10718440-0x10718490
		public static bool PlaylistDidChange(); // 0x10718190-0x107181D0
	}

	public static class SteamNetworking // TypeDefIndex: 4779
	{
		// Methods
		public static bool SendP2PPacket(CSteamID steamIDRemote, byte[] pubData, uint cubData, EP2PSend eP2PSendType, int nChannel = 0 /* Metadata: 0x00243878 */); // 0x10719550-0x107195B0
		public static bool IsP2PPacketAvailable(out uint pcubMsgSize, int nChannel = 0 /* Metadata: 0x0024387C */); // 0x107193A0-0x107193F0
		public static bool ReadP2PPacket(byte[] pubDest, uint cubDest, out uint pcubMsgSize, out CSteamID psteamIDRemote, int nChannel = 0 /* Metadata: 0x00243880 */); // 0x107193F0-0x10719450
		public static bool AcceptP2PSessionWithUser(CSteamID steamIDRemote); // 0x10718E60-0x10718EB0
		public static bool CloseP2PSessionWithUser(CSteamID steamIDRemote); // 0x10718F50-0x10718FA0
		public static bool CloseP2PChannelWithUser(CSteamID steamIDRemote, int nChannel); // 0x10718F00-0x10718F50
		public static bool GetP2PSessionState(CSteamID steamIDRemote, out P2PSessionState_t pConnectionState); // 0x10719200-0x10719250
		public static bool AllowP2PPacketRelay(bool bAllow); // 0x10718EB0-0x10718F00
		public static SNetListenSocket_t CreateListenSocket(int nVirtualP2PPort, uint nIP, ushort nPort, bool bAllowUseOfPacketRelay); // 0x10719000-0x10719060
		public static SNetSocket_t CreateP2PConnectionSocket(CSteamID steamIDTarget, int nVirtualPort, int nTimeoutSec, bool bAllowUseOfPacketRelay); // 0x10719060-0x107190C0
		public static SNetSocket_t CreateConnectionSocket(uint nIP, ushort nPort, int nTimeoutSec); // 0x10718FA0-0x10719000
		public static bool DestroySocket(SNetSocket_t hSocket, bool bNotifyRemoteEnd); // 0x10719110-0x10719160
		public static bool DestroyListenSocket(SNetListenSocket_t hSocket, bool bNotifyRemoteEnd); // 0x107190C0-0x10719110
		public static bool SendDataOnSocket(SNetSocket_t hSocket, byte[] pubData, uint cubData, bool bReliable); // 0x10719500-0x10719550
		public static bool IsDataAvailableOnSocket(SNetSocket_t hSocket, out uint pcubMsgSize); // 0x10719300-0x10719350
		public static bool RetrieveDataFromSocket(SNetSocket_t hSocket, byte[] pubDest, uint cubDest, out uint pcubMsgSize); // 0x10719450-0x107194A0
		public static bool IsDataAvailable(SNetListenSocket_t hListenSocket, out uint pcubMsgSize, out SNetSocket_t phSocket); // 0x10719350-0x107193A0
		public static bool RetrieveData(SNetListenSocket_t hListenSocket, byte[] pubDest, uint cubDest, out uint pcubMsgSize, out SNetSocket_t phSocket); // 0x107194A0-0x10719500
		public static bool GetSocketInfo(SNetSocket_t hSocket, out CSteamID pSteamIDRemote, out int peSocketStatus, out uint punIPRemote, out ushort punPortRemote); // 0x107192A0-0x10719300
		public static bool GetListenSocketInfo(SNetListenSocket_t hListenSocket, out uint pnIP, out ushort pnPort); // 0x10719160-0x107191B0
		public static ESNetSocketConnectionType GetSocketConnectionType(SNetSocket_t hSocket); // 0x10719250-0x107192A0
		public static int GetMaxPacketSize(SNetSocket_t hSocket); // 0x107191B0-0x10719200
	}

	public struct SteamParamStringArray_t // TypeDefIndex: 4753
	{
		// Fields
		public IntPtr m_ppStrings; // 0x00
		public int m_nNumStrings; // 0x04
	}

	public static class SteamParentalSettings // TypeDefIndex: 4780
	{
		// Methods
		public static bool BIsParentalLockEnabled(); // 0x107196F0-0x10719730
		public static bool BIsParentalLockLocked(); // 0x10719730-0x10719770
		public static bool BIsAppBlocked(AppId_t nAppID); // 0x107195B0-0x10719600
		public static bool BIsAppInBlockList(AppId_t nAppID); // 0x10719600-0x10719650
		public static bool BIsFeatureBlocked(EParentalFeature eFeature); // 0x10719650-0x107196A0
		public static bool BIsFeatureInBlockList(EParentalFeature eFeature); // 0x107196A0-0x107196F0
	}

	[CallbackIdentity] // 0x10008630-0x10008650
	public struct SteamParentalSettingsChanged_t // TypeDefIndex: 4585
	{
		// Fields
		public const int k_iCallback = 5001; // Metadata: 0x00242327
	}
}

internal class SteamPurchasingModule : IPurchasingModule, IStore // TypeDefIndex: 5588
{
	// Fields
	public const string Name = "Steam"; // Metadata: 0x00243C4E
	public Dictionary<string, ISteamBuyable> IdTranslator; // 0x08
	private IStoreCallback storeCallback; // 0x0C
	private bool steamOverlayOpen; // 0x10
	private StoreMenu parent; // 0x14

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _WaitForDlcPurchase_d__11 : IEnumerator<object> // TypeDefIndex: 5589
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SteamPurchasingModule __4__this; // 0x10
		public AppId_t appId; // 0x14
		public ProductDefinition product; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _WaitForDlcPurchase_d__11(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102415C0-0x10241820
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10241820-0x10241870
	}

	// Constructors
	public SteamPurchasingModule(StoreMenu parent); // 0x10A3E040-0x10A3E100

	// Methods
	public void Configure(IPurchasingBinder binder); // 0x10A3DA20-0x10A3DAC0
	public void FinishTransaction(ProductDefinition product, string transactionId); // 0x101A2F90-0x101A2FA0
	public void Initialize(IStoreCallback callback); // 0x10A3DAE0-0x10A3DBF0
	private void HandleOverlayActivate(GameOverlayActivated_t param); // 0x10A3DAC0-0x10A3DAE0
	public void Purchase(ProductDefinition product, string developerPayload); // 0x10A3DBF0-0x10A3DD90
	[IteratorStateMachine] // 0x10006A30-0x10006A80
	private IEnumerator WaitForDlcPurchase(ProductDefinition product, AppId_t appId); // 0x10A3DFE0-0x10A3E040
	public void RetrieveProducts(ReadOnlyCollection<ProductDefinition> products); // 0x10A3DD90-0x10A3DFE0
}

namespace Steamworks
{
	public static class SteamRemoteStorage // TypeDefIndex: 4781
	{
		// Methods
		public static bool FileWrite(string pchFile, byte[] pvData, int cubData); // 0x1071AA50-0x1071ABA0
		public static int FileRead(string pchFile, byte[] pvData, int cubDataToRead); // 0x1071A3A0-0x1071A4F0
		public static SteamAPICall_t FileWriteAsync(string pchFile, byte[] pvData, uint cubData); // 0x1071A670-0x1071A7F0
		public static SteamAPICall_t FileReadAsync(string pchFile, uint nOffset, uint cubToRead); // 0x1071A220-0x1071A3A0
		public static bool FileReadAsyncComplete(SteamAPICall_t hReadCall, byte[] pvBuffer, uint cubToRead); // 0x1071A1D0-0x1071A220
		public static bool FileForget(string pchFile); // 0x10719F70-0x1071A0A0
		public static bool FileDelete(string pchFile); // 0x10719D10-0x10719E40
		public static SteamAPICall_t FileShare(string pchFile); // 0x1071A4F0-0x1071A670
		public static bool SetSyncPlatforms(string pchFile, ERemoteStoragePlatform eRemoteStoragePlatform); // 0x1071BBE0-0x1071BD20
		public static UGCFileWriteStreamHandle_t FileWriteStreamOpen(string pchFile); // 0x1071A890-0x1071AA00
		public static bool FileWriteStreamWriteChunk(UGCFileWriteStreamHandle_t writeHandle, byte[] pvData, int cubData); // 0x1071AA00-0x1071AA50
		public static bool FileWriteStreamClose(UGCFileWriteStreamHandle_t writeHandle); // 0x1071A840-0x1071A890
		public static bool FileWriteStreamCancel(UGCFileWriteStreamHandle_t writeHandle); // 0x1071A7F0-0x1071A840
		public static bool FileExists(string pchFile); // 0x10719E40-0x10719F70
		public static bool FilePersisted(string pchFile); // 0x1071A0A0-0x1071A1D0
		public static int GetFileSize(string pchFile); // 0x1071AD00-0x1071AE40
		public static long GetFileTimestamp(string pchFile); // 0x1071AE40-0x1071AF80
		public static ERemoteStoragePlatform GetSyncPlatforms(string pchFile); // 0x1071B110-0x1071B250
		public static int GetFileCount(); // 0x1071AC70-0x1071ACB0
		public static string GetFileNameAndSize(int iFile, out int pnFileSizeInBytes); // 0x1071ACB0-0x1071AD00
		public static bool GetQuota(out ulong pnTotalBytes, out ulong puAvailableBytes); // 0x1071B0C0-0x1071B110
		public static bool IsCloudEnabledForAccount(); // 0x1071B3D0-0x1071B410
		public static bool IsCloudEnabledForApp(); // 0x1071B410-0x1071B450
		public static void SetCloudEnabledForApp(bool bEnabled); // 0x1071BB90-0x1071BBE0
		public static SteamAPICall_t UGCDownload(UGCHandle_t hContent, uint unPriority); // 0x1071BFE0-0x1071C080
		public static bool GetUGCDownloadProgress(UGCHandle_t hContent, out int pnBytesDownloaded, out int pnBytesExpected); // 0x1071B2E0-0x1071B330
		public static bool GetUGCDetails(UGCHandle_t hContent, out AppId_t pnAppID, out string ppchName, out int pnFileSizeInBytes, out CSteamID pSteamIDOwner); // 0x1071B250-0x1071B2E0
		public static int UGCRead(UGCHandle_t hContent, byte[] pvData, int cubDataToRead, uint cOffset, EUGCReadAction eAction); // 0x1071C080-0x1071C0E0
		public static int GetCachedUGCCount(); // 0x1071ABA0-0x1071ABE0
		public static UGCHandle_t GetCachedUGCHandle(int iCachedContent); // 0x1071ABE0-0x1071AC70
		public static SteamAPICall_t PublishWorkshopFile(string pchFile, string pchPreviewFile, AppId_t nConsumerAppId, string pchTitle, string pchDescription, ERemoteStoragePublishedFileVisibility eVisibility, IList<string> pTags, EWorkshopFileType eWorkshopFileType); // 0x1071B840-0x1071BB90
		public static PublishedFileUpdateHandle_t CreatePublishedFileUpdateRequest(PublishedFileId_t unPublishedFileId); // 0x10719810-0x107198B0
		public static bool UpdatePublishedFileFile(PublishedFileUpdateHandle_t updateHandle, string pchFile); // 0x1071C2D0-0x1071C420
		public static bool UpdatePublishedFilePreviewFile(PublishedFileUpdateHandle_t updateHandle, string pchPreviewFile); // 0x1071C420-0x1071C570
		public static bool UpdatePublishedFileTitle(PublishedFileUpdateHandle_t updateHandle, string pchTitle); // 0x1071C760-0x1071C8B0
		public static bool UpdatePublishedFileDescription(PublishedFileUpdateHandle_t updateHandle, string pchDescription); // 0x1071C180-0x1071C2D0
		public static bool UpdatePublishedFileVisibility(PublishedFileUpdateHandle_t updateHandle, ERemoteStoragePublishedFileVisibility eVisibility); // 0x1071C8B0-0x1071C900
		public static bool UpdatePublishedFileTags(PublishedFileUpdateHandle_t updateHandle, IList<string> pTags); // 0x1071C6C0-0x1071C760
		public static SteamAPICall_t CommitPublishedFileUpdate(PublishedFileUpdateHandle_t updateHandle); // 0x10719770-0x10719810
		public static SteamAPICall_t GetPublishedFileDetails(PublishedFileId_t unPublishedFileId, uint unMaxSecondsOld); // 0x1071AF80-0x1071B020
		public static SteamAPICall_t DeletePublishedFile(PublishedFileId_t unPublishedFileId); // 0x107198B0-0x10719950
		public static SteamAPICall_t EnumerateUserPublishedFiles(uint unStartIndex); // 0x10719AE0-0x10719B80
		public static SteamAPICall_t SubscribePublishedFile(PublishedFileId_t unPublishedFileId); // 0x1071BDC0-0x1071BE60
		public static SteamAPICall_t EnumerateUserSubscribedFiles(uint unStartIndex); // 0x10719C70-0x10719D10
		public static SteamAPICall_t UnsubscribePublishedFile(PublishedFileId_t unPublishedFileId); // 0x1071C0E0-0x1071C180
		public static bool UpdatePublishedFileSetChangeDescription(PublishedFileUpdateHandle_t updateHandle, string pchChangeDescription); // 0x1071C570-0x1071C6C0
		public static SteamAPICall_t GetPublishedItemVoteDetails(PublishedFileId_t unPublishedFileId); // 0x1071B020-0x1071B0C0
		public static SteamAPICall_t UpdateUserPublishedItemVote(PublishedFileId_t unPublishedFileId, bool bVoteUp); // 0x1071C900-0x1071C9A0
		public static SteamAPICall_t GetUserPublishedItemVoteDetails(PublishedFileId_t unPublishedFileId); // 0x1071B330-0x1071B3D0
		public static SteamAPICall_t EnumerateUserSharedWorkshopFiles(CSteamID steamId, uint unStartIndex, IList<string> pRequiredTags, IList<string> pExcludedTags); // 0x10719B80-0x10719C70
		public static SteamAPICall_t PublishVideo(EWorkshopVideoProvider eVideoProvider, string pchVideoAccount, string pchVideoIdentifier, string pchPreviewFile, AppId_t nConsumerAppId, string pchTitle, string pchDescription, ERemoteStoragePublishedFileVisibility eVisibility, IList<string> pTags); // 0x1071B450-0x1071B840
		public static SteamAPICall_t SetUserPublishedFileAction(PublishedFileId_t unPublishedFileId, EWorkshopFileAction eAction); // 0x1071BD20-0x1071BDC0
		public static SteamAPICall_t EnumeratePublishedFilesByUserAction(EWorkshopFileAction eAction, uint unStartIndex); // 0x10719950-0x107199F0
		public static SteamAPICall_t EnumeratePublishedWorkshopFiles(EWorkshopEnumerationType eEnumerationType, uint unStartIndex, uint unCount, uint unDays, IList<string> pTags, IList<string> pUserTags); // 0x107199F0-0x10719AE0
		public static SteamAPICall_t UGCDownloadToLocation(UGCHandle_t hContent, string pchLocation, uint unPriority); // 0x1071BE60-0x1071BFE0
	}

	public static class SteamScreenshots // TypeDefIndex: 4782
	{
		// Methods
		public static ScreenshotHandle WriteScreenshot(byte[] pubRGB, uint cubRGB, int nWidth, int nHeight); // 0x1071D010-0x1071D0B0
		public static ScreenshotHandle AddScreenshotToLibrary(string pchFilename, string pchThumbnailFilename, int nWidth, int nHeight); // 0x1071C9A0-0x1071CB80
		public static void TriggerScreenshot(); // 0x1071CFD0-0x1071D010
		public static void HookScreenshots(bool bHook); // 0x1071CD60-0x1071CDB0
		public static bool SetLocation(ScreenshotHandle hScreenshot, string pchLocation); // 0x1071CDF0-0x1071CF30
		public static bool TagUser(ScreenshotHandle hScreenshot, CSteamID steamID); // 0x1071CF80-0x1071CFD0
		public static bool TagPublishedFile(ScreenshotHandle hScreenshot, PublishedFileId_t unPublishedFileID); // 0x1071CF30-0x1071CF80
		public static bool IsScreenshotsHooked(); // 0x1071CDB0-0x1071CDF0
		public static ScreenshotHandle AddVRScreenshotToLibrary(EVRScreenshotType eType, string pchFilename, string pchVRFilename); // 0x1071CB80-0x1071CD60
	}

	[CallbackIdentity] // 0x1000A540-0x1000A560
	public struct SteamServerConnectFailure_t // TypeDefIndex: 4634
	{
		// Fields
		public const int k_iCallback = 102; // Metadata: 0x002423EB
		public EResult m_eResult; // 0x00
		public bool m_bStillRetrying; // 0x04
	}

	[CallbackIdentity] // 0x1000A520-0x1000A540
	public struct SteamServersConnected_t // TypeDefIndex: 4633
	{
		// Fields
		public const int k_iCallback = 101; // Metadata: 0x002423E7
	}

	[CallbackIdentity] // 0x1000A590-0x1000A5B0
	public struct SteamServersDisconnected_t // TypeDefIndex: 4635
	{
		// Fields
		public const int k_iCallback = 103; // Metadata: 0x002423EF
		public EResult m_eResult; // 0x00
	}

	[CallbackIdentity] // 0x1000C010-0x1000C030
	public struct SteamShutdown_t // TypeDefIndex: 4660
	{
		// Fields
		public const int k_iCallback = 704; // Metadata: 0x00242453
	}
}

public class SteamStoreRecovery : MonoBehaviour // TypeDefIndex: 5590
{
	// Constructors
	public SteamStoreRecovery(); // 0x101A68C0-0x101A68D0

	// Methods
	private void Start(); // 0x1022EB20-0x1022EE20
}

namespace Steamworks
{
	public static class SteamUGC // TypeDefIndex: 4783
	{
		// Methods
		public static UGCQueryHandle_t CreateQueryUserUGCRequest(AccountID_t unAccountID, EUserUGCList eListType, EUGCMatchingUGCType eMatchingUGCType, EUserUGCListSortOrder eSortOrder, AppId_t nCreatorAppID, AppId_t nConsumerAppID, uint unPage); // 0x1071DE40-0x1071DEE0
		public static UGCQueryHandle_t CreateQueryAllUGCRequest(EUGCQuery eQueryType, EUGCMatchingUGCType eMatchingeMatchingUGCTypeFileType, AppId_t nCreatorAppID, AppId_t nConsumerAppID, uint unPage); // 0x1071DD10-0x1071DDB0
		public static UGCQueryHandle_t CreateQueryUGCDetailsRequest(PublishedFileId_t[] pvecPublishedFileID, uint unNumPublishedFileIDs); // 0x1071DDB0-0x1071DE40
		public static SteamAPICall_t SendQueryUGCRequest(UGCQueryHandle_t handle); // 0x1071EE10-0x1071EEB0
		public static bool GetQueryUGCResult(UGCQueryHandle_t handle, uint index, out SteamUGCDetails_t pDetails); // 0x1071E800-0x1071E850
		public static bool GetQueryUGCPreviewURL(UGCQueryHandle_t handle, uint index, out string pchURL, uint cchURLSize); // 0x1071E710-0x1071E800
		public static bool GetQueryUGCMetadata(UGCQueryHandle_t handle, uint index, out string pchMetadata, uint cchMetadatasize); // 0x1071E580-0x1071E670
		public static bool GetQueryUGCChildren(UGCQueryHandle_t handle, uint index, PublishedFileId_t[] pvecPublishedFileID, uint cMaxEntries); // 0x1071E3E0-0x1071E440
		public static bool GetQueryUGCStatistic(UGCQueryHandle_t handle, uint index, EItemStatistic eStatType, out ulong pStatValue); // 0x1071E850-0x1071E8B0
		public static uint GetQueryUGCNumAdditionalPreviews(UGCQueryHandle_t handle, uint index); // 0x1071E670-0x1071E6C0
		public static bool GetQueryUGCAdditionalPreview(UGCQueryHandle_t handle, uint index, uint previewIndex, out string pchURLOrVideoID, uint cchURLSize, out string pchOriginalFileName, uint cchOriginalFileNameSize, out EItemPreviewType pPreviewType); // 0x1071E2A0-0x1071E3E0
		public static uint GetQueryUGCNumKeyValueTags(UGCQueryHandle_t handle, uint index); // 0x1071E6C0-0x1071E710
		public static bool GetQueryUGCKeyValueTag(UGCQueryHandle_t handle, uint index, uint keyValueTagIndex, out string pchKey, uint cchKeySize, out string pchValue, uint cchValueSize); // 0x1071E440-0x1071E580
		public static bool ReleaseQueryUGCRequest(UGCQueryHandle_t handle); // 0x1071E9A0-0x1071E9F0
		public static bool AddRequiredTag(UGCQueryHandle_t handle, string pTagName); // 0x1071D9E0-0x1071DB30
		public static bool AddExcludedTag(UGCQueryHandle_t handle, string pTagName); // 0x1071D1F0-0x1071D340
		public static bool SetReturnOnlyIDs(UGCQueryHandle_t handle, bool bReturnOnlyIDs); // 0x1071FCA0-0x1071FCF0
		public static bool SetReturnKeyValueTags(UGCQueryHandle_t handle, bool bReturnKeyValueTags); // 0x1071FBB0-0x1071FC00
		public static bool SetReturnLongDescription(UGCQueryHandle_t handle, bool bReturnLongDescription); // 0x1071FC00-0x1071FC50
		public static bool SetReturnMetadata(UGCQueryHandle_t handle, bool bReturnMetadata); // 0x1071FC50-0x1071FCA0
		public static bool SetReturnChildren(UGCQueryHandle_t handle, bool bReturnChildren); // 0x1071FB60-0x1071FBB0
		public static bool SetReturnAdditionalPreviews(UGCQueryHandle_t handle, bool bReturnAdditionalPreviews); // 0x1071FB10-0x1071FB60
		public static bool SetReturnTotalOnly(UGCQueryHandle_t handle, bool bReturnTotalOnly); // 0x1071FD40-0x1071FD90
		public static bool SetReturnPlaytimeStats(UGCQueryHandle_t handle, uint unDays); // 0x1071FCF0-0x1071FD40
		public static bool SetLanguage(UGCQueryHandle_t handle, string pchLanguage); // 0x1071F920-0x1071FA70
		public static bool SetAllowCachedResponse(UGCQueryHandle_t handle, uint unMaxAgeSeconds); // 0x1071EEB0-0x1071EF00
		public static bool SetCloudFileNameFilter(UGCQueryHandle_t handle, string pMatchCloudFileName); // 0x1071EF00-0x1071F050
		public static bool SetMatchAnyTag(UGCQueryHandle_t handle, bool bMatchAnyTag); // 0x1071FA70-0x1071FAC0
		public static bool SetSearchText(UGCQueryHandle_t handle, string pSearchText); // 0x1071FD90-0x1071FEE0
		public static bool SetRankedByTrendDays(UGCQueryHandle_t handle, uint unDays); // 0x1071FAC0-0x1071FB10
		public static bool AddRequiredKeyValueTag(UGCQueryHandle_t handle, string pKey, string pValue); // 0x1071D830-0x1071D9E0
		public static SteamAPICall_t RequestUGCDetails(PublishedFileId_t nPublishedFileID, uint unMaxAgeSeconds); // 0x1071ED70-0x1071EE10
		public static SteamAPICall_t CreateItem(AppId_t nConsumerAppId, EWorkshopFileType eFileType); // 0x1071DC70-0x1071DD10
		public static UGCUpdateHandle_t StartItemUpdate(AppId_t nConsumerAppId, PublishedFileId_t nPublishedFileID); // 0x1071FF80-0x10720020
		public static bool SetItemTitle(UGCUpdateHandle_t handle, string pchTitle); // 0x1071F630-0x1071F780
		public static bool SetItemDescription(UGCUpdateHandle_t handle, string pchDescription); // 0x1071F1A0-0x1071F2F0
		public static bool SetItemUpdateLanguage(UGCUpdateHandle_t handle, string pchLanguage); // 0x1071F780-0x1071F8D0
		public static bool SetItemMetadata(UGCUpdateHandle_t handle, string pchMetaData); // 0x1071F2F0-0x1071F440
		public static bool SetItemVisibility(UGCUpdateHandle_t handle, ERemoteStoragePublishedFileVisibility eVisibility); // 0x1071F8D0-0x1071F920
		public static bool SetItemTags(UGCUpdateHandle_t updateHandle, IList<string> pTags); // 0x1071F590-0x1071F630
		public static bool SetItemContent(UGCUpdateHandle_t handle, string pszContentFolder); // 0x1071F050-0x1071F1A0
		public static bool SetItemPreview(UGCUpdateHandle_t handle, string pszPreviewFile); // 0x1071F440-0x1071F590
		public static bool RemoveItemKeyValueTags(UGCUpdateHandle_t handle, string pchKey); // 0x1071EBD0-0x1071ED20
		public static bool AddItemKeyValueTag(UGCUpdateHandle_t handle, string pchKey, string pchValue); // 0x1071D340-0x1071D4F0
		public static bool AddItemPreviewFile(UGCUpdateHandle_t handle, string pszPreviewFile, EItemPreviewType type); // 0x1071D4F0-0x1071D640
		public static bool AddItemPreviewVideo(UGCUpdateHandle_t handle, string pszVideoID); // 0x1071D640-0x1071D790
		public static bool UpdateItemPreviewFile(UGCUpdateHandle_t handle, uint index, string pszPreviewFile); // 0x10720500-0x10720650
		public static bool UpdateItemPreviewVideo(UGCUpdateHandle_t handle, uint index, string pszVideoID); // 0x10720650-0x107207A0
		public static bool RemoveItemPreview(UGCUpdateHandle_t handle, uint index); // 0x1071ED20-0x1071ED70
		public static SteamAPICall_t SubmitItemUpdate(UGCUpdateHandle_t handle, string pchChangeNote); // 0x107201F0-0x10720370
		public static EItemUpdateStatus GetItemUpdateProgress(UGCUpdateHandle_t handle, out ulong punBytesProcessed, out ulong punBytesTotal); // 0x1071E210-0x1071E260
		public static SteamAPICall_t SetUserItemVote(PublishedFileId_t nPublishedFileID, bool bVoteUp); // 0x1071FEE0-0x1071FF80
		public static SteamAPICall_t GetUserItemVote(PublishedFileId_t nPublishedFileID); // 0x1071E900-0x1071E9A0
		public static SteamAPICall_t AddItemToFavorites(AppId_t nAppId, PublishedFileId_t nPublishedFileID); // 0x1071D790-0x1071D830
		public static SteamAPICall_t RemoveItemFromFavorites(AppId_t nAppId, PublishedFileId_t nPublishedFileID); // 0x1071EB30-0x1071EBD0
		public static SteamAPICall_t SubscribeItem(PublishedFileId_t nPublishedFileID); // 0x10720370-0x10720410
		public static SteamAPICall_t UnsubscribeItem(PublishedFileId_t nPublishedFileID); // 0x10720460-0x10720500
		public static uint GetNumSubscribedItems(); // 0x1071E260-0x1071E2A0
		public static uint GetSubscribedItems(PublishedFileId_t[] pvecPublishedFileID, uint cMaxEntries); // 0x1071E8B0-0x1071E900
		public static uint GetItemState(PublishedFileId_t nPublishedFileID); // 0x1071E1C0-0x1071E210
		public static bool GetItemInstallInfo(PublishedFileId_t nPublishedFileID, out ulong punSizeOnDisk, out string pchFolder, uint cchFolderSize, out uint punTimeStamp); // 0x1071E0D0-0x1071E1C0
		public static bool GetItemDownloadInfo(PublishedFileId_t nPublishedFileID, out ulong punBytesDownloaded, out ulong punBytesTotal); // 0x1071E080-0x1071E0D0
		public static bool DownloadItem(PublishedFileId_t nPublishedFileID, bool bHighPriority); // 0x1071DF80-0x1071DFE0
		public static bool BInitWorkshopForGameServer(DepotId_t unWorkshopDepotID, string pszFolder); // 0x1071DB30-0x1071DC70
		public static void SuspendDownloads(bool bSuspend); // 0x10720410-0x10720460
		public static SteamAPICall_t StartPlaytimeTracking(PublishedFileId_t[] pvecPublishedFileID, uint unNumPublishedFileIDs); // 0x10720020-0x107200C0
		public static SteamAPICall_t StopPlaytimeTracking(PublishedFileId_t[] pvecPublishedFileID, uint unNumPublishedFileIDs); // 0x10720150-0x107201F0
		public static SteamAPICall_t StopPlaytimeTrackingForAllItems(); // 0x107200C0-0x10720150
		public static SteamAPICall_t AddDependency(PublishedFileId_t nParentPublishedFileID, PublishedFileId_t nChildPublishedFileID); // 0x1071D150-0x1071D1F0
		public static SteamAPICall_t RemoveDependency(PublishedFileId_t nParentPublishedFileID, PublishedFileId_t nChildPublishedFileID); // 0x1071EA90-0x1071EB30
		public static SteamAPICall_t AddAppDependency(PublishedFileId_t nPublishedFileID, AppId_t nAppID); // 0x1071D0B0-0x1071D150
		public static SteamAPICall_t RemoveAppDependency(PublishedFileId_t nPublishedFileID, AppId_t nAppID); // 0x1071E9F0-0x1071EA90
		public static SteamAPICall_t GetAppDependencies(PublishedFileId_t nPublishedFileID); // 0x1071DFE0-0x1071E080
		public static SteamAPICall_t DeleteItem(PublishedFileId_t nPublishedFileID); // 0x1071DEE0-0x1071DF80
	}

	public struct SteamUGCDetails_t // TypeDefIndex: 4754
	{
		// Fields
		public PublishedFileId_t m_nPublishedFileId; // 0x00
		public EResult m_eResult; // 0x08
		public EWorkshopFileType m_eFileType; // 0x0C
		public AppId_t m_nCreatorAppID; // 0x10
		public AppId_t m_nConsumerAppID; // 0x14
		public string m_rgchTitle; // 0x18
		public string m_rgchDescription; // 0x1C
		public ulong m_ulSteamIDOwner; // 0x20
		public uint m_rtimeCreated; // 0x28
		public uint m_rtimeUpdated; // 0x2C
		public uint m_rtimeAddedToUserList; // 0x30
		public ERemoteStoragePublishedFileVisibility m_eVisibility; // 0x34
		public bool m_bBanned; // 0x38
		public bool m_bAcceptedForUse; // 0x39
		public bool m_bTagsTruncated; // 0x3A
		public string m_rgchTags; // 0x3C
		public UGCHandle_t m_hFile; // 0x40
		public UGCHandle_t m_hPreviewFile; // 0x48
		public string m_pchFileName; // 0x50
		public int m_nFileSize; // 0x54
		public int m_nPreviewFileSize; // 0x58
		public string m_rgchURL; // 0x5C
		public uint m_unVotesUp; // 0x60
		public uint m_unVotesDown; // 0x64
		public float m_flScore; // 0x68
		public uint m_unNumChildren; // 0x6C
	}

	[CallbackIdentity] // 0x1000A1C0-0x1000A1E0
	public struct SteamUGCQueryCompleted_t // TypeDefIndex: 4616
	{
		// Fields
		public const int k_iCallback = 3401; // Metadata: 0x002423A3
		public UGCQueryHandle_t m_handle; // 0x00
		public EResult m_eResult; // 0x08
		public uint m_unNumResultsReturned; // 0x0C
		public uint m_unTotalMatchingResults; // 0x10
		public bool m_bCachedData; // 0x14
	}

	[CallbackIdentity] // 0x1000A1E0-0x1000A200
	public struct SteamUGCRequestUGCDetailsResult_t // TypeDefIndex: 4617
	{
		// Fields
		public const int k_iCallback = 3402; // Metadata: 0x002423A7
		public SteamUGCDetails_t m_details; // 0x00
		public bool m_bCachedData; // 0x70
	}

	public static class SteamUser // TypeDefIndex: 4784
	{
		// Methods
		public static HSteamUser GetHSteamUser(); // 0x10723490-0x107234E0
		public static bool BLoggedOn(); // 0x10723150-0x10723190
		public static CSteamID GetSteamID(); // 0x10723520-0x107235B0
		public static int InitiateGameConnection(byte[] pAuthBlob, int cbMaxAuthBlob, CSteamID steamIDGameServer, uint unIPServer, ushort usPortServer, bool bSecure); // 0x10723750-0x107237B0
		public static void TerminateGameConnection(uint unIPServer, ushort usPortServer); // 0x10723A50-0x10723AA0
		public static void TrackAppUsageEvent(CGameID gameID, int eAppUsageEvent, string pchExtraInfo = "" /* Metadata: 0x00243884 */); // 0x10723AA0-0x10723BE0
		public static bool GetUserDataFolder(out string pchBuffer, int cubBuffer); // 0x107235B0-0x10723690
		public static void StartVoiceRecording(); // 0x107239D0-0x10723A10
		public static void StopVoiceRecording(); // 0x10723A10-0x10723A50
		public static EVoiceResult GetAvailableVoice(out uint pcbCompressed); // 0x10723380-0x107233F0
		public static EVoiceResult GetVoice(bool bWantCompressed, byte[] pDestBuffer, uint cbDestBufferSize, out uint nBytesWritten); // 0x107236D0-0x10723750
		public static EVoiceResult DecompressVoice(byte[] pCompressed, uint cbCompressed, byte[] pDestBuffer, uint cbDestBufferSize, out uint nBytesWritten, uint nDesiredSampleRate); // 0x10723230-0x10723290
		public static uint GetVoiceOptimalSampleRate(); // 0x10723690-0x107236D0
		public static HAuthTicket GetAuthSessionTicket(byte[] pTicket, int cbMaxTicket, out uint pcbTicket); // 0x107232E0-0x10723380
		public static EBeginAuthSessionResult BeginAuthSession(byte[] pAuthTicket, int cbAuthTicket, CSteamID steamID); // 0x10723190-0x107231E0
		public static void EndAuthSession(CSteamID steamID); // 0x10723290-0x107232E0
		public static void CancelAuthTicket(HAuthTicket hAuthTicket); // 0x107231E0-0x10723230
		public static EUserHasLicenseForAppResult UserHasLicenseForApp(CSteamID steamID, AppId_t appID); // 0x10723BE0-0x10723C30
		public static bool BIsBehindNAT(); // 0x10723010-0x10723050
		public static void AdvertiseGame(CSteamID steamIDGameServer, uint unIPServer, ushort usPortServer); // 0x10722FC0-0x10723010
		public static SteamAPICall_t RequestEncryptedAppTicket(byte[] pDataToInclude, int cbDataToInclude); // 0x107237B0-0x10723850
		public static bool GetEncryptedAppTicket(byte[] pTicket, int cbMaxTicket, out uint pcbTicket); // 0x107233F0-0x10723440
		public static int GetGameBadgeLevel(int nSeries, bool bFoil); // 0x10723440-0x10723490
		public static int GetPlayerSteamLevel(); // 0x107234E0-0x10723520
		public static SteamAPICall_t RequestStoreAuthURL(string pchRedirectURL); // 0x10723850-0x107239D0
		public static bool BIsPhoneVerified(); // 0x107230D0-0x10723110
		public static bool BIsTwoFactorEnabled(); // 0x10723110-0x10723150
		public static bool BIsPhoneIdentifying(); // 0x10723050-0x10723090
		public static bool BIsPhoneRequiringVerification(); // 0x10723090-0x107230D0
	}

	public static class SteamUserStats // TypeDefIndex: 4785
	{
		// Methods
		public static bool RequestCurrentStats(); // 0x10722750-0x10722790
		public static bool GetStat(string pchName, out int pData); // 0x10721E40-0x10721F80
		public static bool GetStat(string pchName, out float pData); // 0x10721F80-0x107220C0
		public static bool SetStat(string pchName, int nData); // 0x10722C30-0x10722D70
		public static bool SetStat(string pchName, float fData); // 0x10722AE0-0x10722C30
		public static bool UpdateAvgRateStat(string pchName, float flCountThisSession, double dSessionLength); // 0x10722DB0-0x10722F10
		public static bool GetAchievement(string pchName, out bool pbAchieved); // 0x107213A0-0x107214E0
		public static bool SetAchievement(string pchName); // 0x107229B0-0x10722AE0
		public static bool ClearAchievement(string pchName); // 0x10720840-0x10720970
		public static bool GetAchievementAndUnlockTime(string pchName, out bool pbAchieved, out uint punUnlockTime); // 0x10720F00-0x10721050
		public static bool StoreStats(); // 0x10722D70-0x10722DB0
		public static int GetAchievementIcon(string pchName); // 0x10721200-0x10721340
		public static string GetAchievementDisplayAttribute(string pchName, string pchKey); // 0x10721050-0x10721200
		public static bool IndicateAchievementProgress(string pchName, uint nCurProgress, uint nMaxProgress); // 0x10722600-0x10722750
		public static uint GetNumAchievements(); // 0x10721D70-0x10721DB0
		public static string GetAchievementName(uint iAchievement); // 0x10721340-0x107213A0
		public static SteamAPICall_t RequestUserStats(CSteamID steamIDUser); // 0x107228C0-0x10722960
		public static bool GetUserStat(CSteamID steamIDUser, string pchName, out int pData); // 0x107224B0-0x10722600
		public static bool GetUserStat(CSteamID steamIDUser, string pchName, out float pData); // 0x10722360-0x107224B0
		public static bool GetUserAchievement(CSteamID steamIDUser, string pchName, out bool pbAchieved); // 0x10722210-0x10722360
		public static bool GetUserAchievementAndUnlockTime(CSteamID steamIDUser, string pchName, out bool pbAchieved, out uint punUnlockTime); // 0x107220C0-0x10722210
		public static bool ResetAllStats(bool bAchievementsToo); // 0x10722960-0x107229B0
		public static SteamAPICall_t FindOrCreateLeaderboard(string pchLeaderboardName, ELeaderboardSortMethod eLeaderboardSortMethod, ELeaderboardDisplayType eLeaderboardDisplayType); // 0x10720C40-0x10720DC0
		public static SteamAPICall_t FindLeaderboard(string pchLeaderboardName); // 0x10720AC0-0x10720C40
		public static string GetLeaderboardName(SteamLeaderboard_t hSteamLeaderboard); // 0x10721B00-0x10721B50
		public static int GetLeaderboardEntryCount(SteamLeaderboard_t hSteamLeaderboard); // 0x10721AB0-0x10721B00
		public static ELeaderboardSortMethod GetLeaderboardSortMethod(SteamLeaderboard_t hSteamLeaderboard); // 0x10721B50-0x10721BA0
		public static ELeaderboardDisplayType GetLeaderboardDisplayType(SteamLeaderboard_t hSteamLeaderboard); // 0x10721A60-0x10721AB0
		public static SteamAPICall_t DownloadLeaderboardEntries(SteamLeaderboard_t hSteamLeaderboard, ELeaderboardDataRequest eLeaderboardDataRequest, int nRangeStart, int nRangeEnd); // 0x10720A10-0x10720AC0
		public static SteamAPICall_t DownloadLeaderboardEntriesForUsers(SteamLeaderboard_t hSteamLeaderboard, CSteamID[] prgUsers, int cUsers); // 0x10720970-0x10720A10
		public static bool GetDownloadedLeaderboardEntry(SteamLeaderboardEntries_t hSteamLeaderboardEntries, int index, out LeaderboardEntry_t pLeaderboardEntry, int[] pDetails, int cDetailsMax); // 0x107214E0-0x10721540
		public static SteamAPICall_t UploadLeaderboardScore(SteamLeaderboard_t hSteamLeaderboard, ELeaderboardUploadScoreMethod eLeaderboardUploadScoreMethod, int nScore, int[] pScoreDetails, int cScoreDetailsCount); // 0x10722F10-0x10722FC0
		public static SteamAPICall_t AttachLeaderboardUGC(SteamLeaderboard_t hSteamLeaderboard, UGCHandle_t hUGC); // 0x107207A0-0x10720840
		public static SteamAPICall_t GetNumberOfCurrentPlayers(); // 0x10721DB0-0x10721E40
		public static SteamAPICall_t RequestGlobalAchievementPercentages(); // 0x10722790-0x10722820
		public static int GetMostAchievedAchievementInfo(out string pchName, uint unNameBufLen, out float pflPercent, out bool pbAchieved); // 0x10721BA0-0x10721C80
		public static int GetNextMostAchievedAchievementInfo(int iIteratorPrevious, out string pchName, uint unNameBufLen, out float pflPercent, out bool pbAchieved); // 0x10721C80-0x10721D70
		public static bool GetAchievementAchievedPercent(string pchName, out float pflPercent); // 0x10720DC0-0x10720F00
		public static SteamAPICall_t RequestGlobalStats(int nHistoryDays); // 0x10722820-0x107228C0
		public static bool GetGlobalStat(string pchStatName, out long pData); // 0x107217E0-0x10721920
		public static bool GetGlobalStat(string pchStatName, out double pData); // 0x10721920-0x10721A60
		public static int GetGlobalStatHistory(string pchStatName, long[] pData, uint cubData); // 0x10721540-0x10721690
		public static int GetGlobalStatHistory(string pchStatName, double[] pData, uint cubData); // 0x10721690-0x107217E0
	}

	public static class SteamUtils // TypeDefIndex: 4786
	{
		// Methods
		public static uint GetSecondsSinceAppActive(); // 0x10724250-0x10724290
		public static uint GetSecondsSinceComputerActive(); // 0x10724290-0x107242D0
		public static EUniverse GetConnectedUniverse(); // 0x10723F80-0x10723FC0
		public static uint GetServerRealTime(); // 0x107242D0-0x10724310
		public static string GetIPCountry(); // 0x10724160-0x107241B0
		public static bool GetImageSize(int iImage, out uint pnWidth, out uint pnHeight); // 0x10724200-0x10724250
		public static bool GetImageRGBA(int iImage, byte[] pubDest, int nDestBufferSize); // 0x107241B0-0x10724200
		public static bool GetCSERIPPort(out uint unIP, out ushort usPort); // 0x10723F30-0x10723F80
		public static byte GetCurrentBatteryPower(); // 0x10723FC0-0x10724000
		public static AppId_t GetAppID(); // 0x10723EA0-0x10723F30
		public static void SetOverlayNotificationPosition(ENotificationPosition eNotificationPosition); // 0x10724500-0x10724550
		public static bool IsAPICallCompleted(SteamAPICall_t hSteamAPICall, out bool pbFailed); // 0x10724360-0x107243B0
		public static ESteamAPICallFailure GetAPICallFailureReason(SteamAPICall_t hSteamAPICall); // 0x10723DF0-0x10723E40
		public static bool GetAPICallResult(SteamAPICall_t hSteamAPICall, IntPtr pCallback, int cubCallback, int iCallbackExpected, out bool pbFailed); // 0x10723E40-0x10723EA0
		public static uint GetIPCCallCount(); // 0x10724120-0x10724160
		public static void SetWarningMessageHook(SteamAPIWarningMessageHook_t pFunction); // 0x107245A0-0x107245F0
		public static bool IsOverlayEnabled(); // 0x107243B0-0x107243F0
		public static bool BOverlayNeedsPresent(); // 0x10723C30-0x10723C70
		public static SteamAPICall_t CheckFileSignature(string szFileName); // 0x10723C70-0x10723DF0
		public static bool ShowGamepadTextInput(EGamepadTextInputMode eInputMode, EGamepadTextInputLineMode eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText); // 0x107245F0-0x107247B0
		public static uint GetEnteredGamepadTextLength(); // 0x107240E0-0x10724120
		public static bool GetEnteredGamepadTextInput(out string pchText, uint cchText); // 0x10724000-0x107240E0
		public static string GetSteamUILanguage(); // 0x10724310-0x10724360
		public static bool IsSteamRunningInVR(); // 0x10724430-0x10724470
		public static void SetOverlayNotificationInset(int nHorizontalInset, int nVerticalInset); // 0x107244B0-0x10724500
		public static bool IsSteamInBigPictureMode(); // 0x107243F0-0x10724430
		public static void StartVRDashboard(); // 0x107247B0-0x107247F0
		public static bool IsVRHeadsetStreamingEnabled(); // 0x10724470-0x107244B0
		public static void SetVRHeadsetStreamingEnabled(bool bEnabled); // 0x10724550-0x107245A0
	}

	public static class SteamVideo // TypeDefIndex: 4787
	{
		// Methods
		public static void GetVideoURL(AppId_t unVideoAppID); // 0x10724920-0x10724970
		public static bool IsBroadcasting(out int pnNumViewers); // 0x10724970-0x107249C0
		public static void GetOPFSettings(AppId_t unVideoAppID); // 0x107247F0-0x10724840
		public static bool GetOPFStringForApp(AppId_t unVideoAppID, out string pchBuffer, ref int pnBufferSize); // 0x10724840-0x10724920
	}

	[CallbackIdentity] // 0x1000A380-0x1000A3A0
	public struct StopPlaytimeTrackingResult_t // TypeDefIndex: 4626
	{
		// Fields
		public const int k_iCallback = 3411; // Metadata: 0x002423CB
		public EResult m_eResult; // 0x00
	}
}

namespace Discord
{
	public class StorageManager // TypeDefIndex: 5090
	{
		// Fields
		private IntPtr MethodsPtr; // 0x08
		private object MethodsStructure; // 0x0C
	
		// Properties
		private FFIMethods Methods { get; } // 0x10626390-0x10626480 
	
		// Nested types
		internal struct FFIEvents // TypeDefIndex: 5091
		{
		}
	
		internal struct FFIMethods // TypeDefIndex: 5092
		{
			// Fields
			internal ReadMethod Read; // 0x00
			internal ReadAsyncMethod ReadAsync; // 0x04
			internal ReadAsyncPartialMethod ReadAsyncPartial; // 0x08
			internal WriteMethod Write; // 0x0C
			internal WriteAsyncMethod WriteAsync; // 0x10
			internal DeleteMethod Delete; // 0x14
			internal ExistsMethod Exists; // 0x18
			internal CountMethod Count; // 0x1C
			internal StatMethod Stat; // 0x20
			internal StatAtMethod StatAt; // 0x24
			internal GetPathMethod GetPath; // 0x28
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result ReadMethod(IntPtr methodsPtr, string name, byte[] data, int dataLen, ref uint read); // TypeDefIndex: 5093; 0x10624980-0x10624C40
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void ReadAsyncCallback(IntPtr ptr, Discord.Result result, IntPtr dataPtr, int dataLen); // TypeDefIndex: 5094; 0x10623EF0-0x10624090
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void ReadAsyncMethod(IntPtr methodsPtr, string name, IntPtr callbackData, ReadAsyncCallback callback); // TypeDefIndex: 5095; 0x10624180-0x10624420
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void ReadAsyncPartialCallback(IntPtr ptr, Discord.Result result, IntPtr dataPtr, int dataLen); // TypeDefIndex: 5096; 0x10623EF0-0x10624090
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void ReadAsyncPartialMethod(IntPtr methodsPtr, string name, ulong offset, ulong length, IntPtr callbackData, ReadAsyncPartialCallback callback); // TypeDefIndex: 5097; 0x106245E0-0x106248F0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result WriteMethod(IntPtr methodsPtr, string name, byte[] data, int dataLen); // TypeDefIndex: 5098; 0x10629070-0x10629310
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void WriteAsyncCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 5099; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void WriteAsyncMethod(IntPtr methodsPtr, string name, byte[] data, int dataLen, IntPtr callbackData, WriteAsyncCallback callback); // TypeDefIndex: 5100; 0x10628D10-0x10628FF0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result DeleteMethod(IntPtr methodsPtr, string name); // TypeDefIndex: 5101; 0x1061FB40-0x1061FDD0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result ExistsMethod(IntPtr methodsPtr, string name, ref bool exists); // TypeDefIndex: 5102; 0x104A0350-0x104A05E0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void CountMethod(IntPtr methodsPtr, ref int count); // TypeDefIndex: 5103; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result StatMethod(IntPtr methodsPtr, string name, ref FileStat stat); // TypeDefIndex: 5104; 0x104A0350-0x104A05E0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result StatAtMethod(IntPtr methodsPtr, int index, ref FileStat stat); // TypeDefIndex: 5105; 0x104A0350-0x104A05E0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetPathMethod(IntPtr methodsPtr, StringBuilder path); // TypeDefIndex: 5106; 0x1061FB40-0x1061FDD0
		}
	
		public delegate void ReadAsyncHandler(Discord.Result result, byte[] data); // TypeDefIndex: 5107; 0x101D4290-0x101D4410
	
		public delegate void ReadAsyncPartialHandler(Discord.Result result, byte[] data); // TypeDefIndex: 5108; 0x101D4290-0x101D4410
	
		public delegate void WriteAsyncHandler(Discord.Result result); // TypeDefIndex: 5109; 0x1061F960-0x1061FAD0
	
		// Constructors
		internal StorageManager(IntPtr ptr, IntPtr eventsPtr, ref FFIEvents events); // 0x106262C0-0x10626390
	
		// Methods
		private void InitEvents(IntPtr eventsPtr, ref FFIEvents events); // 0x10625AD0-0x10625B30
		public uint Read(string name, byte[] data); // 0x10625E60-0x10625F20
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void ReadAsyncCallbackImpl(IntPtr ptr, Discord.Result result, IntPtr dataPtr, int dataLen); // 0x10625B30-0x10625C00
		public void ReadAsync(string name, ReadAsyncHandler callback); // 0x10625DA0-0x10625E60
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void ReadAsyncPartialCallbackImpl(IntPtr ptr, Discord.Result result, IntPtr dataPtr, int dataLen); // 0x10625C00-0x10625CD0
		public void ReadAsyncPartial(string name, ulong offset, ulong length, ReadAsyncPartialHandler callback); // 0x10625CD0-0x10625DA0
		public void Write(string name, byte[] data); // 0x10626210-0x106262C0
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void WriteAsyncCallbackImpl(IntPtr ptr, Discord.Result result); // 0x106260C0-0x10626150
		public void WriteAsync(string name, byte[] data, WriteAsyncHandler callback); // 0x10626150-0x10626210
		public void Delete(string name); // 0x10625720-0x106257D0
		public bool Exists(string name); // 0x106257D0-0x10625880
		public int Count(); // 0x106256B0-0x10625720
		public FileStat Stat(string name); // 0x10625FF0-0x106260C0
		public FileStat StatAt(int index); // 0x10625F20-0x10625FF0
		public string GetPath(); // 0x10625A00-0x10625AD0
		public IEnumerable<FileStat> Files(); // 0x10625880-0x10625A00
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000A840-0x1000A860
	public struct StoreAuthURLResponse_t // TypeDefIndex: 4644
	{
		// Fields
		public const int k_iCallback = 165; // Metadata: 0x00242413
		public string m_szURL; // 0x00
	}
}

namespace Discord
{
	public class StoreManager // TypeDefIndex: 5110
	{
		// Fields
		private IntPtr MethodsPtr; // 0x08
		private object MethodsStructure; // 0x0C
		[CompilerGenerated] // 0x10002030-0x10002050
		private EntitlementCreateHandler OnEntitlementCreate; // 0x10
		[CompilerGenerated] // 0x10002030-0x10002050
		private EntitlementDeleteHandler OnEntitlementDelete; // 0x14
	
		// Properties
		private FFIMethods Methods { get; } // 0x10627480-0x10627560 
	
		// Events
		public event EntitlementCreateHandler OnEntitlementCreate {
			add; // 0x10627380-0x10627400
			remove; // 0x10627560-0x106275E0
		}
		public event EntitlementDeleteHandler OnEntitlementDelete {
			add; // 0x10627400-0x10627480
			remove; // 0x106275E0-0x10627660
		}
	
		// Nested types
		internal struct FFIEvents // TypeDefIndex: 5111
		{
			// Fields
			internal EntitlementCreateHandler OnEntitlementCreate; // 0x00
			internal EntitlementDeleteHandler OnEntitlementDelete; // 0x04
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void EntitlementCreateHandler(IntPtr ptr, ref Entitlement entitlement); // TypeDefIndex: 5112; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void EntitlementDeleteHandler(IntPtr ptr, ref Entitlement entitlement); // TypeDefIndex: 5113; 0x101D4290-0x101D4410
		}
	
		internal struct FFIMethods // TypeDefIndex: 5114
		{
			// Fields
			internal FetchSkusMethod FetchSkus; // 0x00
			internal CountSkusMethod CountSkus; // 0x04
			internal GetSkuMethod GetSku; // 0x08
			internal GetSkuAtMethod GetSkuAt; // 0x0C
			internal FetchEntitlementsMethod FetchEntitlements; // 0x10
			internal CountEntitlementsMethod CountEntitlements; // 0x14
			internal GetEntitlementMethod GetEntitlement; // 0x18
			internal GetEntitlementAtMethod GetEntitlementAt; // 0x1C
			internal HasSkuEntitlementMethod HasSkuEntitlement; // 0x20
			internal StartPurchaseMethod StartPurchase; // 0x24
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void FetchSkusCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 5115; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void FetchSkusMethod(IntPtr methodsPtr, IntPtr callbackData, FetchSkusCallback callback); // TypeDefIndex: 5116; 0x10344040-0x103442D0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void CountSkusMethod(IntPtr methodsPtr, ref int count); // TypeDefIndex: 5117; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetSkuMethod(IntPtr methodsPtr, long skuId, ref Sku sku); // TypeDefIndex: 5118; 0x10620E00-0x106210A0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetSkuAtMethod(IntPtr methodsPtr, int index, ref Sku sku); // TypeDefIndex: 5119; 0x104A0350-0x104A05E0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void FetchEntitlementsCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 5120; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void FetchEntitlementsMethod(IntPtr methodsPtr, IntPtr callbackData, FetchEntitlementsCallback callback); // TypeDefIndex: 5121; 0x10344040-0x103442D0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void CountEntitlementsMethod(IntPtr methodsPtr, ref int count); // TypeDefIndex: 5122; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetEntitlementMethod(IntPtr methodsPtr, long entitlementId, ref Entitlement entitlement); // TypeDefIndex: 5123; 0x10620E00-0x106210A0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetEntitlementAtMethod(IntPtr methodsPtr, int index, ref Entitlement entitlement); // TypeDefIndex: 5124; 0x104A0350-0x104A05E0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result HasSkuEntitlementMethod(IntPtr methodsPtr, long skuId, ref bool hasEntitlement); // TypeDefIndex: 5125; 0x10621840-0x106219E0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void StartPurchaseCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 5126; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void StartPurchaseMethod(IntPtr methodsPtr, long skuId, IntPtr callbackData, StartPurchaseCallback callback); // TypeDefIndex: 5127; 0x10621500-0x106217C0
		}
	
		public delegate void FetchSkusHandler(Discord.Result result); // TypeDefIndex: 5128; 0x1061F960-0x1061FAD0
	
		public delegate void FetchEntitlementsHandler(Discord.Result result); // TypeDefIndex: 5129; 0x1061F960-0x1061FAD0
	
		public delegate void StartPurchaseHandler(Discord.Result result); // TypeDefIndex: 5130; 0x1061F960-0x1061FAD0
	
		public delegate void EntitlementCreateHandler(ref Entitlement entitlement); // TypeDefIndex: 5131; 0x1061FEA0-0x10620010
	
		public delegate void EntitlementDeleteHandler(ref Entitlement entitlement); // TypeDefIndex: 5132; 0x1061FEA0-0x10620010
	
		// Constructors
		internal StoreManager(IntPtr ptr, IntPtr eventsPtr, ref FFIEvents events); // 0x10627250-0x10627380
	
		// Methods
		private void InitEvents(IntPtr eventsPtr, ref FFIEvents events); // 0x10626ED0-0x10626F80
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void FetchSkusCallbackImpl(IntPtr ptr, Discord.Result result); // 0x106266A0-0x10626730
		public void FetchSkus(FetchSkusHandler callback); // 0x10626730-0x106267E0
		public int CountSkus(); // 0x106264F0-0x10626560
		public Sku GetSku(long skuId); // 0x10626BD0-0x10626CA0
		public Sku GetSkuAt(int index); // 0x10626B00-0x10626BD0
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void FetchEntitlementsCallbackImpl(IntPtr ptr, Discord.Result result); // 0x10626560-0x106265F0
		public void FetchEntitlements(FetchEntitlementsHandler callback); // 0x106265F0-0x106266A0
		public int CountEntitlements(); // 0x10626480-0x106264F0
		public Entitlement GetEntitlement(long entitlementId); // 0x106268B0-0x10626980
		public Entitlement GetEntitlementAt(int index); // 0x106267E0-0x106268B0
		public bool HasSkuEntitlement(long skuId); // 0x10626E20-0x10626ED0
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void StartPurchaseCallbackImpl(IntPtr ptr, Discord.Result result); // 0x10627100-0x10627190
		public void StartPurchase(long skuId, StartPurchaseHandler callback); // 0x10627190-0x10627250
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OnEntitlementCreateImpl(IntPtr ptr, ref Entitlement entitlement); // 0x10626F80-0x10627040
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OnEntitlementDeleteImpl(IntPtr ptr, ref Entitlement entitlement); // 0x10627040-0x10627100
		public IEnumerable<Entitlement> GetEntitlements(); // 0x10626980-0x10626B00
		public IEnumerable<Sku> GetSkus(); // 0x10626CA0-0x10626E20
	}
}

public class StoreMenu : DestroyableSingleton<StoreMenu>, IStoreListener // TypeDefIndex: 5593
{
	// Fields
	public HatParent HatSlot; // 0x10
	public SpriteRenderer SkinSlot; // 0x14
	public SpriteAnim PetSlot; // 0x18
	public TextRenderer ItemName; // 0x1C
	public SpriteRenderer PurchaseBackground; // 0x20
	public TextRenderer PriceText; // 0x24
	public PurchaseButton PurchasablePrefab; // 0x28
	public SpriteRenderer HortLinePrefab; // 0x2C
	public TextRenderer LoadingText; // 0x30
	public TextRenderer RestorePurchasesButton; // 0x34
	public GameObject RestorePurchasesObj; // 0x38
	public SpriteRenderer BannerPrefab; // 0x3C
	public Sprite HatBanner; // 0x40
	public Sprite SkinsBanner; // 0x44
	public Sprite HolidayBanner; // 0x48
	public Sprite PetsBanner; // 0x4C
	public SpriteRenderer TopArrow; // 0x50
	public SpriteRenderer BottomArrow; // 0x54
	public const string BoughtAdsProductId = "bought_ads"; // Metadata: 0x00243C67
	private IStoreController controller; // 0x58
	private IExtensionProvider extensions; // 0x5C
	[CompilerGenerated] // 0x10002030-0x10002050
	private PurchaseStates _PurchaseState_k__BackingField; // 0x60
	public Scroller Scroller; // 0x64
	public Vector2 StartPositionVertical; // 0x68
	public FloatRange XRange; // 0x70
	public int NumPerRow; // 0x74
	private PurchaseButton CurrentButton; // 0x78
	private List<GameObject> AllObjects; // 0x7C
	private const float NormalHeight = -0.45f; // Metadata: 0x00243C75
	private const float BoxHeight = -0.75f; // Metadata: 0x00243C79

	// Properties
	public PurchaseStates PurchaseState { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x10231710-0x10231720 0x10231720-0x10231730

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass39_0 // TypeDefIndex: 5594
	{
		// Fields
		public PurchaseButton button; // 0x08

		// Constructors
		public __c__DisplayClass39_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _WaitForPurchaseAds_b__1(PurchaseButton h); // 0x10241230-0x102412B0
	}

	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5595
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<GameObject, PurchaseButton> __9__39_0; // 0x04
		public static Func<PetBehaviour, bool> __9__43_0; // 0x08
		public static Func<PetBehaviour, string> __9__43_1; // 0x0C

		// Constructors
		static __c(); // 0x10241570-0x102415C0
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal PurchaseButton _WaitForPurchaseAds_b__39_0(GameObject p); // 0x10240D40-0x10240D80
		internal bool _ShowAllButtons_b__43_0(PetBehaviour h); // 0x10240CE0-0x10240D00
		internal string _ShowAllButtons_b__43_1(PetBehaviour p); // 0x10240D00-0x10240D20
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _WaitForPurchaseAds_d__39 : IEnumerator<object> // TypeDefIndex: 5596
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public PurchaseButton button; // 0x10
		public StoreMenu __4__this; // 0x14
		private __c__DisplayClass39_0 __8__1; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _WaitForPurchaseAds_d__39(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10241870-0x10241C90
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10241C90-0x10241CE0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass45_0 // TypeDefIndex: 5597
	{
		// Fields
		public IBuyable item; // 0x08

		// Constructors
		public __c__DisplayClass45_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _InsertMapsFromList_b__0(Product p); // 0x102412B0-0x10241310
		internal bool _InsertMapsFromList_b__1(SkinData h); // 0x10241310-0x10241380
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass46_0 // TypeDefIndex: 5598
	{
		// Fields
		public IBuyable item; // 0x08

		// Constructors
		public __c__DisplayClass46_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _InsertHatsFromList_b__0(Product p); // 0x10241380-0x102413E0
	}

	// Constructors
	public StoreMenu(); // 0x10231680-0x10231710

	// Methods
	public void Start(); // 0x10230E90-0x10231480
	public void Update(); // 0x10231480-0x10231620
	public void Open(); // 0x1022FC20-0x1022FC60
	public void RestorePurchases(); // 0x101A2F90-0x101A2FA0
	private void DestroySliderObjects(); // 0x1022EF80-0x1022F030
	private void FinishRestoring(); // 0x1022F030-0x1022F080
	public void SetProduct(PurchaseButton button); // 0x1022FD40-0x10230680
	public void BuyProduct(); // 0x1022EE20-0x1022EEE0
	[IteratorStateMachine] // 0x10006E10-0x10006E60
	public IEnumerator WaitForPurchaseAds(PurchaseButton button); // 0x10231620-0x10231680
	public void Close(); // 0x1022EEE0-0x1022EF80
	private void ShowAllButtons(); // 0x10230680-0x10230E90
	private Vector3 InsertHortLine(Vector3 position); // 0x1022F3C0-0x1022F4B0
	private Vector3 InsertMapsFromList(Vector3 position, Product[] allProducts, List<MapBuyable> maps); // 0x1022F4B0-0x1022F7C0
	private Vector3 InsertHatsFromList(Vector3 position, Product[] allProducts, IBuyable[] hats); // 0x1022F1F0-0x1022F3C0
	private PurchaseButton InsertProduct(Vector3 position, Product product, IBuyable item); // 0x1022F7C0-0x1022F960
	private Vector3 InsertBanner(Vector3 position, Sprite s); // 0x1022F080-0x1022F1F0
	public void OnInitialized(IStoreController controller, IExtensionProvider extensions); // 0x1022FA20-0x1022FA90
	public PurchaseProcessingResult ProcessPurchase(PurchaseEventArgs e); // 0x1022FC60-0x1022FD40
	public void OnInitializeFailed(InitializationFailureReason error); // 0x1022F960-0x1022FA20
	public void OnPurchaseFailed(Product i, PurchaseFailureReason error); // 0x1022FA90-0x1022FC20
}

public static class StringExtensions // TypeDefIndex: 5249
{
	// Fields
	private static char[] buffer; // 0x00

	// Constructors
	static StringExtensions(); // 0x102318F0-0x10231930

	// Methods
	public static string Lerp(string a, string b, float t); // 0x10231730-0x102318F0
}

namespace MS.Internal.Xml.XPath
{
	internal sealed class StringFunctions : ValueQuery // TypeDefIndex: 1798
	{
		// Fields
		private Function.FunctionType funcType; // 0x0C
		private IList<Query> argList; // 0x10
		private static readonly CompareInfo compareInfo; // 0x00
	
		// Properties
		public override XPathResultType StaticType { get; } // 0x106C6AE0-0x106C6B10 
	
		// Constructors
		public StringFunctions(Function.FunctionType funcType, IList<Query> argList); // 0x106BBEB0-0x106BBEE0
		private StringFunctions(StringFunctions other); // 0x106C6970-0x106C6AE0
		static StringFunctions(); // 0x106C6900-0x106C6970
	
		// Methods
		public override void SetXsltContext(XsltContext context); // 0x106C5DD0-0x106C5F20
		public override object Evaluate(XPathNodeIterator nodeIterator); // 0x106C5760-0x106C5BF0
		internal static string toString(double num); // 0x106C6B50-0x106C6B90
		internal static string toString(bool b); // 0x106C6B10-0x106C6B50
		private string toString(XPathNodeIterator nodeIterator); // 0x106C6B90-0x106C6DF0
		private string Concat(XPathNodeIterator nodeIterator); // 0x106C5450-0x106C5620
		private bool StartsWith(XPathNodeIterator nodeIterator); // 0x106C5F20-0x106C6030
		private bool Contains(XPathNodeIterator nodeIterator); // 0x106C5620-0x106C5760
		private string SubstringBefore(XPathNodeIterator nodeIterator); // 0x106C62C0-0x106C6430
		private string SubstringAfter(XPathNodeIterator nodeIterator); // 0x106C6150-0x106C62C0
		private string Substring(XPathNodeIterator nodeIterator); // 0x106C6430-0x106C6710
		private double StringLength(XPathNodeIterator nodeIterator); // 0x106C6030-0x106C6150
		private string Normalize(XPathNodeIterator nodeIterator); // 0x106C5BF0-0x106C5DD0
		private string Translate(XPathNodeIterator nodeIterator); // 0x106C6710-0x106C6900
		public override XPathNodeIterator Clone(); // 0x106C52B0-0x106C5450
	}
}

public enum StringNames // TypeDefIndex: 5872
{
	ExitButton = 0,
	BackButton = 1,
	AvailableGamesLabel = 2,
	CreateGameButton = 3,
	FindGameButton = 4,
	EnterCode = 5,
	GhostIgnoreTasks = 6,
	GhostDoTasks = 7,
	GhostImpostor = 8,
	ImpostorTask = 9,
	FakeTasks = 10,
	TaskComplete = 11,
	ExileTextSP = 12,
	ExileTextSN = 13,
	ExileTextPP = 14,
	ExileTextPN = 15,
	NoExileSkip = 16,
	NoExileTie = 17,
	ImpostorsRemainS = 18,
	ImpostorsRemainP = 19,
	Hallway = 20,
	Storage = 21,
	Cafeteria = 22,
	Reactor = 23,
	UpperEngine = 24,
	Nav = 25,
	Admin = 26,
	Electrical = 27,
	LifeSupp = 28,
	Shields = 29,
	MedBay = 30,
	Security = 31,
	Weapons = 32,
	LowerEngine = 33,
	Comms = 34,
	Decontamination = 35,
	Launchpad = 36,
	LockerRoom = 37,
	Laboratory = 38,
	Balcony = 39,
	Office = 40,
	Greenhouse = 41,
	DivertPowerTo = 42,
	AcceptDivertedPower = 43,
	SubmitScan = 44,
	PrimeShields = 45,
	FuelEngines = 46,
	ChartCourse = 47,
	StartReactor = 48,
	SwipeCard = 49,
	ClearAsteroids = 50,
	UploadData = 51,
	DownloadData = 52,
	InspectSample = 53,
	EmptyChute = 54,
	EmptyGarbage = 55,
	AlignEngineOutput = 56,
	FixWiring = 57,
	CalibrateDistributor = 58,
	UnlockManifolds = 59,
	ResetReactor = 60,
	FixLights = 61,
	FixComms = 62,
	RestoreOxy = 63,
	CleanO2Filter = 64,
	StabilizeSteering = 65,
	AssembleArtifact = 66,
	SortSamples = 67,
	MeasureWeather = 68,
	EnterIdCode = 69,
	HowToPlayText1 = 70,
	HowToPlayText2 = 71,
	HowToPlayText5 = 72,
	HowToPlayText6 = 73,
	HowToPlayText7 = 74,
	HowToPlayText81 = 75,
	HowToPlayText82 = 76,
	NumImpostorsS = 77,
	NumImpostorsP = 78,
	Crewmate = 79,
	Impostor = 80,
	Victory = 81,
	Defeat = 82,
	CrewmatesDisconnected = 83,
	ImpostorDisconnected = 84,
	HowToPlayText41 = 85,
	HowToPlayText42 = 86,
	HowToPlayText43 = 87,
	HowToPlayText44 = 88,
	HowToPlayTextMap = 89,
	HowToPlayTextCrew1 = 90,
	HowToPlayTextCrew2 = 91,
	HowToPlayTextCrew3 = 92,
	HowToPlayTextCrew4 = 93,
	HowToPlayTextCrew5 = 94,
	HowToPlayTextCrew6 = 95,
	HowToPlayTextImp1 = 96,
	HowToPlayTextImp2 = 97,
	HowToPlayTextImp3 = 98,
	HowToPlayTextImp4 = 99,
	HowToPlayTextImp5 = 100,
	HowToPlayTextImp6 = 101,
	HowToPlayTextImp7 = 102,
	SettingsGeneral = 103,
	SettingsControls = 104,
	SettingsSound = 105,
	SettingsGraphics = 106,
	SettingsData = 107,
	SettingsCensorChat = 108,
	SettingsMusic = 109,
	SettingsSFX = 110,
	SettingsOn = 111,
	SettingsOff = 112,
	SettingsSendTelemetry = 113,
	SettingsControlMode = 114,
	SettingsTouchMode = 115,
	SettingsJoystickMode = 116,
	SettingsKeyboardMode = 117,
	SettingsFullscreen = 118,
	SettingsResolution = 119,
	SettingsApply = 120,
	SettingsPersonalizeAds = 121,
	SettingsLanguage = 122,
	SettingsJoystickSize = 123,
	SettingsMouseMode = 124,
	PlayerColor = 125,
	PlayerHat = 126,
	PlayerSkin = 127,
	PlayerPet = 128,
	GameSettings = 129,
	GameRecommendedSettings = 130,
	GameCustomSettings = 131,
	GameMapName = 132,
	GameNumImpostors = 133,
	GameNumMeetings = 134,
	GameDiscussTime = 135,
	GameVotingTime = 136,
	GamePlayerSpeed = 137,
	GameCrewLight = 138,
	GameImpostorLight = 139,
	GameKillCooldown = 140,
	GameKillDistance = 141,
	GameCommonTasks = 142,
	GameLongTasks = 143,
	GameShortTasks = 144,
	MatchMapName = 145,
	MatchLanguage = 146,
	MatchImpostors = 147,
	MatchMaxPlayers = 148,
	Cancel = 149,
	Confirm = 150,
	Limit = 151,
	RoomCode = 152,
	LeaveGame = 153,
	ReturnToGame = 154,
	LocalHelp = 155,
	OnlineHelp = 156,
	SettingsVSync = 157,
	EmergencyCount = 158,
	EmergencyNotReady = 159,
	EmergencyDuringCrisis = 160,
	EmergencyRequested = 161,
	GameEmergencyCooldown = 162,
	BuyBeverage = 163,
	WeatherEta = 164,
	WeatherComplete = 165,
	ProcessData = 166,
	RunDiagnostics = 167,
	WaterPlants = 168,
	PickAnomaly = 169,
	WaterPlantsGetCan = 170,
	AuthOfficeOkay = 171,
	AuthCommsOkay = 172,
	AuthOfficeActive = 173,
	AuthCommsActive = 174,
	AuthOfficeNotActive = 175,
	AuthCommsNotActive = 176,
	SecLogEntry = 177,
	EnterName = 178,
	SwipeCardPleaseSwipe = 179,
	SwipeCardBadRead = 180,
	SwipeCardTooFast = 181,
	SwipeCardTooSlow = 182,
	SwipeCardAccepted = 183,
	ReactorHoldToStop = 184,
	ReactorWaiting = 185,
	ReactorNominal = 186,
	MeetingWhoIsTitle = 187,
	MeetingVotingBegins = 188,
	MeetingVotingEnds = 189,
	MeetingVotingResults = 190,
	MeetingProceeds = 191,
	MeetingHasVoted = 192,
	DataPolicyTitle = 193,
	DataPolicyText = 194,
	DataPolicyWhat = 195,
	AdPolicyTitle = 196,
	AdPolicyText = 197,
	Accept = 198,
	RemoveAds = 199,
	SwipeCardPleaseInsert = 200,
	LogNorth = 201,
	LogSouthEast = 202,
	LogSouthWest = 203,
	SettingShort = 204,
	SettingMedium = 205,
	SettingLong = 206,
	SamplesPress = 207,
	SamplesAdding = 208,
	SamplesSelect = 209,
	SamplesThanks = 210,
	SamplesComplete = 211,
	AstDestroyed = 212,
	TaskTestTitle = 213,
	BeginDiagnostics = 214,
	UserLeftGame = 215,
	GameStarting = 216,
	Tasks = 217,
	StatsTitle = 218,
	StatsBodiesReported = 219,
	StatsEmergenciesCalled = 220,
	StatsTasksCompleted = 221,
	StatsAllTasksCompleted = 222,
	StatsSabotagesFixed = 223,
	StatsImpostorKills = 224,
	StatsTimesMurdered = 225,
	StatsTimesEjected = 226,
	StatsCrewmateStreak = 227,
	StatsGamesImpostor = 228,
	StatsGamesCrewmate = 229,
	StatsGamesStarted = 230,
	StatsGamesFinished = 231,
	StatsImpostorVoteWins = 232,
	StatsImpostorKillsWins = 233,
	StatsImpostorSabotageWins = 234,
	StatsCrewmateVoteWins = 235,
	StatsCrewmateTaskWins = 236,
	MedscanRequested = 237,
	MedscanWaitingFor = 238,
	MedscanCompleted = 239,
	MedscanCompleteIn = 240,
	MonitorOxygen = 241,
	StoreArtifacts = 242,
	FillCanisters = 243,
	FixWeatherNode = 244,
	InsertKeys = 245,
	ResetSeismic = 246,
	SeismicHoldToStop = 247,
	SeismicNominal = 248,
	ScanBoardingPass = 249,
	OpenWaterways = 250,
	ReplaceWaterJug = 251,
	RepairDrill = 252,
	AlignTelescope = 253,
	RecordTemperature = 254,
	RebootWifi = 255,
	WifiRebootRequired = 256,
	WifiPleasePowerOn = 257,
	WifiPleaseWait = 258,
	WifiPleaseReturnIn = 259,
	WifiRebootComplete = 260,
	Outside = 261,
	GameSecondsAbbrev = 262,
	Engines = 263,
	Dropship = 264,
	Decontamination2 = 265,
	Specimens = 266,
	BoilerRoom = 267,
	GameOverImpostorDead = 268,
	GameOverImpostorKills = 269,
	GameOverTaskWin = 270,
	GameOverSabotage = 271,
	GameConfirmImpostor = 272,
	GameVisualTasks = 273,
	ExileTextNonConfirm = 274
}

public class StringOption : OptionBehaviour // TypeDefIndex: 5747
{
	// Fields
	public TextRenderer TitleText; // 0x14
	public TextRenderer ValueText; // 0x18
	public StringNames[] Values; // 0x1C
	public int Value; // 0x20
	private int oldValue; // 0x24

	// Constructors
	public StringOption(); // 0x101A7790-0x101A77B0

	// Methods
	public void OnEnable(); // 0x10231AF0-0x10231C60
	private void FixedUpdate(); // 0x102319C0-0x10231A60
	public void Increase(); // 0x10231A60-0x10231AF0
	public void Decrease(); // 0x10231930-0x102319C0
	public override int GetInt(); // 0x101BCCB0-0x101BCCC0
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000A220-0x1000A240
	public struct SubmitItemUpdateResult_t // TypeDefIndex: 4619
	{
		// Fields
		public const int k_iCallback = 3404; // Metadata: 0x002423AF
		public EResult m_eResult; // 0x00
		public bool m_bUserNeedsToAcceptWorkshopLegalAgreement; // 0x04
		public PublishedFileId_t m_nPublishedFileId; // 0x08
	}
}

public struct SubString // TypeDefIndex: 5228
{
	// Fields
	public readonly int Start; // 0x00
	public readonly int Length; // 0x04
	public readonly string Source; // 0x08

	// Constructors
	public SubString(string source, int start, int length); // 0x10093DB0-0x10093E50

	// Methods
	public override string ToString(); // 0x10093D80-0x10093DB0
	public int GetKvpValue(); // 0x10093C40-0x10093D00
	public int ToInt(); // 0x10093D70-0x10093D80
	public bool StartsWith(string v); // 0x10093D00-0x10093D70
}

public class SubStringReader // TypeDefIndex: 5227
{
	// Fields
	private readonly string Source; // 0x08
	private int Position; // 0x0C

	// Constructors
	public SubStringReader(string source); // 0x101B54B0-0x101B54D0

	// Methods
	public SubString ReadLine(); // 0x10231C60-0x10231DF0
}

public class SupressorBehaviour : MonoBehaviour // TypeDefIndex: 5628
{
	// Fields
	public Sprite ActiveBase; // 0x0C
	public Sprite InactiveBase; // 0x10
	public SpriteRenderer BaseImage; // 0x14
	public AnimationClip ElectricActive; // 0x18
	public AnimationClip ElectricInactive; // 0x1C
	public SpriteAnim Electric; // 0x20
	public AnimationClip LightsActive; // 0x24
	public AnimationClip LightsInactive; // 0x28
	public SpriteAnim Lights; // 0x2C

	// Constructors
	public SupressorBehaviour(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Activate(); // 0x10231DF0-0x10231E50
	public void Deactivate(); // 0x10231E50-0x10231EB0
}

public class SurvCamera : MonoBehaviour // TypeDefIndex: 5805
{
	// Fields
	public string CamName; // 0x0C
	public SpriteAnim Image; // 0x10
	public float CamSize; // 0x14
	public float CamAspect; // 0x18
	public Vector3 Offset; // 0x1C
	public AnimationClip OnAnim; // 0x28
	public AnimationClip OffAnim; // 0x2C

	// Constructors
	public SurvCamera(); // 0x10231F30-0x10231F60

	// Methods
	public void Awake(); // 0x10231EB0-0x10231EF0
	public void SetAnimation(bool on); // 0x10231EF0-0x10231F30
}

public class SurveillanceMinigame : Minigame // TypeDefIndex: 5727
{
	// Fields
	public Camera CameraPrefab; // 0x28
	public GameObject Viewables; // 0x2C
	public MeshRenderer[] ViewPorts; // 0x30
	public TextRenderer[] SabText; // 0x34
	private PlainShipRoom[] FilteredRooms; // 0x38
	private RenderTexture[] textures; // 0x3C
	public MeshRenderer FillQuad; // 0x40
	public Material DefaultMaterial; // 0x44
	public Material StaticMaterial; // 0x48
	private bool isStatic; // 0x4C

	// Nested types
	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5728
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<PlainShipRoom, bool> __9__10_0; // 0x04

		// Constructors
		static __c(); // 0x102414D0-0x10241520
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _Begin_b__10_0(PlainShipRoom i); // 0x10240BF0-0x10240C50
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoAnimateOpen_d__12 : IEnumerator<object> // TypeDefIndex: 5729
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SurveillanceMinigame __4__this; // 0x10
		private float _timer_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoAnimateOpen_d__12(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1023DFE0-0x1023E450
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1023E450-0x1023E4A0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoAnimateClose_d__13 : IEnumerator<object> // TypeDefIndex: 5730
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SurveillanceMinigame __4__this; // 0x10
		private float _timer_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoAnimateClose_d__13(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1023DD00-0x1023DF90
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1023DF90-0x1023DFE0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoDestroySelf_d__14 : IEnumerator<object> // TypeDefIndex: 5731
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SurveillanceMinigame __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoDestroySelf_d__14(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1023E850-0x1023E940
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1023E940-0x1023E990
	}

	// Constructors
	public SurveillanceMinigame(); // 0x101ACA10-0x101ACA20

	// Methods
	public override void Begin(PlayerTask task); // 0x10231F60-0x10232350
	public void Update(); // 0x10232500-0x10232740
	[IteratorStateMachine] // 0x10019370-0x100193C0
	protected override IEnumerator CoAnimateOpen(); // 0x102323F0-0x10232440
	[IteratorStateMachine] // 0x10019420-0x10019470
	private IEnumerator CoAnimateClose(); // 0x102323A0-0x102323F0
	[IteratorStateMachine] // 0x10019510-0x10019560
	protected override IEnumerator CoDestroySelf(); // 0x10232440-0x10232490
	public override void Close(); // 0x10232350-0x102323A0
	public void OnDestroy(); // 0x10232490-0x10232500
}

public class SweepMinigame : Minigame // TypeDefIndex: 5308
{
	// Fields
	public SpriteRenderer[] Spinners; // 0x28
	public SpriteRenderer[] Shadows; // 0x2C
	public SpriteRenderer[] Lights; // 0x30
	public HorizontalGauge[] Gauges; // 0x34
	private int spinnerIdx; // 0x38
	private float timer; // 0x3C
	public float SpinRate; // 0x40
	private float initialTimer; // 0x44
	public AudioClip SpinningSound; // 0x48
	public AudioClip AcceptSound; // 0x4C
	public AudioClip RejectSound; // 0x50

	// Constructors
	public SweepMinigame(); // 0x10233120-0x10233140

	// Methods
	public override void Begin(PlayerTask task); // 0x10232740-0x10232800
	public override void Close(); // 0x10232880-0x102328F0
	public void FixedUpdate(); // 0x102328F0-0x10232C90
	private float CalcXPerc(); // 0x10232800-0x10232880
	public void HitButton(int i); // 0x10232C90-0x10232F20
	private void ResetGauges(); // 0x10232F20-0x10233120
}

public class SwitchMinigame : Minigame // TypeDefIndex: 5310
{
	// Fields
	public Color OnColor; // 0x28
	public Color OffColor; // 0x38
	private ShipStatus ship; // 0x48
	public SpriteRenderer[] switches; // 0x4C
	public SpriteRenderer[] lights; // 0x50
	public RadioWaveBehaviour top; // 0x54
	public HorizontalGauge middle; // 0x58
	public FlatWaveBehaviour bottom; // 0x5C
	public AudioClip FlipSound; // 0x60

	// Constructors
	public SwitchMinigame(); // 0x10233870-0x102338E0

	// Methods
	public override void Begin(PlayerTask task); // 0x10233140-0x10233300
	public void FixedUpdate(); // 0x10233300-0x102335C0
	public void FlipSwitch(int switchIdx); // 0x102335C0-0x10233870
}

public class SwitchSystem : ISystemType, IActivatable // TypeDefIndex: 5311
{
	// Fields
	public const byte MaxValue = 255; // Metadata: 0x00243B1E
	public const int NumSwitches = 5; // Metadata: 0x00243B1F
	public const byte DamageSystem = 128; // Metadata: 0x00243B23
	public const byte SwitchesMask = 31; // Metadata: 0x00243B24
	public float DetoriorationTime; // 0x08
	public byte Value; // 0x0C
	private float timer; // 0x10
	public byte ExpectedSwitches; // 0x14
	public byte ActualSwitches; // 0x15

	// Properties
	public float Level { get; } // 0x10233BB0-0x10233BE0 
	public bool IsActive { get; } // 0x10233B90-0x10233BB0 

	// Constructors
	public SwitchSystem(); // 0x10233B10-0x10233B90

	// Methods
	public bool Detoriorate(float deltaTime); // 0x10233920-0x10233A40
	public void RepairDamage(PlayerControl player, byte amount); // 0x10233A40-0x10233AC0
	public void Serialize(MessageWriter writer, bool initialState); // 0x10233AC0-0x10233B10
	public void Deserialize(MessageReader reader, bool initialState); // 0x102338E0-0x10233920
	protected static bool HasTask<T>();
}

public class SystemConsole : MonoBehaviour, IUsable // TypeDefIndex: 5806
{
	// Fields
	public Sprite useIcon; // 0x0C
	public float usableDistance; // 0x10
	public bool FreeplayOnly; // 0x14
	public bool onlyFromBelow; // 0x15
	public SpriteRenderer Image; // 0x18
	public Minigame MinigamePrefab; // 0x1C

	// Properties
	public Sprite UseIcon { get; } // 0x101AE200-0x101AE210 
	public float UsableDistance { get; } // 0x101AE1F0-0x101AE200 
	public float PercentCool { get; } // 0x101AE1E0-0x101AE1F0 

	// Constructors
	public SystemConsole(); // 0x101AE1C0-0x101AE1E0

	// Methods
	public void Start(); // 0x10233EC0-0x10233F40
	public void SetOutline(bool on, bool mainTarget); // 0x10233D80-0x10233EC0
	public float CanUse(GameData.PlayerInfo pc, out bool canUse, out bool couldUse); // 0x10233BE0-0x10233D80
	public void Use(); // 0x10233F40-0x10234270
}

public static class SystemTypeHelpers // TypeDefIndex: 5809
{
	// Fields
	public static readonly SystemTypes[] AllTypes; // 0x00

	// Constructors
	static SystemTypeHelpers(); // 0x10234270-0x10234310
}

public enum SystemTypes : byte // TypeDefIndex: 5808
{
	Hallway = 0,
	Storage = 1,
	Cafeteria = 2,
	Reactor = 3,
	UpperEngine = 4,
	Nav = 5,
	Admin = 6,
	Electrical = 7,
	LifeSupp = 8,
	Shields = 9,
	MedBay = 10,
	Security = 11,
	Weapons = 12,
	LowerEngine = 13,
	Comms = 14,
	ShipTasks = 15,
	Doors = 16,
	Sabotage = 17,
	Decontamination = 18,
	Launchpad = 19,
	LockerRoom = 20,
	Laboratory = 21,
	Balcony = 22,
	Office = 23,
	Greenhouse = 24,
	Dropship = 25,
	Decontamination2 = 26,
	Outside = 27,
	Specimens = 28,
	BoilerRoom = 29
}

[Serializable]
public class TabButton // TypeDefIndex: 5560
{
	// Fields
	public SpriteRenderer Button; // 0x08
	public GameObject Tab; // 0x0C

	// Constructors
	public TabButton(); // 0x101A2CD0-0x101A2CE0
}

public class TabGroup : MonoBehaviour // TypeDefIndex: 5573
{
	// Fields
	public SpriteRenderer Button; // 0x0C
	public ButtonRolloverHandler Rollover; // 0x10
	public GameObject Content; // 0x14

	// Constructors
	public TabGroup(); // 0x101A68C0-0x101A68D0

	// Methods
	internal void Close(); // 0x10234310-0x10234380
	internal void Open(); // 0x10234380-0x102343F0
}

public class TagAmbientSoundPlayer : MonoBehaviour // TypeDefIndex: 5823
{
	// Fields
	public AudioClip AmbientSound; // 0x0C
	public float MaxVolume; // 0x10
	public string TargetTag; // 0x14
	private float targetVolume; // 0x18

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Run_d__7 : IEnumerator<object> // TypeDefIndex: 5824
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public TagAmbientSoundPlayer __4__this; // 0x10
		private ContactFilter2D _filter_5__2; // 0x14
		private Collider2D[] _buffer_5__3; // 0x30
		private WaitForSeconds _wait_5__4; // 0x34

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Run_d__7(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10240440-0x10240660
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x102406B0-0x10240700
	}

	// Constructors
	public TagAmbientSoundPlayer(); // 0x102346D0-0x10234720

	// Methods
	public void Start(); // 0x102345B0-0x102346D0
	private void Dynamics(AudioSource source, float dt); // 0x102343F0-0x102344C0
	public void OnDestroy(); // 0x102344C0-0x10234560
	[IteratorStateMachine] // 0x1001D340-0x1001D390
	private IEnumerator Run(); // 0x10234560-0x102345B0
}

namespace InnerNet
{
	public static class Tags // TypeDefIndex: 5944
	{
		// Fields
		public const byte HostGame = 0; // Metadata: 0x00244415
		public const byte JoinGame = 1; // Metadata: 0x00244416
		public const byte StartGame = 2; // Metadata: 0x00244417
		public const byte RemoveGame = 3; // Metadata: 0x00244418
		public const byte RemovePlayer = 4; // Metadata: 0x00244419
		public const byte GameData = 5; // Metadata: 0x0024441A
		public const byte GameDataTo = 6; // Metadata: 0x0024441B
		public const byte JoinedGame = 7; // Metadata: 0x0024441C
		public const byte EndGame = 8; // Metadata: 0x0024441D
		public const byte AlterGame = 10; // Metadata: 0x0024441E
		public const byte KickPlayer = 11; // Metadata: 0x0024441F
		public const byte WaitForHost = 12; // Metadata: 0x00244420
		public const byte Redirect = 13; // Metadata: 0x00244421
		public const byte ReselectServer = 14; // Metadata: 0x00244422
		public const byte GetGameList = 9; // Metadata: 0x00244423
		public const byte GetGameListV2 = 16; // Metadata: 0x00244424
	}
}

public class TaskAddButton : MonoBehaviour // TypeDefIndex: 5880
{
	// Fields
	public TextRenderer Text; // 0x0C
	public SpriteRenderer Overlay; // 0x10
	public Sprite CheckImage; // 0x14
	public Sprite ExImage; // 0x18
	public PlayerTask MyTask; // 0x1C
	public bool ImpostorTask; // 0x20

	// Constructors
	public TaskAddButton(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Start(); // 0x10234C10-0x10234D60
	public void AddTask(); // 0x10234720-0x10234A30
	private PlayerTask FindTaskByType(); // 0x10234A30-0x10234C10
}

public class TaskAdderGame : Minigame // TypeDefIndex: 5881
{
	// Fields
	public TextRenderer PathText; // 0x28
	public TaskFolder RootFolderPrefab; // 0x2C
	public TaskAddButton TaskPrefab; // 0x30
	public Transform TaskParent; // 0x34
	public List<TaskFolder> Heirarchy; // 0x38
	public List<Transform> ActiveItems; // 0x3C
	public TaskAddButton InfectedButton; // 0x40
	public float folderWidth; // 0x44
	public float fileWidth; // 0x48
	public float lineWidth; // 0x4C
	private TaskFolder Root; // 0x50

	// Nested types
	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5882
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<TaskFolder, string> __9__11_0; // 0x04
		public static Func<PlayerTask, TaskTypes> __9__15_0; // 0x08

		// Constructors
		static __c(); // 0x102413E0-0x10241430
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal string _Begin_b__11_0(TaskFolder f); // 0x10240C50-0x10240C70
		internal TaskTypes _ShowFolder_b__15_0(PlayerTask t); // 0x10240D20-0x10240D40
	}

	// Constructors
	public TaskAdderGame(); // 0x10235CA0-0x10235D10

	// Methods
	public override void Begin(PlayerTask t); // 0x10234F70-0x10235170
	private void PopulateRoot(TaskFolder rootFolder, Dictionary<SystemTypes, TaskFolder> folders, NormalPlayerTask[] taskList); // 0x10235260-0x102354C0
	public void GoToRoot(); // 0x10235170-0x102351C0
	public void GoUpOne(); // 0x102351C0-0x10235260
	public void ShowFolder(TaskFolder taskFolder); // 0x102354C0-0x10235CA0
	private void AddFileAsChild(TaskFolder taskFolder, TaskAddButton item, ref float xCursor, ref float yCursor, ref float maxHeight); // 0x10234D60-0x10234F70
}

public class TaskFolder : MonoBehaviour // TypeDefIndex: 5883
{
	// Fields
	public string FolderName; // 0x0C
	public TextRenderer Text; // 0x10
	public TaskAdderGame Parent; // 0x14
	public List<TaskFolder> SubFolders; // 0x18
	public List<PlayerTask> Children; // 0x1C

	// Constructors
	public TaskFolder(); // 0x10235DA0-0x10235E10

	// Methods
	public void Start(); // 0x10235D80-0x10235DA0
	public void OnClick(); // 0x10235D10-0x10235D30
	internal List<TaskFolder> OrderBy(); // 0x10235D30-0x10235D80
}

public class TaskPanelBehaviour : MonoBehaviour // TypeDefIndex: 5843
{
	// Fields
	public Vector3 OpenPosition; // 0x0C
	public Vector3 ClosedPosition; // 0x18
	public SpriteRenderer background; // 0x24
	public SpriteRenderer tab; // 0x28
	public TextRenderer TaskText; // 0x2C
	public bool open; // 0x30
	private float timer; // 0x34
	public float Duration; // 0x38

	// Constructors
	public TaskPanelBehaviour(); // 0x101A68C0-0x101A68D0

	// Methods
	private void Update(); // 0x10235E30-0x10236430
	public void ToggleOpen(); // 0x10235E10-0x10235E30
}

[Serializable]
public class TaskSet // TypeDefIndex: 5857
{
	// Fields
	public TaskTypes taskType; // 0x08
	public IntRange taskStep; // 0x0C

	// Constructors
	public TaskSet(); // 0x10236480-0x102364E0

	// Methods
	public bool Contains(PlayerTask t); // 0x10236430-0x10236480
}

public enum TaskTypes // TypeDefIndex: 5858
{
	SubmitScan = 0,
	PrimeShields = 1,
	FuelEngines = 2,
	ChartCourse = 3,
	StartReactor = 4,
	SwipeCard = 5,
	ClearAsteroids = 6,
	UploadData = 7,
	InspectSample = 8,
	EmptyChute = 9,
	EmptyGarbage = 10,
	AlignEngineOutput = 11,
	FixWiring = 12,
	CalibrateDistributor = 13,
	DivertPower = 14,
	UnlockManifolds = 15,
	ResetReactor = 16,
	FixLights = 17,
	CleanO2Filter = 18,
	FixComms = 19,
	RestoreOxy = 20,
	StabilizeSteering = 21,
	AssembleArtifact = 22,
	SortSamples = 23,
	MeasureWeather = 24,
	EnterIdCode = 25,
	BuyBeverage = 26,
	ProcessData = 27,
	RunDiagnostics = 28,
	WaterPlants = 29,
	MonitorOxygen = 30,
	StoreArtifacts = 31,
	FillCanisters = 32,
	ActivateWeatherNodes = 33,
	InsertKeys = 34,
	ResetSeismic = 35,
	ScanBoardingPass = 36,
	OpenWaterways = 37,
	ReplaceWaterJug = 38,
	RepairDrill = 39,
	AlignTelescope = 40,
	RecordTemperature = 41,
	RebootWifi = 42
}

public static class TaskTypesHelpers // TypeDefIndex: 5859
{
	// Fields
	public static readonly TaskTypes[] AllTypes; // 0x00

	// Constructors
	static TaskTypesHelpers(); // 0x102364E0-0x10236580
}

namespace Assets.CoreScripts
{
	public class Telemetry : DestroyableSingleton<Assets.CoreScripts.Telemetry> // TypeDefIndex: 5986
	{
		// Fields
		private static readonly string[] ColorNames; // 0x00
		private bool amHost; // 0x10
		private bool gameStarted; // 0x11
		private DateTime timeStarted; // 0x18
	
		// Constructors
		public Telemetry(); // 0x102B4510-0x102B4550
		static Telemetry(); // 0x102B4120-0x102B4510
	
		// Methods
		public void StartGame(bool isHost, int playerCount, int impostorCount, GameModes gameMode, uint timesImpostor, uint gamesPlayed, uint crewStreak, uint colorId); // 0x102B3A40-0x102B3C70
		public void WriteMeetingStarted(bool isEmergency); // 0x102B3F30-0x102B3FC0
		public void WriteMeetingEnded(float duration); // 0x102B3E90-0x102B3F30
		public void WritePosition(byte playerNum, Vector2 worldPos); // 0x101A2F90-0x101A2FA0
		public void WriteMurder(); // 0x102B3FC0-0x102B4000
		public void WriteSabotageUsed(SystemTypes systemType); // 0x102B4000-0x102B4090
		public void WriteUse(byte playerNum, TaskTypes taskType, Vector3 worldPos); // 0x102B4090-0x102B4120
		public void WriteCompleteTask(byte playerNum, TaskTypes taskType); // 0x102B3D70-0x102B3E00
		internal void WriteDisconnect(DisconnectReasons reason); // 0x102B3E00-0x102B3E90
		public void EndGame(GameOverReason endReason); // 0x102B37E0-0x102B3900
		public void SendWho(); // 0x102B3A00-0x102B3A40
		public void SelectInfected(int colorId, uint hatId); // 0x102B3900-0x102B3A00
		public void WonGame(int colorId, uint hatId); // 0x102B3C70-0x102B3D70
	}
}

public class TelescopeGame : Minigame // TypeDefIndex: 5650
{
	// Fields
	private bool grabbed; // 0x28
	public Transform Background; // 0x2C
	public SpriteRenderer ItemDisplay; // 0x30
	public BoxCollider2D[] Items; // 0x34
	private BoxCollider2D TargetItem; // 0x38
	public BoxCollider2D Reticle; // 0x3C
	public SpriteRenderer ReticleImage; // 0x40
	private Coroutine blinky; // 0x44
	public AudioClip BlipSound; // 0x48
	public FloatRange BlipDelay; // 0x4C

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _RunBlipSound_d__11 : IEnumerator<object> // TypeDefIndex: 5651
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public TelescopeGame __4__this; // 0x10
		private float _time_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _RunBlipSound_d__11(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1023F970-0x1023FBD0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1023FBD0-0x1023FC20
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoBlinky_d__13 : IEnumerator<object> // TypeDefIndex: 5652
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public TelescopeGame __4__this; // 0x10
		private int _i_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoBlinky_d__13(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1023E610-0x1023E800
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1023E800-0x1023E850
	}

	// Constructors
	public TelescopeGame(); // 0x102369C0-0x10236A30

	// Methods
	public void Start(); // 0x10236640-0x10236720
	[IteratorStateMachine] // 0x10010640-0x10010690
	private IEnumerator RunBlipSound(); // 0x102365F0-0x10236640
	public void Update(); // 0x10236720-0x102369C0
	[IteratorStateMachine] // 0x10010690-0x100106E0
	private IEnumerator CoBlinky(); // 0x10236580-0x102365D0
	public void Grab(); // 0x102365D0-0x102365F0
}

public static class TempData // TypeDefIndex: 5866
{
	// Fields
	public static DeathReason LastDeathReason; // 0x00
	public static GameOverReason EndReason; // 0x04
	public static bool showAd; // 0x08
	public static List<WinningPlayerData> winners; // 0x0C

	// Constructors
	static TempData(); // 0x10236A50-0x10236D10

	// Methods
	public static bool DidHumansWin(GameOverReason reason); // 0x10236A30-0x10236A50
}

public class TempMinigame : Minigame // TypeDefIndex: 5653
{
	// Fields
	public TextRenderer LogText; // 0x28
	public TextRenderer ReadingText; // 0x2C
	public IntRange LogRange; // 0x30
	public IntRange ReadingRange; // 0x34
	private int logValue; // 0x38
	private int readingValue; // 0x3C
	public AudioClip ButtonSound; // 0x40

	// Constructors
	public TempMinigame(); // 0x101ACA10-0x101ACA20

	// Methods
	public override void Begin(PlayerTask task); // 0x10236D10-0x10236E00
	public void ChangeNumber(int dir); // 0x10236E00-0x10236F10
}

public class TextBox : MonoBehaviour, IFocusHolder // TypeDefIndex: 5480
{
	// Fields
	public static readonly HashSet<char> SymbolChars; // 0x00
	public static readonly HashSet<char> EmailChars; // 0x04
	public string text; // 0x0C
	private string compoText; // 0x10
	public int characterLimit; // 0x14
	[SerializeField] // 0x10002030-0x10002050
	private TextRenderer outputText; // 0x18
	public SpriteRenderer Background; // 0x1C
	public MeshRenderer Pipe; // 0x20
	private float pipeBlinkTimer; // 0x24
	public bool ClearOnFocus; // 0x28
	public bool ForceUppercase; // 0x29
	public Button.ButtonClickedEvent OnEnter; // 0x2C
	public Button.ButtonClickedEvent OnChange; // 0x30
	public Button.ButtonClickedEvent OnFocusLost; // 0x34
	private TouchScreenKeyboard keyboard; // 0x38
	public bool AllowSymbols; // 0x3C
	public bool AllowEmail; // 0x00
	public bool IpMode; // 0x00
	public bool AllowPaste; // 0x00
	private Collider2D[] colliders; // 0x00
	private bool hasFocus; // 0x44
	private StringBuilder tempTxt; // 0x48

	// Properties
	public float TextHeight { get; } // 0x10237D30-0x10237D50 

	// Constructors
	public TextBox(); // 0x10237CD0-0x10237D30
	static TextBox(); // 0x10237B00-0x10237CD0

	// Methods
	public void Start(); // 0x102378B0-0x10237950
	public void OnDestroy(); // 0x10237490-0x10237510
	public void Clear(); // 0x10236F90-0x10236FD0
	public void Update(); // 0x10237950-0x10237B00
	public void GiveFocus(); // 0x10236FD0-0x102371B0
	public void LoseFocus(); // 0x10237330-0x10237490
	public bool CheckCollision(Vector2 pt); // 0x10236F10-0x10236F90
	public void SetText(string input, string inputCompo = "" /* Metadata: 0x00243BBE */); // 0x10237510-0x102378B0
	public bool IsCharAllowed(char i); // 0x102371B0-0x10237330
}

public class TextButton : MonoBehaviour // TypeDefIndex: 5867
{
	// Fields
	public TextRenderer TextRend; // 0x0C
	public SpriteRenderer Background; // 0x10
	public BoxCollider2D Hitbox; // 0x14

	// Constructors
	public TextButton(); // 0x101A68C0-0x101A68D0

	// Methods
	public void SetText(string text); // 0x10237D50-0x10237E20
}

[RequireComponent] // 0x10043960-0x100439D0
[RequireComponent] // 0x10043960-0x100439D0
public class TextController : MonoBehaviour // TypeDefIndex: 5482
{
	// Fields
	public float Scale; // 0x0C
	[Multiline] // 0x10028850-0x10028870
	public string Text; // 0x10
	private string displaying; // 0x14
	[HideInInspector] // 0x10002030-0x10002050
	private Texture2D texture; // 0x18
	[HideInInspector] // 0x10002030-0x10002050
	private Texture2D colorTexture; // 0x1C
	private MeshRenderer rend; // 0x20
	private float _scale; // 0x24
	public Color Color; // 0x28
	private Color lastColor; // 0x38
	public Vector3 Offset; // 0x48
	public bool topAligned; // 0x54

	// Constructors
	public TextController(); // 0x102386C0-0x10238700

	// Methods
	public void Update(); // 0x10237E20-0x102386C0
}

public class TextLink : MonoBehaviour // TypeDefIndex: 5257
{
	// Fields
	public BoxCollider2D boxCollider; // 0x0C
	public string targetUrl; // 0x10
	public bool needed; // 0x14

	// Constructors
	public TextLink(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Set(Vector2 from, Vector2 to, string target); // 0x10238720-0x10238860
	public void Click(); // 0x10238700-0x10238720
}

public class TextMarquee : MonoBehaviour // TypeDefIndex: 5258
{
	// Fields
	public TextRenderer Target; // 0x0C
	private string targetText; // 0x10
	public float ScrollSpeed; // 0x14
	public float PauseTime; // 0x18
	public float AreaWidth; // 0x1C
	public bool IgnoreTextChanges; // 0x20

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Run_d__7 : IEnumerator<object> // TypeDefIndex: 5259
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public TextMarquee __4__this; // 0x10
		private int _i_5__2; // 0x14
		private Vector4 _temp_5__3; // 0x18
		private float _timer_5__4; // 0x28

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Run_d__7(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102400D0-0x10240440
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10240660-0x102406B0
	}

	// Constructors
	public TextMarquee(); // 0x10238910-0x10238940

	// Methods
	public void Start(); // 0x102388B0-0x10238910
	[IteratorStateMachine] // 0x10028020-0x10028070
	private IEnumerator Run(); // 0x10238860-0x102388B0
}

[RequireComponent] // 0x10028540-0x100285B0
[RequireComponent] // 0x10028540-0x100285B0
public class TextRenderer : MonoBehaviour // TypeDefIndex: 5260
{
	// Fields
	public TextAsset FontData; // 0x0C
	public float scale; // 0x10
	public float TabWidth; // 0x14
	public bool Centered; // 0x18
	public bool RightAligned; // 0x19
	public TextLink textLinkPrefab; // 0x1C
	[HideInInspector] // 0x10002030-0x10002050
	private Mesh mesh; // 0x20
	[HideInInspector] // 0x10002030-0x10002050
	public MeshRenderer render; // 0x24
	[Multiline] // 0x10028850-0x10028870
	public string Text; // 0x28
	private string lastText; // 0x2C
	public Color Color; // 0x30
	private Color lastColor; // 0x40
	public Color OutlineColor; // 0x50
	private Color lastOutlineColor; // 0x60
	public float maxWidth; // 0x70
	public bool scaleToFit; // 0x74
	[CompilerGenerated] // 0x10002030-0x10002050
	private float _Width_k__BackingField; // 0x78
	[CompilerGenerated] // 0x10002030-0x10002050
	private float _Height_k__BackingField; // 0x7C
	public bool paragraphSpacing; // 0x80
	private Vector2 cursorLocation; // 0x84

	// Properties
	public float Width { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x1023AAC0-0x1023AAD0 0x1023AAF0-0x1023AB10
	public float Height { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x1023AAB0-0x1023AAC0 0x1023AAD0-0x1023AAF0
	public Vector3 CursorPos { get; } // 0x1023AA40-0x1023AAB0 

	// Nested types
	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5261
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Func<char, bool> __9__31_0; // 0x04
		public static Func<char, bool> __9__31_1; // 0x08

		// Constructors
		static __c(); // 0x10241480-0x102414D0
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _RefreshMesh_b__31_0(char c); // 0x10240C90-0x10240CB0
		internal bool _RefreshMesh_b__31_1(char c); // 0x10240CB0-0x10240CE0
	}

	// Constructors
	public TextRenderer(); // 0x1023A9C0-0x1023AA40

	// Methods
	public void Start(); // 0x1023A4A0-0x1023A5D0
	[ContextMenu] // 0x10028C60-0x10028C90
	public void GenerateMesh(); // 0x10238A20-0x10238BF0
	private void Update(); // 0x1023A5D0-0x1023A6B0
	public void RefreshMesh(); // 0x10238E90-0x1023A3E0
	private float GetMaxWidth(FontData data, string lastText); // 0x10238BF0-0x10238E90
	private void RightAlignVerts(List<Vector3> verts, float baseX, int lineStart, float scale); // 0x1023A3E0-0x1023A4A0
	private void CenterVerts(List<Vector3> verts, float baseX, int lineStart, float scale); // 0x10238940-0x10238A00
	private int CharToInt(int c); // 0x10238A00-0x10238A20
	public static string WrapText(FontData data, string displayTxt, float maxWidth); // 0x1023A6B0-0x1023A9C0
}

[RequireComponent] // 0x1001F0C0-0x1001F110
public class TextTranslator : MonoBehaviour, ITranslatedText // TypeDefIndex: 5873
{
	// Fields
	public StringNames TargetText; // 0x0C

	// Constructors
	public TextTranslator(); // 0x101A68C0-0x101A68D0

	// Methods
	public void ResetText(); // 0x1023AC00-0x1023AC80
	public void Start(); // 0x1023AC80-0x1023AD50
	public void OnDestroy(); // 0x1023AB10-0x1023AC00
}

public class Tile2 // TypeDefIndex: 5659
{
	// Fields
	public int SpriteId; // 0x08

	// Constructors
	public Tile2(); // 0x101A2CD0-0x101A2CE0
}

public class Tilemap2 : MonoBehaviour // TypeDefIndex: 5660
{
	// Fields
	public Sprite[] sprites; // 0x0C
	private Tile2[] tileData; // 0x10
	public int Width; // 0x14
	public int Height; // 0x18
	private bool dirty; // 0x1C

	// Constructors
	public Tilemap2(); // 0x1023AF50-0x1023AF80

	// Methods
	internal void SetTile(Vector3Int vec, int tileId); // 0x1023ADA0-0x1023AE00
	internal void SetTransformMatrix(Vector3Int vec, Matrix4x4 rot90); // 0x101A2F90-0x101A2FA0
	internal MonoBehaviour GetTile(Vector3Int touchCellPos); // 0x1023AD50-0x1023ADA0
	internal Vector3Int WorldToCell(Vector2 worldPos); // 0x1023AE00-0x1023AF50
}

public class ToggleButtonBehaviour : MonoBehaviour, ITranslatedText // TypeDefIndex: 5483
{
	// Fields
	public StringNames BaseText; // 0x0C
	public TextRenderer Text; // 0x10
	public SpriteRenderer Background; // 0x14
	public ButtonRolloverHandler Rollover; // 0x18
	private bool onState; // 0x1C

	// Constructors
	public ToggleButtonBehaviour(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Start(); // 0x1023B0D0-0x1023B130
	public void OnDestroy(); // 0x1023AF80-0x1023B000
	public void ResetText(); // 0x1023B000-0x1023B0D0
	public void UpdateText(bool on); // 0x1023B130-0x1023B300
}

public class ToggleOption : OptionBehaviour // TypeDefIndex: 5868
{
	// Fields
	public TextRenderer TitleText; // 0x14
	public SpriteRenderer CheckMark; // 0x18
	private bool oldValue; // 0x1C

	// Constructors
	public ToggleOption(); // 0x101ACA10-0x101ACA20

	// Methods
	public void OnEnable(); // 0x1023B380-0x1023B510
	private void FixedUpdate(); // 0x1023B300-0x1023B350
	public void Toggle(); // 0x1023B510-0x1023B580
	public override bool GetBool(); // 0x1023B350-0x1023B380
}

public class TowerBehaviour : MonoBehaviour // TypeDefIndex: 5174
{
	// Fields
	public float timer; // 0x0C
	public float frameTime; // 0x10
	public SpriteRenderer circle; // 0x14
	public SpriteRenderer middle1; // 0x18
	public SpriteRenderer middle2; // 0x1C
	public SpriteRenderer outer1; // 0x20
	public SpriteRenderer outer2; // 0x24

	// Constructors
	public TowerBehaviour(); // 0x1023B7A0-0x1023B7C0

	// Methods
	public void Update(); // 0x1023B580-0x1023B7A0
}

public class TransitionOpen : MonoBehaviour // TypeDefIndex: 5484
{
	// Fields
	public float duration; // 0x0C
	public Button.ButtonClickedEvent OnClose; // 0x10

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _AnimateClose_d__5 : IEnumerator<object> // TypeDefIndex: 5485
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public TransitionOpen __4__this; // 0x10
		private Vector3 _vec_5__2; // 0x14
		private float _t_5__3; // 0x20

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _AnimateClose_d__5(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1023D300-0x1023D4C0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1023D4C0-0x1023D510
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _AnimateOpen_d__6 : IEnumerator<object> // TypeDefIndex: 5486
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public TransitionOpen __4__this; // 0x10
		private Vector3 _vec_5__2; // 0x14
		private float _t_5__3; // 0x20

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _AnimateOpen_d__6(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1023D510-0x1023D6C0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1023D6C0-0x1023D710
	}

	// Constructors
	public TransitionOpen(); // 0x1023BA00-0x1023BA60

	// Methods
	public void OnEnable(); // 0x1023B8D0-0x1023B930
	public void Toggle(); // 0x1023B930-0x1023BA00
	public void Close(); // 0x1023B860-0x1023B8D0
	[IteratorStateMachine] // 0x10043C50-0x10043CA0
	private IEnumerator AnimateClose(); // 0x1023B7C0-0x1023B810
	[IteratorStateMachine] // 0x10043DD0-0x10043E20
	private IEnumerator AnimateOpen(); // 0x1023B810-0x1023B860
}

public enum TransitionType // TypeDefIndex: 5783
{
	SlideBottom = 0,
	Alpha = 1
}

[CreateAssetMenu] // 0x10002030-0x10002050
public class TranslatedImageSet : ScriptableObject // TypeDefIndex: 5874
{
	// Fields
	public ImageData[] Images; // 0x0C

	// Constructors
	public TranslatedImageSet(); // 0x101ADCA0-0x101ADCB0
}

public class TranslationController : DestroyableSingleton<TranslationController> // TypeDefIndex: 5877
{
	// Fields
	private static readonly StringNames[] SystemTypesToStringNames; // 0x00
	private static readonly StringNames[] TaskTypesToStringNames; // 0x04
	public TextAsset[] Languages; // 0x10
	public TranslatedImageSet[] Images; // 0x14
	public LanguageUnit CurrentLanguage; // 0x18
	public List<ITranslatedText> ActiveTexts; // 0x1C

	// Nested types
	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5878
	{
		// Fields
		public static readonly __c __9; // 0x00

		// Constructors
		static __c(); // 0x10241430-0x10241480
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal StringNames _.cctor_b__6_0(SystemTypes t); // 0x10240D80-0x10240E30
		internal StringNames _.cctor_b__6_1(TaskTypes t); // 0x10240E30-0x10240EE0
	}

	// Constructors
	static TranslationController(); // 0x1023C070-0x1023C1B0
	public TranslationController(); // 0x1023C1B0-0x1023C210

	// Methods
	public override void Awake(); // 0x1023BA60-0x1023BB80
	public void SetLanguage(TextAsset lang); // 0x1023BE50-0x1023C070
	public Sprite GetImage(ImageNames id); // 0x1023BB80-0x1023BBB0
	public string GetString(StringNames id, params /* 0x10002030-0x10002050 */ object[] parts); // 0x1023BCF0-0x1023BD20
	public string GetString(SystemTypes room); // 0x1023BBB0-0x1023BC50
	public string GetString(TaskTypes task); // 0x1023BC50-0x1023BCF0
	internal static uint SelectDefaultLanguage(); // 0x1023BD20-0x1023BE50
}

public class TriggeredSound : MonoBehaviour // TypeDefIndex: 5825
{
	// Fields
	public AudioClip[] SoundToPlay; // 0x0C
	public FloatRange PitchRange; // 0x10
	private AudioSource Player; // 0x14
	public float MaxVolume; // 0x18
	public float MaxDist; // 0x1C
	public float HitModifier; // 0x20
	private RaycastHit2D[] volumeBuffer; // 0x24

	// Constructors
	public TriggeredSound(); // 0x1023C690-0x1023C720

	// Methods
	public void Start(); // 0x1023C5C0-0x1023C690
	public void PlaySound(); // 0x1023C4B0-0x1023C5C0
	private void GetAmbientSoundVolume(AudioSource player); // 0x1023C210-0x1023C4B0
}

public class TumbleBoxBehaviour : MonoBehaviour // TypeDefIndex: 5810
{
	// Fields
	public FloatRange BoxHeight; // 0x0C
	public FloatRange shadowScale; // 0x10
	public SpriteRenderer Shadow; // 0x14
	public SpriteRenderer Box; // 0x18

	// Constructors
	public TumbleBoxBehaviour(); // 0x101A68C0-0x101A68D0

	// Methods
	public void FixedUpdate(); // 0x1023C720-0x1023C970
}

public class TuneRadioMinigame : Minigame // TypeDefIndex: 5193
{
	// Fields
	public RadioWaveBehaviour actualSignal; // 0x28
	public DialBehaviour dial; // 0x2C
	public SpriteRenderer redLight; // 0x30
	public SpriteRenderer greenLight; // 0x34
	public float Tolerance; // 0x38
	public float targetAngle; // 0x3C
	public bool finished; // 0x40
	private float steadyTimer; // 0x44
	public AudioClip StaticSound; // 0x48
	public AudioClip RadioSound; // 0x4C

	// Constructors
	public TuneRadioMinigame(); // 0x1023D020-0x1023D040

	// Methods
	public override void Begin(PlayerTask task); // 0x1023C970-0x1023CAC0
	private void GetRadioVolume(AudioSource player, float dt); // 0x1023CDA0-0x1023CDE0
	private void GetStaticVolume(AudioSource player, float dt); // 0x1023CDE0-0x1023CE20
	public void Update(); // 0x1023CE20-0x1023D020
	private void FinishGame(); // 0x1023CB50-0x1023CDA0
	public override void Close(); // 0x1023CAC0-0x1023CB50
}

public class TutorialManager : DestroyableSingleton<TutorialManager> // TypeDefIndex: 5884
{
	// Fields
	public PlayerControl PlayerPrefab; // 0x10

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _RunTutorial_d__3 : IEnumerator<object> // TypeDefIndex: 5885
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public TutorialManager __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _RunTutorial_d__3(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1023FC20-0x10240080
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10240080-0x102400D0
	}

	// Constructors
	public TutorialManager(); // 0x1023D210-0x1023D250

	// Methods
	public override void Awake(); // 0x1023D040-0x1023D140
	public override void OnDestroy(); // 0x1023D140-0x1023D1C0
	[IteratorStateMachine] // 0x1001F450-0x1001F4A0
	private IEnumerator RunTutorial(); // 0x1023D1C0-0x1023D210
}

public class TutorialStatsManager : StatsManager // TypeDefIndex: 5832
{
	// Constructors
	public TutorialStatsManager(); // 0x1023D250-0x1023D2A0

	// Methods
	protected override void LoadStats(); // 0x101A2F90-0x101A2FA0
	protected override void SaveStats(); // 0x101A2F90-0x101A2FA0
}

public class TwitterLink : MonoBehaviour // TypeDefIndex: 5262
{
	// Fields
	public string LinkUrl; // 0x0C

	// Constructors
	public TwitterLink(); // 0x1023D2C0-0x1023D300

	// Methods
	public void Click(); // 0x1023D2A0-0x1023D2C0
}

namespace Hazel.Udp
{
	public class UdpBroadcaster : IDisposable // TypeDefIndex: 4186
	{
		// Fields
		private Socket socket; // 0x08
		private byte[] data; // 0x0C
		private EndPoint endpoint; // 0x10
		private Action<string> logger; // 0x14
	
		// Constructors
		public UdpBroadcaster(int port, Action<string> logger = null); // 0x109CE2A0-0x109CE370
	
		// Methods
		public void SetData(string data); // 0x109CE1C0-0x109CE2A0
		public void Broadcast(); // 0x109CDDE0-0x109CDF30
		private void FinishSendTo(IAsyncResult evt); // 0x109CE0B0-0x109CE1C0
		public void Dispose(); // 0x109CDF30-0x109CE0B0
	}

	public class UdpBroadcastListener : IDisposable // TypeDefIndex: 4188
	{
		// Fields
		private Socket socket; // 0x08
		private EndPoint endpoint; // 0x0C
		private Action<string> logger; // 0x10
		private byte[] buffer; // 0x14
		private List<BroadcastPacket> packets; // 0x18
		[CompilerGenerated] // 0x10002030-0x10002050
		private bool _Running_k__BackingField; // 0x1C
	
		// Properties
		public bool Running { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x1028C0C0-0x1028C0D0 0x10312F90-0x10312FA0
	
		// Constructors
		public UdpBroadcastListener(int port, Action<string> logger = null); // 0x109CDCD0-0x109CDDE0
	
		// Methods
		public void StartListen(); // 0x109CDAF0-0x109CDCD0
		private void HandleData(IAsyncResult result); // 0x109CD680-0x109CDAF0
		public BroadcastPacket[] GetPackets(); // 0x109CD550-0x109CD680
		public void Dispose(); // 0x109CD3D0-0x109CD550
	}

	public abstract class UdpConnection : NetworkConnection // TypeDefIndex: 4190
	{
		// Fields
		private const int SioUdpConnectionReset = -1744830452; // Metadata: 0x00240169
		public static readonly byte[] EmptyDisconnectBytes; // 0x00
		internal ConcurrentDictionary<ushort, PingPacket> activePingPackets; // 0x34
		private int keepAliveInterval; // 0x38
		[CompilerGenerated] // 0x10002030-0x10002050
		private int _MissingPingsUntilDisconnect_k__BackingField; // 0x3C
		private int pingsSinceAck; // 0x40
		private Timer keepAliveTimer; // 0x44
		public int ResendTimeout; // 0x48
		public int ResendLimit; // 0x4C
		public float ResendPingMultiplier; // 0x50
		private int lastIDAllocated; // 0x54
		internal ConcurrentDictionary<ushort, Packet> reliableDataPacketsSent; // 0x58
		private HashSet<ushort> reliableDataPacketsMissing; // 0x5C
		private ushort reliableReceiveLast; // 0x60
		private object PingLock; // 0x64
		public float AveragePingMs; // 0x68
		public int DisconnectTimeout; // 0x6C
	
		// Properties
		public int KeepAliveInterval { set; } // 0x109D1D10-0x109D1D30
		public int MissingPingsUntilDisconnect { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; } // 0x101EFF50-0x101EFF60 
	
		// Nested types
		public class PingPacket : IRecyclable // TypeDefIndex: 4191
		{
			// Fields
			private static readonly Hazel.ObjectPool<PingPacket> PacketPool; // 0x00
			public readonly Stopwatch Stopwatch; // 0x08
	
			// Nested types
			[Serializable]
			[CompilerGenerated] // 0x10002030-0x10002050
			private sealed class __c // TypeDefIndex: 4192
			{
				// Fields
				public static readonly __c __9; // 0x00
	
				// Constructors
				static __c(); // 0x109CBE60-0x109CBEB0
				public __c(); // 0x101A2CD0-0x101A2CE0
	
				// Methods
				internal PingPacket _.cctor_b__5_0(); // 0x109CBD40-0x109CBDC0
			}
	
			// Constructors
			public PingPacket(); // 0x109CBB70-0x109CBBD0
			static PingPacket(); // 0x109CBAD0-0x109CBB70
	
			// Methods
			internal static PingPacket GetObject(); // 0x109CB9F0-0x109CBA50
			public void Recycle(); // 0x109CBA50-0x109CBAD0
		}
	
		public class Packet : IRecyclable // TypeDefIndex: 4193
		{
			// Fields
			public static readonly Hazel.ObjectPool<Packet> PacketPool; // 0x00
			public ushort Id; // 0x08
			private byte[] Data; // 0x0C
			private UdpConnection Connection; // 0x10
			private int Length; // 0x14
			public int NextTimeout; // 0x18
			public bool Acknowledged; // 0x1C
			public Action AckCallback; // 0x20
			public int Retransmissions; // 0x24
			public Stopwatch Stopwatch; // 0x28
	
			// Nested types
			[Serializable]
			[CompilerGenerated] // 0x10002030-0x10002050
			private sealed class __c // TypeDefIndex: 4194
			{
				// Fields
				public static readonly __c __9; // 0x00
	
				// Constructors
				static __c(); // 0x109CBDC0-0x109CBE10
				public __c(); // 0x101A2CD0-0x101A2CE0
	
				// Methods
				internal Packet _.cctor_b__15_0(); // 0x109CBBD0-0x109CBC50
			}
	
			// Constructors
			private Packet(); // 0x109CB990-0x109CB9F0
			static Packet(); // 0x109CB8F0-0x109CB990
	
			// Methods
			internal static Packet GetObject(); // 0x109CB2D0-0x109CB330
			internal void Set(ushort id, UdpConnection connection, byte[] data, int length, int timeout, Action ackCallback); // 0x109CB890-0x109CB8F0
			public int Resend(); // 0x109CB3B0-0x109CB890
			public void Recycle(); // 0x109CB330-0x109CB3B0
		}
	
		// Constructors
		protected UdpConnection(); // 0x109D1BD0-0x109D1D10
		static UdpConnection(); // 0x109D1B70-0x109D1BD0
	
		// Methods
		internal static Socket CreateSocket(IPMode ipMode); // 0x109CFE10-0x109CFFF0
		protected abstract void WriteBytesToConnection(byte[] bytes, int length);
		public override void Send(MessageWriter msg); // 0x109D1850-0x109D1980
		protected void HandleSend(byte[] data, byte sendOption, Action ackCallback = null); // 0x109D0830-0x109D0A50
		protected internal void HandleReceive(MessageReader message, int bytesReceived); // 0x109D0500-0x109D0830
		private void UnreliableSend(byte sendOption, byte[] data); // 0x109D1A70-0x109D1B70
		private void UnreliableSend(byte sendOption, byte[] data, int offset, int length); // 0x109D1980-0x109D1A70
		private void InvokeDataReceived(SendOption sendOption, MessageReader buffer, int dataOffset, int bytesReceived); // 0x109D0AC0-0x109D0B00
		protected void SendHello(byte[] bytes, Action acknowledgeCallback); // 0x109D15A0-0x109D1620
		protected override void Dispose(bool disposing); // 0x109D0380-0x109D03C0
		protected void InitializeKeepAliveTimer(); // 0x109D0A50-0x109D0AC0
		private void HandleKeepAlive(object state); // 0x109D03C0-0x109D0500
		private void SendPing(); // 0x109D1620-0x109D1850
		private void ResetKeepAliveTimer(); // 0x109D12A0-0x109D1370
		private void DisposeKeepAliveTimer(); // 0x109CFFF0-0x109D01C0
		internal int ManageReliablePackets(); // 0x109D0B00-0x109D0CF0
		private void AttachReliableID(byte[] buffer, int offset, int sendLength, Action ackCallback = null); // 0x109CFBE0-0x109CFE10
		private void ReliableSend(byte sendOption, byte[] data, Action ackCallback = null); // 0x109D1190-0x109D12A0
		private void ReliableSend(byte sendOption, byte[] data, int offset, int length, Action ackCallback = null); // 0x109D1090-0x109D1190
		private void ReliableMessageReceive(MessageReader message, int bytesReceived); // 0x109D0FD0-0x109D1090
		private bool ProcessReliableReceive(byte[] bytes, int offset, out ushort id); // 0x109D0CF0-0x109D0FD0
		private void AcknowledgementMessageReceive(byte[] bytes, int bytesReceived); // 0x109CFAE0-0x109CFBE0
		private void AcknowledgeMessageId(ushort id); // 0x109CF780-0x109CFAE0
		private void SendAck(ushort id); // 0x109D1370-0x109D15A0
		private void DisposeReliablePackets(); // 0x109D01C0-0x109D0380
	}

	public class UdpConnectionListener : NetworkConnectionListener // TypeDefIndex: 4195
	{
		// Fields
		private const int SendReceiveBufferSize = 1048576; // Metadata: 0x00240171
		private const int BufferSize = 65535; // Metadata: 0x00240175
		public AcceptConnectionCheck AcceptConnection; // 0x14
		private Socket socket; // 0x18
		private Action<string> Logger; // 0x1C
		private Timer reliablePacketTimer; // 0x20
		private ConcurrentDictionary<EndPoint, UdpServerConnection> allConnections; // 0x24
	
		// Nested types
		public delegate bool AcceptConnectionCheck(IPEndPoint endPoint, byte[] input, out byte[] response); // TypeDefIndex: 4196; 0x109C8860-0x109C8CA0
	
		// Constructors
		public UdpConnectionListener(IPEndPoint endPoint, IPMode ipMode = IPMode.IPv4 /* Metadata: 0x0024016D */, Action<string> logger = null); // 0x109CF680-0x109CF780
	
		// Methods
		~UdpConnectionListener(); // 0x10294110-0x102941D0
		private void ManageReliablePackets(object state); // 0x109CE6D0-0x109CE8F0
		public override void Start(); // 0x109CF580-0x109CF680
		private void StartListeningForData(); // 0x109CF330-0x109CF580
		private void ReadCallback(IAsyncResult result); // 0x109CE8F0-0x109CEFB0
		internal void SendData(byte[] bytes, int length, EndPoint endPoint); // 0x109CF1C0-0x109CF330
		private void SendCallback(IAsyncResult result); // 0x109CF010-0x109CF0E0
		internal void SendDataSync(byte[] bytes, int length, EndPoint endPoint); // 0x109CF0E0-0x109CF1C0
		internal void RemoveConnectionTo(EndPoint endPoint); // 0x109CEFB0-0x109CF010
		protected override void Dispose(bool disposing); // 0x109CE370-0x109CE6D0
	}

	internal sealed class UdpServerConnection : UdpConnection // TypeDefIndex: 4197
	{
		// Fields
		[CompilerGenerated] // 0x10002030-0x10002050
		private UdpConnectionListener _Listener_k__BackingField; // 0x70
	
		// Properties
		public UdpConnectionListener Listener { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x103D7070-0x103D7080 0x103D70F0-0x103D7100
	
		// Constructors
		internal UdpServerConnection(UdpConnectionListener listener, IPEndPoint endPoint, IPMode IPMode); // 0x109D20A0-0x109D2130
	
		// Methods
		protected override void WriteBytesToConnection(byte[] bytes, int length); // 0x109D2070-0x109D20A0
		public override void ConnectAsync(byte[] bytes = null); // 0x109D1D30-0x109D1D80
		protected override bool SendDisconnect(MessageWriter data = null); // 0x109D1E20-0x109D2070
		protected override void Dispose(bool disposing); // 0x109D1D80-0x109D1E20
	}
}

namespace Steamworks
{
	[Serializable]
	public struct UGCFileWriteStreamHandle_t : IEquatable<UGCFileWriteStreamHandle_t>, IComparable<UGCFileWriteStreamHandle_t> // TypeDefIndex: 4816
	{
		// Fields
		public static readonly UGCFileWriteStreamHandle_t Invalid; // 0x00
		public ulong m_UGCFileWriteStreamHandle; // 0x00
	
		// Constructors
		public UGCFileWriteStreamHandle_t(ulong value); // 0x10073670-0x10073690
		static UGCFileWriteStreamHandle_t(); // 0x107249C0-0x10724A00
	
		// Methods
		public override string ToString(); // 0x10073650-0x10073670
		public override bool Equals(object other); // 0x100D1270-0x100D1310
		public override int GetHashCode(); // 0x10073630-0x10073650
		public static bool operator ==(UGCFileWriteStreamHandle_t x, UGCFileWriteStreamHandle_t y); // 0x10187800-0x10187820
		public static bool operator !=(UGCFileWriteStreamHandle_t x, UGCFileWriteStreamHandle_t y); // 0x10724A00-0x10724A60
		public static explicit operator UGCFileWriteStreamHandle_t(ulong value); // 0x10187820-0x10187830
		public static explicit operator ulong(UGCFileWriteStreamHandle_t that); // 0x10187820-0x10187830
		public bool Equals(UGCFileWriteStreamHandle_t other); // 0x10073610-0x10073630
		public int CompareTo(UGCFileWriteStreamHandle_t other); // 0x10073550-0x10073570
	}

	[Serializable]
	public struct UGCHandle_t : IEquatable<UGCHandle_t>, IComparable<UGCHandle_t> // TypeDefIndex: 4817
	{
		// Fields
		public static readonly UGCHandle_t Invalid; // 0x00
		public ulong m_UGCHandle; // 0x00
	
		// Constructors
		public UGCHandle_t(ulong value); // 0x10073670-0x10073690
		static UGCHandle_t(); // 0x10724A60-0x10724AA0
	
		// Methods
		public override string ToString(); // 0x10073650-0x10073670
		public override bool Equals(object other); // 0x100D1310-0x100D13B0
		public override int GetHashCode(); // 0x10073630-0x10073650
		public static bool operator ==(UGCHandle_t x, UGCHandle_t y); // 0x10187800-0x10187820
		public static bool operator !=(UGCHandle_t x, UGCHandle_t y); // 0x10724AA0-0x10724B00
		public static explicit operator UGCHandle_t(ulong value); // 0x10187820-0x10187830
		public static explicit operator ulong(UGCHandle_t that); // 0x10187820-0x10187830
		public bool Equals(UGCHandle_t other); // 0x10073610-0x10073630
		public int CompareTo(UGCHandle_t other); // 0x10073550-0x10073570
	}

	[Serializable]
	public struct UGCQueryHandle_t : IEquatable<UGCQueryHandle_t>, IComparable<UGCQueryHandle_t> // TypeDefIndex: 4825
	{
		// Fields
		public static readonly UGCQueryHandle_t Invalid; // 0x00
		public ulong m_UGCQueryHandle; // 0x00
	
		// Constructors
		public UGCQueryHandle_t(ulong value); // 0x10073670-0x10073690
		static UGCQueryHandle_t(); // 0x10724B00-0x10724B40
	
		// Methods
		public override string ToString(); // 0x10073650-0x10073670
		public override bool Equals(object other); // 0x100D13B0-0x100D1450
		public override int GetHashCode(); // 0x10073630-0x10073650
		public static bool operator ==(UGCQueryHandle_t x, UGCQueryHandle_t y); // 0x10187800-0x10187820
		public static bool operator !=(UGCQueryHandle_t x, UGCQueryHandle_t y); // 0x10724B40-0x10724BA0
		public static explicit operator UGCQueryHandle_t(ulong value); // 0x10187820-0x10187830
		public static explicit operator ulong(UGCQueryHandle_t that); // 0x10187820-0x10187830
		public bool Equals(UGCQueryHandle_t other); // 0x10073610-0x10073630
		public int CompareTo(UGCQueryHandle_t other); // 0x10073550-0x10073570
	}

	[Serializable]
	public struct UGCUpdateHandle_t : IEquatable<UGCUpdateHandle_t>, IComparable<UGCUpdateHandle_t> // TypeDefIndex: 4826
	{
		// Fields
		public static readonly UGCUpdateHandle_t Invalid; // 0x00
		public ulong m_UGCUpdateHandle; // 0x00
	
		// Constructors
		public UGCUpdateHandle_t(ulong value); // 0x10073670-0x10073690
		static UGCUpdateHandle_t(); // 0x10724BA0-0x10724BE0
	
		// Methods
		public override string ToString(); // 0x10073650-0x10073670
		public override bool Equals(object other); // 0x100D1450-0x100D1B30
		public override int GetHashCode(); // 0x10073630-0x10073650
		public static bool operator ==(UGCUpdateHandle_t x, UGCUpdateHandle_t y); // 0x10187800-0x10187820
		public static bool operator !=(UGCUpdateHandle_t x, UGCUpdateHandle_t y); // 0x10724BE0-0x10724C40
		public static explicit operator UGCUpdateHandle_t(ulong value); // 0x10187820-0x10187830
		public static explicit operator ulong(UGCUpdateHandle_t that); // 0x10187820-0x10187830
		public bool Equals(UGCUpdateHandle_t other); // 0x10073610-0x10073630
		public int CompareTo(UGCUpdateHandle_t other); // 0x10073550-0x10073570
	}
}

namespace MS.Internal.Xml.XPath
{
	internal sealed class UnionExpr : Query // TypeDefIndex: 1799
	{
		// Fields
		internal Query qy1; // 0x0C
		internal Query qy2; // 0x10
		private bool advance1; // 0x14
		private bool advance2; // 0x15
		private XPathNavigator currentNode; // 0x18
		private XPathNavigator nextNode; // 0x1C
	
		// Properties
		public override XPathResultType StaticType { get; } // 0x1045B170-0x1045B180 
		public override XPathNavigator Current { get; } // 0x101ADCC0-0x101ADCD0 
		public override int CurrentPosition { get; } // 0x106C7360-0x106C73B0 
	
		// Constructors
		public UnionExpr(Query query1, Query query2); // 0x106C7290-0x106C72C0
		private UnionExpr(UnionExpr other); // 0x106C72C0-0x106C7360
	
		// Methods
		public override void Reset(); // 0x106C7230-0x106C7290
		public override void SetXsltContext(XsltContext xsltContext); // 0x106B9960-0x106B99B0
		public override object Evaluate(XPathNodeIterator context); // 0x106C7160-0x106C71D0
		private XPathNavigator ProcessSamePosition(XPathNavigator result); // 0x106C7210-0x106C7230
		private XPathNavigator ProcessBeforePosition(XPathNavigator res1, XPathNavigator res2); // 0x106C71F0-0x106C7210
		private XPathNavigator ProcessAfterPosition(XPathNavigator res1, XPathNavigator res2); // 0x106C71D0-0x106C71F0
		public override XPathNavigator Advance(); // 0x106C6FB0-0x106C7090
		public override XPathNodeIterator Clone(); // 0x106C7090-0x106C7160
	}
}

namespace QRCoder.Unity
{
	public class UnityQRCode : AbstractQRCode // TypeDefIndex: 4226
	{
		// Constructors
		public UnityQRCode(QRCodeData data); // 0x101B54B0-0x101B54D0
	
		// Methods
		public Texture2D GetGraphic(int pixelsPerModule); // 0x109C8680-0x109C8820
		public Texture2D GetGraphic(int pixelsPerModule, Color darkColor, Color lightColor); // 0x109C8510-0x109C8680
		internal Color[] GetBrush(int sizeX, int sizeY, Color defaultColor); // 0x109C8470-0x109C8510
	}
}

namespace Hazel.Udp
{
	public class UnityUdpClientConnection : UdpConnection // TypeDefIndex: 4189
	{
		// Fields
		private Socket socket; // 0x70
	
		// Constructors
		public UnityUdpClientConnection(IPEndPoint remoteEndPoint, IPMode ipMode = IPMode.IPv4 /* Metadata: 0x00240165 */); // 0x109D30F0-0x109D3180
	
		// Methods
		~UnityUdpClientConnection(); // 0x109D2620-0x109D26E0
		public void FixedUpdate(); // 0x109D26E0-0x109D26F0
		protected override void WriteBytesToConnection(byte[] bytes, int length); // 0x109D2F60-0x109D30F0
		private void HandleSendTo(IAsyncResult result); // 0x109D26F0-0x109D2860
		public override void ConnectAsync(byte[] bytes = null); // 0x109D2130-0x109D2460
		private void StartListeningForData(); // 0x109D2DB0-0x109D2F30
		private void ReadCallback(IAsyncResult result); // 0x109D2860-0x109D2B60
		protected override bool SendDisconnect(MessageWriter data = null); // 0x109D2B60-0x109D2DB0
		protected override void Dispose(bool disposing); // 0x109D2460-0x109D2620
		[CompilerGenerated] // 0x10002030-0x10002050
		private void _ConnectAsync_b__7_0(); // 0x109D2F30-0x109D2F60
	}
}

public class UnlockManifoldsMinigame : Minigame // TypeDefIndex: 5707
{
	// Fields
	public SpriteRenderer[] Buttons; // 0x28
	public byte SystemId; // 0x2C
	private int buttonCounter; // 0x30
	private bool animating; // 0x34
	public AudioClip PressButtonSound; // 0x38
	public AudioClip FailSound; // 0x3C

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _ResetAll_d__8 : IEnumerator<object> // TypeDefIndex: 5708
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public UnlockManifoldsMinigame __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _ResetAll_d__8(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1023F5B0-0x1023F920
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1023F920-0x1023F970
	}

	// Constructors
	public UnlockManifoldsMinigame(); // 0x101ACA10-0x101ACA20

	// Methods
	public override void Begin(PlayerTask task); // 0x10241CE0-0x10241ED0
	public void HitButton(int idx); // 0x10241ED0-0x10242110
	[IteratorStateMachine] // 0x10016350-0x100163A0
	private IEnumerator ResetAll(); // 0x10242110-0x10242160
}

public class UnlockPopUp : MonoBehaviour // TypeDefIndex: 5886
{
	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Show_d__0 : IEnumerator<object> // TypeDefIndex: 5887
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public UnlockPopUp __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Show_d__0(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10240700-0x10240870
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10240870-0x102408C0
	}

	// Constructors
	public UnlockPopUp(); // 0x101A68C0-0x101A68D0

	// Methods
	[IteratorStateMachine] // 0x1001F560-0x1001F5B0
	public IEnumerator Show(); // 0x10242160-0x102421B0
}

public class UploadDataGame : Minigame // TypeDefIndex: 5175
{
	// Fields
	public SpriteAnim LeftFolder; // 0x28
	public SpriteAnim RightFolder; // 0x2C
	public AnimationClip FolderOpen; // 0x30
	public AnimationClip FolderClose; // 0x34
	public SpriteRenderer Runner; // 0x38
	public HorizontalGauge Gauge; // 0x3C
	public TextRenderer PercentText; // 0x40
	public TextRenderer EstimatedText; // 0x44
	public TextRenderer SourceText; // 0x48
	public TextRenderer TargetText; // 0x4C
	public SpriteRenderer Button; // 0x50
	public Sprite DownloadImage; // 0x54
	public GameObject Status; // 0x58
	public GameObject Tower; // 0x5C
	private int count; // 0x60
	private float timer; // 0x64
	public const float RandomChunks = 5f; // Metadata: 0x00243A7E
	public const float ConstantTime = 3f; // Metadata: 0x00243A82
	private bool running; // 0x68

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Transition_d__21 : IEnumerator<object> // TypeDefIndex: 5176
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public UploadDataGame __4__this; // 0x10
		private float _target_5__2; // 0x14
		private float _t_5__3; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Transition_d__21(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x102408C0-0x10240BA0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10240BA0-0x10240BF0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass22_0 // TypeDefIndex: 5177
	{
		// Fields
		public Color gray; // 0x08
		public MeshRenderer rend2; // 0x18
		public MeshRenderer rend1; // 0x1C

		// Constructors
		public __c__DisplayClass22_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _PulseText_b__0(float t); // 0x10240EE0-0x10240FC0
		internal void _PulseText_b__1(float t); // 0x10240FC0-0x102410B0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _PulseText_d__22 : IEnumerator<object> // TypeDefIndex: 5178
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public UploadDataGame __4__this; // 0x10
		private __c__DisplayClass22_0 __8__1; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _PulseText_d__22(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1023F2E0-0x1023F560
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1023F560-0x1023F5B0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _DoPercent_d__23 : IEnumerator<object> // TypeDefIndex: 5179
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public UploadDataGame __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _DoPercent_d__23(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1023E990-0x1023EAF0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1023EAF0-0x1023EB40
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _DoText_d__24 : IEnumerator<object> // TypeDefIndex: 5180
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public UploadDataGame __4__this; // 0x10
		private StringBuilder _txt_5__2; // 0x14
		private int _baselen_5__3; // 0x18
		private int _max_5__4; // 0x1C

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _DoText_d__24(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1023EE60-0x1023F290
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1023F290-0x1023F2E0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass25_0 // TypeDefIndex: 5181
	{
		// Fields
		public Vector3 pos; // 0x08
		public UploadDataGame __4__this; // 0x14

		// Constructors
		public __c__DisplayClass25_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _DoRun_b__0(float t); // 0x102410B0-0x10241170
		internal void _DoRun_b__1(float t); // 0x10241170-0x10241230
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _DoRun_d__25 : IEnumerator<object> // TypeDefIndex: 5182
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public UploadDataGame __4__this; // 0x10
		private __c__DisplayClass25_0 __8__1; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _DoRun_d__25(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1023EB40-0x1023EE10
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1023EE10-0x1023EE60
	}

	// Constructors
	public UploadDataGame(); // 0x102424F0-0x10242510

	// Methods
	public override void Begin(PlayerTask task); // 0x102421B0-0x10242300
	public void Click(); // 0x10242300-0x10242360
	[IteratorStateMachine] // 0x1001CF80-0x1001CFD0
	private IEnumerator Transition(); // 0x102424A0-0x102424F0
	[IteratorStateMachine] // 0x1001D030-0x1001D080
	private IEnumerator PulseText(); // 0x10242450-0x102424A0
	[IteratorStateMachine] // 0x1001D0B0-0x1001D100
	private IEnumerator DoPercent(); // 0x10242360-0x102423B0
	[IteratorStateMachine] // 0x1001D130-0x1001D180
	private IEnumerator DoText(); // 0x10242400-0x10242450
	[IteratorStateMachine] // 0x1001D1B0-0x1001D200
	private IEnumerator DoRun(); // 0x102423B0-0x10242400
}

public class UploadDataTask : NormalPlayerTask // TypeDefIndex: 5860
{
	// Fields
	public SystemTypes EndAt; // 0x44

	// Constructors
	public UploadDataTask(); // 0x10242720-0x10242740

	// Methods
	public override bool ValidConsole(Console console); // 0x10242670-0x10242720
	public override void AppendTaskText(StringBuilder sb); // 0x10242510-0x10242670
	[CompilerGenerated] // 0x10002030-0x10002050
	private bool _ValidConsole_b__1_0(TaskSet set); // 0x102053B0-0x102053F0
}

namespace Hazel.UPnP
{
	public class UPnPHelper : IDisposable // TypeDefIndex: 4185
	{
		// Fields
		private string serviceUrl; // 0x08
		private string serviceName; // 0x0C
		private ManualResetEvent discoveryComplete; // 0x10
		private Socket socket; // 0x14
		private DateTime discoveryResponseDeadline; // 0x18
		private EndPoint ep; // 0x20
		private byte[] buffer; // 0x24
		private Hazel.ILogger logger; // 0x28
		[CompilerGenerated] // 0x10002030-0x10002050
		private UPnPStatus _Status_k__BackingField; // 0x2C
	
		// Properties
		public UPnPStatus Status { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x101F0010-0x101F0020 0x101F0450-0x101F0460
	
		// Constructors
		public UPnPHelper(Hazel.ILogger logger); // 0x109CD150-0x109CD3D0
	
		// Methods
		private void ListenForUPnP(); // 0x109CCBC0-0x109CCD20
		private void HandleMessage(IAsyncResult ar); // 0x109CCA30-0x109CCBC0
		internal void Discover(); // 0x109CC3D0-0x109CC4F0
		internal bool ExtractServiceUrl(string resp); // 0x109CC5E0-0x109CCA30
		private static string CombineUrls(string gatewayURL, string subURL); // 0x109CBFC0-0x109CC090
		private bool CheckAvailability(); // 0x109CBF00-0x109CBFC0
		public bool DeleteForwardingRule(int externalPort); // 0x109CC090-0x109CC3D0
		private XmlDocument SOAPRequest(string url, string soap, string function); // 0x109CCD20-0x109CD150
		public void Dispose(); // 0x109CC4F0-0x109CC5E0
	}

	public enum UPnPStatus // TypeDefIndex: 4184
	{
		Discovering = 0,
		NotAvailable = 1,
		Available = 2
	}
}

public class UseButtonManager : MonoBehaviour // TypeDefIndex: 5487
{
	// Fields
	private static readonly Color DisabledColor; // 0x00
	private static readonly Color EnabledColor; // 0x10
	public SpriteRenderer UseButton; // 0x0C
	public Sprite UseImage; // 0x10
	public Sprite SabotageImage; // 0x14
	public Sprite VentImage; // 0x18
	public Sprite OptionsImage; // 0x1C
	private IUsable currentTarget; // 0x20

	// Nested types
	[Serializable]
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c // TypeDefIndex: 5488
	{
		// Fields
		public static readonly __c __9; // 0x00
		public static Action<MapBehaviour> __9__9_0; // 0x04

		// Constructors
		static __c(); // 0x10241520-0x10241570
		public __c(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _DoClick_b__9_0(MapBehaviour m); // 0x10240C70-0x10240C90
	}

	// Constructors
	public UseButtonManager(); // 0x101A68C0-0x101A68D0
	static UseButtonManager(); // 0x10242C80-0x10242E30

	// Methods
	public void SetTarget(IUsable target); // 0x10242930-0x10242C80
	public void DoClick(); // 0x10242740-0x10242910
	internal void Refresh(); // 0x10242910-0x10242930
}

namespace Discord
{
	public struct User // TypeDefIndex: 4876
	{
		// Fields
		public long Id; // 0x00
		public string Username; // 0x08
		public string Discriminator; // 0x0C
		public string Avatar; // 0x10
		public bool Bot; // 0x14
	}

	public struct UserAchievement // TypeDefIndex: 4894
	{
		// Fields
		public long UserId; // 0x00
		public long AchievementId; // 0x08
		public byte PercentComplete; // 0x10
		public string UnlockedAt; // 0x14
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000ACA0-0x1000ACC0
	public struct UserAchievementIconFetched_t // TypeDefIndex: 4653
	{
		// Fields
		public const int k_iCallback = 1109; // Metadata: 0x00242437
		public CGameID m_nGameID; // 0x00
		public string m_rgchAchievementName; // 0x08
		public bool m_bAchieved; // 0x0C
		public int m_nIconHandle; // 0x10
	}

	[CallbackIdentity] // 0x1000A980-0x1000A9A0
	public struct UserAchievementStored_t // TypeDefIndex: 4647
	{
		// Fields
		public const int k_iCallback = 1103; // Metadata: 0x0024241F
		public ulong m_nGameID; // 0x00
		public bool m_bGroupAchievement; // 0x08
		public string m_rgchAchievementName; // 0x0C
		public uint m_nCurProgress; // 0x10
		public uint m_nMaxProgress; // 0x14
	}

	[CallbackIdentity] // 0x1000A300-0x1000A320
	public struct UserFavoriteItemsListChanged_t // TypeDefIndex: 4622
	{
		// Fields
		public const int k_iCallback = 3407; // Metadata: 0x002423BB
		public PublishedFileId_t m_nPublishedFileId; // 0x00
		public EResult m_eResult; // 0x08
		public bool m_bWasAddRequest; // 0x0C
	}
}

namespace Discord
{
	public enum UserFlag // TypeDefIndex: 4861
	{
		Partner = 2,
		HypeSquadEvents = 4,
		HypeSquadHouse1 = 64,
		HypeSquadHouse2 = 128,
		HypeSquadHouse3 = 256
	}

	public class UserManager // TypeDefIndex: 4950
	{
		// Fields
		private IntPtr MethodsPtr; // 0x08
		private object MethodsStructure; // 0x0C
		[CompilerGenerated] // 0x10002030-0x10002050
		private CurrentUserUpdateHandler OnCurrentUserUpdate; // 0x10
	
		// Properties
		private FFIMethods Methods { get; } // 0x10627D80-0x10627E50 
	
		// Events
		public event CurrentUserUpdateHandler OnCurrentUserUpdate {
			add; // 0x10627D00-0x10627D80
			remove; // 0x10627E50-0x10627ED0
		}
	
		// Nested types
		internal struct FFIEvents // TypeDefIndex: 4951
		{
			// Fields
			internal CurrentUserUpdateHandler OnCurrentUserUpdate; // 0x00
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void CurrentUserUpdateHandler(IntPtr ptr); // TypeDefIndex: 4952; 0x1061F960-0x1061FAD0
		}
	
		internal struct FFIMethods // TypeDefIndex: 4953
		{
			// Fields
			internal GetCurrentUserMethod GetCurrentUser; // 0x00
			internal GetUserMethod GetUser; // 0x04
			internal GetCurrentUserPremiumTypeMethod GetCurrentUserPremiumType; // 0x08
			internal CurrentUserHasFlagMethod CurrentUserHasFlag; // 0x0C
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetCurrentUserMethod(IntPtr methodsPtr, ref User currentUser); // TypeDefIndex: 4954; 0x1061FB40-0x1061FDD0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void GetUserCallback(IntPtr ptr, Discord.Result result, ref User user); // TypeDefIndex: 4955; 0x10344040-0x103442D0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void GetUserMethod(IntPtr methodsPtr, long userId, IntPtr callbackData, GetUserCallback callback); // TypeDefIndex: 4956; 0x10621500-0x106217C0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetCurrentUserPremiumTypeMethod(IntPtr methodsPtr, ref PremiumType premiumType); // TypeDefIndex: 4957; 0x1061FB40-0x1061FDD0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result CurrentUserHasFlagMethod(IntPtr methodsPtr, UserFlag flag, ref bool hasFlag); // TypeDefIndex: 4958; 0x104A0350-0x104A05E0
		}
	
		public delegate void GetUserHandler(Discord.Result result, ref User user); // TypeDefIndex: 4959; 0x1018BF80-0x1018C200
	
		public delegate void CurrentUserUpdateHandler(); // TypeDefIndex: 4960; 0x101D40E0-0x101D4220
	
		// Constructors
		internal UserManager(IntPtr ptr, IntPtr eventsPtr, ref FFIEvents events); // 0x10627C00-0x10627D00
	
		// Methods
		private void InitEvents(IntPtr eventsPtr, ref FFIEvents events); // 0x10627990-0x10627A10
		public User GetCurrentUser(); // 0x106277A0-0x10627850
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void GetUserCallbackImpl(IntPtr ptr, Discord.Result result, ref User user); // 0x10627850-0x106278E0
		public void GetUser(long userId, GetUserHandler callback); // 0x106278E0-0x10627990
		public PremiumType GetCurrentUserPremiumType(); // 0x10627700-0x106277A0
		public bool CurrentUserHasFlag(UserFlag flag); // 0x10627660-0x10627700
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OnCurrentUserUpdateImpl(IntPtr ptr); // 0x10627A10-0x10627C00
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000A860-0x1000A880
	public struct UserStatsReceived_t // TypeDefIndex: 4645
	{
		// Fields
		public const int k_iCallback = 1101; // Metadata: 0x00242417
		public ulong m_nGameID; // 0x00
		public EResult m_eResult; // 0x08
		public CSteamID m_steamIDUser; // 0x0C
	}

	[CallbackIdentity] // 0x1000A880-0x1000A8A0
	public struct UserStatsStored_t // TypeDefIndex: 4646
	{
		// Fields
		public const int k_iCallback = 1102; // Metadata: 0x0024241B
		public ulong m_nGameID; // 0x00
		public EResult m_eResult; // 0x08
	}

	[CallbackIdentity] // 0x10004F70-0x10004F90
	public struct UserStatsUnloaded_t // TypeDefIndex: 4652
	{
		// Fields
		public const int k_iCallback = 1108; // Metadata: 0x00242433
		public CSteamID m_steamIDUser; // 0x00
	}
}

namespace GoogleMobileAds.Common
{
	internal class Utils // TypeDefIndex: 5958
	{
		// Constructors
		public Utils(); // 0x101A2CD0-0x101A2CE0
	
		// Methods
		public static void CheckInitialization(); // 0x10285D00-0x10285DA0
		public static Texture2D GetTexture2DFromByteArray(byte[] img); // 0x10285F20-0x10285FA0
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x1000A710-0x1000A730
	public struct ValidateAuthTicketResponse_t // TypeDefIndex: 4639
	{
		// Fields
		public const int k_iCallback = 143; // Metadata: 0x002423FF
		public CSteamID m_SteamID; // 0x00
		public EAuthSessionResponse m_eAuthSessionResponse; // 0x08
		public CSteamID m_OwnerSteamID; // 0x0C
	}
}

namespace MS.Internal.Xml.XPath
{
	internal abstract class ValueQuery : Query // TypeDefIndex: 1800
	{
		// Properties
		public sealed override XPathNavigator Current { get; } // 0x106C7470-0x106C74B0 
		public sealed override int CurrentPosition { get; } // 0x106C7430-0x106C7470 
		public sealed override int Count { get; } // 0x106C73F0-0x106C7430 
	
		// Constructors
		public ValueQuery(); // 0x106BB920-0x106BB940
		protected ValueQuery(ValueQuery other); // 0x106C5100-0x106C5130
	
		// Methods
		public sealed override void Reset(); // 0x101A2F90-0x101A2FA0
		public sealed override XPathNavigator Advance(); // 0x106C73B0-0x106C73F0
	}

	internal class Variable : AstNode // TypeDefIndex: 1801
	{
		// Fields
		private string localname; // 0x08
		private string prefix; // 0x0C
	
		// Properties
		public override AstType Type { get; } // 0x10447F80-0x10447F90 
		public override XPathResultType ReturnType { get; } // 0x102F6F80-0x102F6F90 
		public string Localname { get; } // 0x101B4FF0-0x101B5000 
		public string Prefix { get; } // 0x101AE200-0x101AE210 
	
		// Constructors
		public Variable(string name, string prefix); // 0x101A5800-0x101A5830
	}

	internal sealed class VariableQuery : ExtensionQuery // TypeDefIndex: 1802
	{
		// Fields
		private IXsltContextVariable variable; // 0x1C
	
		// Properties
		public override XPathResultType StaticType { get; } // 0x106C76B0-0x106C7710 
	
		// Constructors
		public VariableQuery(string name, string prefix); // 0x106BA040-0x106BA070
		private VariableQuery(VariableQuery other); // 0x106C7680-0x106C76B0
	
		// Methods
		public override void SetXsltContext(XsltContext context); // 0x106C75E0-0x106C7680
		public override object Evaluate(XPathNodeIterator nodeIterator); // 0x106C7510-0x106C75E0
		public override XPathNodeIterator Clone(); // 0x106C74B0-0x106C7510
	}
}

[Serializable]
public struct Vector2Range // TypeDefIndex: 5243
{
	// Fields
	public Vector2 min; // 0x00
	public Vector2 max; // 0x08

	// Properties
	public float Width { get; } // 0x100940F0-0x100941D0 
	public float Height { get; } // 0x100940E0-0x100940F0 

	// Constructors
	public Vector2Range(Vector2 min, Vector2 max); // 0x100940C0-0x100940E0

	// Methods
	public void LerpUnclamped(ref Vector3 output, float t, float z); // 0x10093E50-0x10093F40
	public void Lerp(ref Vector3 output, float t, float z); // 0x10093F40-0x10094030
	public Vector2 Next(); // 0x10094030-0x100940C0
	public static Vector2 NextEdge(); // 0x10242E30-0x10242F70
}

public class VendingMinigame : Minigame // TypeDefIndex: 5358
{
	// Fields
	public static readonly string[] Letters; // 0x00
	public TextRenderer NumberText; // 0x28
	public SpriteRenderer TargetImage; // 0x2C
	public string enteredCode; // 0x30
	private bool animating; // 0x34
	private bool done; // 0x35
	private string targetCode; // 0x38
	public SpriteRenderer AcceptButton; // 0x3C
	public VendingSlot[] Slots; // 0x40
	public Sprite[] Drinks; // 0x44
	public Sprite[] DrawnDrinks; // 0x48
	public AudioClip Ambience; // 0x4C
	public AudioClip Button; // 0x50
	public AudioClip Error; // 0x54
	public AudioClip SliderOpen; // 0x58
	public AudioClip DrinkShake; // 0x5C
	public AudioClip DrinkLand; // 0x60

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _BlinkAccept_d__24 : IEnumerator<object> // TypeDefIndex: 5359
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public VendingMinigame __4__this; // 0x10
		private int _i_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _BlinkAccept_d__24(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x101B54D0-0x101B5600
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1023DCB0-0x1023DD00
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Animate_d__25 : IEnumerator<object> // TypeDefIndex: 5360
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public VendingMinigame __4__this; // 0x10
		private int _slotId_5__2; // 0x14
		private WaitForSeconds _wait_5__3; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Animate_d__25(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1023D710-0x1023DC60
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1023DC60-0x1023DCB0
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoBlinkVend_d__26 : IEnumerator<object> // TypeDefIndex: 5361
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public VendingMinigame __4__this; // 0x10
		private int _i_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoBlinkVend_d__26(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1023E4A0-0x1023E5C0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1023E5C0-0x1023E610
	}

	// Constructors
	public VendingMinigame(); // 0x10243A10-0x10243A60
	static VendingMinigame(); // 0x102438F0-0x10243A10

	// Methods
	public override void Begin(PlayerTask task); // 0x10243110-0x102432E0
	private static int StringToSlotId(string code); // 0x10243760-0x102438F0
	private static string SlotIdToString(int slotId); // 0x102436B0-0x10243760
	private bool PickARandomSlot(Sprite drink, out int slotId); // 0x10243610-0x102436B0
	public void EnterDigit(string s); // 0x10243490-0x10243610
	public void ClearDigits(); // 0x10243330-0x10243440
	public void AcceptDigits(); // 0x10242F70-0x102430C0
	[IteratorStateMachine] // 0x10034900-0x10034950
	private IEnumerator BlinkAccept(); // 0x102432E0-0x10243330
	[IteratorStateMachine] // 0x100349E0-0x10034A30
	private IEnumerator Animate(); // 0x102430C0-0x10243110
	[IteratorStateMachine] // 0x10034B50-0x10034BA0
	private IEnumerator CoBlinkVend(); // 0x10243440-0x10243490
}

public class VendingSlot : MonoBehaviour // TypeDefIndex: 5362
{
	// Fields
	public SpriteRenderer DrinkImage; // 0x0C
	public SpriteRenderer GlassImage; // 0x10
	private const float SlideDuration = 0.75f; // Metadata: 0x00243B49

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoBuy_d__3 : IEnumerator<object> // TypeDefIndex: 5363
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public AudioClip sliderOpen; // 0x10
		public VendingSlot __4__this; // 0x14
		public AudioClip drinkShake; // 0x18
		public AudioClip drinkLand; // 0x1C

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoBuy_d__3(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1096F980-0x1096FF10
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1096FF10-0x1096FF70
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CloseSlider_d__4 : IEnumerator<object> // TypeDefIndex: 5364
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public AudioClip sliderOpen; // 0x10
		public VendingSlot __4__this; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CloseSlider_d__4(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1096F3D0-0x1096F4F0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1096F4F0-0x1096F540
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _PlayLand_d__5 : IEnumerator<object> // TypeDefIndex: 5365
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public AudioClip drinkLand; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _PlayLand_d__5(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10971360-0x10971410
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10971410-0x10971460
	}

	// Constructors
	public VendingSlot(); // 0x101A68C0-0x101A68D0

	// Methods
	[IteratorStateMachine] // 0x10035710-0x10035760
	public IEnumerator CoBuy(AudioClip sliderOpen, AudioClip drinkShake, AudioClip drinkLand); // 0x10971E40-0x10971EA0
	[IteratorStateMachine] // 0x100357B0-0x10035800
	public IEnumerator CloseSlider(AudioClip sliderOpen); // 0x10971DE0-0x10971E40
	[IteratorStateMachine] // 0x10036970-0x100369C0
	private IEnumerator PlayLand(AudioClip drinkLand); // 0x10971EA0-0x10971EF0
	[CompilerGenerated] // 0x10002030-0x10002050
	private void _CoBuy_b__3_0(float v); // 0x10972060-0x109721D0
	[CompilerGenerated] // 0x10002030-0x10002050
	private void _CloseSlider_b__4_0(float v); // 0x10971EF0-0x10972060
}

public class Vent : MonoBehaviour, IUsable // TypeDefIndex: 5811
{
	// Fields
	public int Id; // 0x0C
	public Vent Left; // 0x10
	public Vent Right; // 0x14
	public Vent Center; // 0x18
	public ButtonBehavior[] Buttons; // 0x1C
	public AnimationClip EnterVentAnim; // 0x20
	public AnimationClip ExitVentAnim; // 0x24
	private SpriteRenderer myRend; // 0x28
	public Vector3 Offset; // 0x2C

	// Properties
	public Sprite UseIcon { get; } // 0x101D1BE0-0x101D1BF0 
	public float UsableDistance { get; } // 0x10973360-0x10973370 
	public float PercentCool { get; } // 0x101AE1E0-0x101AE1F0 

	// Constructors
	public Vent(); // 0x10973300-0x10973360

	// Methods
	private void Start(); // 0x109731B0-0x10973200
	public void SetButtons(bool enabled); // 0x10972C60-0x109730A0
	public float CanUse(GameData.PlayerInfo pc, out bool canUse, out bool couldUse); // 0x109721D0-0x109723E0
	public void SetOutline(bool on, bool mainTarget); // 0x109730A0-0x109731B0
	public void ClickRight(); // 0x109725E0-0x109726E0
	public void ClickLeft(); // 0x109724E0-0x109725E0
	public void ClickCenter(); // 0x109723E0-0x109724E0
	private static void DoMove(Vector3 pos); // 0x109726E0-0x10972920
	public void Use(); // 0x10973200-0x10973300
	internal void EnterVent(PlayerControl pc); // 0x10972920-0x10972AC0
	internal void ExitVent(PlayerControl pc); // 0x10972AC0-0x10972C60
}

namespace Steamworks
{
	public static class Version // TypeDefIndex: 4298
	{
		// Fields
		public const string SteamworksNETVersion = "12.0.0"; // Metadata: 0x00242140
		public const string SteamworksSDKVersion = "1.42"; // Metadata: 0x0024214A
		public const string SteamAPIDLLVersion = "04.28.51.07"; // Metadata: 0x00242152
		public const int SteamAPIDLLSize = 227616; // Metadata: 0x00242161
		public const int SteamAPI64DLLSize = 250656; // Metadata: 0x00242165
	}
}

public class VersionShower : MonoBehaviour // TypeDefIndex: 5263
{
	// Fields
	public TextRenderer text; // 0x0C

	// Constructors
	public VersionShower(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Start(); // 0x10973370-0x10973400
}

public class VerticalGauge : MonoBehaviour // TypeDefIndex: 5489
{
	// Fields
	public float value; // 0x0C
	public float MaxValue; // 0x10
	public float maskScale; // 0x14
	public SpriteMask Mask; // 0x18
	private float lastValue; // 0x1C

	// Constructors
	public VerticalGauge(); // 0x10276200-0x10276240

	// Methods
	public void Update(); // 0x10973B90-0x10973DC0
}

public class VerticalSpriteGauge : MonoBehaviour // TypeDefIndex: 5490
{
	// Fields
	public float Value; // 0x0C
	public float MaxValue; // 0x10
	public FloatRange YRange; // 0x14
	public SpriteRenderer Mask; // 0x18
	private float lastValue; // 0x1C
	[CompilerGenerated] // 0x10002030-0x10002050
	private float _TopY_k__BackingField; // 0x20

	// Properties
	public float TopY { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x10565F00-0x10565F10 0x105744A0-0x105744C0

	// Constructors
	public VerticalSpriteGauge(); // 0x10973F90-0x10973FC0

	// Methods
	public void Update(); // 0x10973DC0-0x10973F90
}

[RequireComponent] // 0x10010A40-0x10010AB0
[RequireComponent] // 0x10010A40-0x10010AB0
public class VertLineBehaviour : MonoBehaviour // TypeDefIndex: 5654
{
	// Fields
	public int NumPoints; // 0x0C
	public FloatRange Width; // 0x10
	public FloatRange Height; // 0x14
	private Mesh mesh; // 0x18
	private MeshRenderer rend; // 0x1C
	private Vector3[] vecs; // 0x20
	public float Duration; // 0x24
	private float timer; // 0x28
	public int Offset; // 0x2C
	public int beats; // 0x30
	public int beatPadding; // 0x34

	// Properties
	public Color color { set; } // 0x10973B30-0x10973B90

	// Constructors
	public VertLineBehaviour(); // 0x10973AF0-0x10973B30

	// Methods
	public void Awake(); // 0x10973400-0x10973640
	public void Update(); // 0x10973A20-0x10973AF0
	public void SetAlive(); // 0x10973640-0x109738E0
	public void SetDead(); // 0x109738E0-0x10973A20
}

public class VirtualJoystick : MonoBehaviour, IVirtualJoystick // TypeDefIndex: 5416
{
	// Fields
	public float InnerRadius; // 0x0C
	public float OuterRadius; // 0x10
	public CircleCollider2D Outer; // 0x14
	public SpriteRenderer Inner; // 0x18
	[CompilerGenerated] // 0x10002030-0x10002050
	private Vector2 _Delta_k__BackingField; // 0x1C
	private Controller myController; // 0x24

	// Properties
	public Vector2 Delta { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ private set; } // 0x10974720-0x10974740 0x10974740-0x10974760

	// Constructors
	public VirtualJoystick(); // 0x109746C0-0x10974720

	// Methods
	protected virtual void FixedUpdate(); // 0x10973FC0-0x10974400
	public virtual void UpdateJoystick(FingerBehaviour finger, Vector2 velocity, bool syncFinger); // 0x10974400-0x109746C0
}

public class VitalsMinigame : Minigame // TypeDefIndex: 5655
{
	// Fields
	public VitalsPanel PanelPrefab; // 0x28
	public Sprite VitalBgDead; // 0x2C
	public Sprite VitalBgDiscon; // 0x30
	private VitalsPanel[] vitals; // 0x34
	public IntRange BeatRange; // 0x38
	public TextRenderer SabText; // 0x3C

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass6_0 // TypeDefIndex: 5656
	{
		// Fields
		public GameData.PlayerInfo player; // 0x08

		// Constructors
		public __c__DisplayClass6_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal bool _Begin_b__0(DeadBody b); // 0x10971DB0-0x10971DE0
	}

	// Constructors
	public VitalsMinigame(); // 0x101ACA10-0x101ACA20

	// Methods
	public override void Begin(PlayerTask task); // 0x10974760-0x10974B70
	private void Update(); // 0x10974B70-0x10974ED0
}

public class VitalsPanel : MonoBehaviour // TypeDefIndex: 5657
{
	// Fields
	public SpriteRenderer PlayerImage; // 0x0C
	public SpriteRenderer Background; // 0x10
	public TextRenderer Text; // 0x14
	public VertLineBehaviour Cardio; // 0x18
	public bool IsDead; // 0x1C
	public bool IsDiscon; // 0x1D

	// Constructors
	public VitalsPanel(); // 0x101A68C0-0x101A68D0
}

namespace Discord
{
	public class VoiceManager // TypeDefIndex: 5133
	{
		// Fields
		private IntPtr MethodsPtr; // 0x08
		private object MethodsStructure; // 0x0C
		[CompilerGenerated] // 0x10002030-0x10002050
		private SettingsUpdateHandler OnSettingsUpdate; // 0x10
	
		// Properties
		private FFIMethods Methods { get; } // 0x10628A40-0x10628B20 
	
		// Events
		public event SettingsUpdateHandler OnSettingsUpdate {
			add; // 0x106289C0-0x10628A40
			remove; // 0x10628B20-0x10628BA0
		}
	
		// Nested types
		internal struct FFIEvents // TypeDefIndex: 5134
		{
			// Fields
			internal SettingsUpdateHandler OnSettingsUpdate; // 0x00
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void SettingsUpdateHandler(IntPtr ptr); // TypeDefIndex: 5135; 0x1061F960-0x1061FAD0
		}
	
		internal struct FFIMethods // TypeDefIndex: 5136
		{
			// Fields
			internal GetInputModeMethod GetInputMode; // 0x00
			internal SetInputModeMethod SetInputMode; // 0x04
			internal IsSelfMuteMethod IsSelfMute; // 0x08
			internal SetSelfMuteMethod SetSelfMute; // 0x0C
			internal IsSelfDeafMethod IsSelfDeaf; // 0x10
			internal SetSelfDeafMethod SetSelfDeaf; // 0x14
			internal IsLocalMuteMethod IsLocalMute; // 0x18
			internal SetLocalMuteMethod SetLocalMute; // 0x1C
			internal GetLocalVolumeMethod GetLocalVolume; // 0x20
			internal SetLocalVolumeMethod SetLocalVolume; // 0x24
	
			// Nested types
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetInputModeMethod(IntPtr methodsPtr, ref InputMode inputMode); // TypeDefIndex: 5137; 0x1061FB40-0x1061FDD0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void SetInputModeCallback(IntPtr ptr, Discord.Result result); // TypeDefIndex: 5138; 0x101D4290-0x101D4410
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate void SetInputModeMethod(IntPtr methodsPtr, InputMode inputMode, IntPtr callbackData, SetInputModeCallback callback); // TypeDefIndex: 5139; 0x10621500-0x106217C0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result IsSelfMuteMethod(IntPtr methodsPtr, ref bool mute); // TypeDefIndex: 5140; 0x10623C60-0x10623DE0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result SetSelfMuteMethod(IntPtr methodsPtr, bool mute); // TypeDefIndex: 5141; 0x10623C60-0x10623DE0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result IsSelfDeafMethod(IntPtr methodsPtr, ref bool deaf); // TypeDefIndex: 5142; 0x10623C60-0x10623DE0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result SetSelfDeafMethod(IntPtr methodsPtr, bool deaf); // TypeDefIndex: 5143; 0x10623C60-0x10623DE0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result IsLocalMuteMethod(IntPtr methodsPtr, long userId, ref bool mute); // TypeDefIndex: 5144; 0x10621840-0x106219E0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result SetLocalMuteMethod(IntPtr methodsPtr, long userId, bool mute); // TypeDefIndex: 5145; 0x10620E00-0x106210A0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result GetLocalVolumeMethod(IntPtr methodsPtr, long userId, ref byte volume); // TypeDefIndex: 5146; 0x10620E00-0x106210A0
	
			[UnmanagedFunctionPointer] // 0x1000C5C0-0x1000C5E0
			internal delegate Discord.Result SetLocalVolumeMethod(IntPtr methodsPtr, long userId, byte volume); // TypeDefIndex: 5147; 0x10620E00-0x106210A0
		}
	
		public delegate void SetInputModeHandler(Discord.Result result); // TypeDefIndex: 5148; 0x1061F960-0x1061FAD0
	
		public delegate void SettingsUpdateHandler(); // TypeDefIndex: 5149; 0x101D40E0-0x101D4220
	
		// Constructors
		internal VoiceManager(IntPtr ptr, IntPtr eventsPtr, ref FFIEvents events); // 0x106288C0-0x106289C0
	
		// Methods
		private void InitEvents(IntPtr eventsPtr, ref FFIEvents events); // 0x10628030-0x106280B0
		public InputMode GetInputMode(); // 0x10627ED0-0x10627F80
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void SetInputModeCallbackImpl(IntPtr ptr, Discord.Result result); // 0x106284B0-0x10628540
		public void SetInputMode(InputMode inputMode, SetInputModeHandler callback); // 0x10628540-0x10628600
		public bool IsSelfMute(); // 0x10628200-0x106282B0
		public void SetSelfMute(bool mute); // 0x10628810-0x106288C0
		public bool IsSelfDeaf(); // 0x10628160-0x10628200
		public void SetSelfDeaf(bool deaf); // 0x10628760-0x10628810
		public bool IsLocalMute(long userId); // 0x106280B0-0x10628160
		public void SetLocalMute(long userId, bool mute); // 0x10628600-0x106286B0
		public byte GetLocalVolume(long userId); // 0x10627F80-0x10628030
		public void SetLocalVolume(long userId, byte volume); // 0x106286B0-0x10628760
		[Discord.MonoPInvokeCallback] // 0x10002030-0x10002050
		private static void OnSettingsUpdateImpl(IntPtr ptr); // 0x106282B0-0x106284B0
	}
}

namespace Steamworks
{
	[CallbackIdentity] // 0x10006D30-0x10006D50
	public struct VolumeHasChanged_t // TypeDefIndex: 4567
	{
		// Fields
		public const int k_iCallback = 4002; // Metadata: 0x002422DF
		public float m_flNewVolume; // 0x00
	}
}

public class VoteBanSystem : InnerNetObject // TypeDefIndex: 5392
{
	// Fields
	public static VoteBanSystem Instance; // 0x00
	public Dictionary<int, int[]> Votes; // 0x24

	// Constructors
	public VoteBanSystem(); // 0x10975470-0x109754D0

	// Methods
	public void Awake(); // 0x10975000-0x10975030
	public void CmdAddVote(int clientId); // 0x10975030-0x109750E0
	private void AddVote(int srcClient, int clientId); // 0x10974ED0-0x10975000
	public bool HasMyVote(int clientId); // 0x10975230-0x109752C0
	public override void HandleRpc(byte callId, MessageReader reader); // 0x109751F0-0x10975230
	public override bool Serialize(MessageWriter writer, bool initialState); // 0x109752C0-0x10975470
	public override void Deserialize(MessageReader reader, bool initialState); // 0x109750E0-0x109751F0
}

namespace PowerTools
{
	public class WaitForAnimationFinish : IEnumerator // TypeDefIndex: 5900
	{
		// Fields
		private SpriteAnim animator; // 0x08
		private AnimationClip clip; // 0x0C
		private bool first; // 0x10
	
		// Properties
		public object Current { get; } // 0x101D1BE0-0x101D1BF0 
	
		// Constructors
		public WaitForAnimationFinish(SpriteAnim animator, AnimationClip clip); // 0x101D1AF0-0x101D1BE0
	
		// Methods
		public bool MoveNext(); // 0x101D19D0-0x101D1AC0
		public void Reset(); // 0x101D1AC0-0x101D1AF0
	}
}

public class WaitForHostPopup : DestroyableSingleton<WaitForHostPopup> // TypeDefIndex: 5888
{
	// Fields
	public GameObject Content; // 0x10

	// Constructors
	public WaitForHostPopup(); // 0x109755F0-0x10975630

	// Methods
	public void Show(); // 0x10975560-0x109755F0
	public void ExitGame(); // 0x109754D0-0x10975530
	public void Hide(); // 0x10975530-0x10975560
}

public class WaitForLerp : IEnumerator // TypeDefIndex: 5264
{
	// Fields
	private float duration; // 0x08
	private float timer; // 0x0C
	private Action<float> act; // 0x10

	// Properties
	public object Current { get; } // 0x101D1BE0-0x101D1BF0 

	// Constructors
	public WaitForLerp(float seconds, Action<float> act); // 0x10975710-0x10975740

	// Methods
	public bool MoveNext(); // 0x10975630-0x10975710
	public void Reset(); // 0x102B9BB0-0x102B9BC0
}

public class WaterPlantsGame : Minigame // TypeDefIndex: 5840
{
	// Fields
	public GameObject stage1; // 0x28
	public GameObject stage2; // 0x2C
	public AudioClip CanGrabSound; // 0x30
	public PassiveButton WaterCan; // 0x34
	public SpriteRenderer[] Plants; // 0x38
	public AudioClip WaterPlantSound; // 0x3C
	public AudioClip[] PlantGrowSounds; // 0x40
	public AudioClip[] PlantFinishedSounds; // 0x44
	public TextRenderer FloatText; // 0x48
	public Transform[] Locations; // 0x4C

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoPickWaterCan_d__14 : IEnumerator<object> // TypeDefIndex: 5841
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public WaterPlantsGame __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoPickWaterCan_d__14(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10970E20-0x10971310
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10971310-0x10971360
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoGrowPlant_d__16 : IEnumerator<object> // TypeDefIndex: 5842
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public WaterPlantsGame __4__this; // 0x10
		public int num; // 0x14
		private SpriteRenderer _plant_5__2; // 0x18
		private float _timer_5__3; // 0x1C

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoGrowPlant_d__16(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10970710-0x10970DD0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10970DD0-0x10970E20
	}

	// Constructors
	public WaterPlantsGame(); // 0x101ACA10-0x101ACA20

	// Methods
	private bool Watered(int x); // 0x10975DD0-0x10975E10
	private void Watered(int x, bool b); // 0x10975D90-0x10975DD0
	public override void Begin(PlayerTask task); // 0x10975740-0x10975A00
	public void PickWaterCan(); // 0x10975AB0-0x10975BD0
	[IteratorStateMachine] // 0x1001E0B0-0x1001E100
	private IEnumerator CoPickWaterCan(); // 0x10975A60-0x10975AB0
	public void WaterPlant(int num); // 0x10975BD0-0x10975D90
	[IteratorStateMachine] // 0x1001E1B0-0x1001E200
	private IEnumerator CoGrowPlant(int num); // 0x10975A00-0x10975A60
}

public class WaterStage : Minigame // TypeDefIndex: 5639
{
	// Fields
	public float RefuelDuration; // 0x28
	private Color darkRed; // 0x2C
	private Color red; // 0x3C
	private Color green; // 0x4C
	public SpriteRenderer redLight; // 0x5C
	public SpriteRenderer greenLight; // 0x60
	public VerticalGauge srcGauge; // 0x64
	public VerticalGauge destGauge; // 0x68
	public AudioClip RefuelSound; // 0x6C
	private float timer; // 0x70
	private bool isDown; // 0x74
	private bool complete; // 0x75

	// Constructors
	public WaterStage(); // 0x101C2A20-0x101C2AC0

	// Methods
	public override void Begin(PlayerTask task); // 0x101C23B0-0x101C2410
	public void FixedUpdate(); // 0x10975ED0-0x10976160
	public void Refuel(); // 0x10976260-0x10976430
	private void GetRefuelDynamics(AudioSource player, float dt); // 0x10976160-0x10976260
	public override void Close(); // 0x10975E10-0x10975ED0
}

public class WaterWayTask : NormalPlayerTask // TypeDefIndex: 5861
{
	// Constructors
	public WaterWayTask(); // 0x10252B80-0x10252B90

	// Methods
	public override void Initialize(); // 0x10976430-0x10976480
	public override bool ValidConsole(Console console); // 0x10976480-0x10976500
}

public class WaterWheelGame : Minigame // TypeDefIndex: 5658
{
	// Fields
	public SpriteRenderer Wheel; // 0x28
	public VerticalSpriteGauge WaterLevel; // 0x2C
	public SpriteRenderer Watertop; // 0x30
	public int WheelScale; // 0x34
	public AudioClip FillStart; // 0x38
	public AudioClip FillLoop; // 0x3C
	public AudioClip WheelTurn; // 0x40
	private float Rate; // 0x44
	private AudioSource fillSound; // 0x48
	private bool grabbed; // 0x4C

	// Properties
	private float Water { get; set; } // 0x10976DC0-0x10976DE0 0x10976DE0-0x10976EB0

	// Constructors
	public WaterWheelGame(); // 0x10976D90-0x10976DC0

	// Methods
	public override void Begin(PlayerTask task); // 0x10976500-0x10976610
	public void Update(); // 0x109766B0-0x10976D90
	public void Grab(); // 0x10976690-0x109766B0
	public override void Close(); // 0x10976610-0x10976690
}

public class WeaponsMinigame : Minigame // TypeDefIndex: 5891
{
	// Fields
	public FloatRange XSpan; // 0x28
	public FloatRange YSpan; // 0x2C
	public FloatRange TimeToSpawn; // 0x30
	public ObjectPoolBehavior asteroidPool; // 0x34
	public TextController ScoreText; // 0x38
	public SpriteRenderer TargetReticle; // 0x3C
	public LineRenderer TargetLines; // 0x40
	private Vector3 TargetCenter; // 0x44
	public Collider2D BackgroundCol; // 0x50
	public SpriteRenderer Background; // 0x54
	public Controller myController; // 0x58
	private float Timer; // 0x5C
	public AudioClip ShootSound; // 0x60
	public AudioClip[] ExplodeSounds; // 0x64

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoAnimateOpen_d__15 : IEnumerator<object> // TypeDefIndex: 5892
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public WeaponsMinigame __4__this; // 0x10
		private float _timer_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoAnimateOpen_d__15(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1096F540-0x1096F7B0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1096F7B0-0x1096F800
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoDestroySelf_d__16 : IEnumerator<object> // TypeDefIndex: 5893
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public WeaponsMinigame __4__this; // 0x10
		private float _timer_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoDestroySelf_d__16(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1096FF70-0x109701D0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x109701D0-0x10970220
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class __c__DisplayClass17_0 // TypeDefIndex: 5894
	{
		// Fields
		public Asteroid ast; // 0x08
		public WeaponsMinigame __4__this; // 0x0C

		// Constructors
		public __c__DisplayClass17_0(); // 0x101A2CD0-0x101A2CE0

		// Methods
		internal void _FixedUpdate_b__0(); // 0x10971D80-0x10971DB0
	}

	// Constructors
	public WeaponsMinigame(); // 0x10977B60-0x10977C10

	// Methods
	public override void Begin(PlayerTask task); // 0x10976EB0-0x10976FB0
	[IteratorStateMachine] // 0x10020C50-0x10020CA0
	protected override IEnumerator CoAnimateOpen(); // 0x10977430-0x10977480
	[IteratorStateMachine] // 0x10020CE0-0x10020D30
	protected override IEnumerator CoDestroySelf(); // 0x10977480-0x109774D0
	public void FixedUpdate(); // 0x109774D0-0x10977B60
	public void BreakApart(Asteroid ast); // 0x10976FB0-0x10977430
}

public class Weather1Game : Minigame // TypeDefIndex: 5661
{
	// Fields
	private static int[] BarrierValidX; // 0x00
	private static int[] BarrierValidY; // 0x04
	private const int MinX = -10; // Metadata: 0x00243C97
	private const int MaxX = 8; // Metadata: 0x00243C9B
	private const int MinY = -3; // Metadata: 0x00243C9F
	private const int MaxY = 3; // Metadata: 0x00243CA3
	public Tilemap BarrierMap; // 0x28
	public Tile fillTile; // 0x2C
	public Tile controlTile; // 0x30
	public Tile barrierTile; // 0x34
	public SpriteRenderer pulseCircle1; // 0x38
	public SpriteRenderer pulseCircle2; // 0x3C
	public AudioClip NodeMove; // 0x40
	private Controller control; // 0x44
	private bool inControl; // 0x48
	private Vector3Int controlTilePos; // 0x4C
	private static Vector3Int[] Directions; // 0x08

	// Constructors
	public Weather1Game(); // 0x10979090-0x10979120
	static Weather1Game(); // 0x10978ED0-0x10979090

	// Methods
	public void Start(); // 0x10978470-0x109787E0
	private bool SolveMaze(Vector3Int curPos, HashSet<Vector3Int> solution); // 0x10978200-0x10978470
	public void Update(); // 0x109787E0-0x10978ED0
	private void FillLine(Vector3Int controlTilePos, Vector3Int touchCellPos); // 0x10977EE0-0x10978160
	private bool AnythingBetween(Vector3Int controlTilePos, Vector3Int touchCellPos); // 0x10977C10-0x10977EE0
	private bool PointIsValid(Vector3Int touchCellPos); // 0x10978160-0x10978200
	private bool Contains<T>(T[] self, T item)
		where T : IComparable;
}

public class WeatherControl : MonoBehaviour // TypeDefIndex: 5662
{
	// Fields
	public Sprite backgroundLight; // 0x0C
	public Sprite backgroundDark; // 0x10
	public Sprite lightOff; // 0x14
	public Sprite lightOn; // 0x18
	public SpriteRenderer Background; // 0x1C
	public SpriteRenderer Switch; // 0x20
	public SpriteRenderer Light; // 0x24
	public TextRenderer Label; // 0x28

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _Run_d__10 : IEnumerator<object> // TypeDefIndex: 5663
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public WeatherControl __4__this; // 0x10

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _Run_d__10(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10971C20-0x10971D30
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10971D30-0x10971D80
	}

	// Constructors
	public WeatherControl(); // 0x101A68C0-0x101A68D0

	// Methods
	internal void SetInactive(); // 0x10979210-0x109792E0
	public void SetActive(); // 0x10979170-0x10979210
	[IteratorStateMachine] // 0x10011C00-0x10011C50
	private IEnumerator Run(); // 0x10979120-0x10979170
}

public class WeatherMinigame : Minigame // TypeDefIndex: 5189
{
	// Fields
	public float Duration; // 0x28
	public HorizontalGauge destGauge1; // 0x2C
	public HorizontalGauge destGauge2; // 0x30
	public HorizontalGauge destGauge3; // 0x34
	public PassiveButton StartButton; // 0x38
	public TextRenderer EtaText; // 0x3C
	public AudioClip StartSound; // 0x40

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoDoAnimation_d__8 : IEnumerator<object> // TypeDefIndex: 5190
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public WeatherMinigame __4__this; // 0x10
		private float _timer_5__2; // 0x14

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoDoAnimation_d__8(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10970220-0x109706C0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x109706C0-0x10970710
	}

	// Constructors
	public WeatherMinigame(); // 0x10979410-0x10979430

	// Methods
	public void StartStopFill(); // 0x109793A0-0x10979410
	[IteratorStateMachine] // 0x1001E160-0x1001E1B0
	private IEnumerator CoDoAnimation(); // 0x10979350-0x109793A0
	public override void Close(); // 0x109792E0-0x10979350
}

public class WeatherNodeTask : NormalPlayerTask // TypeDefIndex: 5862
{
	// Fields
	public int NodeId; // 0x44
	public Minigame Stage2Prefab; // 0x48

	// Constructors
	public WeatherNodeTask(); // 0x10252B80-0x10252B90

	// Methods
	public override bool ValidConsole(Console console); // 0x10979600-0x109796A0
	public override Minigame GetMinigamePrefab(); // 0x109795E0-0x10979600
	public override void AppendTaskText(StringBuilder sb); // 0x10979430-0x109795E0
	[CompilerGenerated] // 0x10002030-0x10002050
	private bool _ValidConsole_b__2_0(TaskSet t); // 0x10252AB0-0x10252AD0
}

public class WeatherSwitchGame : Minigame // TypeDefIndex: 5664
{
	// Fields
	public static string[] ControlNames; // 0x00
	public WeatherControl[] Controls; // 0x28
	private WeatherNodeTask WeatherTask; // 0x2C
	public AudioClip SwitchSound; // 0x30

	// Constructors
	public WeatherSwitchGame(); // 0x101ACA10-0x101ACA20
	static WeatherSwitchGame(); // 0x10979AB0-0x10979CD0

	// Methods
	public void Start(); // 0x109799C0-0x10979AB0
	public override void Begin(PlayerTask task); // 0x109796A0-0x10979810
	public void FlipSwitch(int i); // 0x10979810-0x109799C0
}

public class WifiGame : Minigame // TypeDefIndex: 5665
{
	// Fields
	private const int WaitDuration = 60; // Metadata: 0x00243CA9
	public SlideBar Slider; // 0x28
	public TextRenderer StatusText; // 0x2C
	public SpriteRenderer[] Lights; // 0x30
	public Sprite LightOn; // 0x34
	public Sprite LightOff; // 0x38
	public AudioClip SliderClick; // 0x3C
	private bool WifiOff; // 0x40

	// Nested types
	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _RunLights_d__12 : IEnumerator<object> // TypeDefIndex: 5666
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public bool finishing; // 0x10
		public WifiGame __4__this; // 0x14
		private float _timer_5__2; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _RunLights_d__12(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x10971460-0x10971BD0
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x10971BD0-0x10971C20
	}

	[CompilerGenerated] // 0x10002030-0x10002050
	private sealed class _CoBlinkLight_d__13 : IEnumerator<object> // TypeDefIndex: 5667
	{
		// Fields
		private int __1__state; // 0x08
		private object __2__current; // 0x0C
		public SpriteRenderer light; // 0x10
		public WifiGame __4__this; // 0x14
		public float delay; // 0x18

		// Properties
		object IEnumerator<System.Object>.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 
		object IEnumerator.Current { [DebuggerHidden] /* 0x10002030-0x10002050 */ get; } // 0x101AE200-0x101AE210 

		// Constructors
		[DebuggerHidden] // 0x10002030-0x10002050
		public _CoBlinkLight_d__13(int __1__state); // 0x101B54B0-0x101B54D0

		// Methods
		[DebuggerHidden] // 0x10002030-0x10002050
		void IDisposable.Dispose(); // 0x101A2F90-0x101A2FA0
		private bool MoveNext(); // 0x1096F800-0x1096F930
		[DebuggerHidden] // 0x10002030-0x10002050
		void IEnumerator.Reset(); // 0x1096F930-0x1096F980
	}

	// Constructors
	public WifiGame(); // 0x101ACA10-0x101ACA20

	// Methods
	public override void Begin(PlayerTask task); // 0x10979CD0-0x10979D20
	public void Update(); // 0x1097A150-0x1097A350
	private void TurnOn(bool first = false /* Metadata: 0x00243CA7 */); // 0x10979FB0-0x1097A0F0
	private void TurnOff(bool first = false /* Metadata: 0x00243CA8 */); // 0x10979DE0-0x10979FB0
	[IteratorStateMachine] // 0x10011DC0-0x10011E10
	private IEnumerator RunLights(bool finishing); // 0x10979D80-0x10979DE0
	[IteratorStateMachine] // 0x10011EA0-0x10011EF0
	private IEnumerator CoBlinkLight(SpriteRenderer light, float delay); // 0x10979D20-0x10979D80
	[CompilerGenerated] // 0x10002030-0x10002050
	private void _TurnOff_b__11_0(SpriteRenderer s); // 0x1097A120-0x1097A150
	[CompilerGenerated] // 0x10002030-0x10002050
	private void _RunLights_b__12_0(SpriteRenderer s); // 0x1097A0F0-0x1097A120
	[CompilerGenerated] // 0x10002030-0x10002050
	private void _RunLights_b__12_1(SpriteRenderer s); // 0x1097A0F0-0x1097A120
}

public class WinningPlayerData // TypeDefIndex: 5863
{
	// Fields
	public string Name; // 0x08
	public bool IsDead; // 0x0C
	public bool IsImpostor; // 0x0D
	public int ColorId; // 0x10
	public uint SkinId; // 0x14
	public uint HatId; // 0x18
	public uint PetId; // 0x1C
	public bool IsYou; // 0x20

	// Constructors
	public WinningPlayerData(); // 0x101A2CD0-0x101A2CE0
	public WinningPlayerData(GameData.PlayerInfo player); // 0x1097A350-0x1097A440
}

public class Wire : MonoBehaviour // TypeDefIndex: 5312
{
	// Fields
	private const int WireDepth = -14; // Metadata: 0x00243B26
	public SpriteRenderer Liner; // 0x0C
	public SpriteRenderer ColorBase; // 0x10
	public SpriteRenderer ColorEnd; // 0x14
	public Collider2D hitbox; // 0x18
	public SpriteRenderer WireTip; // 0x1C
	public sbyte WireId; // 0x20
	[CompilerGenerated] // 0x10002030-0x10002050
	private Vector2 _BaseWorldPos_k__BackingField; // 0x24

	// Properties
	public Vector2 BaseWorldPos { [CompilerGenerated] /* 0x10002030-0x10002050 */ get; [CompilerGenerated] /* 0x10002030-0x10002050 */ internal set; } // 0x1097B7A0-0x1097B7C0 0x1097B7C0-0x1097B7E0

	// Constructors
	public Wire(); // 0x101A68C0-0x101A68D0

	// Methods
	public void Start(); // 0x1097B6F0-0x1097B7A0
	public void ResetLine(Vector3 targetWorldPos, bool reset = false /* Metadata: 0x00243B25 */); // 0x1097B1C0-0x1097B650
	public void ConnectRight(WireNode node); // 0x1097B160-0x1097B1C0
	public void SetColor(Color color); // 0x1097B650-0x1097B6F0
}

public class WireMinigame : Minigame // TypeDefIndex: 5313
{
	// Fields
	private static readonly Color[] colors; // 0x00
	public Wire[] LeftNodes; // 0x28
	public WireNode[] RightNodes; // 0x2C
	public SpriteRenderer[] LeftLights; // 0x30
	public SpriteRenderer[] RightLights; // 0x34
	private Controller myController; // 0x38
	private sbyte[] ExpectedWires; // 0x3C
	private sbyte[] ActualWires; // 0x40
	public AudioClip[] WireSounds; // 0x44

	// Constructors
	public WireMinigame(); // 0x1097B070-0x1097B0E0
	static WireMinigame(); // 0x1097AF80-0x1097B070

	// Methods
	private bool TaskIsForThisPanel(); // 0x1097A790-0x1097A820
	public override void Begin(PlayerTask task); // 0x1097A440-0x1097A680
	public void Update(); // 0x1097AA80-0x1097AF80
	private void UpdateLights(); // 0x1097A820-0x1097AA80
	private WireNode CheckRightSide(Vector2 pos); // 0x1097A680-0x1097A710
	private void CheckTask(); // 0x1097A710-0x1097A790
}

public class WireNode : MonoBehaviour // TypeDefIndex: 5314
{
	// Fields
	public Collider2D hitbox; // 0x0C
	public SpriteRenderer[] WireColors; // 0x10
	public sbyte WireId; // 0x14

	// Constructors
	public WireNode(); // 0x101A68C0-0x101A68D0

	// Methods
	internal void SetColor(Color color); // 0x1097B0E0-0x1097B160
}

namespace MS.Internal.Xml.XPath
{
	internal sealed class XPathAncestorQuery : CacheAxisQuery // TypeDefIndex: 1803
	{
		// Fields
		private bool matchSelf; // 0x30
	
		// Properties
		public override int CurrentPosition { get; } // 0x106C78C0-0x106C7900 
		public override QueryProps Properties { get; } // 0x1038D2F0-0x1038D300 
	
		// Constructors
		public XPathAncestorQuery(Query qyInput, string name, string prefix, XPathNodeType typeTest, bool matchSelf); // 0x106C7860-0x106C7890
		private XPathAncestorQuery(XPathAncestorQuery other); // 0x106C7890-0x106C78C0
	
		// Methods
		public override object Evaluate(XPathNodeIterator context); // 0x106C7770-0x106C7860
		public override XPathNodeIterator Clone(); // 0x106C7710-0x106C7770
	}

	[DebuggerDisplay] // 0x10036B60-0x10036B90
	internal class XPathArrayIterator : ResetableIterator // TypeDefIndex: 1804
	{
		// Fields
		protected IList list; // 0x0C
		protected int index; // 0x10
	
		// Properties
		public override XPathNavigator Current { get; } // 0x106C7BD0-0x106C7D30 
		public override int CurrentPosition { get; } // 0x101BCD80-0x101BCD90 
		public override int Count { get; } // 0x106C7B80-0x106C7BD0 
		private new object debuggerDisplayProxy { get; } // 0x106C7D30-0x106C7D90 
	
		// Constructors
		public XPathArrayIterator(XPathArrayIterator it); // 0x106C7A10-0x106C7A50
		public XPathArrayIterator(XPathNodeIterator nodeIterator); // 0x106C7A50-0x106C7B80
	
		// Methods
		public override XPathNodeIterator Clone(); // 0x106C7900-0x106C7960
		public override bool MoveNext(); // 0x106C79B0-0x106C7A10
		public override void Reset(); // 0x1054EB10-0x1054EB20
		public override IEnumerator GetEnumerator(); // 0x106C7960-0x106C79B0
	}

	internal abstract class XPathAxisIterator : XPathNodeIterator // TypeDefIndex: 1805
	{
		// Fields
		internal XPathNavigator nav; // 0x0C
		internal XPathNodeType type; // 0x10
		internal string name; // 0x14
		internal string uri; // 0x18
		internal int position; // 0x1C
		internal bool matchSelf; // 0x20
		internal bool first; // 0x21
	
		// Properties
		public override XPathNavigator Current { get; } // 0x101AE200-0x101AE210 
		public override int CurrentPosition { get; } // 0x101F85C0-0x101F85D0 
		protected virtual bool Matches { get; } // 0x106C7F00-0x106C8020 
	
		// Constructors
		public XPathAxisIterator(XPathNavigator nav, bool matchSelf); // 0x106C7EA0-0x106C7ED0
		public XPathAxisIterator(XPathNavigator nav, XPathNodeType type, bool matchSelf); // 0x106C7ED0-0x106C7F00
		public XPathAxisIterator(XPathNavigator nav, string name, string namespaceURI, bool matchSelf); // 0x106C7D90-0x106C7E30
		public XPathAxisIterator(XPathAxisIterator it); // 0x106C7E30-0x106C7EA0
	}

	internal class XPathChildIterator : XPathAxisIterator // TypeDefIndex: 1806
	{
		// Constructors
		public XPathChildIterator(XPathNavigator nav, XPathNodeType type); // 0x106C8100-0x106C8130
		public XPathChildIterator(XPathNavigator nav, string name, string namespaceURI); // 0x106C80E0-0x106C8100
		public XPathChildIterator(XPathChildIterator it); // 0x106C8130-0x106C8140
	
		// Methods
		public override XPathNodeIterator Clone(); // 0x106C8020-0x106C8070
		public override bool MoveNext(); // 0x106C8070-0x106C80E0
	}

	internal class XPathDescendantIterator : XPathAxisIterator // TypeDefIndex: 1807
	{
		// Fields
		private int level; // 0x24
	
		// Constructors
		public XPathDescendantIterator(XPathNavigator nav, XPathNodeType type, bool matchSelf); // 0x106C7ED0-0x106C7F00
		public XPathDescendantIterator(XPathNavigator nav, string name, string namespaceURI, bool matchSelf); // 0x106C8290-0x106C82A0
		public XPathDescendantIterator(XPathDescendantIterator it); // 0x106C82A0-0x106C82D0
	
		// Methods
		public override XPathNodeIterator Clone(); // 0x106C8140-0x106C81A0
		public override bool MoveNext(); // 0x106C81A0-0x106C8290
	}
}

namespace MS.Internal.Xml.Cache
{
	internal abstract class XPathDocumentBaseIterator : XPathNodeIterator // TypeDefIndex: 1816
	{
		// Fields
		protected XPathDocumentNavigator ctxt; // 0x0C
		protected int pos; // 0x10
	
		// Properties
		public override XPathNavigator Current { get; } // 0x101AE200-0x101AE210 
		public override int CurrentPosition { get; } // 0x101BCD80-0x101BCD90 
	
		// Constructors
		protected XPathDocumentBaseIterator(XPathDocumentNavigator ctxt); // 0x106C82D0-0x106C8350
		protected XPathDocumentBaseIterator(XPathDocumentBaseIterator iter); // 0x106C8350-0x106C83E0
	}

	internal class XPathDocumentElementChildIterator : XPathDocumentBaseIterator // TypeDefIndex: 1817
	{
		// Fields
		private string localName; // 0x14
		private string namespaceUri; // 0x18
	
		// Constructors
		public XPathDocumentElementChildIterator(XPathDocumentNavigator parent, string name, string namespaceURI); // 0x106C84B0-0x106C8560
		public XPathDocumentElementChildIterator(XPathDocumentElementChildIterator iter); // 0x106C8560-0x106C85A0
	
		// Methods
		public override XPathNodeIterator Clone(); // 0x106C83E0-0x106C8440
		public override bool MoveNext(); // 0x106C8440-0x106C84B0
	}

	internal class XPathDocumentElementDescendantIterator : XPathDocumentBaseIterator // TypeDefIndex: 1819
	{
		// Fields
		private XPathDocumentNavigator end; // 0x14
		private string localName; // 0x18
		private string namespaceUri; // 0x1C
		private bool matchSelf; // 0x20
	
		// Constructors
		public XPathDocumentElementDescendantIterator(XPathDocumentNavigator root, string name, string namespaceURI, bool matchSelf); // 0x106C8720-0x106C8830
		public XPathDocumentElementDescendantIterator(XPathDocumentElementDescendantIterator iter); // 0x106C8830-0x106C8870
	
		// Methods
		public override XPathNodeIterator Clone(); // 0x106C85A0-0x106C8610
		public override bool MoveNext(); // 0x106C8610-0x106C8720
	}

	internal class XPathDocumentKindChildIterator : XPathDocumentBaseIterator // TypeDefIndex: 1818
	{
		// Fields
		private XPathNodeType typ; // 0x14
	
		// Constructors
		public XPathDocumentKindChildIterator(XPathDocumentNavigator parent, XPathNodeType typ); // 0x106C8930-0x106C8950
		public XPathDocumentKindChildIterator(XPathDocumentKindChildIterator iter); // 0x106C8950-0x106C8980
	
		// Methods
		public override XPathNodeIterator Clone(); // 0x106C8870-0x106C88D0
		public override bool MoveNext(); // 0x106C88D0-0x106C8930
	}

	internal class XPathDocumentKindDescendantIterator : XPathDocumentBaseIterator // TypeDefIndex: 1820
	{
		// Fields
		private XPathDocumentNavigator end; // 0x14
		private XPathNodeType typ; // 0x18
		private bool matchSelf; // 0x1C
	
		// Constructors
		public XPathDocumentKindDescendantIterator(XPathDocumentNavigator root, XPathNodeType typ, bool matchSelf); // 0x106C8AD0-0x106C8B70
		public XPathDocumentKindDescendantIterator(XPathDocumentKindDescendantIterator iter); // 0x106C8B70-0x106C8BB0
	
		// Methods
		public override XPathNodeIterator Clone(); // 0x106C8980-0x106C89F0
		public override bool MoveNext(); // 0x106C89F0-0x106C8AD0
	}

	internal sealed class XPathDocumentNavigator : XPathNavigator // TypeDefIndex: 1821
	{
		// Fields
		private XPathNode[] pageCurrent; // 0x08
		private XPathNode[] pageParent; // 0x0C
		private int idxCurrent; // 0x10
		private int idxParent; // 0x14
		private string atomizedLocalName; // 0x18
	
		// Properties
		public override string Value { get; } // 0x106CA6D0-0x106CA8B0 
		public override XPathNodeType NodeType { get; } // 0x106CA650-0x106CA690 
		public override string LocalName { get; } // 0x106CA540-0x106CA580 
		public override string NamespaceURI { get; } // 0x106CA610-0x106CA650 
		public override string Name { get; } // 0x106CA5C0-0x106CA610 
		public override string Prefix { get; } // 0x106CA690-0x106CA6D0 
		public override string BaseURI { get; } // 0x106CA490-0x106CA540 
		public override XmlNameTable NameTable { get; } // 0x106CA580-0x106CA5C0 
		public override object UnderlyingObject { get; } // 0x102E86B0-0x102E86D0 
	
		// Constructors
		public XPathDocumentNavigator(XPathNode[] pageCurrent, int idxCurrent, XPathNode[] pageParent, int idxParent); // 0x106CA420-0x106CA490
		public XPathDocumentNavigator(XPathDocumentNavigator nav); // 0x106CA3E0-0x106CA420
	
		// Methods
		public override XPathNavigator Clone(); // 0x106C8BB0-0x106C8C20
		public override bool MoveToFirstAttribute(); // 0x106C9320-0x106C93B0
		public override bool MoveToNextAttribute(); // 0x106C9AC0-0x106C9B40
		public override bool MoveToAttribute(string localName, string namespaceURI); // 0x106C9160-0x106C9200
		public override bool MoveToFirstNamespace(XPathNamespaceScope namespaceScope); // 0x106C9520-0x106C96E0
		public override bool MoveToNextNamespace(XPathNamespaceScope scope); // 0x106C9B40-0x106C9C80
		public override bool MoveToNext(); // 0x106C9D60-0x106C9DD0
		public override bool MoveToFirstChild(); // 0x106C93B0-0x106C9520
		public override bool MoveToParent(); // 0x106C9EF0-0x106C9F70
		public override bool MoveTo(XPathNavigator other); // 0x106C9FE0-0x106CA040
		public override bool MoveToId(string id); // 0x106C9A40-0x106C9AC0
		public override bool IsSamePosition(XPathNavigator other); // 0x106C90F0-0x106C9160
		public override void MoveToRoot(); // 0x106C9F70-0x106C9FE0
		public override bool MoveToChild(string localName, string namespaceURI); // 0x106C92B0-0x106C9320
		public override bool MoveToNext(string localName, string namespaceURI); // 0x106C9DD0-0x106C9EF0
		public override bool MoveToChild(XPathNodeType type); // 0x106C9200-0x106C92B0
		public override bool MoveToNext(XPathNodeType type); // 0x106C9C80-0x106C9D60
		public override bool MoveToFollowing(string localName, string namespaceURI, XPathNavigator end); // 0x106C9930-0x106C9A40
		public override bool MoveToFollowing(XPathNodeType type, XPathNavigator end); // 0x106C96E0-0x106C9930
		public override XPathNodeIterator SelectChildren(XPathNodeType type); // 0x106CA040-0x106CA090
		public override XPathNodeIterator SelectChildren(string name, string namespaceURI); // 0x106CA090-0x106CA1A0
		public override XPathNodeIterator SelectDescendants(XPathNodeType type, bool matchSelf); // 0x106CA1A0-0x106CA270
		public override XPathNodeIterator SelectDescendants(string name, string namespaceURI, bool matchSelf); // 0x106CA270-0x106CA3E0
		public override XmlNodeOrder ComparePosition(XPathNavigator other); // 0x106C8C20-0x106C8D30
		public override bool IsDescendant(XPathNavigator other); // 0x106C8EF0-0x106C8FB0
		private int GetPrimaryLocation(); // 0x106C8DE0-0x106C8E50
		private int GetSecondaryLocation(); // 0x106C8E50-0x106C8EF0
		public int GetPositionHashCode(); // 0x106C8DD0-0x106C8DE0
		public bool IsElementMatch(string localName, string namespaceURI); // 0x106C8FB0-0x106C9060
		public bool IsKindMatch(XPathNodeType typ); // 0x106C9060-0x106C90F0
		private int GetFollowingEnd(XPathDocumentNavigator end, bool useParentOfVirtual, out XPathNode[] pageEnd); // 0x106C8D30-0x106C8DD0
	}
}

namespace MS.Internal.Xml.XPath
{
	internal sealed class XPathEmptyIterator : ResetableIterator // TypeDefIndex: 1808
	{
		// Fields
		public static XPathEmptyIterator Instance; // 0x00
	
		// Properties
		public override XPathNavigator Current { get; } // 0x101D1BE0-0x101D1BF0 
		public override int CurrentPosition { get; } // 0x101D1BE0-0x101D1BF0 
		public override int Count { get; } // 0x101D1BE0-0x101D1BF0 
	
		// Constructors
		private XPathEmptyIterator(); // 0x106BB920-0x106BB940
		static XPathEmptyIterator(); // 0x106CA8B0-0x106CA900
	
		// Methods
		public override XPathNodeIterator Clone(); // 0x1018AFD0-0x1018AFE0
		public override bool MoveNext(); // 0x101A1190-0x101A1520
		public override void Reset(); // 0x101A2F90-0x101A2FA0
	}
}

namespace MS.Internal.Xml.Cache
{
	internal struct XPathNode // TypeDefIndex: 1822
	{
		// Fields
		private XPathNodeInfoAtom info; // 0x00
		private ushort idxSibling; // 0x04
		private ushort idxParent; // 0x06
		private ushort idxSimilar; // 0x08
		private ushort posOffset; // 0x0A
		private uint props; // 0x0C
		private string value; // 0x10
	
		// Properties
		public XPathNodeType NodeType { get; } // 0x100D05A0-0x100D05B0 
		public string Prefix { get; } // 0x100D05D0-0x100D0610 
		public string LocalName { get; } // 0x100BA8D0-0x100BA8F0 
		public string Name { get; } // 0x100D0570-0x100D0580 
		public string NamespaceUri { get; } // 0x100D0580-0x100D05A0 
		public XPathDocument Document { get; } // 0x100D0440-0x100D0460 
		public string BaseUri { get; } // 0x100D0420-0x100D0440 
		public XPathNodePageInfo PageInfo { get; } // 0x100D05B0-0x100D05D0 
		public bool IsXmlNamespaceNode { get; } // 0x100D0560-0x100D0570 
		public bool HasSibling { get; } // 0x100D04D0-0x100D04E0 
		public bool HasCollapsedText { get; } // 0x100D0470-0x100D0490 
		public bool HasAttribute { get; } // 0x100D0460-0x100D0470 
		public bool HasContentChild { get; } // 0x100D0490-0x100D04A0 
		public bool HasElementChild { get; } // 0x100D04A0-0x100D04B0 
		public bool IsAttrNmsp { get; } // 0x100D04E0-0x100D0500 
		public bool IsText { get; } // 0x100D0500-0x100D0560 
		public bool HasNamespaceDecls { get; } // 0x100D04B0-0x100D04D0 
		public string Value { get; } // 0x100A4DA0-0x100A4E00 
	
		// Methods
		public int GetRoot(out XPathNode[] pageNode); // 0x100D0370-0x100D03A0
		public int GetParent(out XPathNode[] pageNode); // 0x100D0350-0x100D0370
		public int GetSibling(out XPathNode[] pageNode); // 0x100D03A0-0x100D03C0
		public int GetSimilarElement(out XPathNode[] pageNode); // 0x100D03C0-0x100D03E0
		public bool NameMatch(string localName, string namespaceName); // 0x100D03E0-0x100D0420
		public bool ElementMatch(string localName, string namespaceName); // 0x100D0310-0x100D0350
	}

	internal abstract class XPathNodeHelper // TypeDefIndex: 1824
	{
		// Methods
		public static int GetLocalNamespaces(XPathNode[] pageElem, int idxElem, out XPathNode[] pageNmsp); // 0x106CB560-0x106CB5D0
		public static int GetInScopeNamespaces(XPathNode[] pageElem, int idxElem, out XPathNode[] pageNmsp); // 0x106CB4A0-0x106CB560
		public static bool GetFirstAttribute(ref XPathNode[] pageNode, ref int idxNode); // 0x106CB410-0x106CB4A0
		public static bool GetNextAttribute(ref XPathNode[] pageNode, ref int idxNode); // 0x106CB610-0x106CB690
		public static bool GetContentChild(ref XPathNode[] pageNode, ref int idxNode); // 0x106CABD0-0x106CACA0
		public static bool GetContentSibling(ref XPathNode[] pageNode, ref int idxNode); // 0x106CAEC0-0x106CAF30
		public static bool GetParent(ref XPathNode[] pageNode, ref int idxNode); // 0x106CB720-0x106CB780
		public static int GetLocation(XPathNode[] pageNode, int idxNode); // 0x106CB5D0-0x106CB610
		public static bool GetElementChild(ref XPathNode[] pageNode, ref int idxNode, string localName, string namespaceName); // 0x106CAF30-0x106CB060
		public static bool GetElementSibling(ref XPathNode[] pageNode, ref int idxNode, string localName, string namespaceName); // 0x106CB350-0x106CB410
		public static bool GetContentChild(ref XPathNode[] pageNode, ref int idxNode, XPathNodeType typ); // 0x106CAA90-0x106CABD0
		public static bool GetContentSibling(ref XPathNode[] pageNode, ref int idxNode, XPathNodeType typ); // 0x106CADE0-0x106CAEC0
		public static bool GetAttribute(ref XPathNode[] pageNode, ref int idxNode, string localName, string namespaceName); // 0x106CA900-0x106CAA30
		public static bool GetElementFollowing(ref XPathNode[] pageCurrent, ref int idxCurrent, XPathNode[] pageEnd, int idxEnd, string localName, string namespaceName); // 0x106CB060-0x106CB350
		public static bool GetContentFollowing(ref XPathNode[] pageCurrent, ref int idxCurrent, XPathNode[] pageEnd, int idxEnd, XPathNodeType typ); // 0x106CACA0-0x106CADE0
		public static bool GetTextFollowing(ref XPathNode[] pageCurrent, ref int idxCurrent, XPathNode[] pageEnd, int idxEnd); // 0x106CB780-0x106CBAC0
		public static bool GetNonDescendant(ref XPathNode[] pageNode, ref int idxNode); // 0x106CB690-0x106CB720
		private static void GetChild(ref XPathNode[] pageNode, ref int idxNode); // 0x106CAA30-0x106CAA90
	}

	internal sealed class XPathNodeInfoAtom // TypeDefIndex: 1826
	{
		// Fields
		private string localName; // 0x08
		private string namespaceUri; // 0x0C
		private string prefix; // 0x10
		private string baseUri; // 0x14
		private XPathNode[] pageParent; // 0x18
		private XPathNode[] pageSibling; // 0x1C
		private XPathNode[] pageSimilar; // 0x20
		private XPathDocument doc; // 0x24
		private XPathNodePageInfo pageInfo; // 0x28
	
		// Properties
		public XPathNodePageInfo PageInfo { get; } // 0x101CB980-0x101CB990 
		public string LocalName { get; } // 0x101B4FF0-0x101B5000 
		public string NamespaceUri { get; } // 0x101AE200-0x101AE210 
		public string Prefix { get; } // 0x101BCD80-0x101BCD90 
		public string BaseUri { get; } // 0x101ADCB0-0x101ADCC0 
		public XPathNode[] SiblingPage { get; } // 0x101F85C0-0x101F85D0 
		public XPathNode[] SimilarElementPage { get; } // 0x101BCCB0-0x101BCCC0 
		public XPathNode[] ParentPage { get; } // 0x101ADCC0-0x101ADCD0 
		public XPathDocument Document { get; } // 0x101BA650-0x101BA660 
	}

	internal sealed class XPathNodePageInfo // TypeDefIndex: 1825
	{
		// Fields
		private int pageNum; // 0x08
		private int nodeCount; // 0x0C
		private XPathNode[] pageNext; // 0x10
	
		// Properties
		public int PageNumber { get; } // 0x101B4FF0-0x101B5000 
		public int NodeCount { get; } // 0x101AE200-0x101AE210 
		public XPathNode[] NextPage { get; } // 0x101BCD80-0x101BCD90 
	}

	internal struct XPathNodeRef // TypeDefIndex: 1823
	{
		// Fields
		private XPathNode[] page; // 0x00
		private int idx; // 0x04
	
		// Properties
		public XPathNode[] Page { get; } // 0x10093240-0x10093250 
		public int Index { get; } // 0x10093000-0x10093010 
	
		// Constructors
		public XPathNodeRef(XPathNode[] page, int idx); // 0x10073670-0x10073690
	
		// Methods
		public override int GetHashCode(); // 0x100D02A0-0x100D0310
	}
}

namespace MS.Internal.Xml.XPath
{
	internal class XPathParser // TypeDefIndex: 1809
	{
		// Fields
		private XPathScanner scanner; // 0x08
		private int parseDepth; // 0x0C
		private static readonly XPathResultType[] temparray1; // 0x00
		private static readonly XPathResultType[] temparray2; // 0x04
		private static readonly XPathResultType[] temparray3; // 0x08
		private static readonly XPathResultType[] temparray4; // 0x0C
		private static readonly XPathResultType[] temparray5; // 0x10
		private static readonly XPathResultType[] temparray6; // 0x14
		private static readonly XPathResultType[] temparray7; // 0x18
		private static readonly XPathResultType[] temparray8; // 0x1C
		private static readonly XPathResultType[] temparray9; // 0x20
		private static Hashtable functionTable; // 0x24
		private static Hashtable AxesTable; // 0x28
	
		// Nested types
		private class ParamInfo // TypeDefIndex: 1810
		{
			// Fields
			private Function.FunctionType ftype; // 0x08
			private int minargs; // 0x0C
			private int maxargs; // 0x10
			private XPathResultType[] argTypes; // 0x14
	
			// Properties
			public Function.FunctionType FType { get; } // 0x101B4FF0-0x101B5000 
			public int Minargs { get; } // 0x101AE200-0x101AE210 
			public int Maxargs { get; } // 0x101BCD80-0x101BCD90 
			public XPathResultType[] ArgTypes { get; } // 0x101ADCB0-0x101ADCC0 
	
			// Constructors
			internal ParamInfo(Function.FunctionType ftype, int minargs, int maxargs, XPathResultType[] argTypes); // 0x1026C3A0-0x1026C3D0
		}
	
		// Constructors
		private XPathParser(XPathScanner scanner); // 0x101B54B0-0x101B54D0
		static XPathParser(); // 0x106CE7C0-0x106CEA20
	
		// Methods
		public static AstNode ParseXPathExpresion(string xpathExpresion); // 0x106CE6A0-0x106CE740
		private AstNode ParseExpresion(AstNode qyInput); // 0x106CCAA0-0x106CCBF0
		private AstNode ParseOrExpr(AstNode qyInput); // 0x106CD900-0x106CDA00
		private AstNode ParseAndExpr(AstNode qyInput); // 0x106CC8E0-0x106CC9E0
		private AstNode ParseEqualityExpr(AstNode qyInput); // 0x106CC9E0-0x106CCAA0
		private AstNode ParseRelationalExpr(AstNode qyInput); // 0x106CDF00-0x106CE000
		private AstNode ParseAdditiveExpr(AstNode qyInput); // 0x106CC820-0x106CC8E0
		private AstNode ParseMultiplicativeExpr(AstNode qyInput); // 0x106CD4E0-0x106CD650
		private AstNode ParseUnaryExpr(AstNode qyInput); // 0x106CE410-0x106CE520
		private AstNode ParseUnionExpr(AstNode qyInput); // 0x106CE520-0x106CE6A0
		private static bool IsNodeType(XPathScanner scaner); // 0x106CC680-0x106CC730
		private AstNode ParsePathExpr(AstNode qyInput); // 0x106CDA00-0x106CDC80
		private AstNode ParseFilterExpr(AstNode qyInput); // 0x106CCBF0-0x106CCDC0
		private AstNode ParsePredicate(AstNode qyInput); // 0x106CDC80-0x106CDD00
		private AstNode ParseLocationPath(AstNode qyInput); // 0x106CCDC0-0x106CCEF0
		private AstNode ParseRelativeLocationPath(AstNode qyInput); // 0x106CE000-0x106CE0B0
		private static bool IsStep(XPathScanner.LexKind lexKind); // 0x106CC7C0-0x106CC7F0
		private AstNode ParseStep(AstNode qyInput); // 0x106CE0B0-0x106CE410
		private AstNode ParseNodeTest(AstNode qyInput, Axis.AxisType axisType, XPathNodeType nodeType); // 0x106CD650-0x106CD900
		private static bool IsPrimaryExpr(XPathScanner scanner); // 0x106CC730-0x106CC7C0
		private AstNode ParsePrimaryExpr(AstNode qyInput); // 0x106CDD00-0x106CDF00
		private AstNode ParseMethod(AstNode qyInput); // 0x106CCEF0-0x106CD4E0
		private void CheckToken(XPathScanner.LexKind t); // 0x106CBB30-0x106CBBA0
		private void PassToken(XPathScanner.LexKind t); // 0x106CE740-0x106CE770
		private void NextLex(); // 0x106CC7F0-0x106CC820
		private bool TestOp(string op); // 0x106CE770-0x106CE7C0
		private void CheckNodeSet(XPathResultType t); // 0x106CBAC0-0x106CBB30
		private static Hashtable CreateFunctionTable(); // 0x106CBE60-0x106CC5B0
		private static Hashtable CreateAxesTable(); // 0x106CBBA0-0x106CBE60
		private Axis.AxisType GetAxis(XPathScanner scaner); // 0x106CC5B0-0x106CC680
	}

	internal sealed class XPathScanner // TypeDefIndex: 1811
	{
		// Fields
		private string xpathExpr; // 0x08
		private int xpathExprIndex; // 0x0C
		private LexKind kind; // 0x10
		private char currentChar; // 0x14
		private string name; // 0x18
		private string prefix; // 0x1C
		private string stringValue; // 0x20
		private double numberValue; // 0x28
		private bool canBeFunction; // 0x30
		private XmlCharType xmlCharType; // 0x34
	
		// Properties
		public string SourceText { get; } // 0x101B4FF0-0x101B5000 
		private char CurerntChar { get; } // 0x1054E670-0x1054E680 
		public LexKind Kind { get; } // 0x101BCD80-0x101BCD90 
		public string Name { get; } // 0x101ADCC0-0x101ADCD0 
		public string Prefix { get; } // 0x101F85C0-0x101F85D0 
		public string StringValue { get; } // 0x101BCCB0-0x101BCCC0 
		public double NumberValue { get; } // 0x1054E680-0x1054E690 
		public bool CanBeFunction { get; } // 0x101C2370-0x101C2380 
	
		// Nested types
		public enum LexKind // TypeDefIndex: 1812
		{
			Bang = 33,
			Quote = 34,
			Dollar = 36,
			Apos = 39,
			LParens = 40,
			RParens = 41,
			Star = 42,
			Plus = 43,
			Comma = 44,
			Minus = 45,
			Dot = 46,
			Slash = 47,
			Lt = 60,
			Eq = 61,
			Gt = 62,
			At = 64,
			And = 65,
			DotDot = 68,
			Eof = 69,
			Ge = 71,
			Le = 76,
			Ne = 78,
			Or = 79,
			SlashSlash = 83,
			LBracket = 91,
			RBracket = 93,
			Axe = 97,
			Number = 100,
			Name = 110,
			String = 115,
			Union = 124
		}
	
		// Constructors
		public XPathScanner(string xpathExpr); // 0x1054E5A0-0x1054E670
	
		// Methods
		private bool NextChar(); // 0x1054DBD0-0x1054DC20
		private void SkipSpace(); // 0x1054E520-0x1054E5A0
		public bool NextLex(); // 0x1054DC20-0x1054E120
		private double ScanNumber(); // 0x1054E280-0x1054E3F0
		private double ScanFraction(); // 0x1054E120-0x1054E1F0
		private string ScanString(); // 0x1054E3F0-0x1054E520
		private string ScanName(); // 0x1054E1F0-0x1054E280
	}

	internal class XPathSelectionIterator : ResetableIterator // TypeDefIndex: 1813
	{
		// Fields
		private XPathNavigator nav; // 0x0C
		private Query query; // 0x10
		private int position; // 0x14
	
		// Properties
		public override int Count { get; } // 0x1054E970-0x1054E9A0 
		public override XPathNavigator Current { get; } // 0x101AE200-0x101AE210 
		public override int CurrentPosition { get; } // 0x101ADCB0-0x101ADCC0 
	
		// Constructors
		internal XPathSelectionIterator(XPathNavigator nav, Query query); // 0x1054E930-0x1054E970
		protected XPathSelectionIterator(XPathSelectionIterator it); // 0x1054E850-0x1054E930
	
		// Methods
		public override void Reset(); // 0x1054E820-0x1054E850
		public override bool MoveNext(); // 0x1054E7A0-0x1054E820
		public override XPathNodeIterator Clone(); // 0x1054E690-0x1054E7A0
	}

	internal sealed class XPathSelfQuery : BaseAxisQuery // TypeDefIndex: 1814
	{
		// Constructors
		public XPathSelfQuery(Query qyInput, string Name, string Prefix, XPathNodeType Type); // 0x1054EA60-0x1054EA70
		private XPathSelfQuery(XPathSelfQuery other); // 0x1054EA50-0x1054EA60
	
		// Methods
		public override XPathNavigator Advance(); // 0x1054E9A0-0x1054EA00
		public override XPathNodeIterator Clone(); // 0x1054EA00-0x1054EA50
	}

	internal class XPathSingletonIterator : ResetableIterator // TypeDefIndex: 1815
	{
		// Fields
		private XPathNavigator nav; // 0x0C
		private int position; // 0x10
	
		// Properties
		public override XPathNavigator Current { get; } // 0x101AE200-0x101AE210 
		public override int CurrentPosition { get; } // 0x101BCD80-0x101BCD90 
		public override int Count { get; } // 0x102F68B0-0x102F68C0 
	
		// Constructors
		public XPathSingletonIterator(XPathNavigator nav); // 0x1054EBA0-0x1054EBC0
		public XPathSingletonIterator(XPathNavigator nav, bool moved); // 0x1054EB20-0x1054EB50
		public XPathSingletonIterator(XPathSingletonIterator it); // 0x1054EB50-0x1054EBA0
	
		// Methods
		public override XPathNodeIterator Clone(); // 0x1054EA70-0x1054EAF0
		public override bool MoveNext(); // 0x1054EAF0-0x1054EB10
		public override void Reset(); // 0x1054EB10-0x1054EB20
	}
}

public class XXHash // TypeDefIndex: 5265
{
	// Fields
	private uint seed; // 0x08
	private const uint PRIME32_1 = 2654435761; // Metadata: 0x00243B02
	private const uint PRIME32_2 = 2246822519; // Metadata: 0x00243B06
	private const uint PRIME32_3 = 3266489917; // Metadata: 0x00243B0A
	private const uint PRIME32_4 = 668265263; // Metadata: 0x00243B0E
	private const uint PRIME32_5 = 374761393; // Metadata: 0x00243B12

	// Constructors
	public XXHash(int seed); // 0x101B54B0-0x101B54D0

	// Methods
	public uint GetHash(byte[] buf); // 0x1097B870-0x1097BB40
	public uint GetHash(params /* 0x10002030-0x10002050 */ uint[] buf); // 0x1097BB90-0x1097BCF0
	public uint GetHash(params /* 0x10002030-0x10002050 */ int[] buf); // 0x1097BB90-0x1097BCF0
	public uint GetHash(int buf); // 0x1097BB40-0x1097BB90
	private static uint CalcSubHash(uint value, byte[] buf, int index); // 0x1097B800-0x1097B870
	private static uint CalcSubHash(uint value, uint read_value); // 0x1097B7E0-0x1097B800
	private static uint RotateLeft(uint value, int count); // 0x1097BCF0-0x1097BD20
}

